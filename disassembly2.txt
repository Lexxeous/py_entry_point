Disassembling: /usr/bin/make...

--------------------------------------------------
Top Address of .text Section: 0x8d80

Program Entry Point Address: 0xace0

Address Offset: 0x1f60

Section header for .text : Container({'sh_name': 141, 'sh_type': 'SHT_PROGBITS', 'sh_flags': 6, 'sh_addr': 36224, 'sh_offset': 36224, 'sh_size': 135200, 'sh_link': 0, 'sh_info': 0, 'sh_addralign': 16, 'sh_entsize': 0})

Program header: Container({'e_ident': Container({'EI_MAG': [127, 69, 76, 70], 'EI_CLASS': 'ELFCLASS64', 'EI_DATA': 'ELFDATA2LSB', 'EI_VERSION': 'EV_CURRENT', 'EI_OSABI': 'ELFOSABI_SYSV', 'EI_ABIVERSION': 0}), 'e_type': 'ET_DYN', 'e_machine': 'EM_X86_64', 'e_version': 'EV_CURRENT', 'e_entry': 44256, 'e_phoff': 64, 'e_shoff': 221000, 'e_flags': 0, 'e_ehsize': 64, 'e_phentsize': 56, 'e_phnum': 9, 'e_shentsize': 64, 'e_shnum': 28, 'e_shstrndx': 27}) 

--------------------------------------------------
0xace0:	xor	ebp, ebp
0xace2:	mov	r9, rdx
0xace5:	pop	rsi
		Instruction group(s): [145] 

0xace6:	mov	rdx, rsp
0xace9:	and	rsp, 0xfffffffffffffff0
0xaced:	push	rax
		Instruction group(s): [145] 

0xacee:	push	rsp
		Instruction group(s): [145] 

0xacef:	lea	r8, [rip + 0x1f06a]
0xacf6:	lea	rcx, [rip + 0x1eff3]
0xacfd:	lea	rdi, [rip - 0x1f84]
0xad04:	call	qword ptr [rip + 0x22a2d6]
		Instruction group(s): [2, 145] 

0xad0a:	hlt	
		Instruction group(s): [6] 

0xad0b:	nop	dword ptr [rax + rax]
0xad10:	lea	rdi, [rip + 0x22b0f9]
0xad17:	push	rbp
		Instruction group(s): [145] 

0xad18:	lea	rax, [rip + 0x22b0f1]
0xad1f:	cmp	rax, rdi
0xad22:	mov	rbp, rsp
0xad25:	je	0xad40
		Instruction group(s): [7, 1] 

0xad27:	mov	rax, qword ptr [rip + 0x22a2aa]
0xad2e:	test	rax, rax
0xad31:	je	0xad40
		Instruction group(s): [7, 1] 

0xad33:	pop	rbp
		Instruction group(s): [145] 

0xad34:	jmp	rax
		Instruction group(s): [145, 1] 

0xad36:	nop	word ptr cs:[rax + rax]
0xad40:	pop	rbp
		Instruction group(s): [145] 

0xad41:	ret	
		Instruction group(s): [3, 145] 

0xad42:	nop	dword ptr [rax]
0xad46:	nop	word ptr cs:[rax + rax]
0xad50:	lea	rdi, [rip + 0x22b0b9]
0xad57:	lea	rsi, [rip + 0x22b0b2]
0xad5e:	push	rbp
		Instruction group(s): [145] 

0xad5f:	sub	rsi, rdi
0xad62:	mov	rbp, rsp
0xad65:	sar	rsi, 3
0xad69:	mov	rax, rsi
0xad6c:	shr	rax, 0x3f
0xad70:	add	rsi, rax
0xad73:	sar	rsi, 1
0xad76:	je	0xad90
		Instruction group(s): [7, 1] 

0xad78:	mov	rax, qword ptr [rip + 0x22a271]
0xad7f:	test	rax, rax
0xad82:	je	0xad90
		Instruction group(s): [7, 1] 

0xad84:	pop	rbp
		Instruction group(s): [145] 

0xad85:	jmp	rax
		Instruction group(s): [145, 1] 

0xad87:	nop	word ptr [rax + rax]
0xad90:	pop	rbp
		Instruction group(s): [145] 

0xad91:	ret	
		Instruction group(s): [3, 145] 

0xad92:	nop	dword ptr [rax]
0xad96:	nop	word ptr cs:[rax + rax]
0xada0:	cmp	byte ptr [rip + 0x22b0e1], 0
0xada7:	jne	0xadd8
		Instruction group(s): [7, 1] 

0xada9:	cmp	qword ptr [rip + 0x22a247], 0
0xadb1:	push	rbp
		Instruction group(s): [145] 

0xadb2:	mov	rbp, rsp
0xadb5:	je	0xadc3
		Instruction group(s): [7, 1] 

0xadb7:	mov	rdi, qword ptr [rip + 0x22a24a]
0xadbe:	call	0x8d78
		Instruction group(s): [2, 7, 145] 

0xadc3:	call	0xad10
		Instruction group(s): [2, 7, 145] 

0xadc8:	mov	byte ptr [rip + 0x22b0b9], 1
0xadcf:	pop	rbp
		Instruction group(s): [145] 

0xadd0:	ret	
		Instruction group(s): [3, 145] 

0xadd1:	nop	dword ptr [rax]
0xadd8:	ret	
		Instruction group(s): [3, 145] 

0xadda:	nop	word ptr [rax + rax]
0xade0:	push	rbp
		Instruction group(s): [145] 

0xade1:	mov	rbp, rsp
0xade4:	pop	rbp
		Instruction group(s): [145] 

0xade5:	jmp	0xad50
		Instruction group(s): [7, 1] 

0xadea:	nop	word ptr [rax + rax]
0xadf0:	push	rbx
		Instruction group(s): [145] 

0xadf1:	mov	rbx, qword ptr [rsp + 0x30]
0xadf6:	mov	rdi, qword ptr [rbx]
0xadf9:	call	0xb7e0
		Instruction group(s): [2, 7, 145] 

0xadfe:	xor	edx, edx
0xae00:	test	eax, eax
0xae02:	je	0xae15
		Instruction group(s): [7, 1] 

0xae04:	mov	rdx, qword ptr [rsp + 0x10]
0xae09:	mov	rax, qword ptr [rbx + 8]
0xae0d:	mov	qword ptr [rax], rdx
0xae10:	mov	edx, 1
0xae15:	mov	rax, rdx
0xae18:	pop	rbx
		Instruction group(s): [145] 

0xae19:	ret	
		Instruction group(s): [3, 145] 

0xae1a:	nop	word ptr [rax + rax]
0xae20:	push	r12
		Instruction group(s): [145] 

0xae22:	push	rbp
		Instruction group(s): [145] 

0xae23:	mov	edx, 5
0xae28:	push	rbx
		Instruction group(s): [145] 

0xae29:	mov	rbx, qword ptr [rsp + 0x40]
0xae2e:	mov	rbp, rsi
0xae31:	mov	rdi, qword ptr [rbx + 8]
0xae35:	call	0x88f0
		Instruction group(s): [2, 7, 145] 

0xae3a:	test	eax, eax
0xae3c:	jne	0xae86
		Instruction group(s): [7, 1] 

0xae3e:	mov	edi, dword ptr [rbx + 0x10]
0xae41:	call	0x1b8c0
		Instruction group(s): [2, 7, 145] 

0xae46:	mov	rsi, qword ptr [rbx]
0xae49:	lea	r8, [rip + 0x23fe1]
0xae50:	lea	rdx, [rip + 0x1ef5d]
0xae57:	mov	r12, rax
0xae5a:	mov	rcx, rbp
0xae5d:	mov	edi, 4
0xae62:	xor	eax, eax
0xae64:	call	0x1b950
		Instruction group(s): [2, 7, 145] 

0xae69:	mov	rdi, rax
0xae6c:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0xae71:	mov	qword ptr [r12 + 8], rax
0xae76:	mov	rax, qword ptr [rbx + 0x18]
0xae7a:	mov	qword ptr [r12], rax
0xae7e:	add	dword ptr [rbx + 0x20], 1
0xae82:	mov	qword ptr [rbx + 0x18], r12
0xae86:	pop	rbx
		Instruction group(s): [145] 

0xae87:	xor	eax, eax
0xae89:	pop	rbp
		Instruction group(s): [145] 

0xae8a:	pop	r12
		Instruction group(s): [145] 

0xae8c:	ret	
		Instruction group(s): [3, 145] 

0xae8d:	nop	dword ptr [rax]
0xae90:	push	r12
		Instruction group(s): [145] 

0xae92:	push	rbp
		Instruction group(s): [145] 

0xae93:	mov	esi, 0x28
0xae98:	push	rbx
		Instruction group(s): [145] 

0xae99:	mov	rbp, rdi
0xae9c:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0xaea1:	test	rax, rax
0xaea4:	je	0xaf20
		Instruction group(s): [7, 1] 

0xaea6:	cmp	rbp, rax
0xaea9:	mov	rbx, rax
0xaeac:	sete	r12b
0xaeb0:	je	0xaf20
		Instruction group(s): [7, 1] 

0xaeb2:	mov	rdi, rax
0xaeb5:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xaeba:	lea	rdx, [rbx + rax - 1]
0xaebf:	xor	eax, eax
0xaec1:	cmp	byte ptr [rdx], 0x29
0xaec4:	je	0xaed0
		Instruction group(s): [7, 1] 

0xaec6:	pop	rbx
		Instruction group(s): [145] 

0xaec7:	pop	rbp
		Instruction group(s): [145] 

0xaec8:	pop	r12
		Instruction group(s): [145] 

0xaeca:	ret	
		Instruction group(s): [3, 145] 

0xaecb:	nop	dword ptr [rax + rax]
0xaed0:	lea	rcx, [rbx + 1]
0xaed4:	cmp	rdx, rcx
0xaed7:	je	0xaec6
		Instruction group(s): [7, 1] 

0xaed9:	cmp	byte ptr [rbx + 1], 0x28
0xaedd:	mov	eax, 1
0xaee2:	jne	0xaec6
		Instruction group(s): [7, 1] 

0xaee4:	cmp	byte ptr [rdx - 1], 0x29
0xaee8:	jne	0xaec6
		Instruction group(s): [7, 1] 

0xaeea:	lea	rsi, [rip + 0x1eecf]
0xaef1:	mov	edx, 5
0xaef6:	xor	edi, edi
0xaef8:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xaefd:	mov	rdi, rbp
0xaf00:	mov	rdx, rax
0xaf03:	or	rcx, 0xffffffffffffffff
0xaf07:	mov	eax, r12d
0xaf0a:	repne scasb	al, byte ptr [rdi]
0xaf0c:	xor	edi, edi
0xaf0e:	xor	eax, eax
0xaf10:	not	rcx
0xaf13:	lea	rsi, [rcx - 1]
0xaf17:	mov	rcx, rbp
0xaf1a:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0xaf1f:	nop	
0xaf20:	pop	rbx
		Instruction group(s): [145] 

0xaf21:	xor	eax, eax
0xaf23:	pop	rbp
		Instruction group(s): [145] 

0xaf24:	pop	r12
		Instruction group(s): [145] 

0xaf26:	ret	
		Instruction group(s): [3, 145] 

0xaf27:	nop	word ptr [rax + rax]
0xaf30:	push	r12
		Instruction group(s): [145] 

0xaf32:	push	rbp
		Instruction group(s): [145] 

0xaf33:	mov	r12, rdx
0xaf36:	push	rbx
		Instruction group(s): [145] 

0xaf37:	mov	rbx, rsi
0xaf3a:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0xaf3f:	mov	esi, 0x28
0xaf44:	mov	qword ptr [rbx], rax
0xaf47:	mov	rdi, rax
0xaf4a:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0xaf4f:	lea	rbp, [rax + 1]
0xaf53:	mov	rbx, rax
0xaf56:	mov	byte ptr [rax], 0
0xaf59:	mov	rdi, rbp
0xaf5c:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xaf61:	mov	byte ptr [rbx + rax], 0
0xaf65:	mov	qword ptr [r12], rbp
0xaf69:	pop	rbx
		Instruction group(s): [145] 

0xaf6a:	pop	rbp
		Instruction group(s): [145] 

0xaf6b:	pop	r12
		Instruction group(s): [145] 

0xaf6d:	ret	
		Instruction group(s): [3, 145] 

0xaf6e:	nop	
0xaf70:	push	rbx
		Instruction group(s): [145] 

0xaf71:	mov	rbx, rsi
0xaf74:	sub	rsp, 0x30
0xaf78:	lea	rdx, [rsp + 8]
0xaf7d:	mov	rsi, rsp
0xaf80:	mov	rax, qword ptr fs:[0x28]
0xaf89:	mov	qword ptr [rsp + 0x28], rax
0xaf8e:	xor	eax, eax
0xaf90:	call	0xaf30
		Instruction group(s): [2, 7, 145] 

0xaf95:	mov	rdi, qword ptr [rsp]
0xaf99:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0xaf9e:	test	rax, rax
0xafa1:	je	0xb000
		Instruction group(s): [7, 1] 

0xafa3:	xor	esi, esi
0xafa5:	mov	rdi, rax
0xafa8:	call	0x222c0
		Instruction group(s): [2, 7, 145] 

0xafad:	mov	rax, qword ptr [rsp + 8]
0xafb2:	mov	rdi, qword ptr [rsp]
0xafb6:	lea	rdx, [rsp + 0x10]
0xafbb:	lea	rsi, [rip - 0x1d2]
0xafc2:	mov	qword ptr [rsp + 0x18], rbx
0xafc7:	mov	qword ptr [rsp + 0x10], rax
0xafcc:	call	0xb350
		Instruction group(s): [2, 7, 145] 

0xafd1:	mov	rdi, qword ptr [rsp]
0xafd5:	mov	rbx, rax
0xafd8:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0xafdd:	xor	eax, eax
0xafdf:	cmp	ebx, 1
0xafe2:	sete	al
0xafe5:	mov	rcx, qword ptr [rsp + 0x28]
0xafea:	xor	rcx, qword ptr fs:[0x28]
0xaff3:	jne	0xb028
		Instruction group(s): [7, 1] 

0xaff5:	add	rsp, 0x30
0xaff9:	pop	rbx
		Instruction group(s): [145] 

0xaffa:	ret	
		Instruction group(s): [3, 145] 

0xaffb:	nop	dword ptr [rax + rax]
0xb000:	mov	rdi, qword ptr [rsp]
0xb004:	call	0xd6f0
		Instruction group(s): [2, 7, 145] 

0xb009:	test	eax, eax
0xb00b:	je	0xafad
		Instruction group(s): [7, 1] 

0xb00d:	mov	rdi, qword ptr [rsp]
0xb011:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0xb016:	mov	rdi, rax
0xb019:	call	0xf1a0
		Instruction group(s): [2, 7, 145] 

0xb01e:	test	rax, rax
0xb021:	je	0xafad
		Instruction group(s): [7, 1] 

0xb023:	jmp	0xafa3
		Instruction group(s): [7, 1] 

0xb028:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0xb02d:	nop	dword ptr [rax]
0xb030:	push	r14
		Instruction group(s): [145] 

0xb032:	push	r13
		Instruction group(s): [145] 

0xb034:	push	r12
		Instruction group(s): [145] 

0xb036:	push	rbp
		Instruction group(s): [145] 

0xb037:	mov	rbp, rdi
0xb03a:	push	rbx
		Instruction group(s): [145] 

0xb03b:	sub	rsp, 0x20
0xb03f:	lea	rdx, [rsp + 0x10]
0xb044:	lea	rsi, [rsp + 8]
0xb049:	mov	rax, qword ptr fs:[0x28]
0xb052:	mov	qword ptr [rsp + 0x18], rax
0xb057:	xor	eax, eax
0xb059:	call	0xaf30
		Instruction group(s): [2, 7, 145] 

0xb05e:	mov	rdi, qword ptr [rsp + 8]
0xb063:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0xb068:	mov	rdi, rax
0xb06b:	call	0xf1a0
		Instruction group(s): [2, 7, 145] 

0xb070:	xor	esi, esi
0xb072:	mov	rdi, rax
0xb075:	call	0x222c0
		Instruction group(s): [2, 7, 145] 

0xb07a:	mov	rsi, qword ptr [rsp + 0x10]
0xb07f:	mov	rdi, qword ptr [rsp + 8]
0xb084:	call	0xb860
		Instruction group(s): [2, 7, 145] 

0xb089:	mov	ebx, eax
0xb08b:	add	eax, 3
0xb08e:	cmp	eax, 4
0xb091:	ja	0xb1c0
		Instruction group(s): [7, 1] 

0xb097:	lea	rdx, [rip + 0x1ee06]
0xb09e:	movsxd	rax, dword ptr [rdx + rax*4]
		Instruction group(s): [145] 

0xb0a2:	add	rax, rdx
0xb0a5:	jmp	rax
		Instruction group(s): [145, 1] 

0xb0a7:	nop	word ptr [rax + rax]
0xb0b0:	lea	rsi, [rip + 0x1ed39]
0xb0b7:	xor	edi, edi
0xb0b9:	mov	edx, 5
0xb0be:	mov	rbp, qword ptr [rsp + 8]
0xb0c3:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xb0c8:	mov	rdi, qword ptr [rsp + 8]
0xb0cd:	mov	rbx, rax
0xb0d0:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xb0d5:	mov	rdx, rbx
0xb0d8:	mov	rsi, rax
0xb0db:	mov	rcx, rbp
0xb0de:	xor	edi, edi
0xb0e0:	xor	eax, eax
0xb0e2:	mov	ebx, 1
0xb0e7:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0xb0ec:	mov	rdi, qword ptr [rsp + 8]
0xb0f1:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0xb0f6:	mov	rcx, qword ptr [rsp + 0x18]
0xb0fb:	xor	rcx, qword ptr fs:[0x28]
0xb104:	mov	eax, ebx
0xb106:	jne	0xb1de
		Instruction group(s): [7, 1] 

0xb10c:	add	rsp, 0x20
0xb110:	pop	rbx
		Instruction group(s): [145] 

0xb111:	pop	rbp
		Instruction group(s): [145] 

0xb112:	pop	r12
		Instruction group(s): [145] 

0xb114:	pop	r13
		Instruction group(s): [145] 

0xb116:	pop	r14
		Instruction group(s): [145] 

0xb118:	ret	
		Instruction group(s): [3, 145] 

0xb119:	nop	dword ptr [rax]
0xb120:	lea	rsi, [rip + 0x1ed19]
0xb127:	mov	edx, 5
0xb12c:	xor	edi, edi
0xb12e:	mov	r14, qword ptr [rsp + 8]
0xb133:	mov	r13, qword ptr [rsp + 0x10]
0xb138:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xb13d:	mov	rdi, qword ptr [rsp + 0x10]
0xb142:	mov	r12, rax
0xb145:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xb14a:	mov	rdi, qword ptr [rsp + 8]
0xb14f:	mov	rbp, rax
0xb152:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xb157:	lea	rsi, [rbp + rax]
0xb15c:	mov	r8, r14
0xb15f:	mov	rcx, r13
0xb162:	mov	rdx, r12
0xb165:	xor	edi, edi
0xb167:	xor	eax, eax
0xb169:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0xb16e:	jmp	0xb0ec
		Instruction group(s): [7, 1] 

0xb173:	nop	dword ptr [rax + rax]
0xb178:	mov	rsi, qword ptr [rsp + 8]
0xb17d:	lea	rdi, [rip + 0x1ec32]
0xb184:	mov	ebx, 1
0xb189:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0xb18e:	jmp	0xb0ec
		Instruction group(s): [7, 1] 

0xb193:	nop	dword ptr [rax + rax]
0xb198:	lea	rsi, [rip + 0x1ec79]
0xb19f:	xor	edi, edi
0xb1a1:	mov	edx, 5
0xb1a6:	mov	rbp, qword ptr [rsp + 8]
0xb1ab:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xb1b0:	mov	rdi, qword ptr [rsp + 8]
0xb1b5:	mov	rbx, rax
0xb1b8:	jmp	0xb0d0
		Instruction group(s): [7, 1] 

0xb1bd:	nop	dword ptr [rax]
0xb1c0:	lea	rsi, [rip + 0x1eca9]
0xb1c7:	xor	edi, edi
0xb1c9:	mov	edx, 5
0xb1ce:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xb1d3:	mov	rdi, rbp
0xb1d6:	mov	rbx, rax
0xb1d9:	jmp	0xb0d0
		Instruction group(s): [7, 1] 

0xb1de:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0xb1e3:	nop	dword ptr [rax]
0xb1e6:	nop	word ptr cs:[rax + rax]
0xb1f0:	push	rbp
		Instruction group(s): [145] 

0xb1f1:	mov	rbp, rsp
0xb1f4:	push	rbx
		Instruction group(s): [145] 

0xb1f5:	sub	rsp, 0x38
0xb1f9:	mov	rax, qword ptr fs:[0x28]
0xb202:	mov	qword ptr [rbp - 0x18], rax
0xb206:	xor	eax, eax
0xb208:	movzx	eax, byte ptr [rsi]
0xb20b:	test	al, al
0xb20d:	je	0xb23f
		Instruction group(s): [7, 1] 

0xb20f:	mov	rcx, rsi
0xb212:	xor	r8d, r8d
0xb215:	cmp	al, 0x5b
0xb217:	je	0xb330
		Instruction group(s): [7, 1] 

0xb21d:	jle	0xb260
		Instruction group(s): [7, 1] 

0xb21f:	cmp	al, 0x5c
0xb221:	je	0xb320
		Instruction group(s): [7, 1] 

0xb227:	cmp	al, 0x5d
0xb229:	jne	0xb230
		Instruction group(s): [7, 1] 

0xb22b:	test	r8d, r8d
0xb22e:	jne	0xb268
		Instruction group(s): [7, 1] 

0xb230:	mov	rax, rcx
0xb233:	lea	rcx, [rax + 1]
0xb237:	movzx	eax, byte ptr [rax + 1]
0xb23b:	test	al, al
0xb23d:	jne	0xb215
		Instruction group(s): [7, 1] 

0xb23f:	xor	eax, eax
0xb241:	mov	rdi, qword ptr [rbp - 0x18]
0xb245:	xor	rdi, qword ptr fs:[0x28]
0xb24e:	jne	0xb33e
		Instruction group(s): [7, 1] 

0xb254:	mov	rbx, qword ptr [rbp - 8]
0xb258:	leave	
		Instruction group(s): [145] 

0xb259:	ret	
		Instruction group(s): [3, 145] 

0xb25a:	nop	word ptr [rax + rax]
0xb260:	cmp	al, 0x2a
0xb262:	je	0xb268
		Instruction group(s): [7, 1] 

0xb264:	cmp	al, 0x3f
0xb266:	jne	0xb230
		Instruction group(s): [7, 1] 

0xb268:	mov	qword ptr [rbp - 0x38], rsi
0xb26c:	mov	dword ptr [rbp - 0x30], edx
0xb26f:	lea	rsi, [rip - 0x456]
0xb276:	lea	rdx, [rbp - 0x40]
0xb27a:	mov	qword ptr [rbp - 0x40], rdi
0xb27e:	mov	qword ptr [rbp - 0x28], 0
0xb286:	mov	dword ptr [rbp - 0x20], 0
0xb28d:	call	0xb350
		Instruction group(s): [2, 7, 145] 

0xb292:	mov	rax, qword ptr [rbp - 0x28]
0xb296:	test	rax, rax
0xb299:	je	0xb23f
		Instruction group(s): [7, 1] 

0xb29b:	mov	edx, dword ptr [rbp - 0x20]
0xb29e:	xor	esi, esi
0xb2a0:	lea	rdx, [rdx*8 + 0x1e]
0xb2a8:	shr	rdx, 4
0xb2ac:	shl	rdx, 4
0xb2b0:	sub	rsp, rdx
0xb2b3:	lea	rbx, [rsp + 0xf]
0xb2b8:	and	rbx, 0xfffffffffffffff0
0xb2bc:	nop	dword ptr [rax]
0xb2c0:	mov	rcx, qword ptr [rax + 8]
0xb2c4:	mov	rax, qword ptr [rax]
0xb2c7:	mov	edx, esi
0xb2c9:	add	esi, 1
0xb2cc:	test	rax, rax
0xb2cf:	mov	qword ptr [rbx + rdx*8], rcx
0xb2d3:	jne	0xb2c0
		Instruction group(s): [7, 1] 

0xb2d5:	lea	rcx, [rip + 0x10554]
0xb2dc:	mov	edx, 8
0xb2e1:	mov	rdi, rbx
0xb2e4:	call	0x86f0
		Instruction group(s): [2, 7, 145] 

0xb2e9:	mov	rax, qword ptr [rbp - 0x28]
0xb2ed:	test	rax, rax
0xb2f0:	je	0xb23f
		Instruction group(s): [7, 1] 

0xb2f6:	mov	rdx, rax
0xb2f9:	xor	ecx, ecx
0xb2fb:	nop	dword ptr [rax + rax]
0xb300:	mov	esi, ecx
0xb302:	add	ecx, 1
0xb305:	mov	rsi, qword ptr [rbx + rsi*8]
0xb309:	mov	qword ptr [rdx + 8], rsi
0xb30d:	mov	rdx, qword ptr [rdx]
0xb310:	test	rdx, rdx
0xb313:	jne	0xb300
		Instruction group(s): [7, 1] 

0xb315:	jmp	0xb241
		Instruction group(s): [7, 1] 

0xb31a:	nop	word ptr [rax + rax]
0xb320:	lea	rax, [rcx + 1]
0xb324:	jmp	0xb233
		Instruction group(s): [7, 1] 

0xb329:	nop	dword ptr [rax]
0xb330:	mov	rax, rcx
0xb333:	mov	r8d, 1
0xb339:	jmp	0xb233
		Instruction group(s): [7, 1] 

0xb33e:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0xb343:	nop	word ptr cs:[rax + rax]
0xb34d:	nop	dword ptr [rax]
0xb350:	push	rbp
		Instruction group(s): [145] 

0xb351:	mov	rbp, rsp
0xb354:	push	r15
		Instruction group(s): [145] 

0xb356:	push	r14
		Instruction group(s): [145] 

0xb358:	push	r13
		Instruction group(s): [145] 

0xb35a:	push	r12
		Instruction group(s): [145] 

0xb35c:	push	rbx
		Instruction group(s): [145] 

0xb35d:	sub	rsp, 0xc8
0xb364:	mov	qword ptr [rbp - 0xd8], rsi
0xb36b:	mov	qword ptr [rbp - 0xe0], rdx
0xb372:	mov	rax, qword ptr fs:[0x28]
0xb37b:	mov	qword ptr [rbp - 0x38], rax
0xb37f:	xor	eax, eax
0xb381:	xor	edx, edx
0xb383:	xor	esi, esi
0xb385:	call	0x8c00
		Instruction group(s): [2, 7, 145] 

0xb38a:	test	eax, eax
0xb38c:	mov	dword ptr [rbp - 0xa4], eax
0xb392:	js	0xb7c3
		Instruction group(s): [7, 1] 

0xb398:	lea	r13, [rbp - 0x50]
0xb39c:	mov	edi, eax
0xb39e:	mov	edx, 8
0xb3a3:	mov	rsi, r13
0xb3a6:	call	0x8980
		Instruction group(s): [2, 7, 145] 

0xb3ab:	cmp	eax, 8
0xb3ae:	jne	0xb770
		Instruction group(s): [7, 1] 

0xb3b4:	movabs	rax, 0xa3e686372613c21
0xb3be:	cmp	qword ptr [rbp - 0x50], rax
0xb3c2:	jne	0xb770
		Instruction group(s): [7, 1] 

0xb3c8:	lea	r14, [rbp - 0x90]
0xb3cf:	mov	r15d, 8
0xb3d5:	mov	qword ptr [rbp - 0xf0], 0
0xb3e0:	lea	rax, [r14 + 0x28]
0xb3e4:	mov	qword ptr [rbp - 0xe8], rax
0xb3eb:	nop	dword ptr [rax + rax]
0xb3f0:	mov	edi, dword ptr [rbp - 0xa4]
0xb3f6:	xor	edx, edx
0xb3f8:	mov	rsi, r15
0xb3fb:	call	0x88c0
		Instruction group(s): [2, 7, 145] 

0xb400:	test	rax, rax
0xb403:	js	0xb770
		Instruction group(s): [7, 1] 

0xb409:	mov	edi, dword ptr [rbp - 0xa4]
0xb40f:	mov	edx, 0x3c
0xb414:	mov	rsi, r14
0xb417:	call	0x8980
		Instruction group(s): [2, 7, 145] 

0xb41c:	test	eax, eax
0xb41e:	je	0xb7a3
		Instruction group(s): [7, 1] 

0xb424:	cmp	eax, 0x3c
0xb427:	jne	0xb770
		Instruction group(s): [7, 1] 

0xb42d:	cmp	word ptr [rbp - 0x56], 0xa60
0xb433:	jne	0xb770
		Instruction group(s): [7, 1] 

0xb439:	movdqa	xmm0, xmmword ptr [rbp - 0x90]
		Instruction group(s): [149] 

0xb441:	lea	rax, [r13 + 0x10]
0xb445:	mov	byte ptr [rbp - 0x40], 0
0xb449:	movaps	xmmword ptr [rbp - 0x50], xmm0
		Instruction group(s): [148] 

0xb44d:	jmp	0xb45c
		Instruction group(s): [7, 1] 

0xb44f:	nop	
0xb450:	cmp	rax, r13
0xb453:	mov	byte ptr [rax], 0
0xb456:	je	0xb600
		Instruction group(s): [7, 1] 

0xb45c:	sub	rax, 1
0xb460:	cmp	byte ptr [rax], 0x20
0xb463:	je	0xb450
		Instruction group(s): [7, 1] 

0xb465:	lea	rdi, [rip + 0x1ea4c]
0xb46c:	mov	ecx, 3
0xb471:	mov	rsi, r13
0xb474:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0xb476:	je	0xb5e0
		Instruction group(s): [7, 1] 

0xb47c:	lea	rdi, [rip + 0x1ea38]
0xb483:	mov	ecx, 0xd
0xb488:	mov	rsi, r13
0xb48b:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0xb48d:	je	0xb5e0
		Instruction group(s): [7, 1] 

0xb493:	cmp	byte ptr [rax], 0x2f
0xb496:	je	0xb7cc
		Instruction group(s): [7, 1] 

0xb49c:	movzx	eax, byte ptr [rbp - 0x50]
0xb4a0:	cmp	al, 0x20
0xb4a2:	sete	cl
0xb4a5:	cmp	al, 0x2f
0xb4a7:	sete	dl
0xb4aa:	or	cl, dl
0xb4ac:	je	0xb4be
		Instruction group(s): [7, 1] 

0xb4ae:	mov	rbx, qword ptr [rbp - 0xf0]
0xb4b5:	test	rbx, rbx
0xb4b8:	jne	0xb740
		Instruction group(s): [7, 1] 

0xb4be:	xor	r11d, r11d
0xb4c1:	cmp	al, 0x23
0xb4c3:	mov	dword ptr [rbp - 0xb0], 1
0xb4cd:	mov	r10, r13
0xb4d0:	je	0xb6a8
		Instruction group(s): [7, 1] 

0xb4d6:	mov	rdi, qword ptr [rbp - 0xe8]
0xb4dd:	lea	rdx, [rbp - 0x94]
0xb4e4:	lea	rsi, [rip + 0x1e9dd]
0xb4eb:	xor	eax, eax
0xb4ed:	mov	dword ptr [rbp - 0xcc], r11d
0xb4f4:	mov	qword ptr [rbp - 0xc8], r10
0xb4fb:	lea	rbx, [r15 + 0x3c]
0xb4ff:	call	0x8af0
		Instruction group(s): [2, 7, 145] 

0xb504:	lea	rdi, [r14 + 0x30]
0xb508:	xor	esi, esi
0xb50a:	mov	edx, 0xa
0xb50f:	call	0x8a30
		Instruction group(s): [2, 7, 145] 

0xb514:	mov	r9d, dword ptr [rbp - 0x94]
0xb51b:	lea	rdi, [r14 + 0x22]
0xb51f:	xor	esi, esi
0xb521:	mov	edx, 0xa
0xb526:	mov	r12, rax
0xb529:	mov	dword ptr [rbp - 0xa8], r9d
0xb530:	call	0x8a30
		Instruction group(s): [2, 7, 145] 

0xb535:	lea	rdi, [r14 + 0x1c]
0xb539:	xor	esi, esi
0xb53b:	mov	edx, 0xa
0xb540:	mov	qword ptr [rbp - 0xc0], rax
0xb547:	call	0x8a30
		Instruction group(s): [2, 7, 145] 

0xb54c:	lea	rdi, [r14 + 0x10]
0xb550:	xor	esi, esi
0xb552:	mov	edx, 0xa
0xb557:	mov	qword ptr [rbp - 0xb8], rax
0xb55e:	call	0x8a30
		Instruction group(s): [2, 7, 145] 

0xb563:	mov	r9d, dword ptr [rbp - 0xa8]
0xb56a:	mov	r8, qword ptr [rbp - 0xc0]
0xb571:	sub	rsp, 8
0xb575:	mov	rcx, qword ptr [rbp - 0xb8]
0xb57c:	mov	r10, qword ptr [rbp - 0xc8]
0xb583:	push	qword ptr [rbp - 0xe0]
		Instruction group(s): [145] 

0xb589:	mov	edx, dword ptr [rbp - 0xb0]
0xb58f:	push	r9
		Instruction group(s): [145] 

0xb591:	push	r8
		Instruction group(s): [145] 

0xb593:	mov	r9, r12
0xb596:	push	rcx
		Instruction group(s): [145] 

0xb597:	push	rax
		Instruction group(s): [145] 

0xb598:	mov	r8, rbx
0xb59b:	mov	rcx, r15
0xb59e:	mov	rsi, r10
0xb5a1:	mov	edi, dword ptr [rbp - 0xa4]
0xb5a7:	mov	rax, qword ptr [rbp - 0xd8]
0xb5ae:	call	rax
		Instruction group(s): [2, 145] 

0xb5b0:	add	rsp, 0x30
0xb5b4:	test	rax, rax
0xb5b7:	mov	r11d, dword ptr [rbp - 0xcc]
0xb5be:	jne	0xb7b3
		Instruction group(s): [7, 1] 

0xb5c4:	test	r11d, r11d
0xb5c7:	jne	0xb630
		Instruction group(s): [7, 1] 

0xb5c9:	add	rbx, r12
0xb5cc:	lea	r15, [rbx + 1]
0xb5d0:	test	bl, 1
0xb5d3:	cmove	r15, rbx
		Instruction group(s): [137] 

0xb5d7:	jmp	0xb3f0
		Instruction group(s): [7, 1] 

0xb5dc:	nop	dword ptr [rax]
0xb5e0:	cmp	byte ptr [rax], 0x2f
0xb5e3:	jne	0xb617
		Instruction group(s): [7, 1] 

0xb5e5:	mov	byte ptr [rax], 0
0xb5e8:	mov	r11d, 1
0xb5ee:	movzx	eax, byte ptr [rbp - 0x50]
0xb5f2:	jmp	0xb4c1
		Instruction group(s): [7, 1] 

0xb5f7:	nop	word ptr [rax + rax]
0xb600:	lea	rdi, [rip + 0x1e8b1]
0xb607:	mov	ecx, 3
0xb60c:	mov	rsi, r13
0xb60f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0xb611:	jne	0xb47c
		Instruction group(s): [7, 1] 

0xb617:	movzx	eax, byte ptr [rbp - 0x50]
0xb61b:	mov	r11d, 1
0xb621:	jmp	0xb4c1
		Instruction group(s): [7, 1] 

0xb626:	nop	word ptr cs:[rax + rax]
0xb630:	lea	rax, [r12 + 0x1e]
0xb635:	mov	edi, dword ptr [rbp - 0xa4]
0xb63b:	mov	rdx, r12
0xb63e:	and	rax, 0xfffffffffffffff0
0xb642:	sub	rsp, rax
0xb645:	lea	rax, [rsp + 0xf]
0xb64a:	and	rax, 0xfffffffffffffff0
0xb64e:	mov	rsi, rax
0xb651:	mov	qword ptr [rbp - 0xf0], rax
0xb658:	call	0x8980
		Instruction group(s): [2, 7, 145] 

0xb65d:	cdqe	
0xb65f:	cmp	rax, r12
0xb662:	jne	0xb770
		Instruction group(s): [7, 1] 

0xb668:	mov	rax, qword ptr [rbp - 0xf0]
0xb66f:	lea	rdx, [rax + r12]
0xb673:	cmp	rax, rdx
0xb676:	jb	0xb68d
		Instruction group(s): [7, 1] 

0xb678:	jmp	0xb5c9
		Instruction group(s): [7, 1] 

0xb67d:	nop	dword ptr [rax]
0xb680:	add	rax, 1
0xb684:	cmp	rdx, rax
0xb687:	je	0xb5c9
		Instruction group(s): [7, 1] 

0xb68d:	cmp	byte ptr [rax], 0xa
0xb690:	jne	0xb680
		Instruction group(s): [7, 1] 

0xb692:	cmp	byte ptr [rax - 1], 0x2f
0xb696:	mov	byte ptr [rax], 0
0xb699:	jne	0xb680
		Instruction group(s): [7, 1] 

0xb69b:	mov	byte ptr [rax - 1], 0
0xb69f:	jmp	0xb680
		Instruction group(s): [7, 1] 

0xb6a1:	nop	dword ptr [rax]
0xb6a8:	cmp	byte ptr [rbp - 0x4f], 0x31
0xb6ac:	jne	0xb4d6
		Instruction group(s): [7, 1] 

0xb6b2:	cmp	byte ptr [rbp - 0x4e], 0x2f
0xb6b6:	jne	0xb4d6
		Instruction group(s): [7, 1] 

0xb6bc:	lea	rdi, [r13 + 3]
0xb6c0:	xor	esi, esi
0xb6c2:	mov	edx, 0xa
0xb6c7:	mov	dword ptr [rbp - 0xc0], r11d
0xb6ce:	call	0x8a30
		Instruction group(s): [2, 7, 145] 

0xb6d3:	mov	rbx, rax
0xb6d6:	lea	eax, [rax + 1]
		Instruction group(s): [145] 

0xb6d9:	mov	edi, dword ptr [rbp - 0xa4]
0xb6df:	movsxd	rcx, ebx
		Instruction group(s): [145] 

0xb6e2:	cdqe	
0xb6e4:	mov	rdx, rcx
0xb6e7:	mov	qword ptr [rbp - 0xb0], rcx
0xb6ee:	add	rax, 0x1e
0xb6f2:	and	rax, 0xfffffffffffffff0
0xb6f6:	sub	rsp, rax
0xb6f9:	lea	r12, [rsp + 0xf]
0xb6fe:	and	r12, 0xfffffffffffffff0
0xb702:	mov	rsi, r12
0xb705:	mov	qword ptr [rbp - 0xb8], r12
0xb70c:	call	0x8980
		Instruction group(s): [2, 7, 145] 

0xb711:	cmp	ebx, eax
0xb713:	mov	rcx, qword ptr [rbp - 0xb0]
0xb71a:	mov	r10, qword ptr [rbp - 0xb8]
0xb721:	mov	r11d, dword ptr [rbp - 0xc0]
0xb728:	jne	0xb770
		Instruction group(s): [7, 1] 

0xb72a:	mov	byte ptr [r12 + rcx], 0
0xb72f:	mov	dword ptr [rbp - 0xb0], 0
0xb739:	jmp	0xb4d6
		Instruction group(s): [7, 1] 

0xb73e:	nop	
0xb740:	lea	rdi, [r13 + 1]
0xb744:	mov	edx, 0xa
0xb749:	xor	esi, esi
0xb74b:	call	0x8a30
		Instruction group(s): [2, 7, 145] 

0xb750:	cdqe	
0xb752:	mov	dword ptr [rbp - 0xb0], 0
0xb75c:	xor	r11d, r11d
0xb75f:	lea	r10, [rbx + rax]
0xb763:	jmp	0xb4d6
		Instruction group(s): [7, 1] 

0xb768:	nop	dword ptr [rax + rax]
0xb770:	mov	edi, dword ptr [rbp - 0xa4]
0xb776:	mov	r15, -2
0xb77d:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0xb782:	mov	rbx, qword ptr [rbp - 0x38]
0xb786:	xor	rbx, qword ptr fs:[0x28]
0xb78f:	mov	rax, r15
0xb792:	jne	0xb7d4
		Instruction group(s): [7, 1] 

0xb794:	lea	rsp, [rbp - 0x28]
0xb798:	pop	rbx
		Instruction group(s): [145] 

0xb799:	pop	r12
		Instruction group(s): [145] 

0xb79b:	pop	r13
		Instruction group(s): [145] 

0xb79d:	pop	r14
		Instruction group(s): [145] 

0xb79f:	pop	r15
		Instruction group(s): [145] 

0xb7a1:	pop	rbp
		Instruction group(s): [145] 

0xb7a2:	ret	
		Instruction group(s): [3, 145] 

0xb7a3:	mov	edi, dword ptr [rbp - 0xa4]
0xb7a9:	xor	r15d, r15d
0xb7ac:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0xb7b1:	jmp	0xb782
		Instruction group(s): [7, 1] 

0xb7b3:	mov	edi, dword ptr [rbp - 0xa4]
0xb7b9:	mov	r15, rax
0xb7bc:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0xb7c1:	jmp	0xb782
		Instruction group(s): [7, 1] 

0xb7c3:	mov	r15, -1
0xb7ca:	jmp	0xb782
		Instruction group(s): [7, 1] 

0xb7cc:	mov	byte ptr [rax], 0
0xb7cf:	jmp	0xb49c
		Instruction group(s): [7, 1] 

0xb7d4:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0xb7d9:	nop	dword ptr [rax]
0xb7e0:	push	r12
		Instruction group(s): [145] 

0xb7e2:	push	rbp
		Instruction group(s): [145] 

0xb7e3:	mov	rbp, rsi
0xb7e6:	push	rbx
		Instruction group(s): [145] 

0xb7e7:	mov	esi, 0x2f
0xb7ec:	mov	r12d, edx
0xb7ef:	mov	rbx, rdi
0xb7f2:	call	0x8890
		Instruction group(s): [2, 7, 145] 

0xb7f7:	lea	rdx, [rax + 1]
0xb7fb:	test	rax, rax
0xb7fe:	cmovne	rbx, rdx
		Instruction group(s): [137] 

0xb802:	test	r12d, r12d
0xb805:	jne	0xb820
		Instruction group(s): [7, 1] 

0xb807:	mov	rsi, rbp
0xb80a:	mov	rdi, rbx
0xb80d:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0xb812:	test	eax, eax
0xb814:	sete	al
0xb817:	pop	rbx
		Instruction group(s): [145] 

0xb818:	movzx	eax, al
0xb81b:	pop	rbp
		Instruction group(s): [145] 

0xb81c:	pop	r12
		Instruction group(s): [145] 

0xb81e:	ret	
		Instruction group(s): [3, 145] 

0xb81f:	nop	
0xb820:	mov	rsi, rbp
0xb823:	mov	rdi, rbx
0xb826:	mov	edx, 0xf
0xb82b:	call	0x86a0
		Instruction group(s): [2, 7, 145] 

0xb830:	test	eax, eax
0xb832:	sete	al
0xb835:	pop	rbx
		Instruction group(s): [145] 

0xb836:	movzx	eax, al
0xb839:	pop	rbp
		Instruction group(s): [145] 

0xb83a:	pop	r12
		Instruction group(s): [145] 

0xb83c:	ret	
		Instruction group(s): [3, 145] 

0xb83d:	nop	dword ptr [rax]
0xb840:	push	rbx
		Instruction group(s): [145] 

0xb841:	mov	rdi, qword ptr [rsp + 0x30]
0xb846:	mov	rbx, rcx
0xb849:	call	0xb7e0
		Instruction group(s): [2, 7, 145] 

0xb84e:	test	eax, eax
0xb850:	mov	eax, 0
0xb855:	cmovne	rax, rbx
		Instruction group(s): [137] 

0xb859:	pop	rbx
		Instruction group(s): [145] 

0xb85a:	ret	
		Instruction group(s): [3, 145] 

0xb85b:	nop	dword ptr [rax + rax]
0xb860:	push	r15
		Instruction group(s): [145] 

0xb862:	push	r14
		Instruction group(s): [145] 

0xb864:	mov	rdx, rsi
0xb867:	push	r13
		Instruction group(s): [145] 

0xb869:	push	r12
		Instruction group(s): [145] 

0xb86b:	lea	rsi, [rip - 0x32]
0xb872:	push	rbp
		Instruction group(s): [145] 

0xb873:	push	rbx
		Instruction group(s): [145] 

0xb874:	mov	rbx, rdi
0xb877:	sub	rsp, 0xe8
0xb87e:	mov	rax, qword ptr fs:[0x28]
0xb887:	mov	qword ptr [rsp + 0xd8], rax
0xb88f:	xor	eax, eax
0xb891:	call	0xb350
		Instruction group(s): [2, 7, 145] 

0xb896:	test	rax, rax
0xb899:	mov	rbp, rax
0xb89c:	js	0xb8a5
		Instruction group(s): [7, 1] 

0xb89e:	mov	eax, 1
0xb8a3:	jne	0xb8d0
		Instruction group(s): [7, 1] 

0xb8a5:	mov	rcx, qword ptr [rsp + 0xd8]
0xb8ad:	xor	rcx, qword ptr fs:[0x28]
0xb8b6:	jne	0xba22
		Instruction group(s): [7, 1] 

0xb8bc:	add	rsp, 0xe8
0xb8c3:	pop	rbx
		Instruction group(s): [145] 

0xb8c4:	pop	rbp
		Instruction group(s): [145] 

0xb8c5:	pop	r12
		Instruction group(s): [145] 

0xb8c7:	pop	r13
		Instruction group(s): [145] 

0xb8c9:	pop	r14
		Instruction group(s): [145] 

0xb8cb:	pop	r15
		Instruction group(s): [145] 

0xb8cd:	ret	
		Instruction group(s): [3, 145] 

0xb8ce:	nop	
0xb8d0:	mov	rdi, rbx
0xb8d3:	xor	eax, eax
0xb8d5:	mov	edx, 0x1b6
0xb8da:	mov	esi, 2
0xb8df:	call	0x8c00
		Instruction group(s): [2, 7, 145] 

0xb8e4:	test	eax, eax
0xb8e6:	mov	ebx, eax
0xb8e8:	js	0xba18
		Instruction group(s): [7, 1] 

0xb8ee:	xor	edx, edx
0xb8f0:	mov	rsi, rbp
0xb8f3:	mov	edi, eax
0xb8f5:	call	0x88c0
		Instruction group(s): [2, 7, 145] 

0xb8fa:	test	rax, rax
0xb8fd:	js	0xb9f8
		Instruction group(s): [7, 1] 

0xb903:	mov	r13, rsp
0xb906:	mov	edx, 0x3c
0xb90b:	mov	edi, ebx
0xb90d:	mov	rsi, r13
0xb910:	call	0x8980
		Instruction group(s): [2, 7, 145] 

0xb915:	cmp	rax, 0x3c
0xb919:	jne	0xb9f8
		Instruction group(s): [7, 1] 

0xb91f:	xor	edx, edx
0xb921:	mov	rsi, rbp
0xb924:	mov	edi, ebx
0xb926:	call	0x88c0
		Instruction group(s): [2, 7, 145] 

0xb92b:	test	rax, rax
0xb92e:	js	0xb9f8
		Instruction group(s): [7, 1] 

0xb934:	mov	edx, 0x3c
0xb939:	mov	rsi, r13
0xb93c:	mov	edi, ebx
0xb93e:	call	0x8770
		Instruction group(s): [2, 7, 145] 

0xb943:	cmp	rax, 0x3c
0xb947:	lea	r14, [rsp + 0x40]
0xb94c:	je	0xb96d
		Instruction group(s): [7, 1] 

0xb94e:	jmp	0xb9f8
		Instruction group(s): [7, 1] 

0xb953:	nop	dword ptr [rax + rax]
0xb958:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0xb95d:	mov	r15d, dword ptr [rax]
0xb960:	mov	r12, rax
0xb963:	cmp	r15d, 4
0xb967:	jne	0xba03
		Instruction group(s): [7, 1] 

0xb96d:	mov	rdx, r14
0xb970:	mov	esi, ebx
0xb972:	mov	edi, 1
0xb977:	call	0x8ae0
		Instruction group(s): [2, 7, 145] 

0xb97c:	cmp	eax, -1
0xb97f:	je	0xb958
		Instruction group(s): [7, 1] 

0xb981:	test	eax, eax
0xb983:	js	0xb9f8
		Instruction group(s): [7, 1] 

0xb985:	lea	rax, [r13 + 0x10]
0xb989:	lea	rdx, [r13 + 0x1c]
0xb98d:	nop	dword ptr [rax]
0xb990:	mov	byte ptr [rax], 0x20
0xb993:	add	rax, 1
0xb997:	cmp	rax, rdx
0xb99a:	jne	0xb990
		Instruction group(s): [7, 1] 

0xb99c:	mov	r8, qword ptr [rsp + 0x98]
0xb9a4:	lea	rdi, [r13 + 0x10]
0xb9a8:	lea	rcx, [rip + 0x1e51c]
0xb9af:	mov	edx, 0xc
0xb9b4:	mov	esi, 1
0xb9b9:	xor	eax, eax
0xb9bb:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0xb9c0:	xor	edx, edx
0xb9c2:	mov	rsi, rbp
0xb9c5:	mov	edi, ebx
0xb9c7:	call	0x88c0
		Instruction group(s): [2, 7, 145] 

0xb9cc:	test	rax, rax
0xb9cf:	js	0xb9f8
		Instruction group(s): [7, 1] 

0xb9d1:	mov	edx, 0x3c
0xb9d6:	mov	rsi, r13
0xb9d9:	mov	edi, ebx
0xb9db:	call	0x8770
		Instruction group(s): [2, 7, 145] 

0xb9e0:	cmp	rax, 0x3c
0xb9e4:	jne	0xb9f8
		Instruction group(s): [7, 1] 

0xb9e6:	mov	edi, ebx
0xb9e8:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0xb9ed:	xor	eax, eax
0xb9ef:	jmp	0xb8a5
		Instruction group(s): [7, 1] 

0xb9f4:	nop	dword ptr [rax]
0xb9f8:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0xb9fd:	mov	r15d, dword ptr [rax]
0xba00:	mov	r12, rax
0xba03:	mov	edi, ebx
0xba05:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0xba0a:	mov	dword ptr [r12], r15d
0xba0e:	mov	eax, 0xfffffffd
0xba13:	jmp	0xb8a5
		Instruction group(s): [7, 1] 

0xba18:	mov	eax, 0xfffffffd
0xba1d:	jmp	0xb8a5
		Instruction group(s): [7, 1] 

0xba22:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0xba27:	nop	word ptr [rax + rax]
0xba30:	mov	rdx, qword ptr [rdi + 8]
0xba34:	test	rdx, rdx
0xba37:	lea	rax, [rdx - 1]
0xba3b:	je	0xba70
		Instruction group(s): [7, 1] 

0xba3d:	movzx	esi, byte ptr [rax + 1]
0xba41:	lea	rdi, [rax + 1]
0xba45:	xor	eax, eax
0xba47:	test	sil, sil
0xba4a:	je	0xba6e
		Instruction group(s): [7, 1] 

0xba4c:	nop	dword ptr [rax]
0xba50:	movzx	edx, sil
0xba54:	movzx	esi, byte ptr [rdi + 1]
0xba58:	add	rdi, 1
0xba5c:	mov	ecx, esi
0xba5e:	and	ecx, 0xf
0xba61:	shl	edx, cl
0xba63:	movsxd	rdx, edx
		Instruction group(s): [145] 

0xba66:	add	rax, rdx
0xba69:	test	sil, sil
0xba6c:	jne	0xba50
		Instruction group(s): [7, 1] 

0xba6e:	ret	
		Instruction group(s): [3, 145] 

0xba70:	mov	rax, qword ptr [rdi + 0x18]
0xba74:	mov	rax, qword ptr [rax]
0xba77:	sub	rax, 1
0xba7b:	jmp	0xba3d
		Instruction group(s): [7, 1] 

0xba7d:	nop	dword ptr [rax]
0xba80:	mov	rdx, qword ptr [rdi + 8]
0xba84:	test	rdx, rdx
0xba87:	lea	rax, [rdx - 1]
0xba8b:	je	0xbac0
		Instruction group(s): [7, 1] 

0xba8d:	movzx	esi, byte ptr [rax + 1]
0xba91:	lea	rdi, [rax + 1]
0xba95:	xor	eax, eax
0xba97:	test	sil, sil
0xba9a:	je	0xbabe
		Instruction group(s): [7, 1] 

0xba9c:	nop	dword ptr [rax]
0xbaa0:	movzx	edx, sil
0xbaa4:	movzx	esi, byte ptr [rdi + 1]
0xbaa8:	add	rdi, 1
0xbaac:	mov	ecx, esi
0xbaae:	and	ecx, 7
0xbab1:	shl	edx, cl
0xbab3:	movsxd	rdx, edx
		Instruction group(s): [145] 

0xbab6:	add	rax, rdx
0xbab9:	test	sil, sil
0xbabc:	jne	0xbaa0
		Instruction group(s): [7, 1] 

0xbabe:	ret	
		Instruction group(s): [3, 145] 

0xbac0:	mov	rax, qword ptr [rdi + 0x18]
0xbac4:	mov	rax, qword ptr [rax]
0xbac7:	sub	rax, 1
0xbacb:	jmp	0xba8d
		Instruction group(s): [7, 1] 

0xbacd:	nop	dword ptr [rax]
0xbad0:	mov	rdx, qword ptr [rsi + 8]
0xbad4:	test	rdx, rdx
0xbad7:	je	0xbaf8
		Instruction group(s): [7, 1] 

0xbad9:	mov	rax, qword ptr [rdi + 8]
0xbadd:	test	rax, rax
0xbae0:	jne	0xbae9
		Instruction group(s): [7, 1] 

0xbae2:	mov	rax, qword ptr [rdi + 0x18]
0xbae6:	mov	rax, qword ptr [rax]
0xbae9:	mov	rsi, rdx
0xbaec:	mov	rdi, rax
0xbaef:	jmp	0x89e0
		Instruction group(s): [7, 1] 

0xbaf4:	nop	dword ptr [rax]
0xbaf8:	mov	rax, qword ptr [rsi + 0x18]
0xbafc:	mov	rdx, qword ptr [rax]
0xbaff:	jmp	0xbad9
		Instruction group(s): [7, 1] 

0xbb01:	nop	dword ptr [rax + rax]
0xbb06:	nop	word ptr cs:[rax + rax]
0xbb10:	push	r14
		Instruction group(s): [145] 

0xbb12:	push	r13
		Instruction group(s): [145] 

0xbb14:	push	r12
		Instruction group(s): [145] 

0xbb16:	push	rbp
		Instruction group(s): [145] 

0xbb17:	push	rbx
		Instruction group(s): [145] 

0xbb18:	sub	rsp, 0xb0
0xbb1f:	mov	rax, qword ptr fs:[0x28]
0xbb28:	mov	qword ptr [rsp + 0xa8], rax
0xbb30:	xor	eax, eax
0xbb32:	test	word ptr [rdi + 0x84], 0x2020
0xbb3b:	je	0xbb68
		Instruction group(s): [7, 1] 

0xbb3d:	mov	rax, qword ptr [rsp + 0xa8]
0xbb45:	xor	rax, qword ptr fs:[0x28]
0xbb4e:	jne	0xbd50
		Instruction group(s): [7, 1] 

0xbb54:	add	rsp, 0xb0
0xbb5b:	pop	rbx
		Instruction group(s): [145] 

0xbb5c:	pop	rbp
		Instruction group(s): [145] 

0xbb5d:	pop	r12
		Instruction group(s): [145] 

0xbb5f:	pop	r13
		Instruction group(s): [145] 

0xbb61:	pop	r14
		Instruction group(s): [145] 

0xbb63:	ret	
		Instruction group(s): [3, 145] 

0xbb64:	nop	dword ptr [rax]
0xbb68:	mov	rbx, rdi
0xbb6b:	mov	rdi, qword ptr [rdi]
0xbb6e:	mov	r12, rsi
0xbb71:	lea	rbp, [rsp + 0x10]
0xbb76:	call	0xae90
		Instruction group(s): [2, 7, 145] 

0xbb7b:	test	eax, eax
0xbb7d:	je	0xbc1e
		Instruction group(s): [7, 1] 

0xbb83:	mov	rax, qword ptr [rbx + 0x70]
0xbb87:	mov	rbp, -1
0xbb8e:	cmp	rax, 1
0xbb92:	je	0xbb9c
		Instruction group(s): [7, 1] 

0xbb94:	lea	rbp, [rax - 3]
0xbb98:	shr	rbp, 0x1e
0xbb9c:	mov	rdi, qword ptr [rbx]
0xbb9f:	lea	rsi, [rsp + 8]
0xbba4:	mov	qword ptr [rsp + 8], 1
0xbbad:	call	0xaf70
		Instruction group(s): [2, 7, 145] 

0xbbb2:	test	eax, eax
0xbbb4:	je	0xbb3d
		Instruction group(s): [7, 1] 

0xbbb6:	cmp	qword ptr [rsp + 8], rbp
0xbbbb:	je	0xbb3d
		Instruction group(s): [7, 1] 

0xbbbd:	test	r12, r12
0xbbc0:	mov	r13, qword ptr [rbx]
0xbbc3:	mov	edx, 5
0xbbc8:	je	0xbcf0
		Instruction group(s): [7, 1] 

0xbbce:	lea	rsi, [rip + 0x1e2fb]
0xbbd5:	xor	edi, edi
0xbbd7:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xbbdc:	mov	rdi, r12
0xbbdf:	mov	r14, rax
0xbbe2:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xbbe7:	mov	rdi, qword ptr [rbx]
0xbbea:	mov	rbp, rax
0xbbed:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xbbf2:	lea	rsi, [rbp + rax]
0xbbf7:	mov	r8, r13
0xbbfa:	mov	rcx, r12
0xbbfd:	mov	rdx, r14
0xbc00:	xor	edi, edi
0xbc02:	xor	eax, eax
0xbc04:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0xbc09:	jmp	0xbb3d
		Instruction group(s): [7, 1] 

0xbc0e:	nop	
0xbc10:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0xbc15:	cmp	dword ptr [rax], 4
0xbc18:	jne	0xbb3d
		Instruction group(s): [7, 1] 

0xbc1e:	mov	rsi, qword ptr [rbx]
0xbc21:	mov	rdx, rbp
0xbc24:	mov	edi, 1
0xbc29:	call	0x8a90
		Instruction group(s): [2, 7, 145] 

0xbc2e:	cmp	eax, -1
0xbc31:	je	0xbc10
		Instruction group(s): [7, 1] 

0xbc33:	test	eax, eax
0xbc35:	jne	0xbb3d
		Instruction group(s): [7, 1] 

0xbc3b:	mov	eax, dword ptr [rsp + 0x28]
0xbc3f:	and	eax, 0xf000
0xbc44:	cmp	eax, 0x8000
0xbc49:	jne	0xbb3d
		Instruction group(s): [7, 1] 

0xbc4f:	mov	rdx, qword ptr [rsp + 0x70]
0xbc54:	mov	rsi, qword ptr [rsp + 0x68]
0xbc59:	mov	rdi, qword ptr [rbx]
0xbc5c:	call	0x103f0
		Instruction group(s): [2, 7, 145] 

0xbc61:	cmp	rax, qword ptr [rbx + 0x70]
0xbc65:	je	0xbb3d
		Instruction group(s): [7, 1] 

0xbc6b:	test	r12, r12
0xbc6e:	mov	r13, qword ptr [rbx]
0xbc71:	mov	edx, 5
0xbc76:	je	0xbd20
		Instruction group(s): [7, 1] 

0xbc7c:	lea	rsi, [rip + 0x1e2dd]
0xbc83:	xor	edi, edi
0xbc85:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xbc8a:	mov	rdi, r12
0xbc8d:	mov	r14, rax
0xbc90:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xbc95:	mov	rdi, qword ptr [rbx]
0xbc98:	mov	rbp, rax
0xbc9b:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xbca0:	lea	rsi, [rbp + rax]
0xbca5:	mov	r8, r13
0xbca8:	mov	rcx, r12
0xbcab:	mov	rdx, r14
0xbcae:	xor	edi, edi
0xbcb0:	xor	eax, eax
0xbcb2:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0xbcb7:	mov	rdi, qword ptr [rbx]
0xbcba:	call	0x8670
		Instruction group(s): [2, 7, 145] 

0xbcbf:	test	eax, eax
0xbcc1:	jns	0xbb3d
		Instruction group(s): [7, 1] 

0xbcc7:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0xbccc:	cmp	dword ptr [rax], 2
0xbccf:	je	0xbb3d
		Instruction group(s): [7, 1] 

0xbcd5:	mov	rsi, qword ptr [rbx]
0xbcd8:	lea	rdi, [rip + 0x1e2b4]
0xbcdf:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0xbce4:	jmp	0xbb3d
		Instruction group(s): [7, 1] 

0xbce9:	nop	dword ptr [rax]
0xbcf0:	lea	rsi, [rip + 0x1e211]
0xbcf7:	xor	edi, edi
0xbcf9:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xbcfe:	mov	rdi, qword ptr [rbx]
0xbd01:	mov	rbp, rax
0xbd04:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xbd09:	mov	rcx, r13
0xbd0c:	mov	rsi, rax
0xbd0f:	mov	rdx, rbp
0xbd12:	xor	edi, edi
0xbd14:	xor	eax, eax
0xbd16:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0xbd1b:	jmp	0xbb3d
		Instruction group(s): [7, 1] 

0xbd20:	lea	rsi, [rip + 0x1e255]
0xbd27:	xor	edi, edi
0xbd29:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xbd2e:	mov	rdi, qword ptr [rbx]
0xbd31:	mov	rbp, rax
0xbd34:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xbd39:	mov	rcx, r13
0xbd3c:	mov	rsi, rax
0xbd3f:	mov	rdx, rbp
0xbd42:	xor	edi, edi
0xbd44:	xor	eax, eax
0xbd46:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0xbd4b:	jmp	0xbcb7
		Instruction group(s): [7, 1] 

0xbd50:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0xbd55:	nop	
0xbd56:	nop	word ptr cs:[rax + rax]
0xbd60:	push	rbp
		Instruction group(s): [145] 

0xbd61:	push	rbx
		Instruction group(s): [145] 

0xbd62:	mov	rbp, rdi
0xbd65:	xor	esi, esi
0xbd67:	sub	rsp, 8
0xbd6b:	mov	rdi, qword ptr [rdi + 8]
0xbd6f:	call	0xbb10
		Instruction group(s): [2, 7, 145] 

0xbd74:	mov	rax, qword ptr [rbp + 8]
0xbd78:	mov	rbx, qword ptr [rax + 0x30]
0xbd7c:	test	rbx, rbx
0xbd7f:	jne	0xbd8c
		Instruction group(s): [7, 1] 

0xbd81:	jmp	0xbda0
		Instruction group(s): [7, 1] 

0xbd83:	nop	dword ptr [rax + rax]
0xbd88:	mov	rax, qword ptr [rbp + 8]
0xbd8c:	mov	rdi, qword ptr [rbx + 0x18]
0xbd90:	mov	rsi, qword ptr [rax]
0xbd93:	call	0xbb10
		Instruction group(s): [2, 7, 145] 

0xbd98:	mov	rbx, qword ptr [rbx]
0xbd9b:	test	rbx, rbx
0xbd9e:	jne	0xbd88
		Instruction group(s): [7, 1] 

0xbda0:	or	byte ptr [rbp + 0x44], 8
0xbda4:	add	rsp, 8
0xbda8:	pop	rbx
		Instruction group(s): [145] 

0xbda9:	pop	rbp
		Instruction group(s): [145] 

0xbdaa:	ret	
		Instruction group(s): [3, 145] 

0xbdab:	nop	dword ptr [rax + rax]
0xbdb0:	push	rbp
		Instruction group(s): [145] 

0xbdb1:	mov	rbp, rsp
0xbdb4:	push	r15
		Instruction group(s): [145] 

0xbdb6:	push	r14
		Instruction group(s): [145] 

0xbdb8:	push	r13
		Instruction group(s): [145] 

0xbdba:	push	r12
		Instruction group(s): [145] 

0xbdbc:	push	rbx
		Instruction group(s): [145] 

0xbdbd:	mov	rbx, rdi
0xbdc0:	sub	rsp, 0x88
0xbdc7:	mov	rdi, qword ptr [rdi]
0xbdca:	mov	rax, qword ptr fs:[0x28]
0xbdd3:	mov	qword ptr [rbp - 0x38], rax
0xbdd7:	xor	eax, eax
0xbdd9:	call	0xae90
		Instruction group(s): [2, 7, 145] 

0xbdde:	test	eax, eax
0xbde0:	jne	0xc480
		Instruction group(s): [7, 1] 

0xbde6:	mov	r14, qword ptr [rbx + 0x28]
0xbdea:	mov	r12, qword ptr [rbx]
0xbded:	lea	r13, [rip + 0x21bd9]
0xbdf4:	test	r14, r14
0xbdf7:	je	0xc50b
		Instruction group(s): [7, 1] 

0xbdfd:	mov	rax, qword ptr [rbx + 0x18]
0xbe01:	test	rax, rax
0xbe04:	jne	0xbe18
		Instruction group(s): [7, 1] 

0xbe06:	jmp	0xbe40
		Instruction group(s): [7, 1] 

0xbe08:	nop	dword ptr [rax + rax]
0xbe10:	mov	rax, qword ptr [rax]
0xbe13:	test	rax, rax
0xbe16:	je	0xbe40
		Instruction group(s): [7, 1] 

0xbe18:	movzx	ecx, byte ptr [rax + 0x21]
0xbe1c:	test	cl, 1
0xbe1f:	jne	0xbe10
		Instruction group(s): [7, 1] 

0xbe21:	and	ecx, 4
0xbe24:	lea	rdx, [rip + 0x21ba2]
0xbe2b:	jne	0xbe47
		Instruction group(s): [7, 1] 

0xbe2d:	mov	rdx, qword ptr [rax + 8]
0xbe31:	test	rdx, rdx
0xbe34:	jne	0xbe47
		Instruction group(s): [7, 1] 

0xbe36:	mov	rax, qword ptr [rax + 0x18]
0xbe3a:	mov	rdx, qword ptr [rax]
0xbe3d:	jmp	0xbe47
		Instruction group(s): [7, 1] 

0xbe3f:	nop	
0xbe40:	lea	rdx, [rip + 0x21b86]
0xbe47:	mov	rax, qword ptr [rip + 0x22d70a]
0xbe4e:	lea	rdi, [rip + 0x1e657]
0xbe55:	mov	ecx, 6
0xbe5a:	mov	esi, 1
0xbe5f:	mov	rax, qword ptr [rax + 0x20]
0xbe63:	cmp	qword ptr [rbx + 0x20], rax
0xbe67:	mov	rax, qword ptr [rbx + 0x50]
0xbe6b:	cmove	rdx, r12
		Instruction group(s): [137] 

0xbe6f:	mov	r9, qword ptr [rax + 8]
0xbe73:	sub	rsp, 8
0xbe77:	push	0
		Instruction group(s): [145] 

0xbe79:	xor	r8d, r8d
0xbe7c:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0xbe81:	mov	rax, qword ptr [rbx + 0x50]
0xbe85:	lea	rdi, [rip + 0x1f2c2]
0xbe8c:	xor	r8d, r8d
0xbe8f:	mov	rdx, r14
0xbe92:	mov	ecx, 6
0xbe97:	mov	esi, 1
0xbe9c:	mov	qword ptr [rsp], 0
0xbea4:	mov	r9, qword ptr [rax + 8]
0xbea8:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0xbead:	mov	rax, qword ptr [rbx + 0x50]
0xbeb1:	lea	rdi, [rip + 0x1e5e0]
0xbeb8:	xor	r8d, r8d
0xbebb:	mov	ecx, 6
0xbec0:	mov	rdx, r12
0xbec3:	mov	esi, 1
0xbec8:	mov	qword ptr [rsp], 0
0xbed0:	mov	r9, qword ptr [rax + 8]
0xbed4:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0xbed9:	mov	rax, qword ptr [rbx + 0x50]
0xbedd:	lea	rdi, [rip + 0x23166]
0xbee4:	xor	r8d, r8d
0xbee7:	mov	ecx, 6
0xbeec:	mov	rdx, r13
0xbeef:	mov	esi, 1
0xbef4:	mov	qword ptr [rsp], 0
0xbefc:	mov	r9, qword ptr [rax + 8]
0xbf00:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0xbf05:	mov	r14, qword ptr [rbx + 0x18]
0xbf09:	pop	r8
		Instruction group(s): [145] 

0xbf0b:	pop	r9
		Instruction group(s): [145] 

0xbf0d:	test	r14, r14
0xbf10:	je	0xc628
		Instruction group(s): [7, 1] 

0xbf16:	mov	r13, r14
0xbf19:	xor	r12d, r12d
0xbf1c:	xor	r15d, r15d
0xbf1f:	jmp	0xbf44
		Instruction group(s): [7, 1] 

0xbf21:	nop	dword ptr [rax]
0xbf28:	test	rdi, rdi
0xbf2b:	je	0xc408
		Instruction group(s): [7, 1] 

0xbf31:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xbf36:	lea	r12d, [r12 + rax + 1]
		Instruction group(s): [145] 

0xbf3b:	mov	r13, qword ptr [r13]
0xbf3f:	test	r13, r13
0xbf42:	je	0xbf71
		Instruction group(s): [7, 1] 

0xbf44:	movzx	eax, byte ptr [r13 + 0x21]
0xbf49:	test	al, 4
0xbf4b:	jne	0xbf3b
		Instruction group(s): [7, 1] 

0xbf4d:	test	al, 1
0xbf4f:	mov	rdi, qword ptr [r13 + 8]
0xbf53:	jne	0xbf28
		Instruction group(s): [7, 1] 

0xbf55:	test	rdi, rdi
0xbf58:	je	0xc3f8
		Instruction group(s): [7, 1] 

0xbf5e:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xbf63:	mov	r13, qword ptr [r13]
0xbf67:	lea	r15d, [r15 + rax + 1]
		Instruction group(s): [145] 

0xbf6c:	test	r13, r13
0xbf6f:	jne	0xbf44
		Instruction group(s): [7, 1] 

0xbf71:	test	r12d, r12d
0xbf74:	mov	eax, 1
0xbf79:	cmove	r12d, eax
		Instruction group(s): [137] 

0xbf7d:	test	r15d, r15d
0xbf80:	je	0xc428
		Instruction group(s): [7, 1] 

0xbf86:	cmp	dword ptr [rip + 0x229f33], r15d
0xbf8d:	lea	eax, [r15 + 1]
		Instruction group(s): [145] 

0xbf91:	mov	r13, qword ptr [rip + 0x229f20]
0xbf98:	mov	dword ptr [rbp - 0xa8], eax
0xbf9e:	jae	0xc038
		Instruction group(s): [7, 1] 

0xbfa4:	jmp	0xc44c
		Instruction group(s): [7, 1] 

0xbfa9:	nop	dword ptr [rax]
0xbfb0:	mov	rdi, r15
0xbfb3:	mov	esi, 0x28
0xbfb8:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0xbfbd:	lea	r15, [rax + 1]
0xbfc1:	mov	rdi, r15
0xbfc4:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xbfc9:	sub	eax, 1
0xbfcc:	mov	dword ptr [rbp - 0x98], eax
0xbfd2:	mov	ecx, dword ptr [rbp - 0x98]
0xbfd8:	mov	rdi, r13
0xbfdb:	mov	rsi, r15
0xbfde:	mov	rdx, rcx
0xbfe1:	mov	qword ptr [rbp - 0xa0], rcx
0xbfe8:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0xbfed:	mov	rcx, qword ptr [rbp - 0xa0]
0xbff4:	lea	r9, [r13 + rcx]
0xbff9:	mov	byte ptr [r9], 0x20
0xbffd:	cmp	byte ptr [r14 + 0x20], 0
0xc002:	lea	r13, [r9 + 1]
0xc006:	jne	0xc030
		Instruction group(s): [7, 1] 

0xc008:	mov	edi, dword ptr [rip + 0x22a39e]
0xc00e:	test	edi, edi
0xc010:	jne	0xc030
		Instruction group(s): [7, 1] 

0xc012:	mov	edx, dword ptr [rbp - 0xa8]
0xc018:	sub	edx, 1
0xc01b:	sub	edx, dword ptr [rbp - 0x98]
0xc021:	mov	dword ptr [rbp - 0xa8], edx
0xc027:	nop	word ptr [rax + rax]
0xc030:	mov	r14, qword ptr [r14]
0xc033:	test	r14, r14
0xc036:	je	0xc080
		Instruction group(s): [7, 1] 

0xc038:	test	byte ptr [r14 + 0x21], 5
0xc03d:	jne	0xc030
		Instruction group(s): [7, 1] 

0xc03f:	mov	r15, qword ptr [r14 + 8]
0xc043:	test	r15, r15
0xc046:	je	0xc070
		Instruction group(s): [7, 1] 

0xc048:	mov	rdi, r15
0xc04b:	call	0xae90
		Instruction group(s): [2, 7, 145] 

0xc050:	test	eax, eax
0xc052:	jne	0xbfb0
		Instruction group(s): [7, 1] 

0xc058:	mov	rdi, r15
0xc05b:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xc060:	mov	dword ptr [rbp - 0x98], eax
0xc066:	jmp	0xbfd2
		Instruction group(s): [7, 1] 

0xc06b:	nop	dword ptr [rax + rax]
0xc070:	mov	rax, qword ptr [r14 + 0x18]
0xc074:	mov	r15, qword ptr [rax]
0xc077:	jmp	0xc048
		Instruction group(s): [7, 1] 

0xc079:	nop	dword ptr [rax]
0xc080:	mov	rdx, qword ptr [rip + 0x229e31]
0xc087:	xor	eax, eax
0xc089:	cmp	r13, rdx
0xc08c:	seta	al
0xc08f:	neg	rax
0xc092:	mov	byte ptr [r13 + rax], 0
0xc098:	mov	rax, qword ptr [rbx + 0x50]
0xc09c:	sub	rsp, 8
0xc0a0:	push	0
		Instruction group(s): [145] 

0xc0a2:	lea	rdi, [rip + 0x1df71]
0xc0a9:	xor	r8d, r8d
0xc0ac:	mov	ecx, 6
0xc0b1:	mov	esi, 1
0xc0b6:	mov	r9, qword ptr [rax + 8]
0xc0ba:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0xc0bf:	mov	rax, qword ptr [rip + 0x229df2]
0xc0c6:	pop	rcx
		Instruction group(s): [145] 

0xc0c7:	pop	rsi
		Instruction group(s): [145] 

0xc0c8:	mov	qword ptr [rbp - 0x98], rax
0xc0cf:	mov	eax, dword ptr [rbp - 0xa8]
0xc0d5:	cmp	dword ptr [rip + 0x229dd5], eax
0xc0db:	jb	0xc5f8
		Instruction group(s): [7, 1] 

0xc0e1:	mov	rax, qword ptr [rip + 0x229dc0]
0xc0e8:	mov	qword ptr [rbp - 0xa8], rax
0xc0ef:	cmp	dword ptr [rip + 0x229daa], r12d
0xc0f6:	mov	r13, qword ptr [rip + 0x229d9b]
0xc0fd:	jb	0xc5d0
		Instruction group(s): [7, 1] 

0xc103:	lea	r12, [rbp - 0x90]
0xc10a:	lea	r8, [rip - 0x641]
0xc111:	lea	rcx, [rip - 0x698]
0xc118:	lea	rdx, [rip - 0x6ef]
0xc11f:	mov	esi, 0x1f4
0xc124:	mov	rdi, r12
0xc127:	call	0x29440
		Instruction group(s): [2, 7, 145] 

0xc12c:	mov	r15, qword ptr [rbx + 0x18]
0xc130:	test	r15, r15
0xc133:	je	0xc660
		Instruction group(s): [7, 1] 

0xc139:	nop	dword ptr [rax]
0xc140:	test	byte ptr [r15 + 0x21], 4
0xc145:	jne	0xc180
		Instruction group(s): [7, 1] 

0xc147:	mov	rsi, r15
0xc14a:	mov	rdi, r12
0xc14d:	call	0x29540
		Instruction group(s): [2, 7, 145] 

0xc152:	mov	rcx, qword ptr [rax]
0xc155:	test	rcx, rcx
0xc158:	je	0xc350
		Instruction group(s): [7, 1] 

0xc15e:	cmp	rcx, qword ptr [rip + 0x229ca3]
0xc165:	je	0xc350
		Instruction group(s): [7, 1] 

0xc16b:	movzx	eax, byte ptr [r15 + 0x21]
0xc170:	xor	al, byte ptr [rcx + 0x21]
0xc173:	test	al, 1
0xc175:	je	0xc180
		Instruction group(s): [7, 1] 

0xc177:	and	byte ptr [rcx + 0x21], 0xfe
0xc17b:	and	byte ptr [r15 + 0x21], 0xfe
0xc180:	mov	r15, qword ptr [r15]
0xc183:	test	r15, r15
0xc186:	jne	0xc140
		Instruction group(s): [7, 1] 

0xc188:	mov	r15, qword ptr [rbx + 0x18]
0xc18c:	test	r15, r15
0xc18f:	je	0xc660
		Instruction group(s): [7, 1] 

0xc195:	mov	rax, qword ptr [rbp - 0x98]
0xc19c:	mov	qword ptr [rbp - 0xa0], rax
0xc1a3:	jmp	0xc1b4
		Instruction group(s): [7, 1] 

0xc1a5:	nop	dword ptr [rax]
0xc1a8:	mov	r15, qword ptr [r15]
0xc1ab:	test	r15, r15
0xc1ae:	je	0xc248
		Instruction group(s): [7, 1] 

0xc1b4:	test	byte ptr [r15 + 0x21], 4
0xc1b9:	jne	0xc1a8
		Instruction group(s): [7, 1] 

0xc1bb:	mov	rsi, r15
0xc1be:	mov	rdi, r12
0xc1c1:	call	0x29600
		Instruction group(s): [2, 7, 145] 

0xc1c6:	cmp	rax, r15
0xc1c9:	jne	0xc1a8
		Instruction group(s): [7, 1] 

0xc1cb:	mov	r14, qword ptr [r15 + 8]
0xc1cf:	test	r14, r14
0xc1d2:	je	0xc418
		Instruction group(s): [7, 1] 

0xc1d8:	mov	rdi, r14
0xc1db:	call	0xae90
		Instruction group(s): [2, 7, 145] 

0xc1e0:	test	eax, eax
0xc1e2:	je	0xc3e8
		Instruction group(s): [7, 1] 

0xc1e8:	mov	rdi, r14
0xc1eb:	mov	esi, 0x28
0xc1f0:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0xc1f5:	lea	r14, [rax + 1]
0xc1f9:	mov	rdi, r14
0xc1fc:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xc201:	sub	eax, 1
0xc204:	test	byte ptr [r15 + 0x21], 1
0xc209:	mov	r8d, eax
0xc20c:	mov	rsi, r14
0xc20f:	mov	rdx, r8
0xc212:	mov	qword ptr [rbp - 0xb0], r8
0xc219:	je	0xc368
		Instruction group(s): [7, 1] 

0xc21f:	mov	rdi, r13
0xc222:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0xc227:	mov	r8, qword ptr [rbp - 0xb0]
0xc22e:	add	r8, r13
0xc231:	mov	byte ptr [r8], 0x20
0xc235:	mov	r15, qword ptr [r15]
0xc238:	lea	r13, [r8 + 1]
0xc23c:	test	r15, r15
0xc23f:	jne	0xc1b4
		Instruction group(s): [7, 1] 

0xc245:	nop	dword ptr [rax]
0xc248:	mov	rdx, qword ptr [rbp - 0xa0]
0xc24f:	mov	rax, qword ptr [rbp - 0x98]
0xc256:	cmp	rdx, rax
0xc259:	seta	al
0xc25c:	movzx	eax, al
0xc25f:	sub	rdx, rax
0xc262:	mov	r15, rdx
0xc265:	xor	esi, esi
0xc267:	mov	rdi, r12
0xc26a:	call	0x29900
		Instruction group(s): [2, 7, 145] 

0xc26f:	mov	byte ptr [r15], 0
0xc273:	mov	rax, qword ptr [rbx + 0x50]
0xc277:	sub	rsp, 8
0xc27b:	mov	rdx, qword ptr [rbp - 0x98]
0xc282:	push	0
		Instruction group(s): [145] 

0xc284:	lea	rdi, [rip + 0x1e035]
0xc28b:	xor	r8d, r8d
0xc28e:	mov	ecx, 6
0xc293:	mov	esi, 1
0xc298:	mov	r9, qword ptr [rax + 8]
0xc29c:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0xc2a1:	mov	rdx, qword ptr [rip + 0x229c00]
0xc2a8:	mov	rsi, qword ptr [rbp - 0xa8]
0xc2af:	xor	eax, eax
0xc2b1:	lea	rdi, [rip + 0x1fc32]
0xc2b8:	mov	ecx, 6
0xc2bd:	cmp	rdx, rsi
0xc2c0:	setb	al
0xc2c3:	xor	r8d, r8d
0xc2c6:	sub	rsi, rax
0xc2c9:	mov	byte ptr [rsi], 0
0xc2cc:	mov	rax, qword ptr [rbx + 0x50]
0xc2d0:	mov	esi, 1
0xc2d5:	mov	qword ptr [rsp], 0
0xc2dd:	mov	r9, qword ptr [rax + 8]
0xc2e1:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0xc2e6:	mov	rdx, qword ptr [rip + 0x229bab]
0xc2ed:	xor	eax, eax
0xc2ef:	lea	rdi, [rip + 0x1dcb0]
0xc2f6:	mov	ecx, 6
0xc2fb:	mov	esi, 1
0xc300:	cmp	rdx, r13
0xc303:	setb	al
0xc306:	xor	r8d, r8d
0xc309:	sub	r13, rax
0xc30c:	mov	byte ptr [r13], 0
0xc311:	mov	rax, qword ptr [rbx + 0x50]
0xc315:	mov	qword ptr [rsp], 0
0xc31d:	mov	r9, qword ptr [rax + 8]
0xc321:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0xc326:	mov	rax, qword ptr [rbp - 0x38]
0xc32a:	xor	rax, qword ptr fs:[0x28]
0xc333:	jne	0xc6b7
		Instruction group(s): [7, 1] 

0xc339:	lea	rsp, [rbp - 0x28]
0xc33d:	pop	rbx
		Instruction group(s): [145] 

0xc33e:	pop	r12
		Instruction group(s): [145] 

0xc340:	pop	r13
		Instruction group(s): [145] 

0xc342:	pop	r14
		Instruction group(s): [145] 

0xc344:	pop	r15
		Instruction group(s): [145] 

0xc346:	pop	rbp
		Instruction group(s): [145] 

0xc347:	ret	
		Instruction group(s): [3, 145] 

0xc348:	nop	dword ptr [rax + rax]
0xc350:	mov	rdx, rax
0xc353:	mov	rsi, r15
0xc356:	mov	rdi, r12
0xc359:	call	0x29630
		Instruction group(s): [2, 7, 145] 

0xc35e:	jmp	0xc180
		Instruction group(s): [7, 1] 

0xc363:	nop	dword ptr [rax + rax]
0xc368:	mov	rdi, qword ptr [rbp - 0xa0]
0xc36f:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0xc374:	mov	rax, qword ptr [rbp - 0xa0]
0xc37b:	mov	r8, qword ptr [rbp - 0xb0]
0xc382:	add	rax, r8
0xc385:	mov	byte ptr [rax], 0x20
0xc388:	cmp	byte ptr [r15 + 0x20], 0
0xc38d:	lea	rdx, [rax + 1]
0xc391:	mov	qword ptr [rbp - 0xa0], rdx
0xc398:	jne	0xc3a8
		Instruction group(s): [7, 1] 

0xc39a:	mov	edx, dword ptr [rip + 0x22a00c]
0xc3a0:	test	edx, edx
0xc3a2:	je	0xc1a8
		Instruction group(s): [7, 1] 

0xc3a8:	mov	rsi, r14
0xc3ab:	mov	r14, qword ptr [rbp - 0xa8]
0xc3b2:	mov	rdx, r8
0xc3b5:	mov	qword ptr [rbp - 0xb0], r8
0xc3bc:	mov	rdi, r14
0xc3bf:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0xc3c4:	mov	r8, qword ptr [rbp - 0xb0]
0xc3cb:	add	r8, r14
0xc3ce:	lea	rax, [r8 + 1]
0xc3d2:	mov	qword ptr [rbp - 0xa8], rax
0xc3d9:	mov	byte ptr [r8], 0x20
0xc3dd:	jmp	0xc1a8
		Instruction group(s): [7, 1] 

0xc3e2:	nop	word ptr [rax + rax]
0xc3e8:	mov	rdi, r14
0xc3eb:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xc3f0:	jmp	0xc204
		Instruction group(s): [7, 1] 

0xc3f5:	nop	dword ptr [rax]
0xc3f8:	mov	rax, qword ptr [r13 + 0x18]
0xc3fc:	mov	rdi, qword ptr [rax]
0xc3ff:	jmp	0xbf5e
		Instruction group(s): [7, 1] 

0xc404:	nop	dword ptr [rax]
0xc408:	mov	rax, qword ptr [r13 + 0x18]
0xc40c:	mov	rdi, qword ptr [rax]
0xc40f:	jmp	0xbf31
		Instruction group(s): [7, 1] 

0xc414:	nop	dword ptr [rax]
0xc418:	mov	rax, qword ptr [r15 + 0x18]
0xc41c:	mov	r14, qword ptr [rax]
0xc41f:	jmp	0xc1d8
		Instruction group(s): [7, 1] 

0xc424:	nop	dword ptr [rax]
0xc428:	mov	r15d, 1
0xc42e:	cmp	dword ptr [rip + 0x229a8b], r15d
0xc435:	mov	dword ptr [rbp - 0xa8], 2
0xc43f:	mov	r13, qword ptr [rip + 0x229a72]
0xc446:	jae	0xc038
		Instruction group(s): [7, 1] 

0xc44c:	mov	rdi, r13
0xc44f:	mov	esi, r15d
0xc452:	mov	dword ptr [rip + 0x229a67], r15d
0xc459:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0xc45e:	mov	r14, qword ptr [rbx + 0x18]
0xc462:	mov	r13, rax
0xc465:	mov	qword ptr [rip + 0x229a4c], rax
0xc46c:	test	r14, r14
0xc46f:	jne	0xc038
		Instruction group(s): [7, 1] 

0xc475:	mov	rdx, rax
0xc478:	xor	eax, eax
0xc47a:	jmp	0xc092
		Instruction group(s): [7, 1] 

0xc47f:	nop	
0xc480:	mov	r15, qword ptr [rbx]
0xc483:	mov	esi, 0x28
0xc488:	mov	rdi, r15
0xc48b:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0xc490:	mov	r14, rax
0xc493:	mov	r13, rax
0xc496:	mov	rsi, r15
0xc499:	sub	r14, r15
0xc49c:	lea	rax, [r14 + 0x1f]
0xc4a0:	mov	rdx, r14
0xc4a3:	and	rax, 0xfffffffffffffff0
0xc4a7:	sub	rsp, rax
0xc4aa:	lea	r12, [rsp + 0xf]
0xc4af:	and	r12, 0xfffffffffffffff0
0xc4b3:	mov	rdi, r12
0xc4b6:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0xc4bb:	mov	byte ptr [r12 + r14], 0
0xc4c0:	lea	r14, [r13 + 1]
0xc4c4:	mov	rdi, r14
0xc4c7:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xc4cc:	mov	edx, eax
0xc4ce:	lea	r15d, [rax - 1]
		Instruction group(s): [145] 

0xc4d2:	mov	rsi, r14
0xc4d5:	add	rdx, 0x1e
0xc4d9:	shr	rdx, 4
0xc4dd:	shl	rdx, 4
0xc4e1:	sub	rsp, rdx
0xc4e4:	mov	rdx, r15
0xc4e7:	lea	r13, [rsp + 0xf]
0xc4ec:	and	r13, 0xfffffffffffffff0
0xc4f0:	mov	rdi, r13
0xc4f3:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0xc4f8:	mov	r14, qword ptr [rbx + 0x28]
0xc4fc:	mov	byte ptr [r13 + r15], 0
0xc502:	test	r14, r14
0xc505:	jne	0xbdfd
		Instruction group(s): [7, 1] 

0xc50b:	mov	rdi, qword ptr [rbx]
0xc50e:	call	0xae90
		Instruction group(s): [2, 7, 145] 

0xc513:	test	eax, eax
0xc515:	je	0xc680
		Instruction group(s): [7, 1] 

0xc51b:	mov	rdi, qword ptr [rbx]
0xc51e:	mov	esi, 0x28
0xc523:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0xc528:	add	rax, 1
0xc52c:	mov	rdi, rax
0xc52f:	mov	qword ptr [rbp - 0xa8], rax
0xc536:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xc53b:	sub	eax, 1
0xc53e:	mov	dword ptr [rbp - 0x98], eax
0xc544:	lea	rdi, [rip + 0x1da51]
0xc54b:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0xc550:	mov	rdi, rax
0xc553:	call	0xf1a0
		Instruction group(s): [2, 7, 145] 

0xc558:	mov	r15, qword ptr [rax + 0x18]
0xc55c:	test	r15, r15
0xc55f:	jne	0xc5b9
		Instruction group(s): [7, 1] 

0xc561:	jmp	0xc670
		Instruction group(s): [7, 1] 

0xc566:	nop	word ptr cs:[rax + rax]
0xc570:	mov	rdi, r14
0xc573:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xc578:	mov	esi, dword ptr [rbp - 0x98]
0xc57e:	cmp	esi, eax
0xc580:	jbe	0xc5ad
		Instruction group(s): [7, 1] 

0xc582:	mov	ecx, esi
0xc584:	mov	edx, eax
0xc586:	mov	rdi, r14
0xc589:	sub	ecx, eax
0xc58b:	mov	esi, ecx
0xc58d:	add	rsi, qword ptr [rbp - 0xa8]
0xc594:	mov	dword ptr [rbp - 0xa0], ecx
0xc59a:	call	0x86a0
		Instruction group(s): [2, 7, 145] 

0xc59f:	test	eax, eax
0xc5a1:	mov	ecx, dword ptr [rbp - 0xa0]
0xc5a7:	je	0xc69d
		Instruction group(s): [7, 1] 

0xc5ad:	mov	r15, qword ptr [r15]
0xc5b0:	test	r15, r15
0xc5b3:	je	0xc670
		Instruction group(s): [7, 1] 

0xc5b9:	mov	r14, qword ptr [r15 + 8]
0xc5bd:	test	r14, r14
0xc5c0:	jne	0xc570
		Instruction group(s): [7, 1] 

0xc5c2:	mov	rax, qword ptr [r15 + 0x18]
0xc5c6:	mov	r14, qword ptr [rax]
0xc5c9:	jmp	0xc570
		Instruction group(s): [7, 1] 

0xc5cb:	nop	dword ptr [rax + rax]
0xc5d0:	mov	rdi, r13
0xc5d3:	mov	esi, r12d
0xc5d6:	mov	dword ptr [rip + 0x2298c3], r12d
0xc5dd:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0xc5e2:	mov	r13, rax
0xc5e5:	mov	qword ptr [rip + 0x2298ac], rax
0xc5ec:	jmp	0xc103
		Instruction group(s): [7, 1] 

0xc5f1:	nop	dword ptr [rax]
0xc5f8:	mov	eax, dword ptr [rbp - 0xa8]
0xc5fe:	mov	rdi, qword ptr [rip + 0x2298a3]
0xc605:	mov	esi, eax
0xc607:	mov	dword ptr [rip + 0x2298a3], eax
0xc60d:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0xc612:	mov	qword ptr [rbp - 0xa8], rax
0xc619:	mov	qword ptr [rip + 0x229888], rax
0xc620:	jmp	0xc0ef
		Instruction group(s): [7, 1] 

0xc625:	nop	dword ptr [rax]
0xc628:	mov	eax, dword ptr [rip + 0x229892]
0xc62e:	mov	r13, qword ptr [rip + 0x229883]
0xc635:	test	eax, eax
0xc637:	je	0xc6bc
		Instruction group(s): [7, 1] 

0xc63d:	mov	rdx, r13
0xc640:	mov	r12d, 1
0xc646:	xor	eax, eax
0xc648:	mov	dword ptr [rbp - 0xa8], 2
0xc652:	jmp	0xc092
		Instruction group(s): [7, 1] 

0xc657:	nop	word ptr [rax + rax]
0xc660:	mov	r15, qword ptr [rbp - 0x98]
0xc667:	jmp	0xc265
		Instruction group(s): [7, 1] 

0xc66c:	nop	dword ptr [rax]
0xc670:	lea	r14, [rip + 0x21356]
0xc677:	mov	qword ptr [rbx + 0x28], r14
0xc67b:	jmp	0xbdfd
		Instruction group(s): [7, 1] 

0xc680:	mov	rax, qword ptr [rbx]
0xc683:	mov	rdi, rax
0xc686:	mov	qword ptr [rbp - 0xa8], rax
0xc68d:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xc692:	mov	dword ptr [rbp - 0x98], eax
0xc698:	jmp	0xc544
		Instruction group(s): [7, 1] 

0xc69d:	mov	rdi, qword ptr [rbp - 0xa8]
0xc6a4:	mov	esi, ecx
0xc6a6:	call	0x26050
		Instruction group(s): [2, 7, 145] 

0xc6ab:	mov	r14, rax
0xc6ae:	mov	qword ptr [rbx + 0x28], rax
0xc6b2:	jmp	0xbdfd
		Instruction group(s): [7, 1] 

0xc6b7:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0xc6bc:	mov	dword ptr [rbp - 0xa8], 2
0xc6c6:	mov	r12d, 1
0xc6cc:	mov	r15d, 1
0xc6d2:	jmp	0xc44c
		Instruction group(s): [7, 1] 

0xc6d7:	nop	word ptr [rax + rax]
0xc6e0:	test	rdi, rdi
0xc6e3:	je	0xc6ec
		Instruction group(s): [7, 1] 

0xc6e5:	cmp	qword ptr [rdi + 0x18], 0
0xc6ea:	je	0xc6ee
		Instruction group(s): [7, 1] 

0xc6ec:	ret	
		Instruction group(s): [3, 145] 

0xc6ee:	push	r15
		Instruction group(s): [145] 

0xc6f0:	push	r14
		Instruction group(s): [145] 

0xc6f2:	push	r13
		Instruction group(s): [145] 

0xc6f4:	push	r12
		Instruction group(s): [145] 

0xc6f6:	push	rbp
		Instruction group(s): [145] 

0xc6f7:	push	rbx
		Instruction group(s): [145] 

0xc6f8:	mov	rbx, rdi
0xc6fb:	sub	rsp, 0x18
0xc6ff:	mov	edx, dword ptr [rip + 0x22ce67]
0xc705:	test	edx, edx
0xc707:	jne	0xc7a4
		Instruction group(s): [7, 1] 

0xc70d:	mov	edi, 0x28
0xc712:	xor	r14d, r14d
0xc715:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0xc71a:	mov	r13, qword ptr [rbx + 0x10]
0xc71e:	mov	r12, rax
0xc721:	mov	dword ptr [rsp], 5
0xc728:	movzx	eax, byte ptr [r13]
0xc72d:	test	al, al
0xc72f:	je	0xc99f
		Instruction group(s): [7, 1] 

0xc735:	lea	rbp, [r13 - 1]
0xc739:	mov	rdi, r13
0xc73c:	nop	dword ptr [rax]
0xc740:	mov	esi, 0xa
0xc745:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0xc74a:	test	rax, rax
0xc74d:	mov	r15, rax
0xc750:	je	0xc8c3
		Instruction group(s): [7, 1] 

0xc756:	cmp	r13, rax
0xc759:	jae	0xc8d0
		Instruction group(s): [7, 1] 

0xc75f:	cmp	byte ptr [rax - 1], 0x5c
0xc763:	jne	0xc8d0
		Instruction group(s): [7, 1] 

0xc769:	lea	rax, [rax - 2]
0xc76d:	cmp	r13, rax
0xc770:	ja	0xc79e
		Instruction group(s): [7, 1] 

0xc772:	cmp	byte ptr [r15 - 2], 0x5c
0xc777:	jne	0xc79e
		Instruction group(s): [7, 1] 

0xc779:	mov	edx, 1
0xc77e:	jmp	0xc787
		Instruction group(s): [7, 1] 

0xc780:	cmp	byte ptr [rax], 0x5c
0xc783:	jne	0xc795
		Instruction group(s): [7, 1] 

0xc785:	mov	edx, ecx
0xc787:	mov	ecx, edx
0xc789:	sub	rax, 1
0xc78d:	xor	ecx, 1
0xc790:	cmp	rax, rbp
0xc793:	jne	0xc780
		Instruction group(s): [7, 1] 

0xc795:	cmp	edx, 1
0xc798:	je	0xc8d0
		Instruction group(s): [7, 1] 

0xc79e:	lea	rdi, [r15 + 1]
0xc7a2:	jmp	0xc740
		Instruction group(s): [7, 1] 

0xc7a4:	mov	rdi, qword ptr [rdi + 0x10]
0xc7a8:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xc7ad:	mov	edi, 8
0xc7b2:	mov	rbp, rax
0xc7b5:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0xc7ba:	mov	rdi, qword ptr [rbx + 0x10]
0xc7be:	mov	r12, rax
0xc7c1:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0xc7c6:	test	ebp, ebp
0xc7c8:	mov	qword ptr [r12], rax
0xc7cc:	jle	0xc7de
		Instruction group(s): [7, 1] 

0xc7ce:	movsxd	rbp, ebp
		Instruction group(s): [145] 

0xc7d1:	lea	rax, [rax + rbp - 1]
0xc7d6:	cmp	byte ptr [rax], 0xa
0xc7d9:	jne	0xc7de
		Instruction group(s): [7, 1] 

0xc7db:	mov	byte ptr [rax], 0
0xc7de:	and	byte ptr [rbx + 0x2b], 0xfe
0xc7e2:	mov	eax, 1
0xc7e7:	mov	qword ptr [rbx + 0x18], r12
0xc7eb:	mov	word ptr [rbx + 0x28], ax
0xc7ef:	mov	edi, 1
0xc7f4:	mov	ebp, 1
0xc7f9:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0xc7fe:	mov	r15, rax
0xc801:	mov	qword ptr [rbx + 0x20], rax
0xc805:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0xc80a:	xor	r14d, r14d
0xc80d:	mov	r13, rax
0xc810:	mov	rdi, qword ptr [r13]
0xc814:	mov	rdx, qword ptr [r12 + r14*8]
0xc818:	xor	ecx, ecx
0xc81a:	jmp	0xc82e
		Instruction group(s): [7, 1] 

0xc81c:	nop	dword ptr [rax]
0xc820:	mov	esi, ecx
0xc822:	or	esi, 1
0xc825:	cmp	al, 0x2b
0xc827:	cmove	ecx, esi
		Instruction group(s): [137] 

0xc82a:	add	rdx, 1
0xc82e:	movsx	rsi, byte ptr [rdx]
0xc832:	test	byte ptr [rdi + rsi*2], 1
0xc836:	mov	rax, rsi
0xc839:	jne	0xc850
		Instruction group(s): [7, 1] 

0xc83b:	cmp	sil, 0x2d
0xc83f:	je	0xc860
		Instruction group(s): [7, 1] 

0xc841:	cmp	sil, 0x40
0xc845:	je	0xc850
		Instruction group(s): [7, 1] 

0xc847:	cmp	sil, 0x2b
0xc84b:	jne	0xc868
		Instruction group(s): [7, 1] 

0xc84d:	nop	dword ptr [rax]
0xc850:	cmp	al, 0x2d
0xc852:	je	0xc860
		Instruction group(s): [7, 1] 

0xc854:	cmp	al, 0x40
0xc856:	jne	0xc820
		Instruction group(s): [7, 1] 

0xc858:	or	ecx, 2
0xc85b:	jmp	0xc82a
		Instruction group(s): [7, 1] 

0xc85d:	nop	dword ptr [rax]
0xc860:	or	ecx, 4
0xc863:	jmp	0xc82a
		Instruction group(s): [7, 1] 

0xc865:	nop	dword ptr [rax]
0xc868:	test	cl, 1
0xc86b:	jne	0xc898
		Instruction group(s): [7, 1] 

0xc86d:	lea	rsi, [rip + 0x1d734]
0xc874:	mov	rdi, rdx
0xc877:	mov	dword ptr [rsp + 0xc], ecx
0xc87b:	mov	qword ptr [rsp], rdx
0xc87f:	call	0x8d10
		Instruction group(s): [2, 7, 145] 

0xc884:	test	rax, rax
0xc887:	mov	rdx, qword ptr [rsp]
0xc88b:	mov	ecx, dword ptr [rsp + 0xc]
0xc88f:	je	0xc95e
		Instruction group(s): [7, 1] 

0xc895:	or	ecx, 1
0xc898:	mov	byte ptr [r15 + r14], cl
0xc89c:	movzx	eax, byte ptr [rbx + 0x2b]
0xc8a0:	add	r14, 1
0xc8a4:	or	ecx, eax
0xc8a6:	and	eax, 0xfffffffe
0xc8a9:	and	ecx, 1
0xc8ac:	or	ecx, eax
0xc8ae:	cmp	ebp, r14d
0xc8b1:	mov	byte ptr [rbx + 0x2b], cl
0xc8b4:	jbe	0xc93e
		Instruction group(s): [7, 1] 

0xc8ba:	mov	r15, qword ptr [rbx + 0x20]
0xc8be:	jmp	0xc810
		Instruction group(s): [7, 1] 

0xc8c3:	mov	rdi, r13
0xc8c6:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xc8cb:	lea	r15, [r13 + rax]
0xc8d0:	cmp	dword ptr [rsp], r14d
0xc8d4:	je	0xc981
		Instruction group(s): [7, 1] 

0xc8da:	lea	ebp, [r14 + 1]
		Instruction group(s): [145] 

0xc8de:	mov	rsi, r15
0xc8e1:	lea	r14, [r12 + r14*8]
0xc8e5:	sub	rsi, r13
0xc8e8:	mov	rdi, r13
0xc8eb:	call	0x1bae0
		Instruction group(s): [2, 7, 145] 

0xc8f0:	mov	qword ptr [r14], rax
0xc8f3:	cmp	byte ptr [r15], 0
0xc8f7:	jne	0xc94d
		Instruction group(s): [7, 1] 

0xc8f9:	cmp	ebp, dword ptr [rsp]
0xc8fc:	je	0xc910
		Instruction group(s): [7, 1] 

0xc8fe:	lea	esi, [rbp*8]
		Instruction group(s): [145] 

0xc905:	mov	rdi, r12
0xc908:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0xc90d:	mov	r12, rax
0xc910:	cmp	ebp, 0xffff
0xc916:	ja	0xc9a7
		Instruction group(s): [7, 1] 

0xc91c:	and	byte ptr [rbx + 0x2b], 0xfe
0xc920:	mov	word ptr [rbx + 0x28], bp
0xc924:	mov	edi, ebp
0xc926:	mov	qword ptr [rbx + 0x18], r12
0xc92a:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0xc92f:	test	ebp, ebp
0xc931:	mov	r15, rax
0xc934:	mov	qword ptr [rbx + 0x20], rax
0xc938:	jne	0xc805
		Instruction group(s): [7, 1] 

0xc93e:	add	rsp, 0x18
0xc942:	pop	rbx
		Instruction group(s): [145] 

0xc943:	pop	rbp
		Instruction group(s): [145] 

0xc944:	pop	r12
		Instruction group(s): [145] 

0xc946:	pop	r13
		Instruction group(s): [145] 

0xc948:	pop	r14
		Instruction group(s): [145] 

0xc94a:	pop	r15
		Instruction group(s): [145] 

0xc94c:	ret	
		Instruction group(s): [3, 145] 

0xc94d:	lea	r13, [r15 + 1]
0xc951:	movzx	eax, byte ptr [r15 + 1]
0xc956:	mov	r14d, ebp
0xc959:	jmp	0xc72d
		Instruction group(s): [7, 1] 

0xc95e:	lea	rsi, [rip + 0x1d64b]
0xc965:	mov	rdi, rdx
0xc968:	mov	dword ptr [rsp], ecx
0xc96b:	call	0x8d10
		Instruction group(s): [2, 7, 145] 

0xc970:	test	rax, rax
0xc973:	mov	ecx, dword ptr [rsp]
0xc976:	jne	0xc895
		Instruction group(s): [7, 1] 

0xc97c:	jmp	0xc898
		Instruction group(s): [7, 1] 

0xc981:	add	dword ptr [rsp], 2
0xc985:	mov	rdi, r12
0xc988:	mov	eax, dword ptr [rsp]
0xc98b:	lea	esi, [rax*8]
		Instruction group(s): [145] 

0xc992:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0xc997:	mov	r12, rax
0xc99a:	jmp	0xc8da
		Instruction group(s): [7, 1] 

0xc99f:	mov	ebp, r14d
0xc9a2:	jmp	0xc8f9
		Instruction group(s): [7, 1] 

0xc9a7:	lea	rsi, [rip + 0x1d592]
0xc9ae:	mov	edx, 5
0xc9b3:	xor	edi, edi
0xc9b5:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xc9ba:	mov	ecx, ebp
0xc9bc:	mov	rdx, rax
0xc9bf:	mov	esi, 0x14
0xc9c4:	mov	rdi, rbx
0xc9c7:	xor	eax, eax
0xc9c9:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0xc9ce:	nop	
0xc9d0:	push	r12
		Instruction group(s): [145] 

0xc9d2:	push	rbp
		Instruction group(s): [145] 

0xc9d3:	mov	r12, rdi
0xc9d6:	push	rbx
		Instruction group(s): [145] 

0xc9d7:	mov	rax, qword ptr [rdi + 0x20]
0xc9db:	mov	rbp, qword ptr [rax + 0x10]
0xc9df:	movzx	ebx, byte ptr [rbp]
0xc9e3:	test	bl, bl
0xc9e5:	je	0xca16
		Instruction group(s): [7, 1] 

0xc9e7:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0xc9ec:	mov	rdx, qword ptr [rax]
0xc9ef:	nop	
0xc9f0:	movzx	eax, bl
0xc9f3:	test	byte ptr [rdx + rax*2 + 1], 0x20
0xc9f8:	jne	0xca0a
		Instruction group(s): [7, 1] 

0xc9fa:	cmp	bl, 0x40
0xc9fd:	setne	cl
0xca00:	cmp	bl, 0x2d
0xca03:	setne	al
0xca06:	test	cl, al
0xca08:	jne	0xca40
		Instruction group(s): [7, 1] 

0xca0a:	add	rbp, 1
0xca0e:	movzx	ebx, byte ptr [rbp]
0xca12:	test	bl, bl
0xca14:	jne	0xc9f0
		Instruction group(s): [7, 1] 

0xca16:	mov	rdi, r12
0xca19:	mov	esi, 2
0xca1e:	call	0x10260
		Instruction group(s): [2, 7, 145] 

0xca23:	pop	rbx
		Instruction group(s): [145] 

0xca24:	and	byte ptr [r12 + 0x84], 0xfc
0xca2d:	mov	rdi, r12
0xca30:	pop	rbp
		Instruction group(s): [145] 

0xca31:	pop	r12
		Instruction group(s): [145] 

0xca33:	jmp	0x22cb0
		Instruction group(s): [7, 1] 

0xca38:	nop	dword ptr [rax + rax]
0xca40:	xor	esi, esi
0xca42:	mov	rdi, r12
0xca45:	call	0x28130
		Instruction group(s): [2, 7, 145] 

0xca4a:	mov	rdi, r12
0xca4d:	call	0xbdb0
		Instruction group(s): [2, 7, 145] 

0xca52:	test	byte ptr [r12 + 0x84], 0x40
0xca5b:	jne	0xca70
		Instruction group(s): [7, 1] 

0xca5d:	pop	rbx
		Instruction group(s): [145] 

0xca5e:	mov	rdi, r12
0xca61:	pop	rbp
		Instruction group(s): [145] 

0xca62:	pop	r12
		Instruction group(s): [145] 

0xca64:	jmp	0x18c40
		Instruction group(s): [7, 1] 

0xca69:	nop	dword ptr [rax]
0xca70:	mov	rdi, qword ptr [r12]
0xca74:	call	0x19a20
		Instruction group(s): [2, 7, 145] 

0xca79:	pop	rbx
		Instruction group(s): [145] 

0xca7a:	mov	rdi, r12
0xca7d:	pop	rbp
		Instruction group(s): [145] 

0xca7e:	pop	r12
		Instruction group(s): [145] 

0xca80:	jmp	0x18c40
		Instruction group(s): [7, 1] 

0xca85:	nop	
0xca86:	nop	word ptr cs:[rax + rax]
0xca90:	push	rbp
		Instruction group(s): [145] 

0xca91:	push	rbx
		Instruction group(s): [145] 

0xca92:	mov	ebp, edi
0xca94:	xor	esi, esi
0xca96:	sub	rsp, 8
0xca9a:	mov	dword ptr [rip + 0x2293ec], 1
0xcaa4:	call	0x89f0
		Instruction group(s): [2, 7, 145] 

0xcaa9:	cmp	ebp, 0xf
0xcaac:	je	0xcb90
		Instruction group(s): [7, 1] 

0xcab2:	lea	eax, [rbp - 1]
		Instruction group(s): [145] 

0xcab5:	cmp	eax, 2
0xcab8:	ja	0xcb7f
		Instruction group(s): [7, 1] 

0xcabe:	mov	rbx, qword ptr [rip + 0x229613]
0xcac5:	test	rbx, rbx
0xcac8:	jne	0xcad8
		Instruction group(s): [7, 1] 

0xcaca:	jmp	0xcb1e
		Instruction group(s): [7, 1] 

0xcacc:	nop	dword ptr [rax]
0xcad0:	mov	rbx, qword ptr [rbx]
0xcad3:	test	rbx, rbx
0xcad6:	je	0xcaf0
		Instruction group(s): [7, 1] 

0xcad8:	test	byte ptr [rbx + 0x44], 1
0xcadc:	je	0xcad0
		Instruction group(s): [7, 1] 

0xcade:	mov	edi, dword ptr [rbx + 0x40]
0xcae1:	mov	esi, ebp
0xcae3:	call	0x29ce0
		Instruction group(s): [2, 7, 145] 

0xcae8:	mov	rbx, qword ptr [rbx]
0xcaeb:	test	rbx, rbx
0xcaee:	jne	0xcad8
		Instruction group(s): [7, 1] 

0xcaf0:	mov	rbx, qword ptr [rip + 0x2295e1]
0xcaf7:	test	rbx, rbx
0xcafa:	jne	0xcb08
		Instruction group(s): [7, 1] 

0xcafc:	jmp	0xcb1e
		Instruction group(s): [7, 1] 

0xcafe:	nop	
0xcb00:	mov	rbx, qword ptr [rbx]
0xcb03:	test	rbx, rbx
0xcb06:	je	0xcb1e
		Instruction group(s): [7, 1] 

0xcb08:	test	byte ptr [rbx + 0x44], 8
0xcb0c:	jne	0xcb00
		Instruction group(s): [7, 1] 

0xcb0e:	mov	rdi, rbx
0xcb11:	call	0xbd60
		Instruction group(s): [2, 7, 145] 

0xcb16:	mov	rbx, qword ptr [rbx]
0xcb19:	test	rbx, rbx
0xcb1c:	jne	0xcb08
		Instruction group(s): [7, 1] 

0xcb1e:	mov	ecx, dword ptr [rip + 0x2295ac]
0xcb24:	test	ecx, ecx
0xcb26:	je	0xcb46
		Instruction group(s): [7, 1] 

0xcb28:	nop	dword ptr [rax + rax]
0xcb30:	xor	esi, esi
0xcb32:	mov	edi, 1
0xcb37:	call	0x17ed0
		Instruction group(s): [2, 7, 145] 

0xcb3c:	mov	edx, dword ptr [rip + 0x22958e]
0xcb42:	test	edx, edx
0xcb44:	jne	0xcb30
		Instruction group(s): [7, 1] 

0xcb46:	mov	edi, 1
0xcb4b:	call	0xf740
		Instruction group(s): [2, 7, 145] 

0xcb50:	cmp	ebp, 3
0xcb53:	je	0xcbcd
		Instruction group(s): [7, 1] 

0xcb55:	call	0x8780
		Instruction group(s): [2, 7, 145] 

0xcb5a:	mov	esi, ebp
0xcb5c:	mov	edi, eax
0xcb5e:	call	0x8a50
		Instruction group(s): [2, 7, 145] 

0xcb63:	test	eax, eax
0xcb65:	js	0xcbc1
		Instruction group(s): [7, 1] 

0xcb67:	add	rsp, 8
0xcb6b:	pop	rbx
		Instruction group(s): [145] 

0xcb6c:	pop	rbp
		Instruction group(s): [145] 

0xcb6d:	ret	
		Instruction group(s): [3, 145] 

0xcb6e:	nop	
0xcb70:	mov	esi, 1
0xcb75:	mov	edi, 1
0xcb7a:	call	0x17ed0
		Instruction group(s): [2, 7, 145] 

0xcb7f:	mov	eax, dword ptr [rip + 0x22954b]
0xcb85:	test	eax, eax
0xcb87:	jne	0xcb70
		Instruction group(s): [7, 1] 

0xcb89:	jmp	0xcb46
		Instruction group(s): [7, 1] 

0xcb8b:	nop	dword ptr [rax + rax]
0xcb90:	mov	rbx, qword ptr [rip + 0x229541]
0xcb97:	test	rbx, rbx
0xcb9a:	jne	0xcbac
		Instruction group(s): [7, 1] 

0xcb9c:	jmp	0xcb1e
		Instruction group(s): [7, 1] 

0xcb9e:	nop	
0xcba0:	mov	rbx, qword ptr [rbx]
0xcba3:	test	rbx, rbx
0xcba6:	je	0xcabe
		Instruction group(s): [7, 1] 

0xcbac:	test	byte ptr [rbx + 0x44], 1
0xcbb0:	jne	0xcba0
		Instruction group(s): [7, 1] 

0xcbb2:	mov	edi, dword ptr [rbx + 0x40]
0xcbb5:	mov	esi, 0xf
0xcbba:	call	0x8a50
		Instruction group(s): [2, 7, 145] 

0xcbbf:	jmp	0xcba0
		Instruction group(s): [7, 1] 

0xcbc1:	lea	rdi, [rip + 0x1d3f0]
0xcbc8:	call	0x1c790
		Instruction group(s): [2, 7, 145] 

0xcbcd:	mov	edi, 1
0xcbd2:	call	0x8c70
		Instruction group(s): [2, 7, 145] 

0xcbd7:	nop	word ptr [rax + rax]
0xcbe0:	test	byte ptr [rdi + 0x44], 8
0xcbe4:	je	0xcbf0
		Instruction group(s): [7, 1] 

0xcbe6:	ret	
		Instruction group(s): [3, 145] 

0xcbe8:	nop	dword ptr [rax + rax]
0xcbf0:	jmp	0xbd60
		Instruction group(s): [7, 1] 

0xcbf5:	nop	
0xcbf6:	nop	word ptr cs:[rax + rax]
0xcc00:	push	r12
		Instruction group(s): [145] 

0xcc02:	push	rbp
		Instruction group(s): [145] 

0xcc03:	lea	rsi, [rip + 0x1d3b3]
0xcc0a:	mov	rbp, qword ptr [rip + 0x22920f]
0xcc11:	push	rbx
		Instruction group(s): [145] 

0xcc12:	mov	edx, 5
0xcc17:	mov	rbx, rdi
0xcc1a:	xor	edi, edi
0xcc1c:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xcc21:	mov	rsi, rbp
0xcc24:	mov	rdi, rax
0xcc27:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0xcc2c:	mov	rbp, qword ptr [rbx]
0xcc2f:	test	rbp, rbp
0xcc32:	je	0xcce3
		Instruction group(s): [7, 1] 

0xcc38:	mov	r12, qword ptr [rbx + 8]
0xcc3c:	lea	rsi, [rip + 0x1d39c]
0xcc43:	mov	edx, 5
0xcc48:	xor	edi, edi
0xcc4a:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xcc4f:	mov	rcx, r12
0xcc52:	mov	rsi, rax
0xcc55:	mov	rdx, rbp
0xcc58:	mov	edi, 1
0xcc5d:	xor	eax, eax
0xcc5f:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0xcc64:	mov	r8, qword ptr [rbx + 0x10]
0xcc68:	movzx	eax, byte ptr [r8]
0xcc6c:	test	al, al
0xcc6e:	je	0xccde
		Instruction group(s): [7, 1] 

0xcc70:	mov	rbx, r8
0xcc73:	xor	edx, edx
0xcc75:	jmp	0xcc95
		Instruction group(s): [7, 1] 

0xcc77:	nop	word ptr [rax + rax]
0xcc80:	cmp	al, 0x5c
0xcc82:	sete	al
0xcc85:	xor	edx, 1
0xcc88:	add	rbx, 1
0xcc8c:	and	edx, eax
0xcc8e:	movzx	eax, byte ptr [rbx]
0xcc91:	test	al, al
0xcc93:	je	0xccaa
		Instruction group(s): [7, 1] 

0xcc95:	cmp	al, 0xa
0xcc97:	jne	0xcc80
		Instruction group(s): [7, 1] 

0xcc99:	test	edx, edx
0xcc9b:	je	0xccaa
		Instruction group(s): [7, 1] 

0xcc9d:	add	rbx, 1
0xcca1:	movzx	eax, byte ptr [rbx]
0xcca4:	xor	edx, edx
0xcca6:	test	al, al
0xcca8:	jne	0xcc95
		Instruction group(s): [7, 1] 

0xccaa:	movsx	edx, byte ptr [rip + 0x229057]
0xccb1:	mov	ecx, ebx
0xccb3:	lea	rsi, [rip + 0x1d33e]
0xccba:	sub	ecx, r8d
0xccbd:	xor	eax, eax
0xccbf:	mov	edi, 1
0xccc4:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0xccc9:	xor	r8d, r8d
0xcccc:	cmp	byte ptr [rbx], 0xa
0xcccf:	sete	r8b
0xccd3:	add	r8, rbx
0xccd6:	movzx	eax, byte ptr [r8]
0xccda:	test	al, al
0xccdc:	jne	0xcc70
		Instruction group(s): [7, 1] 

0xccde:	pop	rbx
		Instruction group(s): [145] 

0xccdf:	pop	rbp
		Instruction group(s): [145] 

0xcce0:	pop	r12
		Instruction group(s): [145] 

0xcce2:	ret	
		Instruction group(s): [3, 145] 

0xcce3:	lea	rsi, [rip + 0x1d2e8]
0xccea:	xor	edi, edi
0xccec:	mov	edx, 5
0xccf1:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xccf6:	mov	rdi, rax
0xccf9:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0xccfe:	jmp	0xcc64
		Instruction group(s): [7, 1] 

0xcd03:	nop	word ptr cs:[rax + rax]
0xcd0d:	nop	dword ptr [rax]
0xcd10:	push	rbx
		Instruction group(s): [145] 

0xcd11:	lea	rdi, [rip + 0x1d284]
0xcd18:	sub	rsp, 0x10
0xcd1c:	mov	rax, qword ptr fs:[0x28]
0xcd25:	mov	qword ptr [rsp + 8], rax
0xcd2a:	xor	eax, eax
0xcd2c:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0xcd31:	mov	rdi, rax
0xcd34:	call	0xf1a0
		Instruction group(s): [2, 7, 145] 

0xcd39:	mov	edi, dword ptr [rip + 0x229699]
0xcd3f:	or	byte ptr [rax + 0x84], 0x10
0xcd46:	mov	qword ptr [rip + 0x22c8bb], rax
0xcd4d:	test	edi, edi
0xcd4f:	jne	0xce00
		Instruction group(s): [7, 1] 

0xcd55:	lea	rax, [rip + 0x2282c4]
0xcd5c:	xor	r8d, r8d
0xcd5f:	xor	ecx, ecx
0xcd61:	mov	rdi, rsp
0xcd64:	mov	edx, 1
0xcd69:	mov	esi, 0x28
0xcd6e:	mov	qword ptr [rsp], rax
0xcd72:	call	0x1f330
		Instruction group(s): [2, 7, 145] 

0xcd77:	mov	rbx, qword ptr [rip + 0x22c88a]
0xcd7e:	xor	esi, esi
0xcd80:	mov	rdi, rax
0xcd83:	call	0xfa80
		Instruction group(s): [2, 7, 145] 

0xcd88:	mov	qword ptr [rbx + 0x18], rax
0xcd8c:	mov	rax, qword ptr [rip + 0x22c875]
0xcd93:	mov	rax, qword ptr [rax + 0x18]
0xcd97:	test	rax, rax
0xcd9a:	je	0xcdb3
		Instruction group(s): [7, 1] 

0xcd9c:	nop	dword ptr [rax]
0xcda0:	mov	rdx, qword ptr [rax + 0x18]
0xcda4:	or	byte ptr [rdx + 0x84], 0x10
0xcdab:	mov	rax, qword ptr [rax]
0xcdae:	test	rax, rax
0xcdb1:	jne	0xcda0
		Instruction group(s): [7, 1] 

0xcdb3:	mov	rax, qword ptr [rip + 0x229016]
0xcdba:	sub	rsp, 8
0xcdbe:	lea	rdx, [rip + 0x22825b]
0xcdc5:	push	0
		Instruction group(s): [145] 

0xcdc7:	lea	rdi, [rip + 0x1d1cf]
0xcdce:	xor	r8d, r8d
0xcdd1:	xor	ecx, ecx
0xcdd3:	mov	esi, 8
0xcdd8:	mov	r9, qword ptr [rax + 8]
0xcddc:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0xcde1:	pop	rax
		Instruction group(s): [145] 

0xcde2:	pop	rdx
		Instruction group(s): [145] 

0xcde3:	mov	rax, qword ptr [rsp + 8]
0xcde8:	xor	rax, qword ptr fs:[0x28]
0xcdf1:	jne	0xce32
		Instruction group(s): [7, 1] 

0xcdf3:	add	rsp, 0x10
0xcdf7:	pop	rbx
		Instruction group(s): [145] 

0xcdf8:	ret	
		Instruction group(s): [3, 145] 

0xcdf9:	nop	dword ptr [rax]
0xce00:	mov	rax, qword ptr [rip + 0x228fc9]
0xce07:	sub	rsp, 8
0xce0b:	lea	rdx, [rip + 0x20bbb]
0xce12:	push	0
		Instruction group(s): [145] 

0xce14:	lea	rdi, [rip + 0x1d182]
0xce1b:	xor	ecx, ecx
0xce1d:	mov	esi, 8
0xce22:	xor	r8d, r8d
0xce25:	mov	r9, qword ptr [rax + 8]
0xce29:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0xce2e:	pop	rcx
		Instruction group(s): [145] 

0xce2f:	pop	rsi
		Instruction group(s): [145] 

0xce30:	jmp	0xcde3
		Instruction group(s): [7, 1] 

0xce32:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0xce37:	nop	word ptr [rax + rax]
0xce40:	mov	eax, dword ptr [rip + 0x229592]
0xce46:	test	eax, eax
0xce48:	jne	0xced0
		Instruction group(s): [7, 1] 

0xce4e:	mov	rdi, qword ptr [rip + 0x22868b]
0xce55:	test	rdi, rdi
0xce58:	je	0xced0
		Instruction group(s): [7, 1] 

0xce5a:	push	r12
		Instruction group(s): [145] 

0xce5c:	push	rbp
		Instruction group(s): [145] 

0xce5d:	lea	rbp, [rip + 0x22867c]
0xce64:	push	rbx
		Instruction group(s): [145] 

0xce65:	nop	dword ptr [rax]
0xce68:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0xce6d:	mov	rdi, rax
0xce70:	add	rbp, 0x10
0xce74:	call	0xf1a0
		Instruction group(s): [2, 7, 145] 

0xce79:	mov	edi, 0x30
0xce7e:	mov	rbx, rax
0xce81:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0xce86:	mov	qword ptr [rbx + 0x20], rax
0xce8a:	mov	qword ptr [rax], 0
0xce91:	mov	r12, rax
0xce94:	mov	rdi, qword ptr [rbp - 8]
0xce98:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0xce9d:	mov	qword ptr [r12 + 0x10], rax
0xcea2:	mov	rax, qword ptr [rbx + 0x20]
0xcea6:	mov	byte ptr [rax + 0x2a], 9
0xceaa:	mov	qword ptr [rax + 0x18], 0
0xceb2:	or	byte ptr [rbx + 0x84], 0x10
0xceb9:	mov	rdi, qword ptr [rbp]
0xcebd:	test	rdi, rdi
0xcec0:	jne	0xce68
		Instruction group(s): [7, 1] 

0xcec2:	pop	rbx
		Instruction group(s): [145] 

0xcec3:	pop	rbp
		Instruction group(s): [145] 

0xcec4:	pop	r12
		Instruction group(s): [145] 

0xcec6:	ret	
		Instruction group(s): [3, 145] 

0xcec7:	nop	word ptr [rax + rax]
0xced0:	ret	
		Instruction group(s): [3, 145] 

0xced2:	nop	dword ptr [rax]
0xced6:	nop	word ptr cs:[rax + rax]
0xcee0:	mov	eax, dword ptr [rip + 0x2294f2]
0xcee6:	test	eax, eax
0xcee8:	jne	0xcf48
		Instruction group(s): [7, 1] 

0xceea:	cmp	qword ptr [rip + 0x2289ae], 0
0xcef2:	push	rbx
		Instruction group(s): [145] 

0xcef3:	je	0xcf14
		Instruction group(s): [7, 1] 

0xcef5:	lea	rbx, [rip + 0x2289a4]
0xcefc:	nop	dword ptr [rax]
0xcf00:	xor	esi, esi
0xcf02:	mov	rdi, rbx
0xcf05:	add	rbx, 0x18
0xcf09:	call	0x25490
		Instruction group(s): [2, 7, 145] 

0xcf0e:	cmp	qword ptr [rbx], 0
0xcf12:	jne	0xcf00
		Instruction group(s): [7, 1] 

0xcf14:	cmp	qword ptr [rip + 0x2288e4], 0
0xcf1c:	je	0xcf3f
		Instruction group(s): [7, 1] 

0xcf1e:	lea	rbx, [rip + 0x2288db]
0xcf25:	nop	dword ptr [rax]
0xcf28:	mov	rdi, rbx
0xcf2b:	mov	esi, 1
0xcf30:	add	rbx, 0x18
0xcf34:	call	0x25490
		Instruction group(s): [2, 7, 145] 

0xcf39:	cmp	qword ptr [rbx], 0
0xcf3d:	jne	0xcf28
		Instruction group(s): [7, 1] 

0xcf3f:	pop	rbx
		Instruction group(s): [145] 

0xcf40:	ret	
		Instruction group(s): [3, 145] 

0xcf41:	nop	dword ptr [rax]
0xcf48:	ret	
		Instruction group(s): [3, 145] 

0xcf4a:	nop	word ptr [rax + rax]
0xcf50:	mov	ecx, dword ptr [rip + 0x22947e]
0xcf56:	test	ecx, ecx
0xcf58:	jne	0xcfc0
		Instruction group(s): [7, 1] 

0xcf5a:	push	rbp
		Instruction group(s): [145] 

0xcf5b:	push	rbx
		Instruction group(s): [145] 

0xcf5c:	sub	rsp, 8
0xcf60:	mov	rbx, qword ptr [rip + 0x228159]
0xcf67:	test	rbx, rbx
0xcf6a:	je	0xcfb6
		Instruction group(s): [7, 1] 

0xcf6c:	lea	rbp, [rip + 0x22814d]
0xcf73:	nop	dword ptr [rax + rax]
0xcf78:	mov	rdi, rbx
0xcf7b:	add	rbp, 0x10
0xcf7f:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xcf84:	mov	rcx, qword ptr [rip + 0x228e45]
0xcf8b:	mov	rdx, qword ptr [rbp - 8]
0xcf8f:	sub	rsp, 8
0xcf93:	push	0
		Instruction group(s): [145] 

0xcf95:	mov	rdi, rbx
0xcf98:	mov	r8d, 1
0xcf9e:	mov	esi, eax
0xcfa0:	mov	r9, qword ptr [rcx + 8]
0xcfa4:	xor	ecx, ecx
0xcfa6:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0xcfab:	mov	rbx, qword ptr [rbp]
0xcfaf:	pop	rax
		Instruction group(s): [145] 

0xcfb0:	pop	rdx
		Instruction group(s): [145] 

0xcfb1:	test	rbx, rbx
0xcfb4:	jne	0xcf78
		Instruction group(s): [7, 1] 

0xcfb6:	add	rsp, 8
0xcfba:	pop	rbx
		Instruction group(s): [145] 

0xcfbb:	pop	rbp
		Instruction group(s): [145] 

0xcfbc:	ret	
		Instruction group(s): [3, 145] 

0xcfbd:	nop	dword ptr [rax]
0xcfc0:	ret	
		Instruction group(s): [3, 145] 

0xcfc2:	nop	dword ptr [rax]
0xcfc6:	nop	word ptr cs:[rax + rax]
0xcfd0:	push	rbp
		Instruction group(s): [145] 

0xcfd1:	push	rbx
		Instruction group(s): [145] 

0xcfd2:	sub	rsp, 8
0xcfd6:	mov	rbx, qword ptr [rip + 0x2280e3]
0xcfdd:	test	rbx, rbx
0xcfe0:	je	0xd013
		Instruction group(s): [7, 1] 

0xcfe2:	lea	rbp, [rip + 0x2280d7]
0xcfe9:	nop	dword ptr [rax]
0xcff0:	mov	rdi, rbx
0xcff3:	add	rbp, 0x10
0xcff7:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xcffc:	xor	ecx, ecx
0xcffe:	xor	edx, edx
0xd000:	mov	rdi, rbx
0xd003:	mov	esi, eax
0xd005:	call	0x26f40
		Instruction group(s): [2, 7, 145] 

0xd00a:	mov	rbx, qword ptr [rbp]
0xd00e:	test	rbx, rbx
0xd011:	jne	0xcff0
		Instruction group(s): [7, 1] 

0xd013:	add	rsp, 8
0xd017:	pop	rbx
		Instruction group(s): [145] 

0xd018:	pop	rbp
		Instruction group(s): [145] 

0xd019:	ret	
		Instruction group(s): [3, 145] 

0xd01a:	nop	word ptr [rax + rax]
0xd020:	mov	eax, dword ptr [rdi]
0xd022:	shl	eax, 4
0xd025:	xor	eax, dword ptr [rdi + 8]
0xd028:	ret	
		Instruction group(s): [3, 145] 

0xd029:	nop	dword ptr [rax]
0xd030:	mov	eax, dword ptr [rdi]
0xd032:	shl	eax, 4
0xd035:	xor	eax, dword ptr [rdi + 8]
0xd038:	not	eax
0xd03a:	ret	
		Instruction group(s): [3, 145] 

0xd03b:	nop	dword ptr [rax + rax]
0xd040:	mov	rdi, qword ptr [rdi]
0xd043:	xor	eax, eax
0xd045:	movzx	esi, byte ptr [rdi]
0xd048:	test	sil, sil
0xd04b:	je	0xd070
		Instruction group(s): [7, 1] 

0xd04d:	nop	dword ptr [rax]
0xd050:	movzx	edx, sil
0xd054:	movzx	esi, byte ptr [rdi + 1]
0xd058:	add	rdi, 1
0xd05c:	mov	ecx, esi
0xd05e:	and	ecx, 0xf
0xd061:	shl	edx, cl
0xd063:	movsxd	rdx, edx
		Instruction group(s): [145] 

0xd066:	add	rax, rdx
0xd069:	test	sil, sil
0xd06c:	jne	0xd050
		Instruction group(s): [7, 1] 

0xd06e:	ret	
		Instruction group(s): [3, 145] 

0xd070:	ret	
		Instruction group(s): [3, 145] 

0xd072:	nop	dword ptr [rax]
0xd076:	nop	word ptr cs:[rax + rax]
0xd080:	mov	rdi, qword ptr [rdi]
0xd083:	xor	eax, eax
0xd085:	movzx	esi, byte ptr [rdi]
0xd088:	test	sil, sil
0xd08b:	je	0xd0b0
		Instruction group(s): [7, 1] 

0xd08d:	nop	dword ptr [rax]
0xd090:	movzx	edx, sil
0xd094:	movzx	esi, byte ptr [rdi + 1]
0xd098:	add	rdi, 1
0xd09c:	mov	ecx, esi
0xd09e:	and	ecx, 7
0xd0a1:	shl	edx, cl
0xd0a3:	movsxd	rdx, edx
		Instruction group(s): [145] 

0xd0a6:	add	rax, rdx
0xd0a9:	test	sil, sil
0xd0ac:	jne	0xd090
		Instruction group(s): [7, 1] 

0xd0ae:	ret	
		Instruction group(s): [3, 145] 

0xd0b0:	ret	
		Instruction group(s): [3, 145] 

0xd0b2:	nop	dword ptr [rax]
0xd0b6:	nop	word ptr cs:[rax + rax]
0xd0c0:	mov	rdi, qword ptr [rdi]
0xd0c3:	xor	eax, eax
0xd0c5:	movzx	esi, byte ptr [rdi]
0xd0c8:	test	sil, sil
0xd0cb:	je	0xd0f0
		Instruction group(s): [7, 1] 

0xd0cd:	nop	dword ptr [rax]
0xd0d0:	movzx	edx, sil
0xd0d4:	movzx	esi, byte ptr [rdi + 1]
0xd0d8:	add	rdi, 1
0xd0dc:	mov	ecx, esi
0xd0de:	and	ecx, 0xf
0xd0e1:	shl	edx, cl
0xd0e3:	movsxd	rdx, edx
		Instruction group(s): [145] 

0xd0e6:	add	rax, rdx
0xd0e9:	test	sil, sil
0xd0ec:	jne	0xd0d0
		Instruction group(s): [7, 1] 

0xd0ee:	ret	
		Instruction group(s): [3, 145] 

0xd0f0:	ret	
		Instruction group(s): [3, 145] 

0xd0f2:	nop	dword ptr [rax]
0xd0f6:	nop	word ptr cs:[rax + rax]
0xd100:	mov	rdi, qword ptr [rdi]
0xd103:	xor	eax, eax
0xd105:	movzx	esi, byte ptr [rdi]
0xd108:	test	sil, sil
0xd10b:	je	0xd130
		Instruction group(s): [7, 1] 

0xd10d:	nop	dword ptr [rax]
0xd110:	movzx	edx, sil
0xd114:	movzx	esi, byte ptr [rdi + 1]
0xd118:	add	rdi, 1
0xd11c:	mov	ecx, esi
0xd11e:	and	ecx, 7
0xd121:	shl	edx, cl
0xd123:	movsxd	rdx, edx
		Instruction group(s): [145] 

0xd126:	add	rax, rdx
0xd129:	test	sil, sil
0xd12c:	jne	0xd110
		Instruction group(s): [7, 1] 

0xd12e:	ret	
		Instruction group(s): [3, 145] 

0xd130:	ret	
		Instruction group(s): [3, 145] 

0xd132:	nop	dword ptr [rax]
0xd136:	nop	word ptr cs:[rax + rax]
0xd140:	mov	rdi, qword ptr [rdi]
0xd143:	mov	rsi, qword ptr [rsi]
0xd146:	cmp	rdi, rsi
0xd149:	je	0xd150
		Instruction group(s): [7, 1] 

0xd14b:	jmp	0x89e0
		Instruction group(s): [7, 1] 

0xd150:	xor	eax, eax
0xd152:	ret	
		Instruction group(s): [3, 145] 

0xd153:	nop	dword ptr [rax]
0xd156:	nop	word ptr cs:[rax + rax]
0xd160:	push	r12
		Instruction group(s): [145] 

0xd162:	push	rbp
		Instruction group(s): [145] 

0xd163:	push	rbx
		Instruction group(s): [145] 

0xd164:	mov	rax, qword ptr [rdi]
0xd167:	mov	rcx, qword ptr [rip + 0x228c9a]
0xd16e:	mov	rdx, qword ptr [rax + 0x30]
0xd172:	mov	rax, qword ptr [rax + 0x10]
0xd176:	lea	rdx, [rax + rdx*8]
0xd17a:	mov	rax, qword ptr [rdi + 8]
0xd17e:	nop	
0xd180:	cmp	rdx, rax
0xd183:	jbe	0xd200
		Instruction group(s): [7, 1] 

0xd185:	add	rax, 8
0xd189:	mov	rbx, qword ptr [rax - 8]
0xd18d:	mov	qword ptr [rdi + 8], rax
0xd191:	test	rbx, rbx
0xd194:	je	0xd180
		Instruction group(s): [7, 1] 

0xd196:	cmp	rcx, rbx
0xd199:	je	0xd180
		Instruction group(s): [7, 1] 

0xd19b:	cmp	word ptr [rbx + 0xa], 0
0xd1a0:	jne	0xd180
		Instruction group(s): [7, 1] 

0xd1a2:	movsx	eax, word ptr [rbx + 8]
0xd1a6:	mov	esi, dword ptr [rip + 0x228d3c]
0xd1ac:	mov	rbp, qword ptr [rip + 0x228d2d]
0xd1b3:	lea	r12d, [rax + 1]
		Instruction group(s): [145] 

0xd1b7:	add	eax, 0x19
0xd1ba:	cmp	esi, eax
0xd1bc:	jae	0xd1dc
		Instruction group(s): [7, 1] 

0xd1be:	add	esi, esi
0xd1c0:	cmp	esi, eax
0xd1c2:	jb	0xd20a
		Instruction group(s): [7, 1] 

0xd1c4:	mov	dword ptr [rip + 0x228d1e], esi
0xd1ca:	mov	rdi, rbp
0xd1cd:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0xd1d2:	mov	rbp, rax
0xd1d5:	mov	qword ptr [rip + 0x228d04], rax
0xd1dc:	mov	byte ptr [rbp + 0x12], 0
0xd1e0:	mov	rsi, qword ptr [rbx]
0xd1e3:	lea	rdi, [rbp + 0x13]
0xd1e7:	mov	qword ptr [rbp], 1
0xd1ef:	mov	edx, r12d
0xd1f2:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0xd1f7:	mov	rax, rbp
0xd1fa:	pop	rbx
		Instruction group(s): [145] 

0xd1fb:	pop	rbp
		Instruction group(s): [145] 

0xd1fc:	pop	r12
		Instruction group(s): [145] 

0xd1fe:	ret	
		Instruction group(s): [3, 145] 

0xd1ff:	nop	
0xd200:	xor	ebp, ebp
0xd202:	mov	rax, rbp
0xd205:	pop	rbx
		Instruction group(s): [145] 

0xd206:	pop	rbp
		Instruction group(s): [145] 

0xd207:	pop	r12
		Instruction group(s): [145] 

0xd209:	ret	
		Instruction group(s): [3, 145] 

0xd20a:	mov	dword ptr [rip + 0x228cd8], eax
0xd210:	mov	esi, eax
0xd212:	jmp	0xd1ca
		Instruction group(s): [7, 1] 

0xd214:	nop	
0xd216:	nop	word ptr cs:[rax + rax]
0xd220:	mov	rax, qword ptr [rsi + 8]
0xd224:	cmp	qword ptr [rdi + 8], rax
0xd228:	jb	0xd240
		Instruction group(s): [7, 1] 

0xd22a:	mov	eax, 1
0xd22f:	jne	0xd245
		Instruction group(s): [7, 1] 

0xd231:	mov	rax, qword ptr [rsi]
0xd234:	cmp	qword ptr [rdi], rax
0xd237:	jb	0xd240
		Instruction group(s): [7, 1] 

0xd239:	setne	al
0xd23c:	movzx	eax, al
0xd23f:	ret	
		Instruction group(s): [3, 145] 

0xd240:	mov	eax, 0xffffffff
0xd245:	ret	
		Instruction group(s): [3, 145] 

0xd247:	nop	word ptr [rax + rax]
0xd250:	movsx	eax, word ptr [rdi + 8]
0xd254:	movsx	edx, word ptr [rsi + 8]
0xd258:	sub	eax, edx
0xd25a:	jne	0xd270
		Instruction group(s): [7, 1] 

0xd25c:	mov	rdi, qword ptr [rdi]
0xd25f:	mov	rsi, qword ptr [rsi]
0xd262:	cmp	rdi, rsi
0xd265:	je	0xd270
		Instruction group(s): [7, 1] 

0xd267:	jmp	0x89e0
		Instruction group(s): [7, 1] 

0xd26c:	nop	dword ptr [rax]
0xd270:	ret	
		Instruction group(s): [3, 145] 

0xd272:	nop	dword ptr [rax]
0xd276:	nop	word ptr cs:[rax + rax]
0xd280:	push	r15
		Instruction group(s): [145] 

0xd282:	push	r14
		Instruction group(s): [145] 

0xd284:	push	r13
		Instruction group(s): [145] 

0xd286:	push	r12
		Instruction group(s): [145] 

0xd288:	push	rbp
		Instruction group(s): [145] 

0xd289:	push	rbx
		Instruction group(s): [145] 

0xd28a:	sub	rsp, 0x48
0xd28e:	mov	rax, qword ptr fs:[0x28]
0xd297:	mov	qword ptr [rsp + 0x38], rax
0xd29c:	xor	eax, eax
0xd29e:	test	rdi, rdi
0xd2a1:	je	0xd308
		Instruction group(s): [7, 1] 

0xd2a3:	cmp	qword ptr [rdi + 0x10], 0
0xd2a8:	mov	rbx, rdi
0xd2ab:	je	0xd308
		Instruction group(s): [7, 1] 

0xd2ad:	test	rsi, rsi
0xd2b0:	mov	r12, rsi
0xd2b3:	je	0xd2f8
		Instruction group(s): [7, 1] 

0xd2b5:	cmp	byte ptr [rsi], 0
0xd2b8:	mov	ebp, 1
0xd2bd:	je	0xd30a
		Instruction group(s): [7, 1] 

0xd2bf:	mov	rdi, rsi
0xd2c2:	mov	qword ptr [rsp + 0x20], rsi
0xd2c7:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xd2cc:	lea	rsi, [rsp + 0x20]
0xd2d1:	lea	rdi, [rbx + 0x10]
0xd2d5:	mov	word ptr [rsp + 0x28], ax
0xd2da:	call	0x29600
		Instruction group(s): [2, 7, 145] 

0xd2df:	test	rax, rax
0xd2e2:	je	0xd2f8
		Instruction group(s): [7, 1] 

0xd2e4:	xor	ebp, ebp
0xd2e6:	cmp	word ptr [rax + 0xa], 0
0xd2eb:	sete	bpl
0xd2ef:	jmp	0xd30a
		Instruction group(s): [7, 1] 

0xd2f1:	nop	dword ptr [rax]
0xd2f8:	mov	rdi, qword ptr [rbx + 0x68]
0xd2fc:	test	rdi, rdi
0xd2ff:	mov	qword ptr [rsp], rdi
0xd303:	jne	0xd330
		Instruction group(s): [7, 1] 

0xd305:	nop	dword ptr [rax]
0xd308:	xor	ebp, ebp
0xd30a:	mov	rcx, qword ptr [rsp + 0x38]
0xd30f:	xor	rcx, qword ptr fs:[0x28]
0xd318:	mov	eax, ebp
0xd31a:	jne	0xd45a
		Instruction group(s): [7, 1] 

0xd320:	add	rsp, 0x48
0xd324:	pop	rbx
		Instruction group(s): [145] 

0xd325:	pop	rbp
		Instruction group(s): [145] 

0xd326:	pop	r12
		Instruction group(s): [145] 

0xd328:	pop	r13
		Instruction group(s): [145] 

0xd32a:	pop	r14
		Instruction group(s): [145] 

0xd32c:	pop	r15
		Instruction group(s): [145] 

0xd32e:	ret	
		Instruction group(s): [3, 145] 

0xd32f:	nop	
0xd330:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0xd335:	mov	r14, rax
0xd338:	lea	rax, [rsp + 0x20]
0xd33d:	mov	rdi, qword ptr [rsp]
0xd341:	mov	qword ptr [rsp + 0x18], rax
0xd346:	jmp	0xd3e8
		Instruction group(s): [7, 1] 

0xd34b:	nop	dword ptr [rax + rax]
0xd350:	cmp	qword ptr [rax], 0
0xd354:	je	0xd3e4
		Instruction group(s): [7, 1] 

0xd35a:	lea	rbp, [rax + 0x13]
0xd35e:	mov	rdi, rbp
0xd361:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xd366:	lea	r9, [rbx + 0x10]
0xd36a:	mov	rsi, qword ptr [rsp + 0x18]
0xd36f:	mov	r13, rax
0xd372:	mov	qword ptr [rsp + 0x20], rbp
0xd377:	mov	word ptr [rsp + 0x28], ax
0xd37c:	mov	rdi, r9
0xd37f:	mov	qword ptr [rsp + 0x10], r9
0xd384:	call	0x29540
		Instruction group(s): [2, 7, 145] 

0xd389:	mov	edi, 0x10
0xd38e:	mov	qword ptr [rsp + 8], rax
0xd393:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0xd398:	mov	esi, r13d
0xd39b:	mov	rdi, rbp
0xd39e:	mov	qword ptr [rsp], rax
0xd3a2:	call	0x26050
		Instruction group(s): [2, 7, 145] 

0xd3a7:	mov	r8, qword ptr [rsp]
0xd3ab:	mov	r9, qword ptr [rsp + 0x10]
0xd3b0:	mov	rdx, qword ptr [rsp + 8]
0xd3b5:	mov	qword ptr [r8], rax
0xd3b8:	xor	eax, eax
0xd3ba:	mov	word ptr [r8 + 8], r13w
0xd3bf:	mov	word ptr [r8 + 0xa], ax
0xd3c4:	mov	rsi, r8
0xd3c7:	mov	rdi, r9
0xd3ca:	call	0x29630
		Instruction group(s): [2, 7, 145] 

0xd3cf:	test	r12, r12
0xd3d2:	je	0xd3e4
		Instruction group(s): [7, 1] 

0xd3d4:	cmp	r12, rbp
0xd3d7:	je	0xd450
		Instruction group(s): [7, 1] 

0xd3d9:	movzx	eax, byte ptr [r15 + 0x13]
0xd3de:	cmp	al, byte ptr [r12]
0xd3e2:	je	0xd430
		Instruction group(s): [7, 1] 

0xd3e4:	mov	rdi, qword ptr [rbx + 0x68]
0xd3e8:	mov	dword ptr [r14], 0
0xd3ef:	call	0x8aa0
		Instruction group(s): [2, 7, 145] 

0xd3f4:	test	rax, rax
0xd3f7:	mov	r15, rax
0xd3fa:	jne	0xd350
		Instruction group(s): [7, 1] 

0xd400:	mov	ebp, dword ptr [r14]
0xd403:	cmp	ebp, 4
0xd406:	je	0xd3e4
		Instruction group(s): [7, 1] 

0xd408:	test	ebp, ebp
0xd40a:	jne	0xd45f
		Instruction group(s): [7, 1] 

0xd40c:	mov	rdi, qword ptr [rbx + 0x68]
0xd410:	sub	dword ptr [rip + 0x228ad5], 1
0xd417:	call	0x8960
		Instruction group(s): [2, 7, 145] 

0xd41c:	mov	qword ptr [rbx + 0x68], 0
0xd424:	jmp	0xd30a
		Instruction group(s): [7, 1] 

0xd429:	nop	dword ptr [rax]
0xd430:	test	al, al
0xd432:	je	0xd450
		Instruction group(s): [7, 1] 

0xd434:	lea	rdi, [r15 + 0x14]
0xd438:	lea	rsi, [r12 + 1]
0xd43d:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0xd442:	test	eax, eax
0xd444:	jne	0xd3e4
		Instruction group(s): [7, 1] 

0xd446:	nop	word ptr cs:[rax + rax]
0xd450:	mov	ebp, 1
0xd455:	jmp	0xd30a
		Instruction group(s): [7, 1] 

0xd45a:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0xd45f:	lea	rdi, [rip + 0x1db44]
0xd466:	call	0x1c790
		Instruction group(s): [2, 7, 145] 

0xd46b:	nop	dword ptr [rax + rax]
0xd470:	push	r13
		Instruction group(s): [145] 

0xd472:	push	r12
		Instruction group(s): [145] 

0xd474:	push	rbp
		Instruction group(s): [145] 

0xd475:	push	rbx
		Instruction group(s): [145] 

0xd476:	mov	rbx, rdi
0xd479:	sub	rsp, 0x128
0xd480:	mov	qword ptr [rsp], rdi
0xd484:	lea	rdi, [rip + 0x228a75]
0xd48b:	mov	rsi, rsp
0xd48e:	mov	rax, qword ptr fs:[0x28]
0xd497:	mov	qword ptr [rsp + 0x118], rax
0xd49f:	xor	eax, eax
0xd4a1:	call	0x29540
		Instruction group(s): [2, 7, 145] 

0xd4a6:	mov	rbp, qword ptr [rax]
0xd4a9:	mov	r12, rax
0xd4ac:	test	rbp, rbp
0xd4af:	je	0xd4e8
		Instruction group(s): [7, 1] 

0xd4b1:	cmp	qword ptr [rip + 0x228950], rbp
0xd4b8:	je	0xd4e8
		Instruction group(s): [7, 1] 

0xd4ba:	mov	rcx, qword ptr [rsp + 0x118]
0xd4c2:	xor	rcx, qword ptr fs:[0x28]
0xd4cb:	mov	rax, rbp
0xd4ce:	jne	0xd676
		Instruction group(s): [7, 1] 

0xd4d4:	add	rsp, 0x128
0xd4db:	pop	rbx
		Instruction group(s): [145] 

0xd4dc:	pop	rbp
		Instruction group(s): [145] 

0xd4dd:	pop	r12
		Instruction group(s): [145] 

0xd4df:	pop	r13
		Instruction group(s): [145] 

0xd4e1:	ret	
		Instruction group(s): [3, 145] 

0xd4e2:	nop	word ptr [rax + rax]
0xd4e8:	mov	rdi, rbx
0xd4eb:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xd4f0:	mov	edi, 0x10
0xd4f5:	mov	r13, rax
0xd4f8:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0xd4fd:	mov	esi, r13d
0xd500:	mov	rdi, rbx
0xd503:	mov	rbp, rax
0xd506:	call	0x26050
		Instruction group(s): [2, 7, 145] 

0xd50b:	lea	rdi, [rip + 0x2289ee]
0xd512:	mov	rdx, r12
0xd515:	mov	qword ptr [rbp], rax
0xd519:	mov	rsi, rbp
0xd51c:	lea	r12, [rsp + 0x80]
0xd524:	call	0x29630
		Instruction group(s): [2, 7, 145] 

0xd529:	jmp	0xd53a
		Instruction group(s): [7, 1] 

0xd52b:	nop	dword ptr [rax + rax]
0xd530:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0xd535:	cmp	dword ptr [rax], 4
0xd538:	jne	0xd5a0
		Instruction group(s): [7, 1] 

0xd53a:	mov	rdx, r12
0xd53d:	mov	rsi, rbx
0xd540:	mov	edi, 1
0xd545:	call	0x8a90
		Instruction group(s): [2, 7, 145] 

0xd54a:	cmp	eax, -1
0xd54d:	je	0xd530
		Instruction group(s): [7, 1] 

0xd54f:	test	eax, eax
0xd551:	js	0xd5a0
		Instruction group(s): [7, 1] 

0xd553:	mov	rax, qword ptr [rsp + 0x80]
0xd55b:	lea	rsi, [rsp + 0x10]
0xd560:	lea	rdi, [rip + 0x2289f9]
0xd567:	mov	qword ptr [rsp + 0x10], rax
0xd56c:	mov	rax, qword ptr [rsp + 0x88]
0xd574:	mov	qword ptr [rsp + 0x18], rax
0xd579:	call	0x29540
		Instruction group(s): [2, 7, 145] 

0xd57e:	mov	r12, qword ptr [rax]
0xd581:	mov	r13, rax
0xd584:	test	r12, r12
0xd587:	je	0xd5b0
		Instruction group(s): [7, 1] 

0xd589:	cmp	qword ptr [rip + 0x228878], r12
0xd590:	je	0xd5b0
		Instruction group(s): [7, 1] 

0xd592:	mov	qword ptr [rbp + 8], r12
0xd596:	jmp	0xd4ba
		Instruction group(s): [7, 1] 

0xd59b:	nop	dword ptr [rax + rax]
0xd5a0:	mov	qword ptr [rbp + 8], 0
0xd5a8:	jmp	0xd4ba
		Instruction group(s): [7, 1] 

0xd5ad:	nop	dword ptr [rax]
0xd5b0:	mov	edi, 0x70
0xd5b5:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0xd5ba:	mov	r12, rax
0xd5bd:	mov	rax, qword ptr [rsp + 0x80]
0xd5c5:	lea	rdi, [rip + 0x228994]
0xd5cc:	mov	rdx, r13
0xd5cf:	mov	rsi, r12
0xd5d2:	mov	qword ptr [r12], rax
0xd5d6:	mov	rax, qword ptr [rsp + 0x88]
0xd5de:	mov	qword ptr [r12 + 8], rax
0xd5e3:	call	0x29630
		Instruction group(s): [2, 7, 145] 

0xd5e8:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0xd5ed:	mov	r13, rax
0xd5f0:	jmp	0xd5ff
		Instruction group(s): [7, 1] 

0xd5f2:	nop	word ptr [rax + rax]
0xd5f8:	cmp	dword ptr [r13], 4
0xd5fd:	jne	0xd668
		Instruction group(s): [7, 1] 

0xd5ff:	mov	dword ptr [r13], 0
0xd607:	mov	rdi, rbx
0xd60a:	call	0x87b0
		Instruction group(s): [2, 7, 145] 

0xd60f:	test	rax, rax
0xd612:	mov	qword ptr [r12 + 0x68], rax
0xd617:	je	0xd5f8
		Instruction group(s): [7, 1] 

0xd619:	lea	rdi, [r12 + 0x10]
0xd61e:	lea	r8, [rip - 0x3d5]
0xd625:	lea	rcx, [rip - 0x52c]
0xd62c:	lea	rdx, [rip - 0x573]
0xd633:	mov	esi, 0x6b
0xd638:	call	0x29440
		Instruction group(s): [2, 7, 145] 

0xd63d:	mov	eax, dword ptr [rip + 0x2288a9]
0xd643:	add	eax, 1
0xd646:	cmp	eax, 0xa
0xd649:	mov	dword ptr [rip + 0x22889d], eax
0xd64f:	jne	0xd592
		Instruction group(s): [7, 1] 

0xd655:	xor	esi, esi
0xd657:	mov	rdi, r12
0xd65a:	call	0xd280
		Instruction group(s): [2, 7, 145] 

0xd65f:	jmp	0xd592
		Instruction group(s): [7, 1] 

0xd664:	nop	dword ptr [rax]
0xd668:	mov	qword ptr [r12 + 0x10], 0
0xd671:	jmp	0xd592
		Instruction group(s): [7, 1] 

0xd676:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0xd67b:	nop	dword ptr [rax + rax]
0xd680:	push	rbx
		Instruction group(s): [145] 

0xd681:	call	0xd470
		Instruction group(s): [2, 7, 145] 

0xd686:	mov	rdi, qword ptr [rax + 8]
0xd68a:	test	rdi, rdi
0xd68d:	je	0xd6c0
		Instruction group(s): [7, 1] 

0xd68f:	cmp	qword ptr [rdi + 0x10], 0
0xd694:	je	0xd6c0
		Instruction group(s): [7, 1] 

0xd696:	xor	esi, esi
0xd698:	mov	rbx, rax
0xd69b:	call	0xd280
		Instruction group(s): [2, 7, 145] 

0xd6a0:	mov	edi, 0x10
0xd6a5:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0xd6aa:	mov	rdx, qword ptr [rbx + 8]
0xd6ae:	mov	qword ptr [rax], rdx
0xd6b1:	mov	rdx, qword ptr [rdx + 0x10]
0xd6b5:	mov	qword ptr [rax + 8], rdx
0xd6b9:	pop	rbx
		Instruction group(s): [145] 

0xd6ba:	ret	
		Instruction group(s): [3, 145] 

0xd6bb:	nop	dword ptr [rax + rax]
0xd6c0:	xor	eax, eax
0xd6c2:	pop	rbx
		Instruction group(s): [145] 

0xd6c3:	ret	
		Instruction group(s): [3, 145] 

0xd6c4:	nop	
0xd6c6:	nop	word ptr cs:[rax + rax]
0xd6d0:	push	rbx
		Instruction group(s): [145] 

0xd6d1:	mov	rbx, rsi
0xd6d4:	call	0xd470
		Instruction group(s): [2, 7, 145] 

0xd6d9:	mov	rsi, rbx
0xd6dc:	mov	rdi, qword ptr [rax + 8]
0xd6e0:	pop	rbx
		Instruction group(s): [145] 

0xd6e1:	jmp	0xd280
		Instruction group(s): [7, 1] 

0xd6e6:	nop	word ptr cs:[rax + rax]
0xd6f0:	push	rbp
		Instruction group(s): [145] 

0xd6f1:	mov	rbp, rsp
0xd6f4:	push	r13
		Instruction group(s): [145] 

0xd6f6:	push	r12
		Instruction group(s): [145] 

0xd6f8:	push	rbx
		Instruction group(s): [145] 

0xd6f9:	mov	rbx, rdi
0xd6fc:	sub	rsp, 0x18
0xd700:	mov	rax, qword ptr fs:[0x28]
0xd709:	mov	qword ptr [rbp - 0x28], rax
0xd70d:	xor	eax, eax
0xd70f:	call	0xae90
		Instruction group(s): [2, 7, 145] 

0xd714:	test	eax, eax
0xd716:	jne	0xd7a0
		Instruction group(s): [7, 1] 

0xd71c:	mov	esi, 0x2f
0xd721:	mov	rdi, rbx
0xd724:	call	0x8890
		Instruction group(s): [2, 7, 145] 

0xd729:	test	rax, rax
0xd72c:	mov	r12, rax
0xd72f:	je	0xd7b0
		Instruction group(s): [7, 1] 

0xd731:	cmp	rbx, rax
0xd734:	lea	rcx, [rip + 0x1da0c]
0xd73b:	je	0xd76d
		Instruction group(s): [7, 1] 

0xd73d:	mov	r13, rax
0xd740:	mov	rsi, rbx
0xd743:	sub	r13, rbx
0xd746:	lea	rax, [r13 + 0x1f]
0xd74a:	mov	rdx, r13
0xd74d:	and	rax, 0xfffffffffffffff0
0xd751:	sub	rsp, rax
0xd754:	lea	rcx, [rsp + 0xf]
0xd759:	and	rcx, 0xfffffffffffffff0
0xd75d:	mov	rdi, rcx
0xd760:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0xd765:	mov	rcx, rax
0xd768:	mov	byte ptr [rax + r13], 0
0xd76d:	mov	rdi, rcx
0xd770:	call	0xd470
		Instruction group(s): [2, 7, 145] 

0xd775:	mov	rdi, qword ptr [rax + 8]
0xd779:	lea	rsi, [r12 + 1]
0xd77e:	call	0xd280
		Instruction group(s): [2, 7, 145] 

0xd783:	mov	rdx, qword ptr [rbp - 0x28]
0xd787:	xor	rdx, qword ptr fs:[0x28]
0xd790:	jne	0xd7ca
		Instruction group(s): [7, 1] 

0xd792:	lea	rsp, [rbp - 0x18]
0xd796:	pop	rbx
		Instruction group(s): [145] 

0xd797:	pop	r12
		Instruction group(s): [145] 

0xd799:	pop	r13
		Instruction group(s): [145] 

0xd79b:	pop	rbp
		Instruction group(s): [145] 

0xd79c:	ret	
		Instruction group(s): [3, 145] 

0xd79d:	nop	dword ptr [rax]
0xd7a0:	lea	rsi, [rbp - 0x30]
0xd7a4:	mov	rdi, rbx
0xd7a7:	call	0xaf70
		Instruction group(s): [2, 7, 145] 

0xd7ac:	jmp	0xd783
		Instruction group(s): [7, 1] 

0xd7ae:	nop	
0xd7b0:	lea	rdi, [rip + 0x20c2b]
0xd7b7:	call	0xd470
		Instruction group(s): [2, 7, 145] 

0xd7bc:	mov	rdi, qword ptr [rax + 8]
0xd7c0:	mov	rsi, rbx
0xd7c3:	call	0xd280
		Instruction group(s): [2, 7, 145] 

0xd7c8:	jmp	0xd783
		Instruction group(s): [7, 1] 

0xd7ca:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0xd7cf:	nop	
0xd7d0:	push	rbp
		Instruction group(s): [145] 

0xd7d1:	mov	esi, 0x2f
0xd7d6:	mov	rbp, rsp
0xd7d9:	push	r13
		Instruction group(s): [145] 

0xd7db:	push	r12
		Instruction group(s): [145] 

0xd7dd:	push	rbx
		Instruction group(s): [145] 

0xd7de:	mov	rbx, rdi
0xd7e1:	sub	rsp, 0x18
0xd7e5:	mov	rax, qword ptr fs:[0x28]
0xd7ee:	mov	qword ptr [rbp - 0x28], rax
0xd7f2:	xor	eax, eax
0xd7f4:	call	0x8890
		Instruction group(s): [2, 7, 145] 

0xd7f9:	test	rax, rax
0xd7fc:	je	0xd8f0
		Instruction group(s): [7, 1] 

0xd802:	cmp	rbx, rax
0xd805:	mov	r12, rax
0xd808:	lea	rcx, [rip + 0x1d938]
0xd80f:	je	0xd841
		Instruction group(s): [7, 1] 

0xd811:	mov	r13, rax
0xd814:	mov	rsi, rbx
0xd817:	sub	r13, rbx
0xd81a:	lea	rax, [r13 + 0x1f]
0xd81e:	mov	rdx, r13
0xd821:	and	rax, 0xfffffffffffffff0
0xd825:	sub	rsp, rax
0xd828:	lea	rcx, [rsp + 0xf]
0xd82d:	and	rcx, 0xfffffffffffffff0
0xd831:	mov	rdi, rcx
0xd834:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0xd839:	mov	rcx, rax
0xd83c:	mov	byte ptr [rax + r13], 0
0xd841:	mov	rdi, rcx
0xd844:	lea	rbx, [r12 + 1]
0xd849:	call	0xd470
		Instruction group(s): [2, 7, 145] 

0xd84e:	mov	r13, rax
0xd851:	mov	rax, qword ptr [r13 + 8]
0xd855:	test	rax, rax
0xd858:	je	0xd910
		Instruction group(s): [7, 1] 

0xd85e:	cmp	qword ptr [rax + 0x10], 0
0xd863:	je	0xd8c8
		Instruction group(s): [7, 1] 

0xd865:	mov	edi, 0x10
0xd86a:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0xd86f:	mov	rdi, rbx
0xd872:	mov	r12, rax
0xd875:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xd87a:	mov	rdi, rbx
0xd87d:	movsx	esi, ax
0xd880:	mov	word ptr [r12 + 8], ax
0xd886:	call	0x26050
		Instruction group(s): [2, 7, 145] 

0xd88b:	mov	rdi, qword ptr [r13 + 8]
0xd88f:	mov	qword ptr [r12], rax
0xd893:	mov	eax, 1
0xd898:	mov	word ptr [r12 + 0xa], ax
0xd89e:	mov	rsi, r12
0xd8a1:	add	rdi, 0x10
0xd8a5:	call	0x29750
		Instruction group(s): [2, 7, 145] 

0xd8aa:	mov	rax, qword ptr [rbp - 0x28]
0xd8ae:	xor	rax, qword ptr fs:[0x28]
0xd8b7:	jne	0xd923
		Instruction group(s): [7, 1] 

0xd8b9:	lea	rsp, [rbp - 0x18]
0xd8bd:	pop	rbx
		Instruction group(s): [145] 

0xd8be:	pop	r12
		Instruction group(s): [145] 

0xd8c0:	pop	r13
		Instruction group(s): [145] 

0xd8c2:	pop	rbp
		Instruction group(s): [145] 

0xd8c3:	ret	
		Instruction group(s): [3, 145] 

0xd8c4:	nop	dword ptr [rax]
0xd8c8:	lea	rdi, [rax + 0x10]
0xd8cc:	lea	r8, [rip - 0x683]
0xd8d3:	lea	rcx, [rip - 0x7da]
0xd8da:	lea	rdx, [rip - 0x821]
0xd8e1:	mov	esi, 0x6b
0xd8e6:	call	0x29440
		Instruction group(s): [2, 7, 145] 

0xd8eb:	jmp	0xd865
		Instruction group(s): [7, 1] 

0xd8f0:	lea	rdi, [rip + 0x20aeb]
0xd8f7:	call	0xd470
		Instruction group(s): [2, 7, 145] 

0xd8fc:	mov	r13, rax
0xd8ff:	mov	rax, qword ptr [r13 + 8]
0xd903:	test	rax, rax
0xd906:	jne	0xd85e
		Instruction group(s): [7, 1] 

0xd90c:	nop	dword ptr [rax]
0xd910:	mov	edi, 0x70
0xd915:	call	0x1b8c0
		Instruction group(s): [2, 7, 145] 

0xd91a:	mov	qword ptr [r13 + 8], rax
0xd91e:	jmp	0xd85e
		Instruction group(s): [7, 1] 

0xd923:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0xd928:	nop	dword ptr [rax + rax]
0xd930:	push	rbp
		Instruction group(s): [145] 

0xd931:	mov	esi, 0x2f
0xd936:	mov	rbp, rsp
0xd939:	push	r13
		Instruction group(s): [145] 

0xd93b:	push	r12
		Instruction group(s): [145] 

0xd93d:	push	rbx
		Instruction group(s): [145] 

0xd93e:	mov	rbx, rdi
0xd941:	sub	rsp, 0x28
0xd945:	mov	rax, qword ptr fs:[0x28]
0xd94e:	mov	qword ptr [rbp - 0x28], rax
0xd952:	xor	eax, eax
0xd954:	call	0x8890
		Instruction group(s): [2, 7, 145] 

0xd959:	test	rax, rax
0xd95c:	je	0xda10
		Instruction group(s): [7, 1] 

0xd962:	cmp	rbx, rax
0xd965:	mov	r12, rax
0xd968:	lea	rcx, [rip + 0x1d7d8]
0xd96f:	je	0xd9a1
		Instruction group(s): [7, 1] 

0xd971:	mov	r13, rax
0xd974:	mov	rsi, rbx
0xd977:	sub	r13, rbx
0xd97a:	lea	rax, [r13 + 0x1f]
0xd97e:	mov	rdx, r13
0xd981:	and	rax, 0xfffffffffffffff0
0xd985:	sub	rsp, rax
0xd988:	lea	rcx, [rsp + 0xf]
0xd98d:	and	rcx, 0xfffffffffffffff0
0xd991:	mov	rdi, rcx
0xd994:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0xd999:	mov	rcx, rax
0xd99c:	mov	byte ptr [rax + r13], 0
0xd9a1:	mov	rdi, rcx
0xd9a4:	lea	rbx, [r12 + 1]
0xd9a9:	call	0xd470
		Instruction group(s): [2, 7, 145] 

0xd9ae:	mov	r13, qword ptr [rax + 8]
0xd9b2:	test	r13, r13
0xd9b5:	je	0xd9f0
		Instruction group(s): [7, 1] 

0xd9b7:	cmp	qword ptr [r13 + 0x10], 0
0xd9bc:	je	0xd9f0
		Instruction group(s): [7, 1] 

0xd9be:	mov	rdi, rbx
0xd9c1:	mov	qword ptr [rbp - 0x40], rbx
0xd9c5:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xd9ca:	lea	rsi, [rbp - 0x40]
0xd9ce:	lea	rdi, [r13 + 0x10]
0xd9d2:	mov	word ptr [rbp - 0x38], ax
0xd9d6:	call	0x29600
		Instruction group(s): [2, 7, 145] 

0xd9db:	test	rax, rax
0xd9de:	je	0xd9f0
		Instruction group(s): [7, 1] 

0xd9e0:	movsx	eax, word ptr [rax + 0xa]
0xd9e4:	jmp	0xd9f2
		Instruction group(s): [7, 1] 

0xd9e6:	nop	word ptr cs:[rax + rax]
0xd9f0:	xor	eax, eax
0xd9f2:	mov	rdx, qword ptr [rbp - 0x28]
0xd9f6:	xor	rdx, qword ptr fs:[0x28]
0xd9ff:	jne	0xda22
		Instruction group(s): [7, 1] 

0xda01:	lea	rsp, [rbp - 0x18]
0xda05:	pop	rbx
		Instruction group(s): [145] 

0xda06:	pop	r12
		Instruction group(s): [145] 

0xda08:	pop	r13
		Instruction group(s): [145] 

0xda0a:	pop	rbp
		Instruction group(s): [145] 

0xda0b:	ret	
		Instruction group(s): [3, 145] 

0xda0c:	nop	dword ptr [rax]
0xda10:	lea	rdi, [rip + 0x209cb]
0xda17:	call	0xd470
		Instruction group(s): [2, 7, 145] 

0xda1c:	mov	r13, qword ptr [rax + 8]
0xda20:	jmp	0xd9b2
		Instruction group(s): [7, 1] 

0xda22:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0xda27:	nop	word ptr [rax + rax]
0xda30:	sub	rsp, 8
0xda34:	call	0xd470
		Instruction group(s): [2, 7, 145] 

0xda39:	mov	rax, qword ptr [rax]
0xda3c:	add	rsp, 8
0xda40:	ret	
		Instruction group(s): [3, 145] 

0xda41:	nop	dword ptr [rax + rax]
0xda46:	nop	word ptr cs:[rax + rax]
0xda50:	push	r15
		Instruction group(s): [145] 

0xda52:	push	r14
		Instruction group(s): [145] 

0xda54:	lea	rsi, [rip + 0x1d561]
0xda5b:	push	r13
		Instruction group(s): [145] 

0xda5d:	push	r12
		Instruction group(s): [145] 

0xda5f:	xor	edi, edi
0xda61:	push	rbp
		Instruction group(s): [145] 

0xda62:	push	rbx
		Instruction group(s): [145] 

0xda63:	mov	edx, 5
0xda68:	sub	rsp, 0x28
0xda6c:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xda71:	mov	rdi, rax
0xda74:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0xda79:	mov	rbx, qword ptr [rip + 0x228480]
0xda80:	mov	rax, qword ptr [rip + 0x228499]
0xda87:	lea	r12, [rbx + rax*8]
0xda8b:	cmp	rbx, r12
0xda8e:	jae	0xdde0
		Instruction group(s): [7, 1] 

0xda94:	xor	r14d, r14d
0xda97:	mov	dword ptr [rsp + 4], 0
0xda9f:	nop	
0xdaa0:	mov	r15, qword ptr [rbx]
0xdaa3:	test	r15, r15
0xdaa6:	je	0xdc38
		Instruction group(s): [7, 1] 

0xdaac:	mov	rsi, qword ptr [rip + 0x228355]
0xdab3:	cmp	rsi, r15
0xdab6:	je	0xdc38
		Instruction group(s): [7, 1] 

0xdabc:	mov	rdx, qword ptr [r15 + 8]
0xdac0:	mov	r13, qword ptr [r15]
0xdac3:	test	rdx, rdx
0xdac6:	je	0xde50
		Instruction group(s): [7, 1] 

0xdacc:	mov	rax, qword ptr [rdx + 0x10]
0xdad0:	mov	rcx, qword ptr [rdx]
0xdad3:	mov	r8, qword ptr [rdx + 8]
0xdad7:	test	rax, rax
0xdada:	je	0xdd90
		Instruction group(s): [7, 1] 

0xdae0:	mov	rdx, qword ptr [rdx + 0x30]
0xdae4:	lea	rdi, [rax + rdx*8]
0xdae8:	cmp	rax, rdi
0xdaeb:	jae	0xdd08
		Instruction group(s): [7, 1] 

0xdaf1:	xor	ebp, ebp
0xdaf3:	xor	r10d, r10d
0xdaf6:	jmp	0xdb0c
		Instruction group(s): [7, 1] 

0xdaf8:	nop	dword ptr [rax + rax]
0xdb00:	add	ebp, 1
0xdb03:	add	rax, 8
0xdb07:	cmp	rdi, rax
0xdb0a:	jbe	0xdb2d
		Instruction group(s): [7, 1] 

0xdb0c:	mov	rdx, qword ptr [rax]
0xdb0f:	cmp	rsi, rdx
0xdb12:	je	0xdb03
		Instruction group(s): [7, 1] 

0xdb14:	test	rdx, rdx
0xdb17:	je	0xdb03
		Instruction group(s): [7, 1] 

0xdb19:	cmp	word ptr [rdx + 0xa], 0
0xdb1e:	jne	0xdb00
		Instruction group(s): [7, 1] 

0xdb20:	add	rax, 8
0xdb24:	add	r10d, 1
0xdb28:	cmp	rdi, rax
0xdb2b:	ja	0xdb0c
		Instruction group(s): [7, 1] 

0xdb2d:	lea	rsi, [rip + 0x1d51c]
0xdb34:	xor	edi, edi
0xdb36:	mov	edx, 5
0xdb3b:	mov	dword ptr [rsp + 8], r10d
0xdb40:	mov	qword ptr [rsp + 0x18], r8
0xdb45:	add	r14d, ebp
0xdb48:	mov	qword ptr [rsp + 0x10], rcx
0xdb4d:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xdb52:	mov	r8, qword ptr [rsp + 0x18]
0xdb57:	mov	rcx, qword ptr [rsp + 0x10]
0xdb5c:	mov	rsi, rax
0xdb5f:	mov	rdx, r13
0xdb62:	xor	eax, eax
0xdb64:	mov	edi, 1
0xdb69:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0xdb6e:	mov	r10d, dword ptr [rsp + 8]
0xdb73:	add	dword ptr [rsp + 4], r10d
0xdb78:	test	r10d, r10d
0xdb7b:	je	0xdd43
		Instruction group(s): [7, 1] 

0xdb81:	lea	rsi, [rip + 0x20e94]
0xdb88:	mov	edx, r10d
0xdb8b:	mov	edi, 1
0xdb90:	xor	eax, eax
0xdb92:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0xdb97:	mov	r13, qword ptr [rip + 0x228282]
0xdb9e:	lea	rsi, [rip + 0x1d446]
0xdba5:	xor	edi, edi
0xdba7:	mov	edx, 5
0xdbac:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xdbb1:	mov	rsi, r13
0xdbb4:	mov	rdi, rax
0xdbb7:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0xdbbc:	test	ebp, ebp
0xdbbe:	jne	0xdd70
		Instruction group(s): [7, 1] 

0xdbc4:	mov	rbp, qword ptr [rip + 0x228255]
0xdbcb:	lea	rsi, [rip + 0x1d422]
0xdbd2:	xor	edi, edi
0xdbd4:	mov	edx, 5
0xdbd9:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xdbde:	mov	rsi, rbp
0xdbe1:	mov	rdi, rax
0xdbe4:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0xdbe9:	mov	rbp, qword ptr [rip + 0x228230]
0xdbf0:	lea	rsi, [rip + 0x1d400]
0xdbf7:	xor	edi, edi
0xdbf9:	mov	edx, 5
0xdbfe:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xdc03:	mov	rsi, rbp
0xdc06:	mov	rdi, rax
0xdc09:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0xdc0e:	mov	rax, qword ptr [r15 + 8]
0xdc12:	cmp	qword ptr [rax + 0x68], 0
0xdc17:	je	0xde30
		Instruction group(s): [7, 1] 

0xdc1d:	lea	rsi, [rip + 0x1d3e4]
0xdc24:	xor	edi, edi
0xdc26:	mov	edx, 5
0xdc2b:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xdc30:	mov	rdi, rax
0xdc33:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0xdc38:	add	rbx, 8
0xdc3c:	cmp	r12, rbx
0xdc3f:	ja	0xdaa0
		Instruction group(s): [7, 1] 

0xdc45:	mov	rcx, qword ptr [rip + 0x2281d4]
0xdc4c:	lea	rdi, [rip + 0x20e49]
0xdc53:	mov	edx, 3
0xdc58:	mov	esi, 1
0xdc5d:	call	0x8c80
		Instruction group(s): [2, 7, 145] 

0xdc62:	mov	eax, dword ptr [rsp + 4]
0xdc66:	test	eax, eax
0xdc68:	je	0xde00
		Instruction group(s): [7, 1] 

0xdc6e:	mov	edx, dword ptr [rsp + 4]
0xdc72:	lea	rsi, [rip + 0x20da3]
0xdc79:	mov	edi, 1
0xdc7e:	xor	eax, eax
0xdc80:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0xdc85:	mov	rbx, qword ptr [rip + 0x228194]
0xdc8c:	lea	rsi, [rip + 0x1d358]
0xdc93:	xor	edi, edi
0xdc95:	mov	edx, 5
0xdc9a:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xdc9f:	mov	rsi, rbx
0xdca2:	mov	rdi, rax
0xdca5:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0xdcaa:	test	r14d, r14d
0xdcad:	je	0xde90
		Instruction group(s): [7, 1] 

0xdcb3:	lea	rsi, [rip + 0x20d62]
0xdcba:	mov	edx, r14d
0xdcbd:	mov	edi, 1
0xdcc2:	xor	eax, eax
0xdcc4:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0xdcc9:	mov	rbx, qword ptr [rip + 0x228260]
0xdcd0:	lea	rsi, [rip + 0x1d399]
0xdcd7:	mov	edx, 5
0xdcdc:	xor	edi, edi
0xdcde:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xdce3:	add	rsp, 0x28
0xdce7:	mov	rdx, rbx
0xdcea:	mov	rsi, rax
0xdced:	pop	rbx
		Instruction group(s): [145] 

0xdcee:	pop	rbp
		Instruction group(s): [145] 

0xdcef:	pop	r12
		Instruction group(s): [145] 

0xdcf1:	pop	r13
		Instruction group(s): [145] 

0xdcf3:	pop	r14
		Instruction group(s): [145] 

0xdcf5:	pop	r15
		Instruction group(s): [145] 

0xdcf7:	mov	edi, 1
0xdcfc:	xor	eax, eax
0xdcfe:	jmp	0x8bc0
		Instruction group(s): [7, 1] 

0xdd03:	nop	dword ptr [rax + rax]
0xdd08:	lea	rsi, [rip + 0x1d341]
0xdd0f:	mov	edx, 5
0xdd14:	xor	edi, edi
0xdd16:	mov	qword ptr [rsp + 0x10], r8
0xdd1b:	mov	qword ptr [rsp + 8], rcx
0xdd20:	xor	ebp, ebp
0xdd22:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xdd27:	mov	r8, qword ptr [rsp + 0x10]
0xdd2c:	mov	rcx, qword ptr [rsp + 8]
0xdd31:	mov	rsi, rax
0xdd34:	mov	rdx, r13
0xdd37:	mov	edi, 1
0xdd3c:	xor	eax, eax
0xdd3e:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0xdd43:	mov	r13, qword ptr [rip + 0x2280d6]
0xdd4a:	lea	rsi, [rip + 0x1d297]
0xdd51:	xor	edi, edi
0xdd53:	mov	edx, 5
0xdd58:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xdd5d:	mov	rsi, r13
0xdd60:	mov	rdi, rax
0xdd63:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0xdd68:	jmp	0xdb97
		Instruction group(s): [7, 1] 

0xdd6d:	nop	dword ptr [rax]
0xdd70:	lea	rsi, [rip + 0x20ca5]
0xdd77:	mov	edx, ebp
0xdd79:	mov	edi, 1
0xdd7e:	xor	eax, eax
0xdd80:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0xdd85:	jmp	0xdbe9
		Instruction group(s): [7, 1] 

0xdd8a:	nop	word ptr [rax + rax]
0xdd90:	lea	rsi, [rip + 0x1d281]
0xdd97:	xor	edi, edi
0xdd99:	mov	edx, 5
0xdd9e:	mov	qword ptr [rsp + 0x10], r8
0xdda3:	mov	qword ptr [rsp + 8], rcx
0xdda8:	add	rbx, 8
0xddac:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xddb1:	mov	r8, qword ptr [rsp + 0x10]
0xddb6:	mov	rcx, qword ptr [rsp + 8]
0xddbb:	mov	rsi, rax
0xddbe:	mov	rdx, r13
0xddc1:	xor	eax, eax
0xddc3:	mov	edi, 1
0xddc8:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0xddcd:	cmp	r12, rbx
0xddd0:	ja	0xdaa0
		Instruction group(s): [7, 1] 

0xddd6:	jmp	0xdc45
		Instruction group(s): [7, 1] 

0xdddb:	nop	dword ptr [rax + rax]
0xdde0:	mov	rcx, qword ptr [rip + 0x228039]
0xdde7:	lea	rdi, [rip + 0x20cae]
0xddee:	mov	edx, 3
0xddf3:	mov	esi, 1
0xddf8:	xor	r14d, r14d
0xddfb:	call	0x8c80
		Instruction group(s): [2, 7, 145] 

0xde00:	mov	rbx, qword ptr [rip + 0x228019]
0xde07:	lea	rsi, [rip + 0x1d1da]
0xde0e:	xor	edi, edi
0xde10:	mov	edx, 5
0xde15:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xde1a:	mov	rsi, rbx
0xde1d:	mov	rdi, rax
0xde20:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0xde25:	jmp	0xdc85
		Instruction group(s): [7, 1] 

0xde2a:	nop	word ptr [rax + rax]
0xde30:	lea	rdi, [rip + 0x205ab]
0xde37:	add	rbx, 8
0xde3b:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0xde40:	cmp	r12, rbx
0xde43:	ja	0xdaa0
		Instruction group(s): [7, 1] 

0xde49:	jmp	0xdc45
		Instruction group(s): [7, 1] 

0xde4e:	nop	
0xde50:	lea	rsi, [rip + 0x1d175]
0xde57:	xor	edi, edi
0xde59:	mov	edx, 5
0xde5e:	add	rbx, 8
0xde62:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xde67:	mov	rdx, r13
0xde6a:	mov	rsi, rax
0xde6d:	mov	edi, 1
0xde72:	xor	eax, eax
0xde74:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0xde79:	cmp	r12, rbx
0xde7c:	ja	0xdaa0
		Instruction group(s): [7, 1] 

0xde82:	jmp	0xdc45
		Instruction group(s): [7, 1] 

0xde87:	nop	word ptr [rax + rax]
0xde90:	mov	rbx, qword ptr [rip + 0x227f89]
0xde97:	lea	rsi, [rip + 0x1d156]
0xde9e:	xor	edi, edi
0xdea0:	mov	edx, 5
0xdea5:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xdeaa:	mov	rsi, rbx
0xdead:	mov	rdi, rax
0xdeb0:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0xdeb5:	jmp	0xdcc9
		Instruction group(s): [7, 1] 

0xdeba:	nop	word ptr [rax + rax]
0xdec0:	lea	rax, [rip - 0x847]
0xdec7:	mov	qword ptr [rdi + 0x30], rax
0xdecb:	lea	rax, [rip - 0xd72]
0xded2:	mov	qword ptr [rdi + 0x28], rax
0xded6:	mov	rax, qword ptr [rip + 0x2270f3]
0xdedd:	mov	qword ptr [rdi + 0x20], rax
0xdee1:	lea	rax, [rip + 0x1bea8]
0xdee8:	mov	qword ptr [rdi + 0x38], rax
0xdeec:	lea	rax, [rip + 0x1be8d]
0xdef3:	mov	qword ptr [rdi + 0x40], rax
0xdef7:	ret	
		Instruction group(s): [3, 145] 

0xdef8:	nop	dword ptr [rax + rax]
0xdf00:	lea	r8, [rip - 0xdc7]
0xdf07:	lea	rcx, [rip - 0xe8e]
0xdf0e:	lea	rdx, [rip - 0xed5]
0xdf15:	lea	rdi, [rip + 0x227fe4]
0xdf1c:	sub	rsp, 8
0xdf20:	mov	esi, 0xc7
0xdf25:	call	0x29440
		Instruction group(s): [2, 7, 145] 

0xdf2a:	lea	r8, [rip - 0xd11]
0xdf31:	lea	rcx, [rip - 0xf08]
0xdf38:	lea	rdx, [rip - 0xf1f]
0xdf3f:	lea	rdi, [rip + 0x22801a]
0xdf46:	mov	esi, 0xc7
0xdf4b:	add	rsp, 8
0xdf4f:	jmp	0x29440
		Instruction group(s): [7, 1] 

0xdf54:	nop	word ptr cs:[rax + rax]
0xdf5e:	nop	
0xdf60:	mov	rax, qword ptr [rip + 0x22b541]
0xdf67:	test	rax, rax
0xdf6a:	je	0xdf70
		Instruction group(s): [7, 1] 

0xdf6c:	ret	
		Instruction group(s): [3, 145] 

0xdf6e:	nop	
0xdf70:	sub	rsp, 8
0xdf74:	mov	edi, 0xc8
0xdf79:	mov	dword ptr [rip + 0x228035], 0xc8
0xdf83:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0xdf88:	mov	qword ptr [rip + 0x22b519], rax
0xdf8f:	mov	byte ptr [rax], 0
0xdf92:	mov	rax, qword ptr [rip + 0x22b50f]
0xdf99:	add	rsp, 8
0xdf9d:	ret	
		Instruction group(s): [3, 145] 

0xdf9e:	nop	
0xdfa0:	mov	rcx, rdi
0xdfa3:	mov	rdi, qword ptr [rip + 0x22b4fe]
0xdfaa:	push	r12
		Instruction group(s): [145] 

0xdfac:	push	rbp
		Instruction group(s): [145] 

0xdfad:	mov	rbp, rcx
0xdfb0:	push	rbx
		Instruction group(s): [145] 

0xdfb1:	mov	ebx, edx
0xdfb3:	mov	r12, rsi
0xdfb6:	mov	esi, dword ptr [rip + 0x227ffc]
0xdfbc:	sub	rbp, rdi
0xdfbf:	lea	eax, [rbx + rbp]
		Instruction group(s): [145] 

0xdfc2:	lea	edx, [rax + 5]
		Instruction group(s): [145] 

0xdfc5:	cmp	edx, esi
0xdfc7:	jbe	0xdfea
		Instruction group(s): [7, 1] 

0xdfc9:	add	eax, 0x64
0xdfcc:	add	esi, esi
0xdfce:	cmp	esi, eax
0xdfd0:	cmovb	esi, eax
		Instruction group(s): [137] 

0xdfd3:	mov	dword ptr [rip + 0x227fdf], esi
0xdfd9:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0xdfde:	mov	ecx, ebp
0xdfe0:	mov	qword ptr [rip + 0x22b4c1], rax
0xdfe7:	add	rcx, rax
0xdfea:	mov	rdx, rbx
0xdfed:	mov	rsi, r12
0xdff0:	mov	rdi, rcx
0xdff3:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0xdff8:	lea	rax, [rax + rbx]
0xdffc:	pop	rbx
		Instruction group(s): [145] 

0xdffd:	pop	rbp
		Instruction group(s): [145] 

0xdffe:	pop	r12
		Instruction group(s): [145] 

0xe000:	ret	
		Instruction group(s): [3, 145] 

0xe001:	nop	dword ptr [rax + rax]
0xe006:	nop	word ptr cs:[rax + rax]
0xe010:	push	rbp
		Instruction group(s): [145] 

0xe011:	mov	rbp, rsp
0xe014:	push	r13
		Instruction group(s): [145] 

0xe016:	push	r12
		Instruction group(s): [145] 

0xe018:	push	rbx
		Instruction group(s): [145] 

0xe019:	sub	rsp, 0x28
0xe01d:	mov	rax, qword ptr fs:[0x28]
0xe026:	mov	qword ptr [rbp - 0x28], rax
0xe02a:	xor	eax, eax
0xe02c:	cmp	rdi, rsi
0xe02f:	je	0xe130
		Instruction group(s): [7, 1] 

0xe035:	test	rsi, rsi
0xe038:	mov	r12, rdi
0xe03b:	je	0xe0f0
		Instruction group(s): [7, 1] 

0xe041:	cmp	byte ptr [rsi], 0
0xe044:	je	0xe0f0
		Instruction group(s): [7, 1] 

0xe04a:	mov	rbx, rsi
0xe04d:	sub	rbx, rdi
0xe050:	cmp	rbx, 0x3e7
0xe057:	jg	0xe140
		Instruction group(s): [7, 1] 

0xe05d:	lea	rax, [rbx + 0x1f]
0xe061:	xor	r13d, r13d
0xe064:	and	rax, 0xfffffffffffffff0
0xe068:	sub	rsp, rax
0xe06b:	lea	rcx, [rsp + 0xf]
0xe070:	and	rcx, 0xfffffffffffffff0
0xe074:	mov	rdi, rcx
0xe077:	mov	rdx, rbx
0xe07a:	mov	rsi, r12
0xe07d:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0xe082:	mov	byte ptr [rax + rbx], 0
0xe086:	mov	ebx, dword ptr [rip + 0x227f2c]
0xe08c:	mov	rdx, -1
0xe093:	mov	r12, qword ptr [rip + 0x22b40e]
0xe09a:	mov	rsi, rax
0xe09d:	xor	edi, edi
0xe09f:	mov	qword ptr [rip + 0x22b3fe], 0
0xe0aa:	call	0xe160
		Instruction group(s): [2, 7, 145] 

0xe0af:	mov	rdi, r13
0xe0b2:	mov	qword ptr [rbp - 0x38], rax
0xe0b6:	mov	qword ptr [rip + 0x22b3eb], r12
0xe0bd:	mov	dword ptr [rip + 0x227ef5], ebx
0xe0c3:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0xe0c8:	mov	rax, qword ptr [rbp - 0x38]
0xe0cc:	mov	rdx, qword ptr [rbp - 0x28]
0xe0d0:	xor	rdx, qword ptr fs:[0x28]
0xe0d9:	jne	0xe153
		Instruction group(s): [7, 1] 

0xe0db:	lea	rsp, [rbp - 0x18]
0xe0df:	pop	rbx
		Instruction group(s): [145] 

0xe0e0:	pop	r12
		Instruction group(s): [145] 

0xe0e2:	pop	r13
		Instruction group(s): [145] 

0xe0e4:	pop	rbp
		Instruction group(s): [145] 

0xe0e5:	ret	
		Instruction group(s): [3, 145] 

0xe0e6:	nop	word ptr cs:[rax + rax]
0xe0f0:	mov	r13, qword ptr [rip + 0x22b3b1]
0xe0f7:	mov	ebx, dword ptr [rip + 0x227ebb]
0xe0fd:	mov	rdx, -1
0xe104:	mov	rsi, r12
0xe107:	xor	edi, edi
0xe109:	mov	qword ptr [rip + 0x22b394], 0
0xe114:	call	0xe160
		Instruction group(s): [2, 7, 145] 

0xe119:	mov	qword ptr [rip + 0x22b388], r13
0xe120:	mov	dword ptr [rip + 0x227e92], ebx
0xe126:	jmp	0xe0cc
		Instruction group(s): [7, 1] 

0xe128:	nop	dword ptr [rax + rax]
0xe130:	lea	rdi, [rip + 0x1f896]
0xe137:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0xe13c:	jmp	0xe0cc
		Instruction group(s): [7, 1] 

0xe13e:	nop	
0xe140:	lea	edi, [rbx + 1]
		Instruction group(s): [145] 

0xe143:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0xe148:	mov	rcx, rax
0xe14b:	mov	r13, rax
0xe14e:	jmp	0xe074
		Instruction group(s): [7, 1] 

0xe153:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0xe158:	nop	dword ptr [rax + rax]
0xe160:	push	rbp
		Instruction group(s): [145] 

0xe161:	mov	rax, rdi
0xe164:	mov	rbp, rsp
0xe167:	push	r15
		Instruction group(s): [145] 

0xe169:	push	r14
		Instruction group(s): [145] 

0xe16b:	push	r13
		Instruction group(s): [145] 

0xe16d:	push	r12
		Instruction group(s): [145] 

0xe16f:	push	rbx
		Instruction group(s): [145] 

0xe170:	sub	rsp, 0x88
0xe177:	mov	qword ptr [rbp - 0x60], rdi
0xe17b:	mov	rdi, rsi
0xe17e:	mov	rcx, qword ptr fs:[0x28]
0xe187:	mov	qword ptr [rbp - 0x38], rcx
0xe18b:	xor	ecx, ecx
0xe18d:	test	rax, rax
0xe190:	je	0xe748
		Instruction group(s): [7, 1] 

0xe196:	test	rdx, rdx
0xe199:	je	0xe6c8
		Instruction group(s): [7, 1] 

0xe19f:	mov	rax, qword ptr [rip + 0x22b302]
0xe1a6:	mov	qword ptr [rbp - 0x90], rax
0xe1ad:	js	0xe280
		Instruction group(s): [7, 1] 

0xe1b3:	mov	esi, edx
0xe1b5:	call	0x1bae0
		Instruction group(s): [2, 7, 145] 

0xe1ba:	mov	qword ptr [rbp - 0x80], rax
0xe1be:	lea	rax, [rbp - 0x48]
0xe1c2:	mov	rbx, qword ptr [rbp - 0x60]
0xe1c6:	mov	r12, qword ptr [rbp - 0x80]
0xe1ca:	mov	qword ptr [rbp - 0x70], rax
0xe1ce:	lea	rax, [rbp - 0x40]
0xe1d2:	mov	qword ptr [rbp - 0x78], rax
0xe1d6:	nop	word ptr cs:[rax + rax]
0xe1e0:	mov	esi, 0x24
0xe1e5:	mov	rdi, r12
0xe1e8:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0xe1ed:	test	rax, rax
0xe1f0:	mov	r15, rax
0xe1f3:	je	0xe2e0
		Instruction group(s): [7, 1] 

0xe1f9:	mov	rdx, rax
0xe1fc:	mov	rsi, r12
0xe1ff:	mov	rdi, rbx
0xe202:	sub	rdx, r12
0xe205:	lea	r14, [r15 + 1]
0xe209:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0xe20e:	movzx	r12d, byte ptr [r15 + 1]
0xe213:	mov	rbx, rax
0xe216:	cmp	r12b, 0x24
0xe21a:	je	0xe380
		Instruction group(s): [7, 1] 

0xe220:	jg	0xe290
		Instruction group(s): [7, 1] 

0xe222:	test	r12b, r12b
0xe225:	jne	0xe300
		Instruction group(s): [7, 1] 

0xe22b:	mov	rdi, qword ptr [rbp - 0x80]
0xe22f:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0xe234:	lea	rsi, [rip + 0x1f792]
0xe23b:	mov	edx, 1
0xe240:	mov	rdi, rbx
0xe243:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0xe248:	mov	eax, dword ptr [rbp - 0x60]
0xe24b:	sub	eax, dword ptr [rbp - 0x90]
0xe251:	add	rax, qword ptr [rip + 0x22b250]
0xe258:	mov	rcx, qword ptr [rbp - 0x38]
0xe25c:	xor	rcx, qword ptr fs:[0x28]
0xe265:	jne	0xe868
		Instruction group(s): [7, 1] 

0xe26b:	lea	rsp, [rbp - 0x28]
0xe26f:	pop	rbx
		Instruction group(s): [145] 

0xe270:	pop	r12
		Instruction group(s): [145] 

0xe272:	pop	r13
		Instruction group(s): [145] 

0xe274:	pop	r14
		Instruction group(s): [145] 

0xe276:	pop	r15
		Instruction group(s): [145] 

0xe278:	pop	rbp
		Instruction group(s): [145] 

0xe279:	ret	
		Instruction group(s): [3, 145] 

0xe27a:	nop	word ptr [rax + rax]
0xe280:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0xe285:	mov	qword ptr [rbp - 0x80], rax
0xe289:	jmp	0xe1be
		Instruction group(s): [7, 1] 

0xe28e:	nop	
0xe290:	cmp	r12b, 0x28
0xe294:	je	0xe470
		Instruction group(s): [7, 1] 

0xe29a:	cmp	r12b, 0x7b
0xe29e:	jne	0xe300
		Instruction group(s): [7, 1] 

0xe2a0:	mov	byte ptr [rbp - 0x68], 0x7d
0xe2a4:	mov	rsi, qword ptr [rbp - 0x70]
0xe2a8:	mov	rdi, qword ptr [rbp - 0x78]
0xe2ac:	mov	qword ptr [rbp - 0x40], rbx
0xe2b0:	mov	qword ptr [rbp - 0x48], r14
0xe2b4:	call	0x14200
		Instruction group(s): [2, 7, 145] 

0xe2b9:	test	eax, eax
0xe2bb:	je	0xe3a0
		Instruction group(s): [7, 1] 

0xe2c1:	mov	r14, qword ptr [rbp - 0x48]
0xe2c5:	mov	rbx, qword ptr [rbp - 0x40]
0xe2c9:	movzx	eax, byte ptr [r14]
0xe2cd:	test	al, al
0xe2cf:	je	0xe22b
		Instruction group(s): [7, 1] 

0xe2d5:	lea	r12, [r14 + 1]
0xe2d9:	jmp	0xe1e0
		Instruction group(s): [7, 1] 

0xe2de:	nop	
0xe2e0:	mov	rdi, r12
0xe2e3:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xe2e8:	lea	edx, [rax + 1]
		Instruction group(s): [145] 

0xe2eb:	mov	rdi, rbx
0xe2ee:	mov	rsi, r12
0xe2f1:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0xe2f6:	mov	rbx, rax
0xe2f9:	jmp	0xe22b
		Instruction group(s): [7, 1] 

0xe2fe:	nop	
0xe300:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0xe305:	movzx	edx, byte ptr [r15]
0xe309:	mov	rax, qword ptr [rax]
0xe30c:	test	byte ptr [rax + rdx*2], 1
0xe310:	jne	0xe2d5
		Instruction group(s): [7, 1] 

0xe312:	mov	esi, 1
0xe317:	mov	rdi, r14
0xe31a:	call	0x27020
		Instruction group(s): [2, 7, 145] 

0xe31f:	test	rax, rax
0xe322:	mov	r12, rax
0xe325:	je	0xe770
		Instruction group(s): [7, 1] 

0xe32b:	mov	r13, qword ptr [rax + 8]
0xe32f:	movzx	eax, byte ptr [rax + 0x24]
0xe333:	cmp	byte ptr [r13], 0
0xe338:	jne	0xe33e
		Instruction group(s): [7, 1] 

0xe33a:	test	al, 2
0xe33c:	je	0xe36e
		Instruction group(s): [7, 1] 

0xe33e:	test	al, 1
0xe340:	jne	0xe808
		Instruction group(s): [7, 1] 

0xe346:	mov	rdi, r13
0xe349:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xe34e:	mov	rdi, rbx
0xe351:	mov	edx, eax
0xe353:	mov	rsi, r13
0xe356:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0xe35b:	test	byte ptr [r12 + 0x24], 1
0xe361:	mov	rbx, rax
0xe364:	je	0xe36e
		Instruction group(s): [7, 1] 

0xe366:	mov	rdi, r13
0xe369:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0xe36e:	movzx	eax, byte ptr [r15 + 1]
0xe373:	jmp	0xe2cd
		Instruction group(s): [7, 1] 

0xe378:	nop	dword ptr [rax + rax]
0xe380:	mov	edx, 1
0xe385:	mov	rsi, r14
0xe388:	mov	rdi, rax
0xe38b:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0xe390:	mov	rbx, rax
0xe393:	movzx	eax, byte ptr [r15 + 1]
0xe398:	jmp	0xe2cd
		Instruction group(s): [7, 1] 

0xe39d:	nop	dword ptr [rax]
0xe3a0:	movsx	esi, byte ptr [rbp - 0x68]
0xe3a4:	lea	rdi, [r15 + 2]
0xe3a8:	mov	dword ptr [rbp - 0x88], eax
0xe3ae:	mov	qword ptr [rbp - 0x58], rdi
0xe3b2:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0xe3b7:	test	rax, rax
0xe3ba:	mov	r13, rax
0xe3bd:	mov	r8d, dword ptr [rbp - 0x88]
0xe3c4:	je	0xe86d
		Instruction group(s): [7, 1] 

0xe3ca:	mov	r14, qword ptr [rbp - 0x58]
0xe3ce:	mov	edx, 0x24
0xe3d3:	mov	rsi, rax
0xe3d6:	mov	dword ptr [rbp - 0x88], r8d
0xe3dd:	mov	rdi, r14
0xe3e0:	call	0x1bb20
		Instruction group(s): [2, 7, 145] 

0xe3e5:	test	rax, rax
0xe3e8:	je	0xe480
		Instruction group(s): [7, 1] 

0xe3ee:	movzx	eax, byte ptr [r15 + 2]
0xe3f3:	test	al, al
0xe3f5:	je	0xe827
		Instruction group(s): [7, 1] 

0xe3fb:	mov	r8d, dword ptr [rbp - 0x88]
0xe402:	movzx	edx, byte ptr [rbp - 0x68]
0xe406:	jmp	0xe420
		Instruction group(s): [7, 1] 

0xe408:	nop	dword ptr [rax + rax]
0xe410:	cmp	dl, al
0xe412:	je	0xe440
		Instruction group(s): [7, 1] 

0xe414:	add	r14, 1
0xe418:	movzx	eax, byte ptr [r14]
0xe41c:	test	al, al
0xe41e:	je	0xe435
		Instruction group(s): [7, 1] 

0xe420:	cmp	r12b, al
0xe423:	jne	0xe410
		Instruction group(s): [7, 1] 

0xe425:	add	r14, 1
0xe429:	movzx	eax, byte ptr [r14]
0xe42d:	add	r8d, 1
0xe431:	test	al, al
0xe433:	jne	0xe420
		Instruction group(s): [7, 1] 

0xe435:	mov	qword ptr [rbp - 0x68], 0
0xe43d:	jmp	0xe48b
		Instruction group(s): [7, 1] 

0xe43f:	nop	
0xe440:	sub	r8d, 1
0xe444:	cmp	r8d, -1
0xe448:	jne	0xe414
		Instruction group(s): [7, 1] 

0xe44a:	mov	rdi, qword ptr [rbp - 0x58]
0xe44e:	mov	rsi, r14
0xe451:	call	0xe010
		Instruction group(s): [2, 7, 145] 

0xe456:	mov	r15, rax
0xe459:	mov	rdi, rax
0xe45c:	mov	qword ptr [rbp - 0x58], rax
0xe460:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xe465:	mov	qword ptr [rbp - 0x68], r15
0xe469:	lea	r13, [r15 + rax]
0xe46d:	jmp	0xe48b
		Instruction group(s): [7, 1] 

0xe46f:	nop	
0xe470:	mov	byte ptr [rbp - 0x68], 0x29
0xe474:	jmp	0xe2a4
		Instruction group(s): [7, 1] 

0xe479:	nop	dword ptr [rax]
0xe480:	mov	r14, r13
0xe483:	mov	qword ptr [rbp - 0x68], 0
0xe48b:	mov	rdi, qword ptr [rbp - 0x58]
0xe48f:	mov	edx, 0x3a
0xe494:	mov	rsi, r13
0xe497:	call	0x1bb20
		Instruction group(s): [2, 7, 145] 

0xe49c:	test	rax, rax
0xe49f:	mov	r15, rax
0xe4a2:	je	0xe668
		Instruction group(s): [7, 1] 

0xe4a8:	lea	r12, [rax + 1]
0xe4ac:	mov	edx, 0x3d
0xe4b1:	mov	rsi, r13
0xe4b4:	mov	rdi, r12
0xe4b7:	call	0x1bb20
		Instruction group(s): [2, 7, 145] 

0xe4bc:	test	rax, rax
0xe4bf:	mov	qword ptr [rbp - 0x88], rax
0xe4c6:	je	0xe668
		Instruction group(s): [7, 1] 

0xe4cc:	mov	rdi, qword ptr [rbp - 0x58]
0xe4d0:	sub	r15, rdi
0xe4d3:	mov	esi, r15d
0xe4d6:	call	0x27020
		Instruction group(s): [2, 7, 145] 

0xe4db:	test	rax, rax
0xe4de:	mov	r11, rax
0xe4e1:	mov	rcx, qword ptr [rbp - 0x88]
0xe4e8:	je	0xe700
		Instruction group(s): [7, 1] 

0xe4ee:	mov	r10, qword ptr [rax + 8]
0xe4f2:	cmp	byte ptr [r10], 0
0xe4f6:	je	0xe650
		Instruction group(s): [7, 1] 

0xe4fc:	test	byte ptr [r11 + 0x24], 1
0xe501:	jne	0xe830
		Instruction group(s): [7, 1] 

0xe507:	lea	r8, [rcx + 1]
0xe50b:	sub	rcx, r12
0xe50e:	mov	rsi, r12
0xe511:	lea	rax, [rcx + 0x20]
0xe515:	mov	rdx, rcx
0xe518:	mov	qword ptr [rbp - 0xa8], r11
0xe51f:	mov	qword ptr [rbp - 0xa0], r10
0xe526:	mov	qword ptr [rbp - 0x98], r8
0xe52d:	and	rax, 0xfffffffffffffff0
0xe531:	mov	qword ptr [rbp - 0x88], rcx
0xe538:	sub	rsp, rax
0xe53b:	lea	r15, [rsp + 0xf]
0xe540:	and	r15, 0xfffffffffffffff0
0xe544:	lea	rax, [r15 + 1]
0xe548:	mov	byte ptr [r15], 0x25
0xe54c:	mov	rdi, rax
0xe54f:	mov	qword ptr [rbp - 0x58], rax
0xe553:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0xe558:	mov	r8, qword ptr [rbp - 0x98]
0xe55f:	mov	rcx, qword ptr [rbp - 0x88]
0xe566:	sub	r13, r8
0xe569:	mov	byte ptr [r15 + rcx + 1], 0
0xe56f:	mov	rsi, r8
0xe572:	lea	rax, [r13 + 0x20]
0xe576:	mov	r12, r13
0xe579:	mov	rdx, r12
0xe57c:	and	rax, 0xfffffffffffffff0
0xe580:	sub	rsp, rax
0xe583:	lea	r13, [rsp + 0xf]
0xe588:	and	r13, 0xfffffffffffffff0
0xe58c:	lea	r9, [r13 + 1]
0xe590:	mov	byte ptr [r13], 0x25
0xe595:	mov	rdi, r9
0xe598:	mov	qword ptr [rbp - 0x88], r9
0xe59f:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0xe5a4:	mov	rdi, qword ptr [rbp - 0x58]
0xe5a8:	mov	byte ptr [r13 + r12 + 1], 0
0xe5ae:	call	0x1e250
		Instruction group(s): [2, 7, 145] 

0xe5b3:	test	rax, rax
0xe5b6:	mov	r9, qword ptr [rbp - 0x88]
0xe5bd:	mov	r10, qword ptr [rbp - 0xa0]
0xe5c4:	mov	r11, qword ptr [rbp - 0xa8]
0xe5cb:	je	0xe614
		Instruction group(s): [7, 1] 

0xe5cd:	mov	rdi, r9
0xe5d0:	mov	qword ptr [rbp - 0xa0], r11
0xe5d7:	mov	qword ptr [rbp - 0x98], r10
0xe5de:	lea	r12, [rax + 1]
0xe5e2:	call	0x1e250
		Instruction group(s): [2, 7, 145] 

0xe5e7:	mov	r9, qword ptr [rbp - 0x88]
0xe5ee:	test	rax, rax
0xe5f1:	mov	r10, qword ptr [rbp - 0x98]
0xe5f8:	mov	r11, qword ptr [rbp - 0xa0]
0xe5ff:	mov	r13, r9
0xe602:	je	0xe858
		Instruction group(s): [7, 1] 

0xe608:	lea	r9, [rax + 1]
0xe60c:	mov	r15, qword ptr [rbp - 0x58]
0xe610:	mov	qword ptr [rbp - 0x58], r12
0xe614:	mov	r8, qword ptr [rbp - 0x58]
0xe618:	mov	rsi, r10
0xe61b:	mov	rdi, rbx
0xe61e:	mov	rcx, r13
0xe621:	mov	rdx, r15
0xe624:	mov	qword ptr [rbp - 0x88], r11
0xe62b:	mov	qword ptr [rbp - 0x58], r10
0xe62f:	call	0x12ef0
		Instruction group(s): [2, 7, 145] 

0xe634:	mov	r11, qword ptr [rbp - 0x88]
0xe63b:	mov	rbx, rax
0xe63e:	mov	r10, qword ptr [rbp - 0x58]
0xe642:	test	byte ptr [r11 + 0x24], 1
0xe647:	jne	0xe81a
		Instruction group(s): [7, 1] 

0xe64d:	nop	dword ptr [rax]
0xe650:	mov	rdi, qword ptr [rbp - 0x68]
0xe654:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0xe659:	movzx	eax, byte ptr [r14]
0xe65d:	jmp	0xe2cd
		Instruction group(s): [7, 1] 

0xe662:	nop	word ptr [rax + rax]
0xe668:	mov	rdi, qword ptr [rbp - 0x58]
0xe66c:	sub	r13, rdi
0xe66f:	mov	esi, r13d
0xe672:	call	0x27020
		Instruction group(s): [2, 7, 145] 

0xe677:	test	rax, rax
0xe67a:	mov	r12, rax
0xe67d:	je	0xe7c0
		Instruction group(s): [7, 1] 

0xe683:	mov	r13, qword ptr [rax + 8]
0xe687:	movzx	eax, byte ptr [rax + 0x24]
0xe68b:	cmp	byte ptr [r13], 0
0xe690:	jne	0xe696
		Instruction group(s): [7, 1] 

0xe692:	test	al, 2
0xe694:	je	0xe650
		Instruction group(s): [7, 1] 

0xe696:	test	al, 1
0xe698:	jne	0xe6f0
		Instruction group(s): [7, 1] 

0xe69a:	mov	rdi, r13
0xe69d:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xe6a2:	mov	rdi, rbx
0xe6a5:	mov	edx, eax
0xe6a7:	mov	rsi, r13
0xe6aa:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0xe6af:	test	byte ptr [r12 + 0x24], 1
0xe6b5:	mov	rbx, rax
0xe6b8:	je	0xe650
		Instruction group(s): [7, 1] 

0xe6ba:	mov	rdi, r13
0xe6bd:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0xe6c2:	jmp	0xe650
		Instruction group(s): [7, 1] 

0xe6c4:	nop	dword ptr [rax]
0xe6c8:	mov	rdi, qword ptr [rbp - 0x60]
0xe6cc:	lea	rsi, [rip + 0x1f2fa]
0xe6d3:	mov	edx, 1
0xe6d8:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0xe6dd:	mov	rax, qword ptr [rip + 0x22adc4]
0xe6e4:	jmp	0xe258
		Instruction group(s): [7, 1] 

0xe6e9:	nop	dword ptr [rax]
0xe6f0:	xor	esi, esi
0xe6f2:	mov	rdi, r12
0xe6f5:	call	0xea10
		Instruction group(s): [2, 7, 145] 

0xe6fa:	mov	r13, rax
0xe6fd:	jmp	0xe69a
		Instruction group(s): [7, 1] 

0xe6ff:	nop	
0xe700:	mov	ecx, dword ptr [rip + 0x22ae6a]
0xe706:	test	ecx, ecx
0xe708:	je	0xe650
		Instruction group(s): [7, 1] 

0xe70e:	lea	rsi, [rip + 0x1c9a3]
0xe715:	xor	edi, edi
0xe717:	mov	edx, 5
0xe71c:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xe721:	mov	r8, qword ptr [rbp - 0x58]
0xe725:	mov	rdi, qword ptr [rip + 0x22a3c4]
0xe72c:	mov	rdx, rax
0xe72f:	mov	ecx, r15d
0xe732:	mov	rsi, r15
0xe735:	xor	eax, eax
0xe737:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0xe73c:	jmp	0xe650
		Instruction group(s): [7, 1] 

0xe741:	nop	dword ptr [rax]
0xe748:	mov	qword ptr [rbp - 0x68], rdx
0xe74c:	mov	qword ptr [rbp - 0x58], rsi
0xe750:	call	0xdf60
		Instruction group(s): [2, 7, 145] 

0xe755:	mov	rdx, qword ptr [rbp - 0x68]
0xe759:	mov	qword ptr [rbp - 0x60], rax
0xe75d:	mov	rdi, qword ptr [rbp - 0x58]
0xe761:	jmp	0xe196
		Instruction group(s): [7, 1] 

0xe766:	nop	word ptr cs:[rax + rax]
0xe770:	mov	eax, dword ptr [rip + 0x22adfa]
0xe776:	test	eax, eax
0xe778:	je	0xe36e
		Instruction group(s): [7, 1] 

0xe77e:	lea	rsi, [rip + 0x1c933]
0xe785:	mov	edx, 5
0xe78a:	xor	edi, edi
0xe78c:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xe791:	mov	rdi, qword ptr [rip + 0x22a358]
0xe798:	mov	rdx, rax
0xe79b:	mov	r8, r14
0xe79e:	xor	eax, eax
0xe7a0:	mov	ecx, 1
0xe7a5:	mov	esi, 1
0xe7aa:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0xe7af:	movzx	eax, byte ptr [r15 + 1]
0xe7b4:	jmp	0xe2cd
		Instruction group(s): [7, 1] 

0xe7b9:	nop	dword ptr [rax]
0xe7c0:	mov	edx, dword ptr [rip + 0x22adaa]
0xe7c6:	test	edx, edx
0xe7c8:	je	0xe650
		Instruction group(s): [7, 1] 

0xe7ce:	lea	rsi, [rip + 0x1c8e3]
0xe7d5:	xor	edi, edi
0xe7d7:	mov	edx, 5
0xe7dc:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xe7e1:	mov	r8, qword ptr [rbp - 0x58]
0xe7e5:	mov	rdi, qword ptr [rip + 0x22a304]
0xe7ec:	mov	rdx, rax
0xe7ef:	mov	esi, r13d
0xe7f2:	mov	ecx, r13d
0xe7f5:	xor	eax, eax
0xe7f7:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0xe7fc:	jmp	0xe650
		Instruction group(s): [7, 1] 

0xe801:	nop	dword ptr [rax]
0xe808:	xor	esi, esi
0xe80a:	mov	rdi, r12
0xe80d:	call	0xea10
		Instruction group(s): [2, 7, 145] 

0xe812:	mov	r13, rax
0xe815:	jmp	0xe346
		Instruction group(s): [7, 1] 

0xe81a:	mov	rdi, r10
0xe81d:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0xe822:	jmp	0xe650
		Instruction group(s): [7, 1] 

0xe827:	mov	r14, qword ptr [rbp - 0x58]
0xe82b:	jmp	0xe435
		Instruction group(s): [7, 1] 

0xe830:	mov	rdi, r11
0xe833:	xor	esi, esi
0xe835:	mov	qword ptr [rbp - 0x88], rcx
0xe83c:	mov	qword ptr [rbp - 0x58], r11
0xe840:	call	0xea10
		Instruction group(s): [2, 7, 145] 

0xe845:	mov	rcx, qword ptr [rbp - 0x88]
0xe84c:	mov	r10, rax
0xe84f:	mov	r11, qword ptr [rbp - 0x58]
0xe853:	jmp	0xe507
		Instruction group(s): [7, 1] 

0xe858:	mov	r15, qword ptr [rbp - 0x58]
0xe85c:	xor	r9d, r9d
0xe85f:	mov	qword ptr [rbp - 0x58], r12
0xe863:	jmp	0xe614
		Instruction group(s): [7, 1] 

0xe868:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0xe86d:	lea	rsi, [rip + 0x1c824]
0xe874:	mov	edx, 5
0xe879:	xor	edi, edi
0xe87b:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xe880:	mov	rdx, rax
0xe883:	mov	rax, qword ptr [rip + 0x22708e]
0xe88a:	xor	esi, esi
0xe88c:	mov	rdi, qword ptr [rax]
0xe88f:	xor	eax, eax
0xe891:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0xe896:	nop	word ptr cs:[rax + rax]
0xe8a0:	test	ecx, ecx
0xe8a2:	push	r14
		Instruction group(s): [145] 

0xe8a4:	mov	r14d, esi
0xe8a7:	push	r13
		Instruction group(s): [145] 

0xe8a9:	mov	r13, rdi
0xe8ac:	push	r12
		Instruction group(s): [145] 

0xe8ae:	mov	r12d, ecx
0xe8b1:	push	rbp
		Instruction group(s): [145] 

0xe8b2:	push	rbx
		Instruction group(s): [145] 

0xe8b3:	mov	rbx, rdx
0xe8b6:	je	0xe91a
		Instruction group(s): [7, 1] 

0xe8b8:	mov	eax, dword ptr [rbx + 0x10]
0xe8bb:	test	eax, eax
0xe8bd:	jne	0xe91a
		Instruction group(s): [7, 1] 

0xe8bf:	mov	rdx, qword ptr [rbx + 8]
0xe8c3:	mov	esi, r14d
0xe8c6:	mov	rdi, r13
0xe8c9:	call	0x27200
		Instruction group(s): [2, 7, 145] 

0xe8ce:	test	rax, rax
0xe8d1:	mov	rbp, rax
0xe8d4:	jne	0xe980
		Instruction group(s): [7, 1] 

0xe8da:	mov	rbx, qword ptr [rbx]
0xe8dd:	mov	eax, dword ptr [rbx + 0x10]
0xe8e0:	test	eax, eax
0xe8e2:	je	0xe8bf
		Instruction group(s): [7, 1] 

0xe8e4:	jmp	0xe91a
		Instruction group(s): [7, 1] 

0xe8e6:	nop	word ptr cs:[rax + rax]
0xe8f0:	mov	rdx, qword ptr [rbx + 8]
0xe8f4:	mov	esi, r14d
0xe8f7:	mov	rdi, r13
0xe8fa:	call	0x27200
		Instruction group(s): [2, 7, 145] 

0xe8ff:	test	rax, rax
0xe902:	mov	rbp, rax
0xe905:	je	0xe914
		Instruction group(s): [7, 1] 

0xe907:	test	r12d, r12d
0xe90a:	movzx	eax, byte ptr [rax + 0x24]
0xe90e:	jne	0xe92c
		Instruction group(s): [7, 1] 

0xe910:	test	al, al
0xe912:	jns	0xe930
		Instruction group(s): [7, 1] 

0xe914:	mov	rbx, qword ptr [rbx]
0xe917:	xor	r12d, r12d
0xe91a:	test	rbx, rbx
0xe91d:	jne	0xe8f0
		Instruction group(s): [7, 1] 

0xe91f:	pop	rbx
		Instruction group(s): [145] 

0xe920:	pop	rbp
		Instruction group(s): [145] 

0xe921:	pop	r12
		Instruction group(s): [145] 

0xe923:	pop	r13
		Instruction group(s): [145] 

0xe925:	pop	r14
		Instruction group(s): [145] 

0xe927:	jmp	0xdf60
		Instruction group(s): [7, 1] 

0xe92c:	xor	r12d, r12d
0xe92f:	nop	
0xe930:	test	al, 2
0xe932:	jne	0xe9a8
		Instruction group(s): [7, 1] 

0xe934:	call	0xdf60
		Instruction group(s): [2, 7, 145] 

0xe939:	mov	rbx, rax
0xe93c:	cmp	qword ptr [rip + 0x22ab65], rbx
0xe943:	jb	0xe9c5
		Instruction group(s): [7, 1] 

0xe949:	mov	r12, qword ptr [rbp + 8]
0xe94d:	mov	rdi, r12
0xe950:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xe955:	test	byte ptr [rbp + 0x24], 1
0xe959:	je	0xe990
		Instruction group(s): [7, 1] 

0xe95b:	mov	rsi, r12
0xe95e:	mov	rdi, rbx
0xe961:	mov	rdx, rax
0xe964:	call	0xe160
		Instruction group(s): [2, 7, 145] 

0xe969:	mov	rbx, rax
0xe96c:	mov	rdi, rax
0xe96f:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xe974:	add	rax, rbx
0xe977:	pop	rbx
		Instruction group(s): [145] 

0xe978:	pop	rbp
		Instruction group(s): [145] 

0xe979:	pop	r12
		Instruction group(s): [145] 

0xe97b:	pop	r13
		Instruction group(s): [145] 

0xe97d:	pop	r14
		Instruction group(s): [145] 

0xe97f:	ret	
		Instruction group(s): [3, 145] 

0xe980:	movzx	eax, byte ptr [rax + 0x24]
0xe984:	test	al, 2
0xe986:	je	0xe934
		Instruction group(s): [7, 1] 

0xe988:	jmp	0xe9a8
		Instruction group(s): [7, 1] 

0xe98a:	nop	word ptr [rax + rax]
0xe990:	mov	rsi, r12
0xe993:	mov	rdi, rbx
0xe996:	mov	edx, eax
0xe998:	pop	rbx
		Instruction group(s): [145] 

0xe999:	pop	rbp
		Instruction group(s): [145] 

0xe99a:	pop	r12
		Instruction group(s): [145] 

0xe99c:	pop	r13
		Instruction group(s): [145] 

0xe99e:	pop	r14
		Instruction group(s): [145] 

0xe9a0:	jmp	0xdfa0
		Instruction group(s): [7, 1] 

0xe9a5:	nop	dword ptr [rax]
0xe9a8:	mov	rdx, qword ptr [rbx]
0xe9ab:	mov	ecx, r12d
0xe9ae:	mov	esi, r14d
0xe9b1:	mov	rdi, r13
0xe9b4:	call	0xe8a0
		Instruction group(s): [2, 7, 145] 

0xe9b9:	mov	rbx, rax
0xe9bc:	cmp	qword ptr [rip + 0x22aae5], rbx
0xe9c3:	jae	0xe949
		Instruction group(s): [7, 1] 

0xe9c5:	lea	rsi, [rip + 0x1f65e]
0xe9cc:	mov	rdi, rbx
0xe9cf:	mov	edx, 1
0xe9d4:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0xe9d9:	mov	rbx, rax
0xe9dc:	jmp	0xe949
		Instruction group(s): [7, 1] 

0xe9e1:	nop	dword ptr [rax + rax]
0xe9e6:	nop	word ptr cs:[rax + rax]
0xe9f0:	mov	rsi, rdi
0xe9f3:	mov	rdx, -1
0xe9fa:	xor	edi, edi
0xe9fc:	jmp	0xe160
		Instruction group(s): [7, 1] 

0xea01:	nop	dword ptr [rax + rax]
0xea06:	nop	word ptr cs:[rax + rax]
0xea10:	push	r15
		Instruction group(s): [145] 

0xea12:	push	r14
		Instruction group(s): [145] 

0xea14:	push	r13
		Instruction group(s): [145] 

0xea16:	push	r12
		Instruction group(s): [145] 

0xea18:	push	rbp
		Instruction group(s): [145] 

0xea19:	push	rbx
		Instruction group(s): [145] 

0xea1a:	mov	rbp, rsi
0xea1d:	mov	rbx, rdi
0xea20:	sub	rsp, 0x28
0xea24:	mov	r13, qword ptr [rip + 0x226eed]
0xea2b:	mov	rax, qword ptr fs:[0x28]
0xea34:	mov	qword ptr [rsp + 0x18], rax
0xea39:	xor	eax, eax
0xea3b:	cmp	qword ptr [rdi + 0x10], 0
0xea40:	je	0xea57
		Instruction group(s): [7, 1] 

0xea42:	lea	rax, [rdi + 0x10]
0xea46:	mov	qword ptr [rsp + 0x10], rax
0xea4b:	lea	rax, [rsp + 0x10]
0xea50:	mov	qword ptr [rip + 0x226ec1], rax
0xea57:	xor	r12d, r12d
0xea5a:	cmp	qword ptr [rip + 0x22a08e], 0
0xea62:	je	0xebc0
		Instruction group(s): [7, 1] 

0xea68:	test	byte ptr [rbx + 0x24], 0x40
0xea6c:	je	0xea99
		Instruction group(s): [7, 1] 

0xea6e:	mov	eax, dword ptr [rbx + 0x24]
0xea71:	test	eax, 0x7fff00
0xea76:	je	0xebd6
		Instruction group(s): [7, 1] 

0xea7c:	mov	edx, eax
0xea7e:	and	eax, 0xff8000ff
0xea83:	shr	edx, 8
0xea86:	add	dx, 0x7fff
0xea8b:	and	edx, 0x7fff
0xea91:	shl	edx, 8
0xea94:	or	eax, edx
0xea96:	mov	dword ptr [rbx + 0x24], eax
0xea99:	xor	r14d, r14d
0xea9c:	test	rbp, rbp
0xea9f:	je	0xeab3
		Instruction group(s): [7, 1] 

0xeaa1:	mov	rax, qword ptr [rbp + 0x50]
0xeaa5:	mov	r14, qword ptr [rip + 0x227324]
0xeaac:	mov	qword ptr [rip + 0x22731d], rax
0xeab3:	movzx	eax, byte ptr [rbx + 0x24]
0xeab7:	mov	r8, qword ptr [rip + 0x22a9ea]
0xeabe:	mov	r15d, dword ptr [rip + 0x2274f3]
0xeac5:	or	eax, 0x40
0xeac8:	test	al, 2
0xeaca:	mov	byte ptr [rbx + 0x24], al
0xeacd:	jne	0xeb50
		Instruction group(s): [7, 1] 

0xead3:	mov	rsi, qword ptr [rbx + 8]
0xead7:	mov	rdx, -1
0xeade:	xor	edi, edi
0xeae0:	mov	qword ptr [rsp], r8
0xeae4:	mov	qword ptr [rip + 0x22a9b9], 0
0xeaef:	call	0xe160
		Instruction group(s): [2, 7, 145] 

0xeaf4:	mov	r8, qword ptr [rsp]
0xeaf8:	mov	dword ptr [rip + 0x2274b9], r15d
0xeaff:	mov	qword ptr [rip + 0x22a9a2], r8
0xeb06:	and	byte ptr [rbx + 0x24], 0xbf
0xeb0a:	test	r12d, r12d
0xeb0d:	je	0xeb1a
		Instruction group(s): [7, 1] 

0xeb0f:	mov	qword ptr [rip + 0x229fd6], 0
0xeb1a:	test	rbp, rbp
0xeb1d:	je	0xeb26
		Instruction group(s): [7, 1] 

0xeb1f:	mov	qword ptr [rip + 0x2272aa], r14
0xeb26:	mov	rcx, qword ptr [rsp + 0x18]
0xeb2b:	xor	rcx, qword ptr fs:[0x28]
0xeb34:	mov	qword ptr [rip + 0x226ddd], r13
0xeb3b:	jne	0xec18
		Instruction group(s): [7, 1] 

0xeb41:	add	rsp, 0x28
0xeb45:	pop	rbx
		Instruction group(s): [145] 

0xeb46:	pop	rbp
		Instruction group(s): [145] 

0xeb47:	pop	r12
		Instruction group(s): [145] 

0xeb49:	pop	r13
		Instruction group(s): [145] 

0xeb4b:	pop	r14
		Instruction group(s): [145] 

0xeb4d:	pop	r15
		Instruction group(s): [145] 

0xeb4f:	ret	
		Instruction group(s): [3, 145] 

0xeb50:	mov	r9, qword ptr [rbx]
0xeb53:	mov	qword ptr [rsp + 8], r8
0xeb58:	mov	qword ptr [rip + 0x22a945], 0
0xeb63:	mov	rdi, r9
0xeb66:	mov	qword ptr [rsp], r9
0xeb6a:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xeb6f:	mov	r9, qword ptr [rsp]
0xeb73:	mov	rdx, qword ptr [rip + 0x227256]
0xeb7a:	mov	ecx, 1
0xeb7f:	mov	esi, eax
0xeb81:	mov	rdi, r9
0xeb84:	call	0xe8a0
		Instruction group(s): [2, 7, 145] 

0xeb89:	lea	rsi, [rip + 0x1ee3d]
0xeb90:	mov	edx, 1
0xeb95:	mov	rdi, rax
0xeb98:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0xeb9d:	mov	r8, qword ptr [rsp + 8]
0xeba2:	mov	rax, qword ptr [rip + 0x22a8ff]
0xeba9:	mov	dword ptr [rip + 0x227408], r15d
0xebb0:	mov	qword ptr [rip + 0x22a8f1], r8
0xebb7:	jmp	0xeb06
		Instruction group(s): [7, 1] 

0xebbc:	nop	dword ptr [rax]
0xebc0:	lea	rax, [rbx + 0x10]
0xebc4:	mov	r12d, 1
0xebca:	mov	qword ptr [rip + 0x229f1f], rax
0xebd1:	jmp	0xea68
		Instruction group(s): [7, 1] 

0xebd6:	lea	rsi, [rip + 0x1c503]
0xebdd:	mov	edx, 5
0xebe2:	xor	edi, edi
0xebe4:	mov	rbp, qword ptr [rbx]
0xebe7:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xebec:	mov	rdi, qword ptr [rbx]
0xebef:	mov	rdx, rax
0xebf2:	or	rcx, 0xffffffffffffffff
0xebf6:	xor	eax, eax
0xebf8:	repne scasb	al, byte ptr [rdi]
0xebfa:	mov	rax, rcx
0xebfd:	mov	rcx, rbp
0xec00:	not	rax
0xec03:	lea	rsi, [rax - 1]
0xec07:	mov	rax, qword ptr [rip + 0x226d0a]
0xec0e:	mov	rdi, qword ptr [rax]
0xec11:	xor	eax, eax
0xec13:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0xec18:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0xec1d:	nop	dword ptr [rax]
0xec20:	test	rsi, rsi
0xec23:	je	0xec90
		Instruction group(s): [7, 1] 

0xec25:	push	rbp
		Instruction group(s): [145] 

0xec26:	push	rbx
		Instruction group(s): [145] 

0xec27:	sub	rsp, 8
0xec2b:	mov	rax, qword ptr [rsi + 0x50]
0xec2f:	mov	rbp, qword ptr [rip + 0x22719a]
0xec36:	mov	rbx, qword ptr [rip + 0x229eb3]
0xec3d:	mov	qword ptr [rip + 0x22718c], rax
0xec44:	mov	rax, qword ptr [rsi + 0x20]
0xec48:	test	rax, rax
0xec4b:	je	0xec80
		Instruction group(s): [7, 1] 

0xec4d:	cmp	qword ptr [rax], 0
0xec51:	je	0xec80
		Instruction group(s): [7, 1] 

0xec53:	mov	qword ptr [rip + 0x229e96], rax
0xec5a:	mov	rsi, rdi
0xec5d:	mov	rdx, -1
0xec64:	xor	edi, edi
0xec66:	call	0xe160
		Instruction group(s): [2, 7, 145] 

0xec6b:	mov	qword ptr [rip + 0x22715e], rbp
0xec72:	mov	qword ptr [rip + 0x229e77], rbx
0xec79:	add	rsp, 8
0xec7d:	pop	rbx
		Instruction group(s): [145] 

0xec7e:	pop	rbp
		Instruction group(s): [145] 

0xec7f:	ret	
		Instruction group(s): [3, 145] 

0xec80:	mov	qword ptr [rip + 0x229e65], 0
0xec8b:	jmp	0xec5a
		Instruction group(s): [7, 1] 

0xec8d:	nop	dword ptr [rax]
0xec90:	mov	rsi, rdi
0xec93:	mov	rdx, -1
0xec9a:	xor	edi, edi
0xec9c:	jmp	0xe160
		Instruction group(s): [7, 1] 

0xeca1:	nop	dword ptr [rax + rax]
0xeca6:	nop	word ptr cs:[rax + rax]
0xecb0:	push	rbp
		Instruction group(s): [145] 

0xecb1:	push	rbx
		Instruction group(s): [145] 

0xecb2:	sub	rsp, 8
0xecb6:	mov	rbp, qword ptr [rip + 0x22a7eb]
0xecbd:	mov	ebx, dword ptr [rip + 0x2272f5]
0xecc3:	mov	qword ptr [rip + 0x22a7da], 0
0xecce:	call	0xec20
		Instruction group(s): [2, 7, 145] 

0xecd3:	mov	qword ptr [rip + 0x22a7ce], rbp
0xecda:	mov	dword ptr [rip + 0x2272d8], ebx
0xece0:	add	rsp, 8
0xece4:	pop	rbx
		Instruction group(s): [145] 

0xece5:	pop	rbp
		Instruction group(s): [145] 

0xece6:	ret	
		Instruction group(s): [3, 145] 

0xece7:	nop	word ptr [rax + rax]
0xecf0:	mov	rax, qword ptr [rip + 0x22a7b1]
0xecf7:	mov	qword ptr [rdi], rax
0xecfa:	mov	eax, dword ptr [rip + 0x2272b8]
0xed00:	mov	dword ptr [rsi], eax
0xed02:	mov	qword ptr [rip + 0x22a79b], 0
0xed0d:	jmp	0xdf60
		Instruction group(s): [7, 1] 

0xed12:	nop	dword ptr [rax]
0xed16:	nop	word ptr cs:[rax + rax]
0xed20:	push	rbp
		Instruction group(s): [145] 

0xed21:	push	rbx
		Instruction group(s): [145] 

0xed22:	mov	rbp, rdi
0xed25:	mov	ebx, esi
0xed27:	sub	rsp, 8
0xed2b:	mov	rdi, qword ptr [rip + 0x22a776]
0xed32:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0xed37:	mov	qword ptr [rip + 0x22a76a], rbp
0xed3e:	mov	dword ptr [rip + 0x227274], ebx
0xed44:	add	rsp, 8
0xed48:	pop	rbx
		Instruction group(s): [145] 

0xed49:	pop	rbp
		Instruction group(s): [145] 

0xed4a:	ret	
		Instruction group(s): [3, 145] 

0xed4b:	nop	dword ptr [rax + rax]
0xed50:	mov	rdi, qword ptr [rdi + 8]
0xed54:	xor	eax, eax
0xed56:	movzx	esi, byte ptr [rdi]
0xed59:	test	sil, sil
0xed5c:	je	0xed80
		Instruction group(s): [7, 1] 

0xed5e:	nop	
0xed60:	movzx	edx, sil
0xed64:	movzx	esi, byte ptr [rdi + 1]
0xed68:	add	rdi, 1
0xed6c:	mov	ecx, esi
0xed6e:	and	ecx, 0xf
0xed71:	shl	edx, cl
0xed73:	movsxd	rdx, edx
		Instruction group(s): [145] 

0xed76:	add	rax, rdx
0xed79:	test	sil, sil
0xed7c:	jne	0xed60
		Instruction group(s): [7, 1] 

0xed7e:	ret	
		Instruction group(s): [3, 145] 

0xed80:	ret	
		Instruction group(s): [3, 145] 

0xed82:	nop	dword ptr [rax]
0xed86:	nop	word ptr cs:[rax + rax]
0xed90:	mov	rdi, qword ptr [rdi + 8]
0xed94:	xor	eax, eax
0xed96:	movzx	esi, byte ptr [rdi]
0xed99:	test	sil, sil
0xed9c:	je	0xedc0
		Instruction group(s): [7, 1] 

0xed9e:	nop	
0xeda0:	movzx	edx, sil
0xeda4:	movzx	esi, byte ptr [rdi + 1]
0xeda8:	add	rdi, 1
0xedac:	mov	ecx, esi
0xedae:	and	ecx, 7
0xedb1:	shl	edx, cl
0xedb3:	movsxd	rdx, edx
		Instruction group(s): [145] 

0xedb6:	add	rax, rdx
0xedb9:	test	sil, sil
0xedbc:	jne	0xeda0
		Instruction group(s): [7, 1] 

0xedbe:	ret	
		Instruction group(s): [3, 145] 

0xedc0:	ret	
		Instruction group(s): [3, 145] 

0xedc2:	nop	dword ptr [rax]
0xedc6:	nop	word ptr cs:[rax + rax]
0xedd0:	or	byte ptr [rdi + 0x85], 0x40
0xedd7:	ret	
		Instruction group(s): [3, 145] 

0xedd8:	nop	dword ptr [rax + rax]
0xede0:	and	byte ptr [rdi + 0x85], 0xfd
0xede7:	ret	
		Instruction group(s): [3, 145] 

0xede8:	nop	dword ptr [rax + rax]
0xedf0:	mov	rdi, qword ptr [rdi + 8]
0xedf4:	mov	rsi, qword ptr [rsi + 8]
0xedf8:	cmp	rdi, rsi
0xedfb:	je	0xee08
		Instruction group(s): [7, 1] 

0xedfd:	jmp	0x89e0
		Instruction group(s): [7, 1] 

0xee02:	nop	word ptr [rax + rax]
0xee08:	xor	eax, eax
0xee0a:	ret	
		Instruction group(s): [3, 145] 

0xee0b:	nop	dword ptr [rax + rax]
0xee10:	push	r15
		Instruction group(s): [145] 

0xee12:	push	r14
		Instruction group(s): [145] 

0xee14:	push	r13
		Instruction group(s): [145] 

0xee16:	push	r12
		Instruction group(s): [145] 

0xee18:	push	rbp
		Instruction group(s): [145] 

0xee19:	push	rbx
		Instruction group(s): [145] 

0xee1a:	mov	rbx, rdi
0xee1d:	sub	rsp, 8
0xee21:	mov	rdi, qword ptr [rdi]
0xee24:	test	rdi, rdi
0xee27:	je	0xee32
		Instruction group(s): [7, 1] 

0xee29:	cmp	byte ptr [rdi], 0
0xee2c:	jne	0xf0b8
		Instruction group(s): [7, 1] 

0xee32:	mov	rdi, qword ptr [rbx + 8]
0xee36:	test	rdi, rdi
0xee39:	je	0xee44
		Instruction group(s): [7, 1] 

0xee3b:	cmp	byte ptr [rdi], 0
0xee3e:	jne	0xf050
		Instruction group(s): [7, 1] 

0xee44:	mov	rdi, qword ptr [rbx + 0x10]
0xee48:	test	rdi, rdi
0xee4b:	je	0xee56
		Instruction group(s): [7, 1] 

0xee4d:	cmp	byte ptr [rdi], 0
0xee50:	jne	0xefe8
		Instruction group(s): [7, 1] 

0xee56:	mov	rdi, qword ptr [rbx + 0x28]
0xee5a:	test	rdi, rdi
0xee5d:	je	0xee68
		Instruction group(s): [7, 1] 

0xee5f:	cmp	byte ptr [rdi], 0
0xee62:	jne	0xef80
		Instruction group(s): [7, 1] 

0xee68:	mov	rbx, qword ptr [rbx + 0x18]
0xee6c:	test	rbx, rbx
0xee6f:	je	0xef14
		Instruction group(s): [7, 1] 

0xee75:	lea	rbp, [rip + 0x1c29b]
0xee7c:	jmp	0xee8c
		Instruction group(s): [7, 1] 

0xee7e:	nop	
0xee80:	mov	rbx, qword ptr [rbx]
0xee83:	test	rbx, rbx
0xee86:	je	0xef14
		Instruction group(s): [7, 1] 

0xee8c:	test	byte ptr [rbx + 0x21], 4
0xee90:	jne	0xeea4
		Instruction group(s): [7, 1] 

0xee92:	mov	rdi, qword ptr [rbx + 8]
0xee96:	test	rdi, rdi
0xee99:	je	0xeea4
		Instruction group(s): [7, 1] 

0xee9b:	cmp	byte ptr [rdi], 0
0xee9e:	jne	0xef28
		Instruction group(s): [7, 1] 

0xeea4:	mov	rdi, qword ptr [rbx + 0x10]
0xeea8:	test	rdi, rdi
0xeeab:	je	0xee80
		Instruction group(s): [7, 1] 

0xeead:	cmp	byte ptr [rdi], 0
0xeeb0:	je	0xee80
		Instruction group(s): [7, 1] 

0xeeb2:	call	0x25fc0
		Instruction group(s): [2, 7, 145] 

0xeeb7:	test	eax, eax
0xeeb9:	jne	0xee80
		Instruction group(s): [7, 1] 

0xeebb:	mov	edx, 5
0xeec0:	mov	rsi, rbp
0xeec3:	xor	edi, edi
0xeec5:	mov	r14, qword ptr [rbx + 0x10]
0xeec9:	mov	r13, qword ptr [rbx + 8]
0xeecd:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xeed2:	mov	rdi, qword ptr [rbx + 8]
0xeed6:	mov	r12, rax
0xeed9:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xeede:	mov	rdi, qword ptr [rbx + 0x10]
0xeee2:	mov	r15, rax
0xeee5:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xeeea:	lea	r8, [rip + 0x1c250]
0xeef1:	lea	rsi, [r15 + rax + 4]
0xeef6:	xor	edi, edi
0xeef8:	xor	eax, eax
0xeefa:	mov	r9, r14
0xeefd:	mov	rcx, r13
0xef00:	mov	rdx, r12
0xef03:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0xef08:	mov	rbx, qword ptr [rbx]
0xef0b:	test	rbx, rbx
0xef0e:	jne	0xee8c
		Instruction group(s): [7, 1] 

0xef14:	add	rsp, 8
0xef18:	pop	rbx
		Instruction group(s): [145] 

0xef19:	pop	rbp
		Instruction group(s): [145] 

0xef1a:	pop	r12
		Instruction group(s): [145] 

0xef1c:	pop	r13
		Instruction group(s): [145] 

0xef1e:	pop	r14
		Instruction group(s): [145] 

0xef20:	pop	r15
		Instruction group(s): [145] 

0xef22:	ret	
		Instruction group(s): [3, 145] 

0xef23:	nop	dword ptr [rax + rax]
0xef28:	call	0x25fc0
		Instruction group(s): [2, 7, 145] 

0xef2d:	test	eax, eax
0xef2f:	jne	0xeea4
		Instruction group(s): [7, 1] 

0xef35:	mov	rsi, rbp
0xef38:	mov	edx, 5
0xef3d:	xor	edi, edi
0xef3f:	mov	r12, qword ptr [rbx + 8]
0xef43:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xef48:	mov	rdi, qword ptr [rbx + 8]
0xef4c:	mov	r13, rax
0xef4f:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xef54:	lea	r8, [rip + 0x1f056]
0xef5b:	lea	rsi, [rax + rax + 4]
0xef60:	mov	r9, r12
0xef63:	mov	rcx, r12
0xef66:	mov	rdx, r13
0xef69:	xor	edi, edi
0xef6b:	xor	eax, eax
0xef6d:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0xef72:	jmp	0xeea4
		Instruction group(s): [7, 1] 

0xef77:	nop	word ptr [rax + rax]
0xef80:	call	0x25fc0
		Instruction group(s): [2, 7, 145] 

0xef85:	test	eax, eax
0xef87:	jne	0xee68
		Instruction group(s): [7, 1] 

0xef8d:	lea	rsi, [rip + 0x1c183]
0xef94:	mov	edx, 5
0xef99:	xor	edi, edi
0xef9b:	mov	r13, qword ptr [rbx + 0x28]
0xef9f:	mov	r12, qword ptr [rbx]
0xefa2:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xefa7:	mov	rdi, qword ptr [rbx]
0xefaa:	mov	rbp, rax
0xefad:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xefb2:	mov	rdi, qword ptr [rbx + 0x28]
0xefb6:	mov	r14, rax
0xefb9:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xefbe:	lea	r8, [rip + 0x1c17c]
0xefc5:	lea	rsi, [r14 + rax + 4]
0xefca:	mov	r9, r13
0xefcd:	mov	rcx, r12
0xefd0:	mov	rdx, rbp
0xefd3:	xor	edi, edi
0xefd5:	xor	eax, eax
0xefd7:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0xefdc:	jmp	0xee68
		Instruction group(s): [7, 1] 

0xefe1:	nop	dword ptr [rax]
0xefe8:	call	0x25fc0
		Instruction group(s): [2, 7, 145] 

0xefed:	test	eax, eax
0xefef:	jne	0xee56
		Instruction group(s): [7, 1] 

0xeff5:	lea	rsi, [rip + 0x1c11b]
0xeffc:	mov	edx, 5
0xf001:	xor	edi, edi
0xf003:	mov	r13, qword ptr [rbx + 0x10]
0xf007:	mov	r12, qword ptr [rbx]
0xf00a:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xf00f:	mov	rdi, qword ptr [rbx]
0xf012:	mov	rbp, rax
0xf015:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xf01a:	mov	rdi, qword ptr [rbx + 0x10]
0xf01e:	mov	r14, rax
0xf021:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xf026:	lea	r8, [rip + 0x1c10e]
0xf02d:	lea	rsi, [r14 + rax + 5]
0xf032:	mov	r9, r13
0xf035:	mov	rcx, r12
0xf038:	mov	rdx, rbp
0xf03b:	xor	edi, edi
0xf03d:	xor	eax, eax
0xf03f:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0xf044:	jmp	0xee56
		Instruction group(s): [7, 1] 

0xf049:	nop	dword ptr [rax]
0xf050:	call	0x25fc0
		Instruction group(s): [2, 7, 145] 

0xf055:	test	eax, eax
0xf057:	jne	0xee44
		Instruction group(s): [7, 1] 

0xf05d:	lea	rsi, [rip + 0x1c0b3]
0xf064:	mov	edx, 5
0xf069:	xor	edi, edi
0xf06b:	mov	r13, qword ptr [rbx + 8]
0xf06f:	mov	r12, qword ptr [rbx]
0xf072:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xf077:	mov	rdi, qword ptr [rbx]
0xf07a:	mov	rbp, rax
0xf07d:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xf082:	mov	rdi, qword ptr [rbx + 8]
0xf086:	mov	r14, rax
0xf089:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xf08e:	lea	r8, [rip + 0x1c0a0]
0xf095:	lea	rsi, [r14 + rax + 5]
0xf09a:	mov	r9, r13
0xf09d:	mov	rcx, r12
0xf0a0:	mov	rdx, rbp
0xf0a3:	xor	edi, edi
0xf0a5:	xor	eax, eax
0xf0a7:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0xf0ac:	jmp	0xee44
		Instruction group(s): [7, 1] 

0xf0b1:	nop	dword ptr [rax]
0xf0b8:	call	0x25fc0
		Instruction group(s): [2, 7, 145] 

0xf0bd:	test	eax, eax
0xf0bf:	jne	0xee32
		Instruction group(s): [7, 1] 

0xf0c5:	lea	rsi, [rip + 0x1c04b]
0xf0cc:	mov	edx, 5
0xf0d1:	xor	edi, edi
0xf0d3:	mov	rbp, qword ptr [rbx]
0xf0d6:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xf0db:	mov	rdi, qword ptr [rbx]
0xf0de:	mov	r12, rax
0xf0e1:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xf0e6:	lea	r8, [rip + 0x1eec4]
0xf0ed:	lea	rsi, [rax + rax + 4]
0xf0f2:	mov	r9, rbp
0xf0f5:	mov	rcx, rbp
0xf0f8:	mov	rdx, r12
0xf0fb:	xor	edi, edi
0xf0fd:	xor	eax, eax
0xf0ff:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0xf104:	jmp	0xee32
		Instruction group(s): [7, 1] 

0xf109:	nop	dword ptr [rax]
0xf110:	sub	rsp, 0x98
0xf117:	mov	rax, qword ptr fs:[0x28]
0xf120:	mov	qword ptr [rsp + 0x88], rax
0xf128:	xor	eax, eax
0xf12a:	movzx	eax, byte ptr [rdi]
0xf12d:	cmp	al, 0x2e
0xf12f:	jne	0xf15f
		Instruction group(s): [7, 1] 

0xf131:	cmp	byte ptr [rdi + 1], 0x2f
0xf135:	jne	0xf16c
		Instruction group(s): [7, 1] 

0xf137:	movzx	eax, byte ptr [rdi + 2]
0xf13b:	test	al, al
0xf13d:	je	0xf16c
		Instruction group(s): [7, 1] 

0xf13f:	add	rdi, 2
0xf143:	cmp	al, 0x2f
0xf145:	jne	0xf12d
		Instruction group(s): [7, 1] 

0xf147:	nop	word ptr [rax + rax]
0xf150:	add	rdi, 1
0xf154:	movzx	eax, byte ptr [rdi]
0xf157:	cmp	al, 0x2f
0xf159:	je	0xf150
		Instruction group(s): [7, 1] 

0xf15b:	cmp	al, 0x2e
0xf15d:	je	0xf131
		Instruction group(s): [7, 1] 

0xf15f:	test	al, al
0xf161:	lea	rax, [rip + 0x1bfde]
0xf168:	cmove	rdi, rax
		Instruction group(s): [137] 

0xf16c:	mov	qword ptr [rsp + 8], rdi
0xf171:	lea	rdi, [rip + 0x226e68]
0xf178:	mov	rsi, rsp
0xf17b:	call	0x29600
		Instruction group(s): [2, 7, 145] 

0xf180:	mov	rdx, qword ptr [rsp + 0x88]
0xf188:	xor	rdx, qword ptr fs:[0x28]
0xf191:	jne	0xf19b
		Instruction group(s): [7, 1] 

0xf193:	add	rsp, 0x98
0xf19a:	ret	
		Instruction group(s): [3, 145] 

0xf19b:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0xf1a0:	push	r13
		Instruction group(s): [145] 

0xf1a2:	push	r12
		Instruction group(s): [145] 

0xf1a4:	mov	r12, rdi
0xf1a7:	push	rbp
		Instruction group(s): [145] 

0xf1a8:	push	rbx
		Instruction group(s): [145] 

0xf1a9:	sub	rsp, 0x98
0xf1b0:	mov	qword ptr [rsp + 8], rdi
0xf1b5:	lea	rdi, [rip + 0x226e24]
0xf1bc:	mov	rsi, rsp
0xf1bf:	mov	rax, qword ptr fs:[0x28]
0xf1c8:	mov	qword ptr [rsp + 0x88], rax
0xf1d0:	xor	eax, eax
0xf1d2:	call	0x29540
		Instruction group(s): [2, 7, 145] 

0xf1d7:	mov	rbp, qword ptr [rax]
0xf1da:	mov	r13, rax
0xf1dd:	test	rbp, rbp
0xf1e0:	je	0xf260
		Instruction group(s): [7, 1] 

0xf1e2:	cmp	qword ptr [rip + 0x226c1f], rbp
0xf1e9:	je	0xf1f6
		Instruction group(s): [7, 1] 

0xf1eb:	cmp	qword ptr [rbp + 0x68], 0
0xf1f0:	je	0xf2a0
		Instruction group(s): [7, 1] 

0xf1f6:	mov	edi, 0x88
0xf1fb:	call	0x1b8c0
		Instruction group(s): [2, 7, 145] 

0xf200:	mov	rbx, rax
0xf203:	mov	qword ptr [rax + 8], r12
0xf207:	mov	qword ptr [rax], r12
0xf20a:	movzx	eax, byte ptr [rax + 0x84]
0xf211:	and	eax, 0xfffffffc
0xf214:	or	eax, 1
0xf217:	cmp	qword ptr [rip + 0x226bea], rbp
0xf21e:	mov	byte ptr [rbx + 0x84], al
0xf224:	je	0xf287
		Instruction group(s): [7, 1] 

0xf226:	mov	rax, qword ptr [rbp + 0x40]
0xf22a:	mov	qword ptr [rbx + 0x68], rbp
0xf22e:	mov	qword ptr [rax + 0x38], rbx
0xf232:	mov	qword ptr [rbp + 0x40], rbx
0xf236:	mov	rcx, qword ptr [rsp + 0x88]
0xf23e:	xor	rcx, qword ptr fs:[0x28]
0xf247:	mov	rax, rbx
0xf24a:	jne	0xf2ac
		Instruction group(s): [7, 1] 

0xf24c:	add	rsp, 0x98
0xf253:	pop	rbx
		Instruction group(s): [145] 

0xf254:	pop	rbp
		Instruction group(s): [145] 

0xf255:	pop	r12
		Instruction group(s): [145] 

0xf257:	pop	r13
		Instruction group(s): [145] 

0xf259:	ret	
		Instruction group(s): [3, 145] 

0xf25a:	nop	word ptr [rax + rax]
0xf260:	mov	edi, 0x88
0xf265:	call	0x1b8c0
		Instruction group(s): [2, 7, 145] 

0xf26a:	mov	rbx, rax
0xf26d:	mov	qword ptr [rax + 8], r12
0xf271:	mov	qword ptr [rax], r12
0xf274:	movzx	eax, byte ptr [rax + 0x84]
0xf27b:	and	eax, 0xfffffffc
0xf27e:	or	eax, 1
0xf281:	mov	byte ptr [rbx + 0x84], al
0xf287:	lea	rdi, [rip + 0x226d52]
0xf28e:	mov	qword ptr [rbx + 0x40], rbx
0xf292:	mov	rdx, r13
0xf295:	mov	rsi, rbx
0xf298:	call	0x29630
		Instruction group(s): [2, 7, 145] 

0xf29d:	jmp	0xf236
		Instruction group(s): [7, 1] 

0xf29f:	nop	
0xf2a0:	and	byte ptr [rbp + 0x84], 0xef
0xf2a7:	mov	rbx, rbp
0xf2aa:	jmp	0xf236
		Instruction group(s): [7, 1] 

0xf2ac:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0xf2b1:	nop	dword ptr [rax + rax]
0xf2b6:	nop	word ptr cs:[rax + rax]
0xf2c0:	push	r15
		Instruction group(s): [145] 

0xf2c2:	push	r14
		Instruction group(s): [145] 

0xf2c4:	push	r13
		Instruction group(s): [145] 

0xf2c6:	push	r12
		Instruction group(s): [145] 

0xf2c8:	push	rbp
		Instruction group(s): [145] 

0xf2c9:	push	rbx
		Instruction group(s): [145] 

0xf2ca:	sub	rsp, 0xa8
0xf2d1:	mov	rbp, qword ptr [rdi + 8]
0xf2d5:	and	byte ptr [rdi + 0x84], 0xef
0xf2dc:	mov	rax, qword ptr fs:[0x28]
0xf2e5:	mov	qword ptr [rsp + 0x98], rax
0xf2ed:	xor	eax, eax
0xf2ef:	mov	qword ptr [rsp + 0x18], rsi
0xf2f4:	cmp	rsi, rbp
0xf2f7:	je	0xf5f4
		Instruction group(s): [7, 1] 

0xf2fd:	mov	rbx, rdi
0xf300:	mov	rdi, rbp
0xf303:	mov	r12, rsi
0xf306:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0xf30b:	test	eax, eax
0xf30d:	je	0xf5f4
		Instruction group(s): [7, 1] 

0xf313:	mov	qword ptr [rsp + 0x18], rbp
0xf318:	jmp	0xf323
		Instruction group(s): [7, 1] 

0xf31a:	nop	word ptr [rax + rax]
0xf320:	mov	rbx, rax
0xf323:	mov	rax, qword ptr [rbx + 0x48]
0xf327:	test	rax, rax
0xf32a:	jne	0xf320
		Instruction group(s): [7, 1] 

0xf32c:	mov	rdi, qword ptr [rbx + 8]
0xf330:	cmp	rbp, rdi
0xf333:	je	0xf345
		Instruction group(s): [7, 1] 

0xf335:	mov	rsi, rbp
0xf338:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0xf33d:	test	eax, eax
0xf33f:	jne	0xf69e
		Instruction group(s): [7, 1] 

0xf345:	lea	rdi, [rip + 0x226c94]
0xf34c:	mov	rsi, rbx
0xf34f:	call	0x297e0
		Instruction group(s): [2, 7, 145] 

0xf354:	cmp	rbx, rax
0xf357:	jne	0xf69e
		Instruction group(s): [7, 1] 

0xf35d:	lea	rsi, [rsp + 0x10]
0xf362:	lea	rdi, [rip + 0x226c77]
0xf369:	mov	qword ptr [rsp + 0x18], r12
0xf36e:	call	0x29540
		Instruction group(s): [2, 7, 145] 

0xf373:	mov	rcx, qword ptr [rbx + 0x68]
0xf377:	mov	rbp, qword ptr [rax]
0xf37a:	mov	qword ptr [rbx + 8], r12
0xf37e:	test	rcx, rcx
0xf381:	je	0xf395
		Instruction group(s): [7, 1] 

0xf383:	nop	dword ptr [rax + rax]
0xf388:	mov	qword ptr [rcx + 8], r12
0xf38c:	mov	rcx, qword ptr [rcx + 0x38]
0xf390:	test	rcx, rcx
0xf393:	jne	0xf388
		Instruction group(s): [7, 1] 

0xf395:	test	rbp, rbp
0xf398:	je	0xf620
		Instruction group(s): [7, 1] 

0xf39e:	cmp	qword ptr [rip + 0x226a63], rbp
0xf3a5:	je	0xf620
		Instruction group(s): [7, 1] 

0xf3ab:	mov	rax, qword ptr [rbx + 0x20]
0xf3af:	test	rax, rax
0xf3b2:	je	0xf49d
		Instruction group(s): [7, 1] 

0xf3b8:	mov	r13, qword ptr [rbp + 0x20]
0xf3bc:	test	r13, r13
0xf3bf:	je	0xf690
		Instruction group(s): [7, 1] 

0xf3c5:	cmp	rax, r13
0xf3c8:	je	0xf49d
		Instruction group(s): [7, 1] 

0xf3ce:	mov	r15, qword ptr [rbx]
0xf3d1:	mov	rdi, r15
0xf3d4:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xf3d9:	mov	r8, qword ptr [r13]
0xf3dd:	mov	r14, rax
0xf3e0:	test	r8, r8
0xf3e3:	mov	qword ptr [rsp], r8
0xf3e7:	je	0xf65a
		Instruction group(s): [7, 1] 

0xf3ed:	mov	r9, qword ptr [r13 + 8]
0xf3f1:	lea	rsi, [rip + 0x1bf38]
0xf3f8:	mov	edx, 5
0xf3fd:	xor	edi, edi
0xf3ff:	mov	qword ptr [rsp + 8], r9
0xf404:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xf409:	mov	r13, rax
0xf40c:	mov	rax, qword ptr [rbp + 0x20]
0xf410:	mov	rdi, qword ptr [rax]
0xf413:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xf418:	mov	rdi, qword ptr [rbx + 0x20]
0xf41c:	mov	r9, qword ptr [rsp + 8]
0xf421:	lea	rsi, [r14 + rax + 0x14]
0xf426:	mov	r8, qword ptr [rsp]
0xf42a:	mov	rcx, r15
0xf42d:	mov	rdx, r13
0xf430:	xor	eax, eax
0xf432:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0xf437:	mov	rdi, r12
0xf43a:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xf43f:	lea	rsi, [rip + 0x1bf52]
0xf446:	lea	r13, [rax + r14]
0xf44a:	mov	edx, 5
0xf44f:	mov	r14, qword ptr [rbx]
0xf452:	xor	edi, edi
0xf454:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xf459:	mov	rdi, qword ptr [rbx + 0x20]
0xf45d:	mov	r8, r12
0xf460:	mov	rdx, rax
0xf463:	mov	rcx, r14
0xf466:	mov	rsi, r13
0xf469:	xor	eax, eax
0xf46b:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0xf470:	lea	rsi, [rip + 0x1bf59]
0xf477:	mov	r14, qword ptr [rbx]
0xf47a:	mov	edx, 5
0xf47f:	xor	edi, edi
0xf481:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xf486:	mov	rdi, qword ptr [rbx + 0x20]
0xf48a:	mov	rdx, rax
0xf48d:	mov	r8, r14
0xf490:	mov	rcx, r12
0xf493:	mov	rsi, r13
0xf496:	xor	eax, eax
0xf498:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0xf49d:	mov	rdx, qword ptr [rbp + 0x18]
0xf4a1:	mov	rcx, qword ptr [rbx + 0x18]
0xf4a5:	test	rdx, rdx
0xf4a8:	jne	0xf4b3
		Instruction group(s): [7, 1] 

0xf4aa:	mov	qword ptr [rbp + 0x18], rcx
0xf4ae:	jmp	0xf4be
		Instruction group(s): [7, 1] 

0xf4b0:	mov	rdx, rax
0xf4b3:	mov	rax, qword ptr [rdx]
0xf4b6:	test	rax, rax
0xf4b9:	jne	0xf4b0
		Instruction group(s): [7, 1] 

0xf4bb:	mov	qword ptr [rdx], rcx
0xf4be:	mov	rsi, qword ptr [rbx + 0x50]
0xf4c2:	lea	rdi, [rbp + 0x50]
0xf4c6:	call	0x27390
		Instruction group(s): [2, 7, 145] 

0xf4cb:	cmp	qword ptr [rbp + 0x68], 0
0xf4d0:	je	0xf638
		Instruction group(s): [7, 1] 

0xf4d6:	test	byte ptr [rbx + 0x85], 8
0xf4dd:	je	0xf4ea
		Instruction group(s): [7, 1] 

0xf4df:	cmp	qword ptr [rbx + 0x68], 0
0xf4e4:	je	0xf6f2
		Instruction group(s): [7, 1] 

0xf4ea:	movzx	ecx, byte ptr [rbp + 0x85]
0xf4f1:	mov	rax, qword ptr [rbx + 0x70]
0xf4f5:	cmp	rax, qword ptr [rbp + 0x70]
0xf4f9:	jbe	0xf4ff
		Instruction group(s): [7, 1] 

0xf4fb:	mov	qword ptr [rbp + 0x70], rax
0xf4ff:	mov	rax, qword ptr [rbx + 0x78]
0xf503:	movzx	esi, byte ptr [rbx + 0x84]
0xf50a:	mov	qword ptr [rbp + 0x78], rax
0xf50e:	movzx	eax, byte ptr [rbp + 0x84]
0xf515:	or	esi, eax
0xf517:	and	eax, 0xffffffdf
0xf51a:	and	esi, 0x20
0xf51d:	or	esi, eax
0xf51f:	mov	byte ptr [rbp + 0x84], sil
0xf526:	movzx	edx, byte ptr [rbx + 0x85]
0xf52d:	or	edx, ecx
0xf52f:	and	ecx, 0xfffffffe
0xf532:	and	edx, 1
0xf535:	or	edx, ecx
0xf537:	mov	byte ptr [rbp + 0x85], dl
0xf53d:	movzx	eax, byte ptr [rbx + 0x85]
0xf544:	or	eax, edx
0xf546:	and	edx, 0xfffffffd
0xf549:	and	eax, 2
0xf54c:	or	eax, edx
0xf54e:	mov	byte ptr [rbp + 0x85], al
0xf554:	movzx	ecx, byte ptr [rbx + 0x85]
0xf55b:	or	ecx, eax
0xf55d:	and	eax, 0xfffffffb
0xf560:	and	ecx, 4
0xf563:	or	ecx, eax
0xf565:	mov	byte ptr [rbp + 0x85], cl
0xf56b:	movzx	edx, byte ptr [rbx + 0x85]
0xf572:	or	edx, ecx
0xf574:	and	ecx, 0xfffffff7
0xf577:	and	edx, 8
0xf57a:	or	edx, ecx
0xf57c:	mov	byte ptr [rbp + 0x85], dl
0xf582:	movzx	eax, byte ptr [rbx + 0x85]
0xf589:	or	eax, edx
0xf58b:	and	edx, 0xffffffef
0xf58e:	and	eax, 0x10
0xf591:	or	eax, edx
0xf593:	mov	byte ptr [rbp + 0x85], al
0xf599:	movzx	edx, byte ptr [rbx + 0x85]
0xf5a0:	or	edx, eax
0xf5a2:	and	eax, 0xffffffdf
0xf5a5:	and	edx, 0x20
0xf5a8:	or	eax, edx
0xf5aa:	mov	byte ptr [rbp + 0x85], al
0xf5b0:	movzx	eax, byte ptr [rbx + 0x84]
0xf5b7:	or	eax, esi
0xf5b9:	and	esi, 0xffffffbf
0xf5bc:	and	eax, 0x40
0xf5bf:	or	esi, eax
0xf5c1:	movzx	eax, byte ptr [rbp + 0x86]
0xf5c8:	mov	byte ptr [rbp + 0x84], sil
0xf5cf:	movzx	edx, byte ptr [rbx + 0x86]
0xf5d6:	or	edx, eax
0xf5d8:	and	eax, 0xfffffffd
0xf5db:	and	esi, 0xffffffef
0xf5de:	and	edx, 2
0xf5e1:	mov	byte ptr [rbp + 0x84], sil
0xf5e8:	or	eax, edx
0xf5ea:	mov	byte ptr [rbp + 0x86], al
0xf5f0:	mov	qword ptr [rbx + 0x48], rbp
0xf5f4:	mov	rax, qword ptr [rsp + 0x98]
0xf5fc:	xor	rax, qword ptr fs:[0x28]
0xf605:	jne	0xf699
		Instruction group(s): [7, 1] 

0xf60b:	add	rsp, 0xa8
0xf612:	pop	rbx
		Instruction group(s): [145] 

0xf613:	pop	rbp
		Instruction group(s): [145] 

0xf614:	pop	r12
		Instruction group(s): [145] 

0xf616:	pop	r13
		Instruction group(s): [145] 

0xf618:	pop	r14
		Instruction group(s): [145] 

0xf61a:	pop	r15
		Instruction group(s): [145] 

0xf61c:	ret	
		Instruction group(s): [3, 145] 

0xf61d:	nop	dword ptr [rax]
0xf620:	lea	rdi, [rip + 0x2269b9]
0xf627:	mov	rdx, rax
0xf62a:	mov	rsi, rbx
0xf62d:	call	0x29630
		Instruction group(s): [2, 7, 145] 

0xf632:	jmp	0xf5f4
		Instruction group(s): [7, 1] 

0xf634:	nop	dword ptr [rax]
0xf638:	mov	rax, qword ptr [rbx + 0x68]
0xf63c:	movzx	ecx, byte ptr [rbp + 0x85]
0xf643:	test	rax, rax
0xf646:	je	0xf4f1
		Instruction group(s): [7, 1] 

0xf64c:	test	cl, 8
0xf64f:	jne	0xf6a3
		Instruction group(s): [7, 1] 

0xf651:	mov	qword ptr [rbp + 0x68], rax
0xf655:	jmp	0xf4f1
		Instruction group(s): [7, 1] 

0xf65a:	lea	rsi, [rip + 0x1bcff]
0xf661:	xor	edi, edi
0xf663:	mov	edx, 5
0xf668:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xf66d:	mov	rdi, qword ptr [rbx + 0x20]
0xf671:	mov	rdx, rax
0xf674:	mov	rcx, r15
0xf677:	mov	rsi, r14
0xf67a:	xor	eax, eax
0xf67c:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0xf681:	jmp	0xf437
		Instruction group(s): [7, 1] 

0xf686:	nop	word ptr cs:[rax + rax]
0xf690:	mov	qword ptr [rbp + 0x20], rax
0xf694:	jmp	0xf49d
		Instruction group(s): [7, 1] 

0xf699:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0xf69e:	call	0x8650
		Instruction group(s): [2, 7, 145] 

0xf6a3:	mov	rbp, qword ptr [rbx]
0xf6a6:	lea	rsi, [rip + 0x1bd9b]
0xf6ad:	mov	edx, 5
0xf6b2:	xor	edi, edi
0xf6b4:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xf6b9:	mov	rdi, qword ptr [rbx]
0xf6bc:	or	r8, 0xffffffffffffffff
0xf6c0:	mov	rdx, rax
0xf6c3:	mov	rcx, r8
0xf6c6:	xor	eax, eax
0xf6c8:	repne scasb	al, byte ptr [rdi]
0xf6ca:	mov	rdi, r12
0xf6cd:	mov	rsi, rcx
0xf6d0:	mov	rcx, r8
0xf6d3:	mov	r8, r12
0xf6d6:	repne scasb	al, byte ptr [rdi]
0xf6d8:	not	rsi
0xf6db:	xor	edi, edi
0xf6dd:	mov	rax, rcx
0xf6e0:	mov	rcx, rbp
0xf6e3:	not	rax
0xf6e6:	lea	rsi, [rsi + rax - 2]
0xf6eb:	xor	eax, eax
0xf6ed:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0xf6f2:	mov	rbp, qword ptr [rbx]
0xf6f5:	mov	edx, 5
0xf6fa:	lea	rsi, [rip + 0x1bd0f]
0xf701:	jmp	0xf6b2
		Instruction group(s): [7, 1] 

0xf703:	nop	dword ptr [rax]
0xf706:	nop	word ptr cs:[rax + rax]
0xf710:	push	rbx
		Instruction group(s): [145] 

0xf711:	mov	rbx, rdi
0xf714:	call	0xf2c0
		Instruction group(s): [2, 7, 145] 

0xf719:	test	rbx, rbx
0xf71c:	je	0xf730
		Instruction group(s): [7, 1] 

0xf71e:	nop	
0xf720:	mov	rax, qword ptr [rbx + 8]
0xf724:	mov	qword ptr [rbx], rax
0xf727:	mov	rbx, qword ptr [rbx + 0x38]
0xf72b:	test	rbx, rbx
0xf72e:	jne	0xf720
		Instruction group(s): [7, 1] 

0xf730:	pop	rbx
		Instruction group(s): [145] 

0xf731:	ret	
		Instruction group(s): [3, 145] 

0xf732:	nop	dword ptr [rax]
0xf736:	nop	word ptr cs:[rax + rax]
0xf740:	mov	r10d, dword ptr [rip + 0x226c95]
0xf747:	test	r10d, r10d
0xf74a:	jne	0xf920
		Instruction group(s): [7, 1] 

0xf750:	mov	r9d, dword ptr [rip + 0x229ead]
0xf757:	test	r9d, r9d
0xf75a:	jne	0xf920
		Instruction group(s): [7, 1] 

0xf760:	mov	r8d, dword ptr [rip + 0x226869]
0xf767:	test	r8d, r8d
0xf76a:	jne	0xf920
		Instruction group(s): [7, 1] 

0xf770:	test	edi, edi
0xf772:	je	0xf782
		Instruction group(s): [7, 1] 

0xf774:	mov	esi, dword ptr [rip + 0x229db6]
0xf77a:	test	esi, esi
0xf77c:	jne	0xf920
		Instruction group(s): [7, 1] 

0xf782:	push	r15
		Instruction group(s): [145] 

0xf784:	push	r14
		Instruction group(s): [145] 

0xf786:	push	r13
		Instruction group(s): [145] 

0xf788:	push	r12
		Instruction group(s): [145] 

0xf78a:	push	rbp
		Instruction group(s): [145] 

0xf78b:	push	rbx
		Instruction group(s): [145] 

0xf78c:	sub	rsp, 0x18
0xf790:	mov	rbx, qword ptr [rip + 0x226849]
0xf797:	mov	rax, qword ptr [rip + 0x226862]
0xf79e:	lea	r13, [rbx + rax*8]
0xf7a2:	cmp	rbx, r13
0xf7a5:	jae	0xf928
		Instruction group(s): [7, 1] 

0xf7ab:	mov	r12d, edi
0xf7ae:	xor	r14d, r14d
0xf7b1:	nop	dword ptr [rax]
0xf7b8:	mov	rbp, qword ptr [rbx]
0xf7bb:	test	rbp, rbp
0xf7be:	je	0xf8d8
		Instruction group(s): [7, 1] 

0xf7c4:	cmp	rbp, qword ptr [rip + 0x22663d]
0xf7cb:	je	0xf8d8
		Instruction group(s): [7, 1] 

0xf7d1:	movzx	eax, byte ptr [rbp + 0x85]
0xf7d8:	test	al, 0x40
0xf7da:	je	0xf8d8
		Instruction group(s): [7, 1] 

0xf7e0:	mov	edx, dword ptr [rbp + 0x84]
0xf7e6:	and	edx, 0x10020
0xf7ec:	cmp	edx, 0x20
0xf7ef:	je	0xf8d8
		Instruction group(s): [7, 1] 

0xf7f5:	test	al, 0x90
0xf7f7:	jne	0xf8d8
		Instruction group(s): [7, 1] 

0xf7fd:	movzx	eax, byte ptr [rbp + 0x84]
0xf804:	and	eax, 3
0xf807:	cmp	al, 1
0xf809:	je	0xf8d8
		Instruction group(s): [7, 1] 

0xf80f:	mov	ecx, dword ptr [rip + 0x229d1b]
0xf815:	xor	r15d, r15d
0xf818:	test	ecx, ecx
0xf81a:	je	0xf940
		Instruction group(s): [7, 1] 

0xf820:	test	byte ptr [rbp + 0x86], 1
0xf827:	jne	0xf8d8
		Instruction group(s): [7, 1] 

0xf82d:	test	r12d, r12d
0xf830:	jne	0xf98b
		Instruction group(s): [7, 1] 

0xf836:	test	r14d, r14d
0xf839:	jne	0xf967
		Instruction group(s): [7, 1] 

0xf83f:	test	byte ptr [rip + 0x226bb2], 1
0xf846:	je	0xf876
		Instruction group(s): [7, 1] 

0xf848:	lea	rsi, [rip + 0x1bc59]
0xf84f:	mov	edx, 5
0xf854:	xor	edi, edi
0xf856:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xf85b:	mov	edi, 1
0xf860:	mov	rsi, rax
0xf863:	xor	eax, eax
0xf865:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0xf86a:	mov	rdi, qword ptr [rip + 0x2265af]
0xf871:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0xf876:	mov	edx, dword ptr [rip + 0x229c44]
0xf87c:	test	edx, edx
0xf87e:	jne	0xf8bf
		Instruction group(s): [7, 1] 

0xf880:	mov	rcx, qword ptr [rip + 0x226599]
0xf887:	lea	rdi, [rip + 0x1b8bb]
0xf88e:	mov	edx, 3
0xf893:	mov	esi, 1
0xf898:	call	0x8c80
		Instruction group(s): [2, 7, 145] 

0xf89d:	mov	rsi, qword ptr [rip + 0x22657c]
0xf8a4:	mov	rdi, qword ptr [rbp]
0xf8a8:	mov	r14d, 1
0xf8ae:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0xf8b3:	mov	rdi, qword ptr [rip + 0x226566]
0xf8ba:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0xf8bf:	test	r15d, r15d
0xf8c2:	jns	0xf8d8
		Instruction group(s): [7, 1] 

0xf8c4:	mov	rsi, qword ptr [rbp]
0xf8c8:	lea	rdi, [rip + 0x1a6c4]
0xf8cf:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0xf8d4:	nop	dword ptr [rax]
0xf8d8:	add	rbx, 8
0xf8dc:	cmp	r13, rbx
0xf8df:	ja	0xf7b8
		Instruction group(s): [7, 1] 

0xf8e5:	test	r12d, r12d
0xf8e8:	jne	0xf928
		Instruction group(s): [7, 1] 

0xf8ea:	test	r14d, r14d
0xf8ed:	je	0xf928
		Instruction group(s): [7, 1] 

0xf8ef:	mov	rsi, qword ptr [rip + 0x22652a]
0xf8f6:	mov	edi, 0xa
0xf8fb:	call	0x8880
		Instruction group(s): [2, 7, 145] 

0xf900:	mov	rdi, qword ptr [rip + 0x226519]
0xf907:	add	rsp, 0x18
0xf90b:	pop	rbx
		Instruction group(s): [145] 

0xf90c:	pop	rbp
		Instruction group(s): [145] 

0xf90d:	pop	r12
		Instruction group(s): [145] 

0xf90f:	pop	r13
		Instruction group(s): [145] 

0xf911:	pop	r14
		Instruction group(s): [145] 

0xf913:	pop	r15
		Instruction group(s): [145] 

0xf915:	jmp	0x8ad0
		Instruction group(s): [7, 1] 

0xf91a:	nop	word ptr [rax + rax]
0xf920:	ret	
		Instruction group(s): [3, 145] 

0xf922:	nop	word ptr [rax + rax]
0xf928:	add	rsp, 0x18
0xf92c:	pop	rbx
		Instruction group(s): [145] 

0xf92d:	pop	rbp
		Instruction group(s): [145] 

0xf92e:	pop	r12
		Instruction group(s): [145] 

0xf930:	pop	r13
		Instruction group(s): [145] 

0xf932:	pop	r14
		Instruction group(s): [145] 

0xf934:	pop	r15
		Instruction group(s): [145] 

0xf936:	ret	
		Instruction group(s): [3, 145] 

0xf937:	nop	word ptr [rax + rax]
0xf940:	mov	rdi, qword ptr [rbp]
0xf944:	call	0x8670
		Instruction group(s): [2, 7, 145] 

0xf949:	test	eax, eax
0xf94b:	mov	r15d, eax
0xf94e:	jns	0xf820
		Instruction group(s): [7, 1] 

0xf954:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0xf959:	cmp	dword ptr [rax], 2
0xf95c:	jne	0xf820
		Instruction group(s): [7, 1] 

0xf962:	jmp	0xf8d8
		Instruction group(s): [7, 1] 

0xf967:	mov	eax, dword ptr [rip + 0x229b53]
0xf96d:	test	eax, eax
0xf96f:	jne	0xf8bf
		Instruction group(s): [7, 1] 

0xf975:	mov	rsi, qword ptr [rip + 0x2264a4]
0xf97c:	mov	edi, 0x20
0xf981:	call	0x8880
		Instruction group(s): [2, 7, 145] 

0xf986:	jmp	0xf89d
		Instruction group(s): [7, 1] 

0xf98b:	mov	rcx, qword ptr [rbp]
0xf98f:	lea	rsi, [rip + 0x1baea]
0xf996:	mov	edx, 5
0xf99b:	xor	edi, edi
0xf99d:	mov	qword ptr [rsp + 8], rcx
0xf9a2:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0xf9a7:	mov	rdi, qword ptr [rbp]
0xf9ab:	mov	qword ptr [rsp], rax
0xf9af:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xf9b4:	mov	rcx, qword ptr [rsp + 8]
0xf9b9:	mov	rdx, qword ptr [rsp]
0xf9bd:	mov	rsi, rax
0xf9c0:	xor	edi, edi
0xf9c2:	xor	eax, eax
0xf9c4:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0xf9c9:	jmp	0xf8bf
		Instruction group(s): [7, 1] 

0xf9ce:	nop	
0xf9d0:	push	rbp
		Instruction group(s): [145] 

0xf9d1:	push	rbx
		Instruction group(s): [145] 

0xf9d2:	xor	r8d, r8d
0xf9d5:	xor	ecx, ecx
0xf9d7:	mov	edx, 0x100
0xf9dc:	mov	esi, 0x28
0xf9e1:	sub	rsp, 0x18
0xf9e5:	lea	rbp, [rsp + 8]
0xf9ea:	mov	qword ptr [rsp + 8], rdi
0xf9ef:	mov	rdi, rbp
0xf9f2:	call	0x1f330
		Instruction group(s): [2, 7, 145] 

0xf9f7:	mov	rbx, rax
0xf9fa:	mov	rax, qword ptr [rsp + 8]
0xf9ff:	cmp	byte ptr [rax], 0
0xfa02:	jne	0xfa10
		Instruction group(s): [7, 1] 

0xfa04:	add	rsp, 0x18
0xfa08:	mov	rax, rbx
0xfa0b:	pop	rbx
		Instruction group(s): [145] 

0xfa0c:	pop	rbp
		Instruction group(s): [145] 

0xfa0d:	ret	
		Instruction group(s): [3, 145] 

0xfa0e:	nop	
0xfa10:	add	rax, 1
0xfa14:	xor	ecx, ecx
0xfa16:	xor	r8d, r8d
0xfa19:	mov	edx, 1
0xfa1e:	mov	esi, 0x28
0xfa23:	mov	rdi, rbp
0xfa26:	mov	qword ptr [rsp + 8], rax
0xfa2b:	call	0x1f330
		Instruction group(s): [2, 7, 145] 

0xfa30:	test	rbx, rbx
0xfa33:	mov	rcx, rbx
0xfa36:	jne	0xfa43
		Instruction group(s): [7, 1] 

0xfa38:	jmp	0xfa70
		Instruction group(s): [7, 1] 

0xfa3a:	nop	word ptr [rax + rax]
0xfa40:	mov	rcx, rdx
0xfa43:	mov	rdx, qword ptr [rcx]
0xfa46:	test	rdx, rdx
0xfa49:	jne	0xfa40
		Instruction group(s): [7, 1] 

0xfa4b:	mov	qword ptr [rcx], rax
0xfa4e:	test	rax, rax
0xfa51:	je	0xfa04
		Instruction group(s): [7, 1] 

0xfa53:	nop	dword ptr [rax + rax]
0xfa58:	or	byte ptr [rax + 0x21], 1
0xfa5c:	mov	rax, qword ptr [rax]
0xfa5f:	test	rax, rax
0xfa62:	jne	0xfa58
		Instruction group(s): [7, 1] 

0xfa64:	add	rsp, 0x18
0xfa68:	mov	rax, rbx
0xfa6b:	pop	rbx
		Instruction group(s): [145] 

0xfa6c:	pop	rbp
		Instruction group(s): [145] 

0xfa6d:	ret	
		Instruction group(s): [3, 145] 

0xfa6e:	nop	
0xfa70:	mov	rbx, rax
0xfa73:	jmp	0xfa4e
		Instruction group(s): [7, 1] 

0xfa75:	nop	
0xfa76:	nop	word ptr cs:[rax + rax]
0xfa80:	push	rbp
		Instruction group(s): [145] 

0xfa81:	mov	rbp, rsp
0xfa84:	push	r15
		Instruction group(s): [145] 

0xfa86:	push	r14
		Instruction group(s): [145] 

0xfa88:	push	r13
		Instruction group(s): [145] 

0xfa8a:	push	r12
		Instruction group(s): [145] 

0xfa8c:	push	rbx
		Instruction group(s): [145] 

0xfa8d:	sub	rsp, 0x38
0xfa91:	mov	rax, qword ptr fs:[0x28]
0xfa9a:	mov	qword ptr [rbp - 0x38], rax
0xfa9e:	xor	eax, eax
0xfaa0:	test	rdi, rdi
0xfaa3:	je	0xfca8
		Instruction group(s): [7, 1] 

0xfaa9:	test	rsi, rsi
0xfaac:	mov	r15, rdi
0xfaaf:	mov	r12, rsi
0xfab2:	je	0xfc90
		Instruction group(s): [7, 1] 

0xfab8:	lea	rdi, [rip + 0x1df0e]
0xfabf:	mov	r14, r15
0xfac2:	call	0xe9f0
		Instruction group(s): [2, 7, 145] 

0xfac7:	mov	qword ptr [rbp - 0x50], 0
0xfacf:	mov	r13, rax
0xfad2:	jmp	0xfb80
		Instruction group(s): [7, 1] 

0xfad7:	nop	word ptr [rax + rax]
0xfae0:	mov	rdi, rax
0xfae3:	mov	qword ptr [rbp - 0x58], r9
0xfae7:	mov	qword ptr [rbp - 0x48], rax
0xfaeb:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xfaf0:	mov	r9, qword ptr [rbp - 0x58]
0xfaf4:	mov	rcx, qword ptr [rbp - 0x48]
0xfaf8:	mov	rdx, rax
0xfafb:	mov	rsi, r9
0xfafe:	mov	rdi, rcx
0xfb01:	call	0x8be0
		Instruction group(s): [2, 7, 145] 

0xfb06:	mov	rdx, rbx
0xfb09:	mov	ecx, dword ptr [rdx]
0xfb0b:	add	rdx, 4
0xfb0f:	lea	eax, [rcx - 0x1010101]
		Instruction group(s): [145] 

0xfb15:	not	ecx
0xfb17:	and	eax, ecx
0xfb19:	and	eax, 0x80808080
0xfb1e:	je	0xfb09
		Instruction group(s): [7, 1] 

0xfb20:	mov	ecx, eax
0xfb22:	mov	rsi, rbx
0xfb25:	mov	rdi, r13
0xfb28:	shr	ecx, 0x10
0xfb2b:	test	eax, 0x8080
0xfb30:	cmove	eax, ecx
		Instruction group(s): [137] 

0xfb33:	lea	rcx, [rdx + 2]
0xfb37:	cmove	rdx, rcx
		Instruction group(s): [137] 

0xfb3b:	mov	ecx, eax
0xfb3d:	add	cl, al
0xfb3f:	sbb	rdx, 3
0xfb43:	sub	rdx, rbx
0xfb46:	add	edx, 1
0xfb49:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0xfb4e:	cmp	byte ptr [r13], 0
0xfb53:	jne	0xfbf6
		Instruction group(s): [7, 1] 

0xfb59:	cmp	r14, r15
0xfb5c:	je	0xfc98
		Instruction group(s): [7, 1] 

0xfb62:	mov	rbx, qword ptr [r15]
0xfb65:	mov	rax, qword ptr [rbp - 0x50]
0xfb69:	mov	qword ptr [rax], rbx
0xfb6c:	mov	rdi, r15
0xfb6f:	mov	r15, rbx
0xfb72:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0xfb77:	test	r15, r15
0xfb7a:	je	0xfc20
		Instruction group(s): [7, 1] 

0xfb80:	mov	rsi, qword ptr [r15 + 8]
0xfb84:	mov	rdi, rsi
0xfb87:	mov	qword ptr [rbp - 0x48], rsi
0xfb8b:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0xfb90:	lea	edx, [rax + 1]
		Instruction group(s): [145] 

0xfb93:	mov	rsi, qword ptr [rbp - 0x48]
0xfb97:	movsxd	rdx, edx
		Instruction group(s): [145] 

0xfb9a:	lea	rax, [rdx + 0x1e]
0xfb9e:	and	rax, 0xfffffffffffffff0
0xfba2:	sub	rsp, rax
0xfba5:	lea	rbx, [rsp + 0xf]
0xfbaa:	and	rbx, 0xfffffffffffffff0
0xfbae:	mov	rdi, rbx
0xfbb1:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0xfbb6:	mov	rdi, rbx
0xfbb9:	call	0x1e250
		Instruction group(s): [2, 7, 145] 

0xfbbe:	test	rax, rax
0xfbc1:	je	0xfc07
		Instruction group(s): [7, 1] 

0xfbc3:	cmp	byte ptr [r12], 0
0xfbc8:	lea	r9, [rax + 1]
0xfbcc:	je	0xfae0
		Instruction group(s): [7, 1] 

0xfbd2:	lea	r8, [rip + 0x1f472]
0xfbd9:	mov	rcx, rbx
0xfbdc:	mov	rsi, r12
0xfbdf:	mov	rdi, r13
0xfbe2:	lea	rdx, [r8 - 1]
0xfbe6:	call	0x12ef0
		Instruction group(s): [2, 7, 145] 

0xfbeb:	cmp	byte ptr [r13], 0
0xfbf0:	je	0xfb59
		Instruction group(s): [7, 1] 

0xfbf6:	sub	rax, r13
0xfbf9:	mov	rdi, r13
0xfbfc:	mov	esi, eax
0xfbfe:	call	0x26050
		Instruction group(s): [2, 7, 145] 

0xfc03:	mov	qword ptr [r15 + 8], rax
0xfc07:	or	byte ptr [r15 + 0x21], 2
0xfc0c:	mov	qword ptr [r15 + 0x10], r12
0xfc10:	mov	qword ptr [rbp - 0x50], r15
0xfc14:	mov	r15, qword ptr [r15]
0xfc17:	test	r15, r15
0xfc1a:	jne	0xfb80
		Instruction group(s): [7, 1] 

0xfc20:	test	r14, r14
0xfc23:	je	0xfca8
		Instruction group(s): [7, 1] 

0xfc29:	mov	rbx, r14
0xfc2c:	nop	dword ptr [rax]
0xfc30:	test	byte ptr [rbx + 0x21], 4
0xfc34:	jne	0xfc54
		Instruction group(s): [7, 1] 

0xfc36:	mov	rdi, qword ptr [rbx + 8]
0xfc3a:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0xfc3f:	test	rax, rax
0xfc42:	mov	qword ptr [rbx + 0x18], rax
0xfc46:	je	0xfc80
		Instruction group(s): [7, 1] 

0xfc48:	and	byte ptr [rbx + 0x21], 0xfd
0xfc4c:	mov	qword ptr [rbx + 8], 0
0xfc54:	mov	rbx, qword ptr [rbx]
0xfc57:	test	rbx, rbx
0xfc5a:	jne	0xfc30
		Instruction group(s): [7, 1] 

0xfc5c:	mov	rcx, qword ptr [rbp - 0x38]
0xfc60:	xor	rcx, qword ptr fs:[0x28]
0xfc69:	mov	rax, r14
0xfc6c:	jne	0xfcad
		Instruction group(s): [7, 1] 

0xfc6e:	lea	rsp, [rbp - 0x28]
0xfc72:	pop	rbx
		Instruction group(s): [145] 

0xfc73:	pop	r12
		Instruction group(s): [145] 

0xfc75:	pop	r13
		Instruction group(s): [145] 

0xfc77:	pop	r14
		Instruction group(s): [145] 

0xfc79:	pop	r15
		Instruction group(s): [145] 

0xfc7b:	pop	rbp
		Instruction group(s): [145] 

0xfc7c:	ret	
		Instruction group(s): [3, 145] 

0xfc7d:	nop	dword ptr [rax]
0xfc80:	mov	rdi, qword ptr [rbx + 8]
0xfc84:	call	0xf1a0
		Instruction group(s): [2, 7, 145] 

0xfc89:	mov	qword ptr [rbx + 0x18], rax
0xfc8d:	jmp	0xfc48
		Instruction group(s): [7, 1] 

0xfc8f:	nop	
0xfc90:	mov	r14, rdi
0xfc93:	jmp	0xfc29
		Instruction group(s): [7, 1] 

0xfc95:	nop	dword ptr [rax]
0xfc98:	mov	r14, qword ptr [r14]
0xfc9b:	mov	rbx, r14
0xfc9e:	jmp	0xfb6c
		Instruction group(s): [7, 1] 

0xfca3:	nop	dword ptr [rax + rax]
0xfca8:	xor	r14d, r14d
0xfcab:	jmp	0xfc5c
		Instruction group(s): [7, 1] 

0xfcad:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0xfcb2:	nop	dword ptr [rax]
0xfcb6:	nop	word ptr cs:[rax + rax]
0xfcc0:	push	r15
		Instruction group(s): [145] 

0xfcc2:	push	r14
		Instruction group(s): [145] 

0xfcc4:	push	r13
		Instruction group(s): [145] 

0xfcc6:	push	r12
		Instruction group(s): [145] 

0xfcc8:	push	rbp
		Instruction group(s): [145] 

0xfcc9:	push	rbx
		Instruction group(s): [145] 

0xfcca:	sub	rsp, 8
0xfcce:	mov	rbx, qword ptr [rdi + 0x18]
0xfcd2:	and	byte ptr [rdi + 0x85], 0xfd
0xfcd9:	mov	r13, qword ptr [rdi + 0x28]
0xfcdd:	test	rbx, rbx
0xfce0:	je	0xfdb1
		Instruction group(s): [7, 1] 

0xfce6:	lea	rbp, [rdi + 0x18]
0xfcea:	mov	r12, rdi
0xfced:	xor	r15d, r15d
0xfcf0:	mov	r14, qword ptr [rbx + 8]
0xfcf4:	test	r14, r14
0xfcf7:	je	0xfdc0
		Instruction group(s): [7, 1] 

0xfcfd:	movzx	eax, byte ptr [rbx + 0x21]
0xfd01:	test	al, 4
0xfd03:	je	0xfdc0
		Instruction group(s): [7, 1] 

0xfd09:	test	al, 2
0xfd0b:	jne	0xfde0
		Instruction group(s): [7, 1] 

0xfd11:	test	r15d, r15d
0xfd14:	je	0xfdd0
		Instruction group(s): [7, 1] 

0xfd1a:	mov	rax, qword ptr [rbx + 0x10]
0xfd1e:	test	rax, rax
0xfd21:	je	0xfd28
		Instruction group(s): [7, 1] 

0xfd23:	mov	qword ptr [r12 + 0x28], rax
0xfd28:	mov	rdi, r12
0xfd2b:	call	0xbdb0
		Instruction group(s): [2, 7, 145] 

0xfd30:	mov	rdi, qword ptr [rbx + 8]
0xfd34:	mov	rsi, r12
0xfd37:	call	0xec20
		Instruction group(s): [2, 7, 145] 

0xfd3c:	cmp	qword ptr [rbx + 0x10], 0
0xfd41:	mov	r15, rax
0xfd44:	je	0xfd4b
		Instruction group(s): [7, 1] 

0xfd46:	mov	qword ptr [r12 + 0x28], r13
0xfd4b:	mov	rdi, r14
0xfd4e:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0xfd53:	mov	r14, qword ptr [rbx + 0x10]
0xfd57:	mov	rdi, r15
0xfd5a:	call	0xf9d0
		Instruction group(s): [2, 7, 145] 

0xfd5f:	mov	rdi, rax
0xfd62:	mov	rsi, r14
0xfd65:	call	0xfa80
		Instruction group(s): [2, 7, 145] 

0xfd6a:	test	rax, rax
0xfd6d:	je	0xfe40
		Instruction group(s): [7, 1] 

0xfd73:	mov	rbx, qword ptr [rbx]
0xfd76:	mov	qword ptr [rbp], rax
0xfd7a:	mov	rdx, qword ptr [rax]
0xfd7d:	test	rdx, rdx
0xfd80:	jne	0xfd93
		Instruction group(s): [7, 1] 

0xfd82:	jmp	0xfe60
		Instruction group(s): [7, 1] 

0xfd87:	nop	word ptr [rax + rax]
0xfd90:	mov	rdx, rax
0xfd93:	mov	rax, qword ptr [rdx]
0xfd96:	test	rax, rax
0xfd99:	jne	0xfd90
		Instruction group(s): [7, 1] 

0xfd9b:	mov	rbp, rdx
0xfd9e:	mov	qword ptr [rbp], rbx
0xfda2:	mov	r15d, 1
0xfda8:	test	rbx, rbx
0xfdab:	jne	0xfcf0
		Instruction group(s): [7, 1] 

0xfdb1:	add	rsp, 8
0xfdb5:	pop	rbx
		Instruction group(s): [145] 

0xfdb6:	pop	rbp
		Instruction group(s): [145] 

0xfdb7:	pop	r12
		Instruction group(s): [145] 

0xfdb9:	pop	r13
		Instruction group(s): [145] 

0xfdbb:	pop	r14
		Instruction group(s): [145] 

0xfdbd:	pop	r15
		Instruction group(s): [145] 

0xfdbf:	ret	
		Instruction group(s): [3, 145] 

0xfdc0:	mov	rbp, rbx
0xfdc3:	mov	rbx, qword ptr [rbx]
0xfdc6:	jmp	0xfda8
		Instruction group(s): [7, 1] 

0xfdc8:	nop	dword ptr [rax + rax]
0xfdd0:	xor	esi, esi
0xfdd2:	mov	rdi, r12
0xfdd5:	call	0x28130
		Instruction group(s): [2, 7, 145] 

0xfdda:	jmp	0xfd1a
		Instruction group(s): [7, 1] 

0xfddf:	nop	
0xfde0:	lea	rdi, [rip + 0x1dbe6]
0xfde7:	call	0xe9f0
		Instruction group(s): [2, 7, 145] 

0xfdec:	sub	rsp, 8
0xfdf0:	lea	rdx, [rip + 0x1f253]
0xfdf7:	lea	rcx, [rip + 0x1b34f]
0xfdfe:	push	0
		Instruction group(s): [145] 

0xfe00:	mov	rsi, r14
0xfe03:	mov	r9d, 2
0xfe09:	mov	r8d, 1
0xfe0f:	mov	rdi, rax
0xfe12:	call	0x12cd0
		Instruction group(s): [2, 7, 145] 

0xfe17:	mov	rdi, r14
0xfe1a:	mov	byte ptr [rax], 0
0xfe1d:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0xfe22:	mov	rdi, qword ptr [rip + 0x22967f]
0xfe29:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0xfe2e:	and	byte ptr [rbx + 0x21], 0xfd
0xfe32:	mov	qword ptr [rbx + 8], rax
0xfe36:	mov	r14, rax
0xfe39:	pop	rax
		Instruction group(s): [145] 

0xfe3a:	pop	rdx
		Instruction group(s): [145] 

0xfe3b:	jmp	0xfd11
		Instruction group(s): [7, 1] 

0xfe40:	mov	rax, qword ptr [rbx]
0xfe43:	mov	rdi, rbx
0xfe46:	mov	r15d, 1
0xfe4c:	mov	qword ptr [rbp], rax
0xfe50:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0xfe55:	mov	rbx, qword ptr [rbp]
0xfe59:	jmp	0xfda8
		Instruction group(s): [7, 1] 

0xfe5e:	nop	
0xfe60:	mov	rbp, rax
0xfe63:	jmp	0xfd9e
		Instruction group(s): [7, 1] 

0xfe68:	nop	dword ptr [rax + rax]
0xfe70:	mov	eax, dword ptr [rip + 0x2296c6]
0xfe76:	push	r14
		Instruction group(s): [145] 

0xfe78:	mov	dword ptr [rip + 0x22613e], 1
0xfe82:	push	r13
		Instruction group(s): [145] 

0xfe84:	push	r12
		Instruction group(s): [145] 

0xfe86:	push	rbp
		Instruction group(s): [145] 

0xfe87:	test	eax, eax
0xfe89:	push	rbx
		Instruction group(s): [145] 

0xfe8a:	je	0x10210
		Instruction group(s): [7, 1] 

0xfe90:	lea	rdi, [rip + 0x226149]
0xfe97:	xor	edx, edx
0xfe99:	xor	esi, esi
0xfe9b:	xor	ebp, ebp
0xfe9d:	call	0x29bb0
		Instruction group(s): [2, 7, 145] 

0xfea2:	mov	r14, rax
0xfea5:	mov	rax, qword ptr [rip + 0x226164]
0xfeac:	lea	rdi, [rip + 0x1a0e9]
0xfeb3:	lea	r13, [r14 + rax*8]
0xfeb7:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0xfebc:	test	rax, rax
0xfebf:	mov	rbx, rax
0xfec2:	je	0xfee1
		Instruction group(s): [7, 1] 

0xfec4:	mov	rbp, qword ptr [rax]
0xfec7:	nop	word ptr [rax + rax]
0xfed0:	mov	rdi, rbx
0xfed3:	call	0xfcc0
		Instruction group(s): [2, 7, 145] 

0xfed8:	mov	rbx, qword ptr [rbx + 0x38]
0xfedc:	test	rbx, rbx
0xfedf:	jne	0xfed0
		Instruction group(s): [7, 1] 

0xfee1:	cmp	r14, r13
0xfee4:	mov	r12, r14
0xfee7:	jae	0xff1f
		Instruction group(s): [7, 1] 

0xfee9:	nop	dword ptr [rax]
0xfef0:	mov	rbx, qword ptr [r12]
0xfef4:	test	rbx, rbx
0xfef7:	je	0xff16
		Instruction group(s): [7, 1] 

0xfef9:	nop	dword ptr [rax]
0xff00:	cmp	qword ptr [rbx], rbp
0xff03:	je	0xff0d
		Instruction group(s): [7, 1] 

0xff05:	mov	rdi, rbx
0xff08:	call	0xfcc0
		Instruction group(s): [2, 7, 145] 

0xff0d:	mov	rbx, qword ptr [rbx + 0x38]
0xff11:	test	rbx, rbx
0xff14:	jne	0xff00
		Instruction group(s): [7, 1] 

0xff16:	add	r12, 8
0xff1a:	cmp	r13, r12
0xff1d:	ja	0xfef0
		Instruction group(s): [7, 1] 

0xff1f:	mov	rdi, r14
0xff22:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0xff27:	lea	rdi, [rip + 0x1b222]
0xff2e:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0xff33:	test	rax, rax
0xff36:	je	0xff81
		Instruction group(s): [7, 1] 

0xff38:	nop	dword ptr [rax + rax]
0xff40:	mov	rcx, qword ptr [rax + 0x18]
0xff44:	test	rcx, rcx
0xff47:	je	0xff78
		Instruction group(s): [7, 1] 

0xff49:	nop	dword ptr [rax]
0xff50:	mov	rdx, qword ptr [rcx + 0x18]
0xff54:	test	rdx, rdx
0xff57:	je	0xff70
		Instruction group(s): [7, 1] 

0xff59:	nop	dword ptr [rax]
0xff60:	or	byte ptr [rdx + 0x84], 0x20
0xff67:	mov	rdx, qword ptr [rdx + 0x38]
0xff6b:	test	rdx, rdx
0xff6e:	jne	0xff60
		Instruction group(s): [7, 1] 

0xff70:	mov	rcx, qword ptr [rcx]
0xff73:	test	rcx, rcx
0xff76:	jne	0xff50
		Instruction group(s): [7, 1] 

0xff78:	mov	rax, qword ptr [rax + 0x38]
0xff7c:	test	rax, rax
0xff7f:	jne	0xff40
		Instruction group(s): [7, 1] 

0xff81:	lea	rdi, [rip + 0x1b1d2]
0xff88:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0xff8d:	test	rax, rax
0xff90:	je	0xffd9
		Instruction group(s): [7, 1] 

0xff92:	nop	word ptr [rax + rax]
0xff98:	mov	rcx, qword ptr [rax + 0x18]
0xff9c:	test	rcx, rcx
0xff9f:	je	0xffd0
		Instruction group(s): [7, 1] 

0xffa1:	nop	dword ptr [rax]
0xffa8:	mov	rdx, qword ptr [rcx + 0x18]
0xffac:	test	rdx, rdx
0xffaf:	je	0xffc8
		Instruction group(s): [7, 1] 

0xffb1:	nop	dword ptr [rax]
0xffb8:	or	byte ptr [rdx + 0x84], 0x80
0xffbf:	mov	rdx, qword ptr [rdx + 0x38]
0xffc3:	test	rdx, rdx
0xffc6:	jne	0xffb8
		Instruction group(s): [7, 1] 

0xffc8:	mov	rcx, qword ptr [rcx]
0xffcb:	test	rcx, rcx
0xffce:	jne	0xffa8
		Instruction group(s): [7, 1] 

0xffd0:	mov	rax, qword ptr [rax + 0x38]
0xffd4:	test	rax, rax
0xffd7:	jne	0xff98
		Instruction group(s): [7, 1] 

0xffd9:	lea	rdi, [rip + 0x1b18f]
0xffe0:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0xffe5:	test	rax, rax
0xffe8:	je	0x10041
		Instruction group(s): [7, 1] 

0xffea:	nop	word ptr [rax + rax]
0xfff0:	mov	rcx, qword ptr [rax + 0x18]
0xfff4:	test	rcx, rcx
0xfff7:	je	0x10038
		Instruction group(s): [7, 1] 

0xfff9:	nop	dword ptr [rax]
0x10000:	mov	rdx, qword ptr [rcx + 0x18]
0x10004:	test	rdx, rdx
0x10007:	je	0x10030
		Instruction group(s): [7, 1] 

0x10009:	nop	dword ptr [rax]
0x10010:	or	byte ptr [rdx + 0x85], 0x28
0x10017:	mov	qword ptr [rdx + 0x70], 1
0x1001f:	mov	qword ptr [rdx + 0x78], 1
0x10027:	mov	rdx, qword ptr [rdx + 0x38]
0x1002b:	test	rdx, rdx
0x1002e:	jne	0x10010
		Instruction group(s): [7, 1] 

0x10030:	mov	rcx, qword ptr [rcx]
0x10033:	test	rcx, rcx
0x10036:	jne	0x10000
		Instruction group(s): [7, 1] 

0x10038:	mov	rax, qword ptr [rax + 0x38]
0x1003c:	test	rax, rax
0x1003f:	jne	0xfff0
		Instruction group(s): [7, 1] 

0x10041:	lea	rdi, [rip + 0x1b12e]
0x10048:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x1004d:	test	rax, rax
0x10050:	je	0x10099
		Instruction group(s): [7, 1] 

0x10052:	nop	word ptr [rax + rax]
0x10058:	mov	rcx, qword ptr [rax + 0x18]
0x1005c:	test	rcx, rcx
0x1005f:	je	0x10090
		Instruction group(s): [7, 1] 

0x10061:	nop	dword ptr [rax]
0x10068:	mov	rdx, qword ptr [rcx + 0x18]
0x1006c:	test	rdx, rdx
0x1006f:	je	0x10088
		Instruction group(s): [7, 1] 

0x10071:	nop	dword ptr [rax]
0x10078:	or	byte ptr [rdx + 0x85], 0x40
0x1007f:	mov	rdx, qword ptr [rdx + 0x38]
0x10083:	test	rdx, rdx
0x10086:	jne	0x10078
		Instruction group(s): [7, 1] 

0x10088:	mov	rcx, qword ptr [rcx]
0x1008b:	test	rcx, rcx
0x1008e:	jne	0x10068
		Instruction group(s): [7, 1] 

0x10090:	mov	rax, qword ptr [rax + 0x38]
0x10094:	test	rax, rax
0x10097:	jne	0x10058
		Instruction group(s): [7, 1] 

0x10099:	lea	rdi, [rip + 0x1b0e4]
0x100a0:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x100a5:	test	rax, rax
0x100a8:	mov	rbx, rax
0x100ab:	je	0x100f9
		Instruction group(s): [7, 1] 

0x100ad:	lea	rbp, [rip - 0x12e4]
0x100b4:	nop	dword ptr [rax]
0x100b8:	mov	rcx, qword ptr [rbx + 0x18]
0x100bc:	test	rcx, rcx
0x100bf:	je	0x101e5
		Instruction group(s): [7, 1] 

0x100c5:	nop	dword ptr [rax]
0x100c8:	mov	rdx, qword ptr [rcx + 0x18]
0x100cc:	test	rdx, rdx
0x100cf:	je	0x100e8
		Instruction group(s): [7, 1] 

0x100d1:	nop	dword ptr [rax]
0x100d8:	or	byte ptr [rdx + 0x85], 0xc0
0x100df:	mov	rdx, qword ptr [rdx + 0x38]
0x100e3:	test	rdx, rdx
0x100e6:	jne	0x100d8
		Instruction group(s): [7, 1] 

0x100e8:	mov	rcx, qword ptr [rcx]
0x100eb:	test	rcx, rcx
0x100ee:	jne	0x100c8
		Instruction group(s): [7, 1] 

0x100f0:	mov	rbx, qword ptr [rbx + 0x38]
0x100f4:	test	rbx, rbx
0x100f7:	jne	0x100b8
		Instruction group(s): [7, 1] 

0x100f9:	lea	rdi, [rip + 0x1b08f]
0x10100:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x10105:	test	rax, rax
0x10108:	je	0x10117
		Instruction group(s): [7, 1] 

0x1010a:	test	byte ptr [rax + 0x85], 8
0x10111:	jne	0x10228
		Instruction group(s): [7, 1] 

0x10117:	lea	rdi, [rip + 0x1b087]
0x1011e:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x10123:	test	rax, rax
0x10126:	je	0x10168
		Instruction group(s): [7, 1] 

0x10128:	test	byte ptr [rax + 0x85], 8
0x1012f:	je	0x10168
		Instruction group(s): [7, 1] 

0x10131:	mov	rdx, qword ptr [rax + 0x18]
0x10135:	test	rdx, rdx
0x10138:	je	0x10246
		Instruction group(s): [7, 1] 

0x1013e:	mov	rax, qword ptr [rdx + 0x18]
0x10142:	test	rax, rax
0x10145:	je	0x10160
		Instruction group(s): [7, 1] 

0x10147:	nop	word ptr [rax + rax]
0x10150:	or	dword ptr [rax + 0x80], 4
0x10157:	mov	rax, qword ptr [rax + 0x38]
0x1015b:	test	rax, rax
0x1015e:	jne	0x10150
		Instruction group(s): [7, 1] 

0x10160:	mov	rdx, qword ptr [rdx]
0x10163:	test	rdx, rdx
0x10166:	jne	0x1013e
		Instruction group(s): [7, 1] 

0x10168:	lea	rdi, [rip + 0x1b03e]
0x1016f:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x10174:	test	rax, rax
0x10177:	je	0x101b8
		Instruction group(s): [7, 1] 

0x10179:	test	byte ptr [rax + 0x85], 8
0x10180:	je	0x101b8
		Instruction group(s): [7, 1] 

0x10182:	mov	rdx, qword ptr [rax + 0x18]
0x10186:	test	rdx, rdx
0x10189:	je	0x10237
		Instruction group(s): [7, 1] 

0x1018f:	mov	rax, qword ptr [rdx + 0x18]
0x10193:	test	rax, rax
0x10196:	je	0x101b0
		Instruction group(s): [7, 1] 

0x10198:	nop	dword ptr [rax + rax]
0x101a0:	or	dword ptr [rax + 0x80], 2
0x101a7:	mov	rax, qword ptr [rax + 0x38]
0x101ab:	test	rax, rax
0x101ae:	jne	0x101a0
		Instruction group(s): [7, 1] 

0x101b0:	mov	rdx, qword ptr [rdx]
0x101b3:	test	rdx, rdx
0x101b6:	jne	0x1018f
		Instruction group(s): [7, 1] 

0x101b8:	lea	rdi, [rip + 0x1aff6]
0x101bf:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x101c4:	test	rax, rax
0x101c7:	je	0x101dc
		Instruction group(s): [7, 1] 

0x101c9:	test	byte ptr [rax + 0x85], 8
0x101d0:	je	0x101dc
		Instruction group(s): [7, 1] 

0x101d2:	mov	dword ptr [rip + 0x229378], 1
0x101dc:	pop	rbx
		Instruction group(s): [145] 

0x101dd:	pop	rbp
		Instruction group(s): [145] 

0x101de:	pop	r12
		Instruction group(s): [145] 

0x101e0:	pop	r13
		Instruction group(s): [145] 

0x101e2:	pop	r14
		Instruction group(s): [145] 

0x101e4:	ret	
		Instruction group(s): [3, 145] 

0x101e5:	lea	rdi, [rip + 0x225df4]
0x101ec:	mov	rsi, rbp
0x101ef:	mov	dword ptr [rip + 0x225dd7], 1
0x101f9:	call	0x29940
		Instruction group(s): [2, 7, 145] 

0x101fe:	mov	rbx, qword ptr [rbx + 0x38]
0x10202:	test	rbx, rbx
0x10205:	jne	0x100b8
		Instruction group(s): [7, 1] 

0x1020b:	jmp	0x100f9
		Instruction group(s): [7, 1] 

0x10210:	lea	rsi, [rip - 0x1437]
0x10217:	lea	rdi, [rip + 0x225dc2]
0x1021e:	call	0x29940
		Instruction group(s): [2, 7, 145] 

0x10223:	jmp	0xff27
		Instruction group(s): [7, 1] 

0x10228:	mov	dword ptr [rip + 0x229406], 1
0x10232:	jmp	0x10117
		Instruction group(s): [7, 1] 

0x10237:	mov	dword ptr [rip + 0x22927f], 1
0x10241:	jmp	0x101b8
		Instruction group(s): [7, 1] 

0x10246:	mov	dword ptr [rip + 0x226194], 1
0x10250:	jmp	0x10168
		Instruction group(s): [7, 1] 

0x10255:	nop	
0x10256:	nop	word ptr cs:[rax + rax]
0x10260:	movzx	eax, byte ptr [rdi + 0x84]
0x10267:	mov	rdx, qword ptr [rdi + 0x30]
0x1026b:	and	esi, 3
0x1026e:	shl	esi, 2
0x10271:	and	eax, 0xfffffff3
0x10274:	or	eax, esi
0x10276:	test	rdx, rdx
0x10279:	mov	byte ptr [rdi + 0x84], al
0x1027f:	je	0x102a6
		Instruction group(s): [7, 1] 

0x10281:	nop	dword ptr [rax]
0x10288:	mov	rcx, qword ptr [rdx + 0x18]
0x1028c:	movzx	eax, byte ptr [rcx + 0x84]
0x10293:	and	eax, 0xfffffff3
0x10296:	or	eax, esi
0x10298:	mov	byte ptr [rcx + 0x84], al
0x1029e:	mov	rdx, qword ptr [rdx]
0x102a1:	test	rdx, rdx
0x102a4:	jne	0x10288
		Instruction group(s): [7, 1] 

0x102a6:	ret	
		Instruction group(s): [3, 145] 

0x102a8:	nop	dword ptr [rax + rax]
0x102b0:	push	rbp
		Instruction group(s): [145] 

0x102b1:	push	rbx
		Instruction group(s): [145] 

0x102b2:	mov	rbx, rdi
0x102b5:	mov	rbp, rsi
0x102b8:	sub	rsp, 0x18
0x102bc:	mov	rax, qword ptr fs:[0x28]
0x102c5:	mov	qword ptr [rsp + 8], rax
0x102ca:	xor	eax, eax
0x102cc:	lea	rax, [rsi - 3]
0x102d0:	mov	rdi, rsp
0x102d3:	shr	rax, 0x1e
0x102d7:	mov	qword ptr [rsp], rax
0x102db:	call	0x8640
		Instruction group(s): [2, 7, 145] 

0x102e0:	test	rax, rax
0x102e3:	je	0x103b0
		Instruction group(s): [7, 1] 

0x102e9:	mov	esi, dword ptr [rax]
0x102eb:	mov	ecx, dword ptr [rax + 0x10]
0x102ee:	mov	rdi, rbx
0x102f1:	mov	edx, dword ptr [rax + 0x14]
0x102f4:	push	rsi
		Instruction group(s): [145] 

0x102f5:	mov	esi, dword ptr [rax + 4]
0x102f8:	lea	r9d, [rcx + 1]
		Instruction group(s): [145] 

0x102fc:	lea	r8d, [rdx + 0x76c]
		Instruction group(s): [145] 

0x10303:	lea	rcx, [rip + 0x1aeb8]
0x1030a:	mov	rdx, -1
0x10311:	push	rsi
		Instruction group(s): [145] 

0x10312:	mov	esi, dword ptr [rax + 8]
0x10315:	push	rsi
		Instruction group(s): [145] 

0x10316:	mov	eax, dword ptr [rax + 0xc]
0x10319:	mov	esi, 1
0x1031e:	push	rax
		Instruction group(s): [145] 

0x1031f:	xor	eax, eax
0x10321:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x10326:	add	rsp, 0x20
0x1032a:	mov	rdi, rbx
0x1032d:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x10332:	lea	r8d, [rbp - 3]
		Instruction group(s): [145] 

0x10336:	add	rbx, rax
0x10339:	lea	rcx, [rip + 0x1aea0]
0x10340:	mov	rdx, -1
0x10347:	mov	esi, 1
0x1034c:	mov	rdi, rbx
0x1034f:	and	r8d, 0x3fffffff
0x10356:	xor	eax, eax
0x10358:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x1035d:	mov	rdi, rbx
0x10360:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x10365:	lea	rax, [rbx + rax - 1]
0x1036a:	movzx	edx, byte ptr [rax]
0x1036d:	cmp	dl, 0x30
0x10370:	jne	0x10384
		Instruction group(s): [7, 1] 

0x10372:	nop	word ptr [rax + rax]
0x10378:	sub	rax, 1
0x1037c:	movzx	edx, byte ptr [rax]
0x1037f:	cmp	dl, 0x30
0x10382:	je	0x10378
		Instruction group(s): [7, 1] 

0x10384:	cmp	dl, 0x2e
0x10387:	setne	dl
0x1038a:	movzx	edx, dl
0x1038d:	mov	byte ptr [rax + rdx], 0
0x10391:	mov	rax, qword ptr [rsp + 8]
0x10396:	xor	rax, qword ptr fs:[0x28]
0x1039f:	jne	0x103e2
		Instruction group(s): [7, 1] 

0x103a1:	add	rsp, 0x18
0x103a5:	pop	rbx
		Instruction group(s): [145] 

0x103a6:	pop	rbp
		Instruction group(s): [145] 

0x103a7:	ret	
		Instruction group(s): [3, 145] 

0x103a8:	nop	dword ptr [rax + rax]
0x103b0:	mov	r8, qword ptr [rsp]
0x103b4:	lea	rcx, [rip + 0x19b10]
0x103bb:	test	r8, r8
0x103be:	js	0x103c7
		Instruction group(s): [7, 1] 

0x103c0:	lea	rcx, [rip + 0x1b99d]
0x103c7:	mov	rdx, -1
0x103ce:	mov	esi, 1
0x103d3:	mov	rdi, rbx
0x103d6:	xor	eax, eax
0x103d8:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x103dd:	jmp	0x1032a
		Instruction group(s): [7, 1] 

0x103e2:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x103e7:	nop	word ptr [rax + rax]
0x103f0:	push	r13
		Instruction group(s): [145] 

0x103f2:	push	r12
		Instruction group(s): [145] 

0x103f4:	mov	r12, rsi
0x103f7:	push	rbp
		Instruction group(s): [145] 

0x103f8:	push	rbx
		Instruction group(s): [145] 

0x103f9:	lea	ebx, [rdx + 3]
		Instruction group(s): [145] 

0x103fc:	mov	rdx, rsi
0x103ff:	mov	rbp, rdi
0x10402:	sub	rsp, 0x48
0x10406:	shl	rdx, 0x1e
0x1040a:	movsxd	rbx, ebx
		Instruction group(s): [145] 

0x1040d:	mov	rax, qword ptr fs:[0x28]
0x10416:	mov	qword ptr [rsp + 0x38], rax
0x1041b:	xor	eax, eax
0x1041d:	add	rbx, rdx
0x10420:	setb	dl
0x10423:	cmp	rbx, -0x46535fe
0x1042a:	seta	al
0x1042d:	or	dl, al
0x1042f:	jne	0x10444
		Instruction group(s): [7, 1] 

0x10431:	movabs	rax, 0x3ffffffff
0x1043b:	cmp	rsi, rax
0x1043e:	jbe	0x104df
		Instruction group(s): [7, 1] 

0x10444:	test	rbp, rbp
0x10447:	je	0x10500
		Instruction group(s): [7, 1] 

0x1044d:	cmp	r12, 3
0x10451:	mov	r13, rsp
0x10454:	sbb	rbx, rbx
0x10457:	mov	rdi, r13
0x1045a:	and	ebx, 0x4653601
0x10460:	sub	rbx, 0x46535fe
0x10467:	mov	rsi, rbx
0x1046a:	call	0x102b0
		Instruction group(s): [2, 7, 145] 

0x1046f:	lea	rsi, [rip + 0x1b052]
0x10476:	mov	edx, 5
0x1047b:	xor	edi, edi
0x1047d:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10482:	mov	rdi, rbp
0x10485:	mov	r12, rax
0x10488:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1048d:	mov	rsi, r13
0x10490:	mov	ecx, dword ptr [rsi]
0x10492:	add	rsi, 4
0x10496:	lea	edx, [rcx - 0x1010101]
		Instruction group(s): [145] 

0x1049c:	not	ecx
0x1049e:	and	edx, ecx
0x104a0:	and	edx, 0x80808080
0x104a6:	je	0x10490
		Instruction group(s): [7, 1] 

0x104a8:	mov	ecx, edx
0x104aa:	mov	r8, r13
0x104ad:	shr	ecx, 0x10
0x104b0:	test	edx, 0x8080
0x104b6:	cmove	edx, ecx
		Instruction group(s): [137] 

0x104b9:	lea	rcx, [rsi + 2]
0x104bd:	mov	edi, edx
0x104bf:	cmove	rsi, rcx
		Instruction group(s): [137] 

0x104c3:	add	dil, dl
0x104c6:	mov	rcx, rbp
0x104c9:	sbb	rsi, 3
0x104cd:	mov	rdx, r12
0x104d0:	xor	edi, edi
0x104d2:	sub	rsi, r13
0x104d5:	add	rsi, rax
0x104d8:	xor	eax, eax
0x104da:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x104df:	mov	rdi, qword ptr [rsp + 0x38]
0x104e4:	xor	rdi, qword ptr fs:[0x28]
0x104ed:	mov	rax, rbx
0x104f0:	jne	0x1051b
		Instruction group(s): [7, 1] 

0x104f2:	add	rsp, 0x48
0x104f6:	pop	rbx
		Instruction group(s): [145] 

0x104f7:	pop	rbp
		Instruction group(s): [145] 

0x104f8:	pop	r12
		Instruction group(s): [145] 

0x104fa:	pop	r13
		Instruction group(s): [145] 

0x104fc:	ret	
		Instruction group(s): [3, 145] 

0x104fd:	nop	dword ptr [rax]
0x10500:	lea	rsi, [rip + 0x1acdf]
0x10507:	mov	edx, 5
0x1050c:	xor	edi, edi
0x1050e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10513:	mov	rbp, rax
0x10516:	jmp	0x1044d
		Instruction group(s): [7, 1] 

0x1051b:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x10520:	push	rbp
		Instruction group(s): [145] 

0x10521:	push	rbx
		Instruction group(s): [145] 

0x10522:	mov	rbp, rdi
0x10525:	xor	edi, edi
0x10527:	sub	rsp, 0x28
0x1052b:	mov	rbx, rsp
0x1052e:	mov	rsi, rbx
0x10531:	mov	rax, qword ptr fs:[0x28]
0x1053a:	mov	qword ptr [rsp + 0x18], rax
0x1053f:	xor	eax, eax
0x10541:	call	0x8760
		Instruction group(s): [2, 7, 145] 

0x10546:	test	eax, eax
0x10548:	jne	0x10580
		Instruction group(s): [7, 1] 

0x1054a:	movsxd	rdx, dword ptr [rsp + 8]
		Instruction group(s): [145] 

0x1054f:	mov	rsi, qword ptr [rsp]
0x10553:	mov	eax, 1
0x10558:	xor	edi, edi
0x1055a:	mov	dword ptr [rbp], eax
0x1055d:	call	0x103f0
		Instruction group(s): [2, 7, 145] 

0x10562:	mov	rcx, qword ptr [rsp + 0x18]
0x10567:	xor	rcx, qword ptr fs:[0x28]
0x10570:	jne	0x105bb
		Instruction group(s): [7, 1] 

0x10572:	add	rsp, 0x28
0x10576:	pop	rbx
		Instruction group(s): [145] 

0x10577:	pop	rbp
		Instruction group(s): [145] 

0x10578:	ret	
		Instruction group(s): [3, 145] 

0x10579:	nop	dword ptr [rax]
0x10580:	xor	esi, esi
0x10582:	mov	rdi, rbx
0x10585:	call	0x88d0
		Instruction group(s): [2, 7, 145] 

0x1058a:	test	eax, eax
0x1058c:	jne	0x105a8
		Instruction group(s): [7, 1] 

0x1058e:	imul	edx, dword ptr [rsp + 8], 0x3e8
0x10596:	mov	rsi, qword ptr [rsp]
0x1059a:	mov	eax, 0x3e8
0x1059f:	movsxd	rdx, edx
		Instruction group(s): [145] 

0x105a2:	jmp	0x10558
		Instruction group(s): [7, 1] 

0x105a4:	nop	dword ptr [rax]
0x105a8:	xor	edi, edi
0x105aa:	call	0x8a60
		Instruction group(s): [2, 7, 145] 

0x105af:	xor	edx, edx
0x105b1:	mov	rsi, rax
0x105b4:	mov	eax, 0x3b9aca00
0x105b9:	jmp	0x10558
		Instruction group(s): [7, 1] 

0x105bb:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x105c0:	test	rdi, rdi
0x105c3:	push	r12
		Instruction group(s): [145] 

0x105c5:	push	rbp
		Instruction group(s): [145] 

0x105c6:	push	rbx
		Instruction group(s): [145] 

0x105c7:	je	0x10680
		Instruction group(s): [7, 1] 

0x105cd:	mov	rbx, rdi
0x105d0:	xor	ebp, ebp
0x105d2:	lea	r12, [rip + 0x1ab58]
0x105d9:	jmp	0x10604
		Instruction group(s): [7, 1] 

0x105db:	nop	dword ptr [rax + rax]
0x105e0:	mov	rdx, qword ptr [rbx + 8]
0x105e4:	test	rdx, rdx
0x105e7:	je	0x10698
		Instruction group(s): [7, 1] 

0x105ed:	xor	eax, eax
0x105ef:	mov	rsi, r12
0x105f2:	mov	edi, 1
0x105f7:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x105fc:	mov	rbx, qword ptr [rbx]
0x105ff:	test	rbx, rbx
0x10602:	je	0x10619
		Instruction group(s): [7, 1] 

0x10604:	test	byte ptr [rbx + 0x21], 1
0x10608:	je	0x105e0
		Instruction group(s): [7, 1] 

0x1060a:	test	rbp, rbp
0x1060d:	cmove	rbp, rbx
		Instruction group(s): [137] 

0x10611:	mov	rbx, qword ptr [rbx]
0x10614:	test	rbx, rbx
0x10617:	jne	0x10604
		Instruction group(s): [7, 1] 

0x10619:	test	rbp, rbp
0x1061c:	je	0x10680
		Instruction group(s): [7, 1] 

0x1061e:	mov	rdx, qword ptr [rbp + 8]
0x10622:	test	rdx, rdx
0x10625:	je	0x106a8
		Instruction group(s): [7, 1] 

0x1062b:	lea	rsi, [rip + 0x1abc1]
0x10632:	xor	eax, eax
0x10634:	mov	edi, 1
0x10639:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x1063e:	mov	rbx, qword ptr [rbp]
0x10642:	test	rbx, rbx
0x10645:	je	0x10680
		Instruction group(s): [7, 1] 

0x10647:	lea	rbp, [rip + 0x1aae3]
0x1064e:	jmp	0x10667
		Instruction group(s): [7, 1] 

0x10650:	mov	rsi, rbp
0x10653:	mov	edi, 1
0x10658:	xor	eax, eax
0x1065a:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x1065f:	mov	rbx, qword ptr [rbx]
0x10662:	test	rbx, rbx
0x10665:	je	0x10680
		Instruction group(s): [7, 1] 

0x10667:	test	byte ptr [rbx + 0x21], 1
0x1066b:	je	0x1065f
		Instruction group(s): [7, 1] 

0x1066d:	mov	rdx, qword ptr [rbx + 8]
0x10671:	test	rdx, rdx
0x10674:	jne	0x10650
		Instruction group(s): [7, 1] 

0x10676:	mov	rax, qword ptr [rbx + 0x18]
0x1067a:	mov	rdx, qword ptr [rax]
0x1067d:	jmp	0x10650
		Instruction group(s): [7, 1] 

0x1067f:	nop	
0x10680:	pop	rbx
		Instruction group(s): [145] 

0x10681:	pop	rbp
		Instruction group(s): [145] 

0x10682:	pop	r12
		Instruction group(s): [145] 

0x10684:	mov	rsi, qword ptr [rip + 0x225795]
0x1068b:	mov	edi, 0xa
0x10690:	jmp	0x8880
		Instruction group(s): [7, 1] 

0x10695:	nop	dword ptr [rax]
0x10698:	mov	rax, qword ptr [rbx + 0x18]
0x1069c:	mov	rdx, qword ptr [rax]
0x1069f:	jmp	0x105ed
		Instruction group(s): [7, 1] 

0x106a4:	nop	dword ptr [rax]
0x106a8:	mov	rax, qword ptr [rbp + 0x18]
0x106ac:	mov	rdx, qword ptr [rax]
0x106af:	jmp	0x1062b
		Instruction group(s): [7, 1] 

0x106b4:	nop	
0x106b6:	nop	word ptr cs:[rax + rax]
0x106c0:	push	r12
		Instruction group(s): [145] 

0x106c2:	push	rbp
		Instruction group(s): [145] 

0x106c3:	push	rbx
		Instruction group(s): [145] 

0x106c4:	mov	rbx, rdi
0x106c7:	sub	rsp, 0x40
0x106cb:	mov	rax, qword ptr fs:[0x28]
0x106d4:	mov	qword ptr [rsp + 0x38], rax
0x106d9:	xor	eax, eax
0x106db:	mov	eax, dword ptr [rip + 0x225cf7]
0x106e1:	test	eax, eax
0x106e3:	je	0x106f2
		Instruction group(s): [7, 1] 

0x106e5:	test	byte ptr [rdi + 0x84], 0x10
0x106ec:	jne	0x109b5
		Instruction group(s): [7, 1] 

0x106f2:	mov	rsi, qword ptr [rip + 0x225727]
0x106f9:	mov	edi, 0xa
0x106fe:	call	0x8880
		Instruction group(s): [2, 7, 145] 

0x10703:	mov	rax, qword ptr [rbx + 0x20]
0x10707:	test	rax, rax
0x1070a:	je	0x1075f
		Instruction group(s): [7, 1] 

0x1070c:	movzx	ecx, byte ptr [rip + 0x2255f5]
0x10713:	cmp	byte ptr [rax + 0x2a], cl
0x10716:	je	0x1075f
		Instruction group(s): [7, 1] 

0x10718:	mov	rcx, qword ptr [rip + 0x225701]
0x1071f:	lea	rdi, [rip + 0x1aad3]
0x10726:	mov	edx, 0x10
0x1072b:	mov	esi, 1
0x10730:	call	0x8c80
		Instruction group(s): [2, 7, 145] 

0x10735:	mov	rax, qword ptr [rbx + 0x20]
0x10739:	movsx	edi, byte ptr [rax + 0x2a]
0x1073d:	cmp	dil, 9
0x10741:	mov	byte ptr [rip + 0x2255c0], dil
0x10748:	jne	0x10bd0
		Instruction group(s): [7, 1] 

0x1074e:	mov	rsi, qword ptr [rip + 0x2256cb]
0x10755:	mov	edi, 0xa
0x1075a:	call	0x8880
		Instruction group(s): [2, 7, 145] 

0x1075f:	cmp	qword ptr [rbx + 0x50], 0
0x10764:	je	0x1076e
		Instruction group(s): [7, 1] 

0x10766:	mov	rdi, rbx
0x10769:	call	0x288d0
		Instruction group(s): [2, 7, 145] 

0x1076e:	test	byte ptr [rbx + 0x85], 8
0x10775:	je	0x10ae0
		Instruction group(s): [7, 1] 

0x1077b:	cmp	qword ptr [rbx + 0x68], 0
0x10780:	lea	rax, [rip + 0x19856]
0x10787:	mov	rdx, qword ptr [rbx]
0x1078a:	lea	rcx, [rip + 0x1d23c]
0x10791:	lea	rsi, [rip + 0x1aa82]
0x10798:	mov	edi, 1
0x1079d:	cmovne	rcx, rax
		Instruction group(s): [137] 

0x107a1:	xor	eax, eax
0x107a3:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x107a8:	mov	rdi, qword ptr [rbx + 0x18]
0x107ac:	call	0x105c0
		Instruction group(s): [2, 7, 145] 

0x107b1:	test	byte ptr [rbx + 0x84], 0x20
0x107b8:	jne	0x10ab0
		Instruction group(s): [7, 1] 

0x107be:	movzx	eax, byte ptr [rbx + 0x85]
0x107c5:	test	al, 0x20
0x107c7:	jne	0x10a80
		Instruction group(s): [7, 1] 

0x107cd:	test	al, 0x10
0x107cf:	jne	0x10a50
		Instruction group(s): [7, 1] 

0x107d5:	test	byte ptr [rbx + 0x86], 1
0x107dc:	jne	0x10a20
		Instruction group(s): [7, 1] 

0x107e2:	test	byte ptr [rbx + 0x84], 0x10
0x107e9:	jne	0x109f0
		Instruction group(s): [7, 1] 

0x107ef:	test	byte ptr [rbx + 0x85], 1
0x107f6:	mov	edx, 5
0x107fb:	jne	0x109d8
		Instruction group(s): [7, 1] 

0x10801:	lea	rsi, [rip + 0x1adb0]
0x10808:	xor	edi, edi
0x1080a:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1080f:	mov	rdi, rax
0x10812:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x10817:	mov	rbp, qword ptr [rbx + 0x28]
0x1081b:	test	rbp, rbp
0x1081e:	je	0x10845
		Instruction group(s): [7, 1] 

0x10820:	lea	rsi, [rip + 0x1adc1]
0x10827:	mov	edx, 5
0x1082c:	xor	edi, edi
0x1082e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10833:	mov	rdx, rbp
0x10836:	mov	rsi, rax
0x10839:	mov	edi, 1
0x1083e:	xor	eax, eax
0x10840:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x10845:	test	byte ptr [rbx + 0x85], 0x40
0x1084c:	jne	0x10bb0
		Instruction group(s): [7, 1] 

0x10852:	cmp	qword ptr [rbx + 0x30], 0
0x10857:	je	0x108d1
		Instruction group(s): [7, 1] 

0x10859:	mov	rbp, qword ptr [rip + 0x2255c0]
0x10860:	lea	rsi, [rip + 0x1a9e1]
0x10867:	xor	edi, edi
0x10869:	mov	edx, 5
0x1086e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10873:	mov	rsi, rbp
0x10876:	mov	rdi, rax
0x10879:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0x1087e:	mov	rbp, qword ptr [rbx + 0x30]
0x10882:	test	rbp, rbp
0x10885:	je	0x108c0
		Instruction group(s): [7, 1] 

0x10887:	lea	r12, [rip + 0x1a8a3]
0x1088e:	jmp	0x108a8
		Instruction group(s): [7, 1] 

0x10890:	xor	eax, eax
0x10892:	mov	rsi, r12
0x10895:	mov	edi, 1
0x1089a:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x1089f:	mov	rbp, qword ptr [rbp]
0x108a3:	test	rbp, rbp
0x108a6:	je	0x108c0
		Instruction group(s): [7, 1] 

0x108a8:	mov	rdx, qword ptr [rbp + 8]
0x108ac:	test	rdx, rdx
0x108af:	jne	0x10890
		Instruction group(s): [7, 1] 

0x108b1:	mov	rax, qword ptr [rbp + 0x18]
0x108b5:	mov	rdx, qword ptr [rax]
0x108b8:	jmp	0x10890
		Instruction group(s): [7, 1] 

0x108ba:	nop	word ptr [rax + rax]
0x108c0:	mov	rsi, qword ptr [rip + 0x225559]
0x108c7:	mov	edi, 0xa
0x108cc:	call	0x8880
		Instruction group(s): [2, 7, 145] 

0x108d1:	mov	rsi, qword ptr [rbx + 0x70]
0x108d5:	test	rsi, rsi
0x108d8:	je	0x10b88
		Instruction group(s): [7, 1] 

0x108de:	cmp	rsi, 1
0x108e2:	je	0x10c30
		Instruction group(s): [7, 1] 

0x108e8:	cmp	rsi, 2
0x108ec:	je	0x10c10
		Instruction group(s): [7, 1] 

0x108f2:	mov	rbp, rsp
0x108f5:	mov	rdi, rbp
0x108f8:	call	0x102b0
		Instruction group(s): [2, 7, 145] 

0x108fd:	lea	rsi, [rip + 0x1a980]
0x10904:	mov	edx, 5
0x10909:	xor	edi, edi
0x1090b:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10910:	mov	rdx, rbp
0x10913:	mov	rsi, rax
0x10916:	mov	edi, 1
0x1091b:	xor	eax, eax
0x1091d:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x10922:	test	byte ptr [rbx + 0x85], 4
0x10929:	mov	edx, 5
0x1092e:	je	0x10b00
		Instruction group(s): [7, 1] 

0x10934:	lea	rsi, [rip + 0x1a95e]
0x1093b:	xor	edi, edi
0x1093d:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10942:	mov	rdi, rax
0x10945:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x1094a:	movzx	edx, byte ptr [rbx + 0x84]
0x10951:	mov	eax, edx
0x10953:	shr	al, 2
0x10956:	and	eax, 3
0x10959:	cmp	al, 1
0x1095b:	je	0x10b18
		Instruction group(s): [7, 1] 

0x10961:	jb	0x10b48
		Instruction group(s): [7, 1] 

0x10967:	cmp	al, 2
0x10969:	jne	0x10b40
		Instruction group(s): [7, 1] 

0x1096f:	lea	rsi, [rip + 0x1acf2]
0x10976:	xor	edi, edi
0x10978:	mov	edx, 5
0x1097d:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10982:	mov	rdi, rax
0x10985:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x1098a:	cmp	qword ptr [rbx + 0x50], 0
0x1098f:	je	0x10999
		Instruction group(s): [7, 1] 

0x10991:	mov	rdi, rbx
0x10994:	call	0x288a0
		Instruction group(s): [2, 7, 145] 

0x10999:	mov	rdi, qword ptr [rbx + 0x20]
0x1099d:	test	rdi, rdi
0x109a0:	je	0x109a7
		Instruction group(s): [7, 1] 

0x109a2:	call	0xcc00
		Instruction group(s): [2, 7, 145] 

0x109a7:	mov	rdi, qword ptr [rbx + 0x38]
0x109ab:	test	rdi, rdi
0x109ae:	je	0x109b5
		Instruction group(s): [7, 1] 

0x109b0:	call	0x106c0
		Instruction group(s): [2, 7, 145] 

0x109b5:	mov	rax, qword ptr [rsp + 0x38]
0x109ba:	xor	rax, qword ptr fs:[0x28]
0x109c3:	jne	0x10ca8
		Instruction group(s): [7, 1] 

0x109c9:	add	rsp, 0x40
0x109cd:	pop	rbx
		Instruction group(s): [145] 

0x109ce:	pop	rbp
		Instruction group(s): [145] 

0x109cf:	pop	r12
		Instruction group(s): [145] 

0x109d1:	ret	
		Instruction group(s): [3, 145] 

0x109d2:	nop	word ptr [rax + rax]
0x109d8:	lea	rsi, [rip + 0x1abb1]
0x109df:	xor	edi, edi
0x109e1:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x109e6:	jmp	0x1080f
		Instruction group(s): [7, 1] 

0x109eb:	nop	dword ptr [rax + rax]
0x109f0:	lea	rsi, [rip + 0x1a841]
0x109f7:	mov	edx, 5
0x109fc:	xor	edi, edi
0x109fe:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10a03:	mov	rdi, rax
0x10a06:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x10a0b:	test	byte ptr [rbx + 0x85], 1
0x10a12:	mov	edx, 5
0x10a17:	je	0x10801
		Instruction group(s): [7, 1] 

0x10a1d:	jmp	0x109d8
		Instruction group(s): [7, 1] 

0x10a1f:	nop	
0x10a20:	lea	rsi, [rip + 0x1ab31]
0x10a27:	xor	edi, edi
0x10a29:	mov	edx, 5
0x10a2e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10a33:	mov	rdi, rax
0x10a36:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x10a3b:	test	byte ptr [rbx + 0x84], 0x10
0x10a42:	je	0x107ef
		Instruction group(s): [7, 1] 

0x10a48:	jmp	0x109f0
		Instruction group(s): [7, 1] 

0x10a4a:	nop	word ptr [rax + rax]
0x10a50:	lea	rsi, [rip + 0x1a7c9]
0x10a57:	xor	edi, edi
0x10a59:	mov	edx, 5
0x10a5e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10a63:	mov	rdi, rax
0x10a66:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x10a6b:	test	byte ptr [rbx + 0x86], 1
0x10a72:	je	0x107e2
		Instruction group(s): [7, 1] 

0x10a78:	jmp	0x10a20
		Instruction group(s): [7, 1] 

0x10a7a:	nop	word ptr [rax + rax]
0x10a80:	lea	rsi, [rip + 0x1aaa1]
0x10a87:	xor	edi, edi
0x10a89:	mov	edx, 5
0x10a8e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10a93:	mov	rdi, rax
0x10a96:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x10a9b:	movzx	eax, byte ptr [rbx + 0x85]
0x10aa2:	test	al, 0x10
0x10aa4:	je	0x107d5
		Instruction group(s): [7, 1] 

0x10aaa:	jmp	0x10a50
		Instruction group(s): [7, 1] 

0x10aac:	nop	dword ptr [rax]
0x10ab0:	lea	rsi, [rip + 0x1aa41]
0x10ab7:	xor	edi, edi
0x10ab9:	mov	edx, 5
0x10abe:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10ac3:	mov	rdi, rax
0x10ac6:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x10acb:	movzx	eax, byte ptr [rbx + 0x85]
0x10ad2:	test	al, 0x20
0x10ad4:	je	0x107cd
		Instruction group(s): [7, 1] 

0x10ada:	jmp	0x10a80
		Instruction group(s): [7, 1] 

0x10adc:	nop	dword ptr [rax]
0x10ae0:	lea	rsi, [rip + 0x1a723]
0x10ae7:	xor	edi, edi
0x10ae9:	mov	edx, 5
0x10aee:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10af3:	mov	rdi, rax
0x10af6:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x10afb:	jmp	0x1077b
		Instruction group(s): [7, 1] 

0x10b00:	lea	rsi, [rip + 0x1a7ac]
0x10b07:	xor	edi, edi
0x10b09:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10b0e:	jmp	0x10942
		Instruction group(s): [7, 1] 

0x10b13:	nop	dword ptr [rax + rax]
0x10b18:	lea	rsi, [rip + 0x1ab79]
0x10b1f:	xor	edi, edi
0x10b21:	mov	edx, 5
0x10b26:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10b2b:	mov	rdi, rax
0x10b2e:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x10b33:	jmp	0x1098a
		Instruction group(s): [7, 1] 

0x10b38:	nop	dword ptr [rax + rax]
0x10b40:	cmp	al, 3
0x10b42:	jne	0x10c70
		Instruction group(s): [7, 1] 

0x10b48:	and	edx, 3
0x10b4b:	cmp	dl, 2
0x10b4e:	je	0x10be8
		Instruction group(s): [7, 1] 

0x10b54:	ja	0x10c50
		Instruction group(s): [7, 1] 

0x10b5a:	cmp	dl, 1
0x10b5d:	je	0x1098a
		Instruction group(s): [7, 1] 

0x10b63:	lea	rsi, [rip + 0x1a767]
0x10b6a:	xor	edi, edi
0x10b6c:	mov	edx, 5
0x10b71:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10b76:	mov	rdi, rax
0x10b79:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x10b7e:	jmp	0x1098a
		Instruction group(s): [7, 1] 

0x10b83:	nop	dword ptr [rax + rax]
0x10b88:	lea	rsi, [rip + 0x1aab1]
0x10b8f:	xor	edi, edi
0x10b91:	mov	edx, 5
0x10b96:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10b9b:	mov	rdi, rax
0x10b9e:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x10ba3:	jmp	0x10922
		Instruction group(s): [7, 1] 

0x10ba8:	nop	dword ptr [rax + rax]
0x10bb0:	lea	rsi, [rip + 0x1aa59]
0x10bb7:	xor	edi, edi
0x10bb9:	mov	edx, 5
0x10bbe:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10bc3:	mov	rdi, rax
0x10bc6:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x10bcb:	jmp	0x10852
		Instruction group(s): [7, 1] 

0x10bd0:	mov	rsi, qword ptr [rip + 0x225249]
0x10bd7:	call	0x8880
		Instruction group(s): [2, 7, 145] 

0x10bdc:	jmp	0x1074e
		Instruction group(s): [7, 1] 

0x10be1:	nop	dword ptr [rax]
0x10be8:	lea	rsi, [rip + 0x1aad9]
0x10bef:	xor	edi, edi
0x10bf1:	mov	edx, 5
0x10bf6:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10bfb:	mov	rdi, rax
0x10bfe:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x10c03:	jmp	0x1098a
		Instruction group(s): [7, 1] 

0x10c08:	nop	dword ptr [rax + rax]
0x10c10:	lea	rsi, [rip + 0x1a658]
0x10c17:	xor	edi, edi
0x10c19:	mov	edx, 5
0x10c1e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10c23:	mov	rdi, rax
0x10c26:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x10c2b:	jmp	0x10922
		Instruction group(s): [7, 1] 

0x10c30:	lea	rsi, [rip + 0x1a620]
0x10c37:	xor	edi, edi
0x10c39:	mov	edx, 5
0x10c3e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10c43:	mov	rdi, rax
0x10c46:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x10c4b:	jmp	0x10922
		Instruction group(s): [7, 1] 

0x10c50:	lea	rsi, [rip + 0x1a693]
0x10c57:	xor	edi, edi
0x10c59:	mov	edx, 5
0x10c5e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10c63:	mov	rdi, rax
0x10c66:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x10c6b:	jmp	0x1098a
		Instruction group(s): [7, 1] 

0x10c70:	lea	rsi, [rip + 0x1aa79]
0x10c77:	mov	edx, 5
0x10c7c:	xor	edi, edi
0x10c7e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10c83:	mov	rdi, rax
0x10c86:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x10c8b:	mov	rdi, qword ptr [rip + 0x22518e]
0x10c92:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x10c97:	mov	rdi, qword ptr [rip + 0x2251e2]
0x10c9e:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x10ca3:	call	0x8650
		Instruction group(s): [2, 7, 145] 

0x10ca8:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x10cad:	nop	dword ptr [rax]
0x10cb0:	push	rbx
		Instruction group(s): [145] 

0x10cb1:	lea	rsi, [rip + 0x1a64b]
0x10cb8:	mov	edx, 5
0x10cbd:	xor	edi, edi
0x10cbf:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10cc4:	mov	rdi, rax
0x10cc7:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x10ccc:	lea	rsi, [rip - 0x613]
0x10cd3:	lea	rdi, [rip + 0x225306]
0x10cda:	call	0x29940
		Instruction group(s): [2, 7, 145] 

0x10cdf:	mov	rbx, qword ptr [rip + 0x22513a]
0x10ce6:	lea	rsi, [rip + 0x1a61f]
0x10ced:	mov	edx, 5
0x10cf2:	xor	edi, edi
0x10cf4:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x10cf9:	mov	rsi, rbx
0x10cfc:	mov	rdi, rax
0x10cff:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0x10d04:	pop	rbx
		Instruction group(s): [145] 

0x10d05:	mov	rsi, qword ptr [rip + 0x225114]
0x10d0c:	lea	rdi, [rip + 0x2252cd]
0x10d13:	jmp	0x299e0
		Instruction group(s): [7, 1] 

0x10d18:	nop	dword ptr [rax + rax]
0x10d20:	lea	rsi, [rip - 0x1f17]
0x10d27:	lea	rdi, [rip + 0x2252b2]
0x10d2e:	jmp	0x29940
		Instruction group(s): [7, 1] 

0x10d33:	nop	dword ptr [rax]
0x10d36:	nop	word ptr cs:[rax + rax]
0x10d40:	push	r15
		Instruction group(s): [145] 

0x10d42:	push	r14
		Instruction group(s): [145] 

0x10d44:	mov	r15, rdi
0x10d47:	push	r13
		Instruction group(s): [145] 

0x10d49:	push	r12
		Instruction group(s): [145] 

0x10d4b:	push	rbp
		Instruction group(s): [145] 

0x10d4c:	push	rbx
		Instruction group(s): [145] 

0x10d4d:	sub	rsp, 0x18
0x10d51:	mov	rax, qword ptr [rip + 0x225270]
0x10d58:	cmp	qword ptr [rip + 0x2252b1], rax
0x10d5f:	je	0x10e3e
		Instruction group(s): [7, 1] 

0x10d65:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x10d6a:	movabs	rdx, 0x20c49ba5e353f7cf
0x10d74:	shr	rax, 2
0x10d78:	mov	rbx, qword ptr [rip + 0x225261]
0x10d7f:	mul	rdx
0x10d82:	mov	rax, qword ptr [rip + 0x225277]
0x10d89:	mov	rdi, r15
0x10d8c:	lea	r13, [rbx + rax*8]
0x10d90:	shr	rdx, 4
0x10d94:	lea	rbp, [rdx + 1]
0x10d98:	imul	rbp, rbp, 0x1f4
0x10d9f:	mov	esi, ebp
0x10da1:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x10da6:	cmp	rbx, r13
0x10da9:	mov	r15, rax
0x10dac:	mov	r12, rax
0x10daf:	jae	0x10e2a
		Instruction group(s): [7, 1] 

0x10db1:	xor	r14d, r14d
0x10db4:	nop	dword ptr [rax]
0x10db8:	mov	rcx, qword ptr [rbx]
0x10dbb:	test	rcx, rcx
0x10dbe:	je	0x10e21
		Instruction group(s): [7, 1] 

0x10dc0:	cmp	rcx, qword ptr [rip + 0x225041]
0x10dc7:	je	0x10e21
		Instruction group(s): [7, 1] 

0x10dc9:	test	byte ptr [rcx + 0x85], 8
0x10dd0:	je	0x10e21
		Instruction group(s): [7, 1] 

0x10dd2:	mov	rsi, qword ptr [rcx]
0x10dd5:	mov	qword ptr [rsp + 8], rcx
0x10dda:	mov	rdi, rsi
0x10ddd:	mov	qword ptr [rsp], rsi
0x10de1:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x10de6:	lea	edi, [rax + 1]
		Instruction group(s): [145] 

0x10de9:	mov	r9, rax
0x10dec:	mov	rsi, qword ptr [rsp]
0x10df0:	mov	rcx, qword ptr [rsp + 8]
0x10df5:	movsxd	rax, edi
		Instruction group(s): [145] 

0x10df8:	add	r14, rax
0x10dfb:	cmp	r14, rbp
0x10dfe:	ja	0x10e50
		Instruction group(s): [7, 1] 

0x10e00:	movsxd	rcx, r9d
		Instruction group(s): [145] 

0x10e03:	mov	rdi, r12
0x10e06:	mov	rdx, rcx
0x10e09:	mov	qword ptr [rsp], rcx
0x10e0d:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x10e12:	mov	rcx, qword ptr [rsp]
0x10e16:	lea	rax, [r12 + rcx]
0x10e1a:	lea	r12, [rax + 1]
0x10e1e:	mov	byte ptr [rax], 0x20
0x10e21:	add	rbx, 8
0x10e25:	cmp	r13, rbx
0x10e28:	ja	0x10db8
		Instruction group(s): [7, 1] 

0x10e2a:	mov	byte ptr [r12 - 1], 0
0x10e30:	mov	rax, qword ptr [rip + 0x2251d9]
0x10e37:	mov	qword ptr [rip + 0x22518a], rax
0x10e3e:	add	rsp, 0x18
0x10e42:	mov	rax, r15
0x10e45:	pop	rbx
		Instruction group(s): [145] 

0x10e46:	pop	rbp
		Instruction group(s): [145] 

0x10e47:	pop	r12
		Instruction group(s): [145] 

0x10e49:	pop	r13
		Instruction group(s): [145] 

0x10e4b:	pop	r14
		Instruction group(s): [145] 

0x10e4d:	pop	r15
		Instruction group(s): [145] 

0x10e4f:	ret	
		Instruction group(s): [3, 145] 

0x10e50:	mov	eax, 0x10624dd3
0x10e55:	mov	qword ptr [rsp + 8], r9
0x10e5a:	mov	qword ptr [rsp], rcx
0x10e5e:	imul	edi
0x10e60:	sar	edi, 0x1f
0x10e63:	sub	r12, r15
0x10e66:	sar	edx, 5
0x10e69:	sub	edx, edi
0x10e6b:	mov	rdi, r15
0x10e6e:	lea	eax, [rdx + 1]
		Instruction group(s): [145] 

0x10e71:	imul	eax, eax, 0x1f4
0x10e77:	cdqe	
0x10e79:	add	rbp, rax
0x10e7c:	mov	esi, ebp
0x10e7e:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x10e83:	mov	rcx, qword ptr [rsp]
0x10e87:	mov	r15, rax
0x10e8a:	add	r12, rax
0x10e8d:	mov	r9, qword ptr [rsp + 8]
0x10e92:	mov	rsi, qword ptr [rcx]
0x10e95:	jmp	0x10e00
		Instruction group(s): [7, 1] 

0x10e9a:	nop	word ptr [rax + rax]
0x10ea0:	lea	r8, [rip - 0x20b7]
0x10ea7:	lea	rcx, [rip - 0x211e]
0x10eae:	lea	rdx, [rip - 0x2165]
0x10eb5:	lea	rdi, [rip + 0x225124]
0x10ebc:	mov	esi, 0x3e8
0x10ec1:	jmp	0x29440
		Instruction group(s): [7, 1] 

0x10ec6:	nop	word ptr cs:[rax + rax]
0x10ed0:	movzx	edx, byte ptr [rdi + 0x10]
0x10ed4:	mov	r8, qword ptr [rdi + 8]
0x10ed8:	xor	eax, eax
0x10eda:	movzx	esi, byte ptr [r8]
0x10ede:	cmp	dl, 1
0x10ee1:	jbe	0x10f26
		Instruction group(s): [7, 1] 

0x10ee3:	test	sil, sil
0x10ee6:	movzx	ecx, byte ptr [r8 + 1]
0x10eeb:	je	0x10f30
		Instruction group(s): [7, 1] 

0x10eed:	lea	edi, [rdx - 2]
		Instruction group(s): [145] 

0x10ef0:	movzx	edx, sil
0x10ef4:	movzx	esi, cl
0x10ef7:	add	rdi, r8
0x10efa:	jmp	0x10f14
		Instruction group(s): [7, 1] 

0x10efc:	nop	dword ptr [rax]
0x10f00:	add	r8, 1
0x10f04:	movzx	ecx, byte ptr [r8 + 1]
0x10f09:	movzx	edx, sil
0x10f0d:	test	dl, dl
0x10f0f:	movzx	esi, cl
0x10f12:	je	0x10f26
		Instruction group(s): [7, 1] 

0x10f14:	mov	ecx, esi
0x10f16:	and	ecx, 0xf
0x10f19:	shl	edx, cl
0x10f1b:	movsxd	rdx, edx
		Instruction group(s): [145] 

0x10f1e:	add	rax, rdx
0x10f21:	cmp	r8, rdi
0x10f24:	jne	0x10f00
		Instruction group(s): [7, 1] 

0x10f26:	add	rax, rsi
0x10f29:	ret	
		Instruction group(s): [3, 145] 

0x10f2a:	nop	word ptr [rax + rax]
0x10f30:	movzx	esi, cl
0x10f33:	jmp	0x10f26
		Instruction group(s): [7, 1] 

0x10f35:	nop	
0x10f36:	nop	word ptr cs:[rax + rax]
0x10f40:	movzx	edx, byte ptr [rdi + 0x10]
0x10f44:	mov	r8, qword ptr [rdi + 8]
0x10f48:	xor	eax, eax
0x10f4a:	movzx	esi, byte ptr [r8]
0x10f4e:	cmp	dl, 1
0x10f51:	jbe	0x10f96
		Instruction group(s): [7, 1] 

0x10f53:	test	sil, sil
0x10f56:	movzx	ecx, byte ptr [r8 + 1]
0x10f5b:	je	0x10fa0
		Instruction group(s): [7, 1] 

0x10f5d:	lea	edi, [rdx - 2]
		Instruction group(s): [145] 

0x10f60:	movzx	edx, sil
0x10f64:	movzx	esi, cl
0x10f67:	add	rdi, r8
0x10f6a:	jmp	0x10f84
		Instruction group(s): [7, 1] 

0x10f6c:	nop	dword ptr [rax]
0x10f70:	add	r8, 1
0x10f74:	movzx	ecx, byte ptr [r8 + 1]
0x10f79:	movzx	edx, sil
0x10f7d:	test	dl, dl
0x10f7f:	movzx	esi, cl
0x10f82:	je	0x10f96
		Instruction group(s): [7, 1] 

0x10f84:	mov	ecx, esi
0x10f86:	and	ecx, 7
0x10f89:	shl	edx, cl
0x10f8b:	movsxd	rdx, edx
		Instruction group(s): [145] 

0x10f8e:	add	rax, rdx
0x10f91:	cmp	r8, rdi
0x10f94:	jne	0x10f70
		Instruction group(s): [7, 1] 

0x10f96:	add	rax, rsi
0x10f99:	ret	
		Instruction group(s): [3, 145] 

0x10f9a:	nop	word ptr [rax + rax]
0x10fa0:	movzx	esi, cl
0x10fa3:	jmp	0x10f96
		Instruction group(s): [7, 1] 

0x10fa5:	nop	
0x10fa6:	nop	word ptr cs:[rax + rax]
0x10fb0:	mov	rdi, qword ptr [rdi + 0x10]
0x10fb4:	xor	eax, eax
0x10fb6:	movzx	esi, byte ptr [rdi]
0x10fb9:	test	sil, sil
0x10fbc:	je	0x10fe0
		Instruction group(s): [7, 1] 

0x10fbe:	nop	
0x10fc0:	movzx	edx, sil
0x10fc4:	movzx	esi, byte ptr [rdi + 1]
0x10fc8:	add	rdi, 1
0x10fcc:	mov	ecx, esi
0x10fce:	and	ecx, 0xf
0x10fd1:	shl	edx, cl
0x10fd3:	movsxd	rdx, edx
		Instruction group(s): [145] 

0x10fd6:	add	rax, rdx
0x10fd9:	test	sil, sil
0x10fdc:	jne	0x10fc0
		Instruction group(s): [7, 1] 

0x10fde:	ret	
		Instruction group(s): [3, 145] 

0x10fe0:	ret	
		Instruction group(s): [3, 145] 

0x10fe2:	nop	dword ptr [rax]
0x10fe6:	nop	word ptr cs:[rax + rax]
0x10ff0:	mov	rdi, qword ptr [rdi + 0x10]
0x10ff4:	xor	eax, eax
0x10ff6:	movzx	esi, byte ptr [rdi]
0x10ff9:	test	sil, sil
0x10ffc:	je	0x11020
		Instruction group(s): [7, 1] 

0x10ffe:	nop	
0x11000:	movzx	edx, sil
0x11004:	movzx	esi, byte ptr [rdi + 1]
0x11008:	add	rdi, 1
0x1100c:	mov	ecx, esi
0x1100e:	and	ecx, 7
0x11011:	shl	edx, cl
0x11013:	movsxd	rdx, edx
		Instruction group(s): [145] 

0x11016:	add	rax, rdx
0x11019:	test	sil, sil
0x1101c:	jne	0x11000
		Instruction group(s): [7, 1] 

0x1101e:	ret	
		Instruction group(s): [3, 145] 

0x11020:	ret	
		Instruction group(s): [3, 145] 

0x11022:	nop	dword ptr [rax]
0x11026:	nop	word ptr cs:[rax + rax]
0x11030:	push	rbp
		Instruction group(s): [145] 

0x11031:	push	rbx
		Instruction group(s): [145] 

0x11032:	mov	rbp, rdi
0x11035:	sub	rsp, 8
0x11039:	mov	rbx, qword ptr [rsi]
0x1103c:	mov	rdi, qword ptr [rsi + 8]
0x11040:	mov	rsi, rbx
0x11043:	call	0x8d10
		Instruction group(s): [2, 7, 145] 

0x11048:	test	rax, rax
0x1104b:	je	0x11070
		Instruction group(s): [7, 1] 

0x1104d:	mov	rdi, rbx
0x11050:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x11055:	add	rsp, 8
0x11059:	mov	rsi, rbx
0x1105c:	mov	rdi, rbp
0x1105f:	pop	rbx
		Instruction group(s): [145] 

0x11060:	pop	rbp
		Instruction group(s): [145] 

0x11061:	mov	edx, eax
0x11063:	jmp	0xdfa0
		Instruction group(s): [7, 1] 

0x11068:	nop	dword ptr [rax + rax]
0x11070:	add	rsp, 8
0x11074:	mov	rax, rbp
0x11077:	pop	rbx
		Instruction group(s): [145] 

0x11078:	pop	rbp
		Instruction group(s): [145] 

0x11079:	ret	
		Instruction group(s): [3, 145] 

0x1107a:	nop	word ptr [rax + rax]
0x11080:	push	r13
		Instruction group(s): [145] 

0x11082:	push	r12
		Instruction group(s): [145] 

0x11084:	push	rbp
		Instruction group(s): [145] 

0x11085:	push	rbx
		Instruction group(s): [145] 

0x11086:	sub	rsp, 0x18
0x1108a:	mov	rbx, qword ptr [rsi]
0x1108d:	movzx	r13d, byte ptr [rbx]
0x11091:	test	r13b, r13b
0x11094:	je	0x11153
		Instruction group(s): [7, 1] 

0x1109a:	mov	qword ptr [rsp + 8], rdi
0x1109f:	lea	r12, [rip + 0x1cf84]
0x110a6:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0x110ab:	mov	rdi, qword ptr [rsp + 8]
0x110b0:	mov	rbp, rax
0x110b3:	xor	r8d, r8d
0x110b6:	nop	word ptr cs:[rax + rax]
0x110c0:	mov	rcx, qword ptr [rbp]
0x110c4:	mov	rsi, rbx
0x110c7:	jmp	0x110d8
		Instruction group(s): [7, 1] 

0x110c9:	nop	dword ptr [rax]
0x110d0:	add	rsi, 1
0x110d4:	movzx	r13d, byte ptr [rsi]
0x110d8:	movzx	eax, r13b
0x110dc:	test	byte ptr [rcx + rax*2 + 1], 0x20
0x110e1:	jne	0x110d0
		Instruction group(s): [7, 1] 

0x110e3:	test	r13b, r13b
0x110e6:	je	0x11140
		Instruction group(s): [7, 1] 

0x110e8:	mov	rbx, rsi
0x110eb:	jmp	0x110f7
		Instruction group(s): [7, 1] 

0x110ed:	nop	dword ptr [rax]
0x110f0:	test	byte ptr [rcx + rax*2 + 1], 0x20
0x110f5:	jne	0x11106
		Instruction group(s): [7, 1] 

0x110f7:	add	rbx, 1
0x110fb:	movzx	eax, byte ptr [rbx]
0x110fe:	mov	edx, ebx
0x11100:	sub	edx, esi
0x11102:	test	al, al
0x11104:	jne	0x110f0
		Instruction group(s): [7, 1] 

0x11106:	test	edx, edx
0x11108:	je	0x11140
		Instruction group(s): [7, 1] 

0x1110a:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x1110f:	mov	edx, 1
0x11114:	mov	rdi, rax
0x11117:	mov	rsi, r12
0x1111a:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x1111f:	movzx	r13d, byte ptr [rbx]
0x11123:	mov	rdi, rax
0x11126:	mov	r8d, 1
0x1112c:	test	r13b, r13b
0x1112f:	jne	0x110c0
		Instruction group(s): [7, 1] 

0x11131:	lea	rax, [rdi - 1]
0x11135:	add	rsp, 0x18
0x11139:	pop	rbx
		Instruction group(s): [145] 

0x1113a:	pop	rbp
		Instruction group(s): [145] 

0x1113b:	pop	r12
		Instruction group(s): [145] 

0x1113d:	pop	r13
		Instruction group(s): [145] 

0x1113f:	ret	
		Instruction group(s): [3, 145] 

0x11140:	test	r8d, r8d
0x11143:	mov	rax, rdi
0x11146:	jne	0x11131
		Instruction group(s): [7, 1] 

0x11148:	add	rsp, 0x18
0x1114c:	pop	rbx
		Instruction group(s): [145] 

0x1114d:	pop	rbp
		Instruction group(s): [145] 

0x1114e:	pop	r12
		Instruction group(s): [145] 

0x11150:	pop	r13
		Instruction group(s): [145] 

0x11152:	ret	
		Instruction group(s): [3, 145] 

0x11153:	mov	rax, rdi
0x11156:	jmp	0x11135
		Instruction group(s): [7, 1] 

0x11158:	nop	dword ptr [rax + rax]
0x11160:	movzx	eax, byte ptr [rdi + 0x10]
0x11164:	movzx	ecx, byte ptr [rsi + 0x10]
0x11168:	mov	rdx, rax
0x1116b:	sub	eax, ecx
0x1116d:	jne	0x11188
		Instruction group(s): [7, 1] 

0x1116f:	mov	rdi, qword ptr [rdi + 8]
0x11173:	mov	rsi, qword ptr [rsi + 8]
0x11177:	cmp	rdi, rsi
0x1117a:	je	0x11188
		Instruction group(s): [7, 1] 

0x1117c:	jmp	0x86a0
		Instruction group(s): [7, 1] 

0x11181:	nop	dword ptr [rax]
0x11188:	ret	
		Instruction group(s): [3, 145] 

0x1118a:	nop	word ptr [rax + rax]
0x11190:	push	r13
		Instruction group(s): [145] 

0x11192:	push	r12
		Instruction group(s): [145] 

0x11194:	mov	r13, rdi
0x11197:	push	rbp
		Instruction group(s): [145] 

0x11198:	push	rbx
		Instruction group(s): [145] 

0x11199:	xor	ebx, ebx
0x1119b:	sub	rsp, 0x28
0x1119f:	mov	rax, qword ptr fs:[0x28]
0x111a8:	mov	qword ptr [rsp + 0x18], rax
0x111ad:	xor	eax, eax
0x111af:	mov	rax, qword ptr [rsi]
0x111b2:	lea	r12, [rsp + 0xc]
0x111b7:	lea	rbp, [rsp + 0x10]
0x111bc:	mov	qword ptr [rsp + 0x10], rax
0x111c1:	jmp	0x111cb
		Instruction group(s): [7, 1] 

0x111c3:	nop	dword ptr [rax + rax]
0x111c8:	mov	rbx, rax
0x111cb:	mov	rsi, r12
0x111ce:	mov	rdi, rbp
0x111d1:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x111d6:	test	rax, rax
0x111d9:	jne	0x111c8
		Instruction group(s): [7, 1] 

0x111db:	test	rbx, rbx
0x111de:	mov	rax, r13
0x111e1:	je	0x111f2
		Instruction group(s): [7, 1] 

0x111e3:	mov	edx, dword ptr [rsp + 0xc]
0x111e7:	mov	rsi, rbx
0x111ea:	mov	rdi, r13
0x111ed:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x111f2:	mov	rcx, qword ptr [rsp + 0x18]
0x111f7:	xor	rcx, qword ptr fs:[0x28]
0x11200:	jne	0x1120d
		Instruction group(s): [7, 1] 

0x11202:	add	rsp, 0x28
0x11206:	pop	rbx
		Instruction group(s): [145] 

0x11207:	pop	rbp
		Instruction group(s): [145] 

0x11208:	pop	r12
		Instruction group(s): [145] 

0x1120a:	pop	r13
		Instruction group(s): [145] 

0x1120c:	ret	
		Instruction group(s): [3, 145] 

0x1120d:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x11212:	nop	dword ptr [rax]
0x11216:	nop	word ptr cs:[rax + rax]
0x11220:	push	r15
		Instruction group(s): [145] 

0x11222:	push	r14
		Instruction group(s): [145] 

0x11224:	xor	r15d, r15d
0x11227:	push	r13
		Instruction group(s): [145] 

0x11229:	push	r12
		Instruction group(s): [145] 

0x1122b:	push	rbp
		Instruction group(s): [145] 

0x1122c:	push	rbx
		Instruction group(s): [145] 

0x1122d:	mov	rbx, rdi
0x11230:	sub	rsp, 0x28
0x11234:	mov	rax, qword ptr fs:[0x28]
0x1123d:	mov	qword ptr [rsp + 0x18], rax
0x11242:	xor	eax, eax
0x11244:	mov	rax, qword ptr [rsi]
0x11247:	lea	rbp, [rsp + 8]
0x1124c:	mov	r12, rsp
0x1124f:	lea	r14, [rsp + 4]
0x11254:	lea	r13, [rsp + 0x10]
0x11259:	mov	rdi, rbp
0x1125c:	mov	qword ptr [rsp + 8], rax
0x11261:	mov	rax, qword ptr [rsi + 8]
0x11265:	mov	rsi, r12
0x11268:	mov	qword ptr [rsp + 0x10], rax
0x1126d:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x11272:	test	rax, rax
0x11275:	je	0x112d7
		Instruction group(s): [7, 1] 

0x11277:	mov	edx, dword ptr [rsp]
0x1127a:	mov	rdi, rbx
0x1127d:	mov	rsi, rax
0x11280:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x11285:	mov	rsi, r14
0x11288:	mov	rdi, r13
0x1128b:	mov	rbx, rax
0x1128e:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x11293:	test	rax, rax
0x11296:	je	0x112aa
		Instruction group(s): [7, 1] 

0x11298:	mov	edx, dword ptr [rsp + 4]
0x1129c:	mov	rdi, rbx
0x1129f:	mov	rsi, rax
0x112a2:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x112a7:	mov	rbx, rax
0x112aa:	lea	rsi, [rip + 0x1cd79]
0x112b1:	mov	rdi, rbx
0x112b4:	mov	edx, 1
0x112b9:	mov	r15d, 1
0x112bf:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x112c4:	mov	rsi, r12
0x112c7:	mov	rdi, rbp
0x112ca:	mov	rbx, rax
0x112cd:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x112d2:	test	rax, rax
0x112d5:	jne	0x11277
		Instruction group(s): [7, 1] 

0x112d7:	mov	rsi, r14
0x112da:	mov	rdi, r13
0x112dd:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x112e2:	test	rax, rax
0x112e5:	jne	0x11298
		Instruction group(s): [7, 1] 

0x112e7:	cmp	r15d, 1
0x112eb:	adc	rbx, -1
0x112ef:	mov	rcx, qword ptr [rsp + 0x18]
0x112f4:	xor	rcx, qword ptr fs:[0x28]
0x112fd:	mov	rax, rbx
0x11300:	jne	0x11311
		Instruction group(s): [7, 1] 

0x11302:	add	rsp, 0x28
0x11306:	pop	rbx
		Instruction group(s): [145] 

0x11307:	pop	rbp
		Instruction group(s): [145] 

0x11308:	pop	r12
		Instruction group(s): [145] 

0x1130a:	pop	r13
		Instruction group(s): [145] 

0x1130c:	pop	r14
		Instruction group(s): [145] 

0x1130e:	pop	r15
		Instruction group(s): [145] 

0x11310:	ret	
		Instruction group(s): [3, 145] 

0x11311:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x11316:	nop	word ptr cs:[rax + rax]
0x11320:	push	rbx
		Instruction group(s): [145] 

0x11321:	mov	rbx, rdi
0x11324:	sub	rsp, 0x20
0x11328:	mov	rax, qword ptr fs:[0x28]
0x11331:	mov	qword ptr [rsp + 0x18], rax
0x11336:	xor	eax, eax
0x11338:	mov	rax, qword ptr [rsi]
0x1133b:	lea	rdi, [rsp + 0x10]
0x11340:	lea	rsi, [rsp + 0xc]
0x11345:	mov	qword ptr [rsp + 0x10], rax
0x1134a:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x1134f:	test	rax, rax
0x11352:	je	0x11366
		Instruction group(s): [7, 1] 

0x11354:	mov	edx, dword ptr [rsp + 0xc]
0x11358:	mov	rdi, rbx
0x1135b:	mov	rsi, rax
0x1135e:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x11363:	mov	rbx, rax
0x11366:	mov	rcx, qword ptr [rsp + 0x18]
0x1136b:	xor	rcx, qword ptr fs:[0x28]
0x11374:	mov	rax, rbx
0x11377:	jne	0x1137f
		Instruction group(s): [7, 1] 

0x11379:	add	rsp, 0x20
0x1137d:	pop	rbx
		Instruction group(s): [145] 

0x1137e:	ret	
		Instruction group(s): [3, 145] 

0x1137f:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x11384:	nop	
0x11386:	nop	word ptr cs:[rax + rax]
0x11390:	push	r15
		Instruction group(s): [145] 

0x11392:	push	r14
		Instruction group(s): [145] 

0x11394:	mov	r8d, 0x8000
0x1139a:	push	r13
		Instruction group(s): [145] 

0x1139c:	push	r12
		Instruction group(s): [145] 

0x1139e:	lea	r15, [rip + 0x224dfb]
0x113a5:	push	rbp
		Instruction group(s): [145] 

0x113a6:	push	rbx
		Instruction group(s): [145] 

0x113a7:	mov	rbp, rdi
0x113aa:	sub	rsp, 0x48
0x113ae:	movzx	r12d, byte ptr [rdx]
0x113b2:	mov	rax, qword ptr fs:[0x28]
0x113bb:	mov	qword ptr [rsp + 0x38], rax
0x113c0:	xor	eax, eax
0x113c2:	mov	rax, qword ptr [rsi]
0x113c5:	lea	r14, [rsp + 0x2c]
0x113ca:	mov	dword ptr [rsp + 0x2c], 0
0x113d2:	mov	dword ptr [rsp + 0x14], 0
0x113da:	cmp	r12b, 0x73
0x113de:	mov	qword ptr [rsp + 0x30], rax
0x113e3:	mov	eax, 0x8200
0x113e8:	cmovne	eax, r8d
		Instruction group(s): [137] 

0x113ec:	mov	r13d, eax
0x113ef:	lea	rax, [rsp + 0x30]
0x113f4:	mov	qword ptr [rsp + 8], rax
0x113f9:	nop	dword ptr [rax]
0x11400:	mov	rdi, qword ptr [rsp + 8]
0x11405:	mov	rsi, r14
0x11408:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x1140d:	test	rax, rax
0x11410:	mov	rcx, rax
0x11413:	je	0x114b0
		Instruction group(s): [7, 1] 

0x11419:	mov	eax, dword ptr [rsp + 0x2c]
0x1141d:	lea	rbx, [rcx + rax - 1]
0x11422:	mov	rdx, rax
0x11425:	cmp	rcx, rbx
0x11428:	jbe	0x11439
		Instruction group(s): [7, 1] 

0x1142a:	jmp	0x11490
		Instruction group(s): [7, 1] 

0x1142c:	nop	dword ptr [rax]
0x11430:	sub	rbx, 1
0x11434:	cmp	rcx, rbx
0x11437:	ja	0x11490
		Instruction group(s): [7, 1] 

0x11439:	movzx	eax, byte ptr [rbx]
0x1143c:	movzx	eax, word ptr [r15 + rax*2]
0x11441:	test	eax, r13d
0x11444:	je	0x11430
		Instruction group(s): [7, 1] 

0x11446:	cmp	r12b, 0x73
0x1144a:	je	0x114e0
		Instruction group(s): [7, 1] 

0x11450:	lea	rsi, [rbx + 1]
0x11454:	mov	rdi, rbp
0x11457:	mov	rax, rsi
0x1145a:	sub	rax, rcx
0x1145d:	sub	edx, eax
0x1145f:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x11464:	mov	rbp, rax
0x11467:	lea	rsi, [rip + 0x1cbbc]
0x1146e:	mov	rdi, rbp
0x11471:	mov	edx, 1
0x11476:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x1147b:	mov	dword ptr [rsp + 0x14], 1
0x11483:	mov	rbp, rax
0x11486:	jmp	0x11400
		Instruction group(s): [7, 1] 

0x1148b:	nop	dword ptr [rax + rax]
0x11490:	cmp	r12b, 0x73
0x11494:	je	0x11400
		Instruction group(s): [7, 1] 

0x1149a:	mov	rdi, rbp
0x1149d:	mov	rsi, rcx
0x114a0:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x114a5:	mov	rbp, rax
0x114a8:	jmp	0x11467
		Instruction group(s): [7, 1] 

0x114aa:	nop	word ptr [rax + rax]
0x114b0:	cmp	dword ptr [rsp + 0x14], 1
0x114b5:	mov	rax, rbp
0x114b8:	adc	rax, -1
0x114bc:	mov	rdi, qword ptr [rsp + 0x38]
0x114c1:	xor	rdi, qword ptr fs:[0x28]
0x114ca:	jne	0x11517
		Instruction group(s): [7, 1] 

0x114cc:	add	rsp, 0x48
0x114d0:	pop	rbx
		Instruction group(s): [145] 

0x114d1:	pop	rbp
		Instruction group(s): [145] 

0x114d2:	pop	r12
		Instruction group(s): [145] 

0x114d4:	pop	r13
		Instruction group(s): [145] 

0x114d6:	pop	r14
		Instruction group(s): [145] 

0x114d8:	pop	r15
		Instruction group(s): [145] 

0x114da:	ret	
		Instruction group(s): [3, 145] 

0x114db:	nop	dword ptr [rax + rax]
0x114e0:	cmp	byte ptr [rbx], 0x2e
0x114e3:	jne	0x11400
		Instruction group(s): [7, 1] 

0x114e9:	mov	rax, rbx
0x114ec:	mov	rdi, rbp
0x114ef:	mov	rsi, rbx
0x114f2:	sub	rax, rcx
0x114f5:	mov	qword ptr [rsp + 0x18], rcx
0x114fa:	sub	edx, eax
0x114fc:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x11501:	mov	rcx, qword ptr [rsp + 0x18]
0x11506:	mov	rbp, rax
0x11509:	cmp	rbx, rcx
0x1150c:	jb	0x11400
		Instruction group(s): [7, 1] 

0x11512:	jmp	0x11467
		Instruction group(s): [7, 1] 

0x11517:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x1151c:	nop	dword ptr [rax]
0x11520:	push	r15
		Instruction group(s): [145] 

0x11522:	push	r14
		Instruction group(s): [145] 

0x11524:	lea	r15, [rip + 0x224c75]
0x1152b:	push	r13
		Instruction group(s): [145] 

0x1152d:	push	r12
		Instruction group(s): [145] 

0x1152f:	push	rbp
		Instruction group(s): [145] 

0x11530:	push	rbx
		Instruction group(s): [145] 

0x11531:	mov	rbp, rdi
0x11534:	mov	ebx, 0x8201
0x11539:	sub	rsp, 0x38
0x1153d:	mov	rax, qword ptr fs:[0x28]
0x11546:	mov	qword ptr [rsp + 0x28], rax
0x1154b:	xor	eax, eax
0x1154d:	mov	rax, qword ptr [rsi]
0x11550:	lea	r14, [rsp + 0x1c]
0x11555:	lea	r13, [rsp + 0x20]
0x1155a:	mov	dword ptr [rsp + 0x1c], 0
0x11562:	mov	rsi, r14
0x11565:	mov	rdi, r13
0x11568:	mov	qword ptr [rsp + 0x20], rax
0x1156d:	movzx	eax, byte ptr [rdx]
0x11570:	cmp	al, 0x62
0x11572:	mov	byte ptr [rsp + 0xe], al
0x11576:	mov	eax, 0x8001
0x1157b:	setne	byte ptr [rsp + 0xf]
0x11580:	cmovne	ebx, eax
		Instruction group(s): [137] 

0x11583:	xor	r12d, r12d
0x11586:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x1158b:	test	rax, rax
0x1158e:	je	0x11618
		Instruction group(s): [7, 1] 

0x11594:	nop	dword ptr [rax]
0x11598:	mov	ecx, dword ptr [rsp + 0x1c]
0x1159c:	mov	rdx, rcx
0x1159f:	lea	rcx, [rax + rcx - 1]
0x115a4:	cmp	rax, rcx
0x115a7:	jbe	0x115bd
		Instruction group(s): [7, 1] 

0x115a9:	jmp	0x11660
		Instruction group(s): [7, 1] 

0x115ae:	nop	
0x115b0:	sub	rcx, 1
0x115b4:	cmp	rax, rcx
0x115b7:	ja	0x11660
		Instruction group(s): [7, 1] 

0x115bd:	movzx	esi, byte ptr [rcx]
0x115c0:	movzx	esi, word ptr [r15 + rsi*2]
0x115c5:	test	esi, ebx
0x115c7:	je	0x115b0
		Instruction group(s): [7, 1] 

0x115c9:	cmp	rax, rcx
0x115cc:	ja	0x11648
		Instruction group(s): [7, 1] 

0x115ce:	cmp	byte ptr [rsp + 0xf], 0
0x115d3:	je	0x11648
		Instruction group(s): [7, 1] 

0x115d5:	lea	rdx, [rcx + 1]
0x115d9:	mov	rdi, rbp
0x115dc:	sub	rdx, rax
0x115df:	mov	rsi, rax
0x115e2:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x115e7:	mov	rdi, rax
0x115ea:	lea	rsi, [rip + 0x1ca39]
0x115f1:	mov	edx, 1
0x115f6:	mov	r12d, 1
0x115fc:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x11601:	mov	rsi, r14
0x11604:	mov	rdi, r13
0x11607:	mov	rbp, rax
0x1160a:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x1160f:	test	rax, rax
0x11612:	jne	0x11598
		Instruction group(s): [7, 1] 

0x11618:	cmp	r12d, 1
0x1161c:	mov	rax, rbp
0x1161f:	adc	rax, -1
0x11623:	mov	rdi, qword ptr [rsp + 0x28]
0x11628:	xor	rdi, qword ptr fs:[0x28]
0x11631:	jne	0x11690
		Instruction group(s): [7, 1] 

0x11633:	add	rsp, 0x38
0x11637:	pop	rbx
		Instruction group(s): [145] 

0x11638:	pop	rbp
		Instruction group(s): [145] 

0x11639:	pop	r12
		Instruction group(s): [145] 

0x1163b:	pop	r13
		Instruction group(s): [145] 

0x1163d:	pop	r14
		Instruction group(s): [145] 

0x1163f:	pop	r15
		Instruction group(s): [145] 

0x11641:	ret	
		Instruction group(s): [3, 145] 

0x11642:	nop	word ptr [rax + rax]
0x11648:	cmp	byte ptr [rcx], 0x2e
0x1164b:	je	0x11688
		Instruction group(s): [7, 1] 

0x1164d:	mov	rdi, rbp
0x11650:	mov	rsi, rax
0x11653:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x11658:	mov	rdi, rax
0x1165b:	jmp	0x115ea
		Instruction group(s): [7, 1] 

0x1165d:	nop	dword ptr [rax]
0x11660:	cmp	byte ptr [rsp + 0xe], 0x62
0x11665:	je	0x1164d
		Instruction group(s): [7, 1] 

0x11667:	lea	rsi, [rip + 0x19ad8]
0x1166e:	mov	rdi, rbp
0x11671:	mov	edx, 2
0x11676:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x1167b:	mov	rdi, rax
0x1167e:	jmp	0x115ea
		Instruction group(s): [7, 1] 

0x11683:	nop	dword ptr [rax + rax]
0x11688:	mov	rdx, rcx
0x1168b:	jmp	0x115d9
		Instruction group(s): [7, 1] 

0x11690:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x11695:	nop	
0x11696:	nop	word ptr cs:[rax + rax]
0x116a0:	push	r15
		Instruction group(s): [145] 

0x116a2:	push	r14
		Instruction group(s): [145] 

0x116a4:	push	r13
		Instruction group(s): [145] 

0x116a6:	push	r12
		Instruction group(s): [145] 

0x116a8:	mov	r12, rdx
0x116ab:	push	rbp
		Instruction group(s): [145] 

0x116ac:	push	rbx
		Instruction group(s): [145] 

0x116ad:	mov	rbx, rdi
0x116b0:	mov	rbp, rsi
0x116b3:	sub	rsp, 0x38
0x116b7:	mov	rdi, qword ptr [rsi]
0x116ba:	mov	rax, qword ptr fs:[0x28]
0x116c3:	mov	qword ptr [rsp + 0x28], rax
0x116c8:	xor	eax, eax
0x116ca:	lea	r14, [rsp + 0x1c]
0x116cf:	lea	r13, [rsp + 0x20]
0x116d4:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x116d9:	mov	r15, rax
0x116dc:	mov	rax, qword ptr [rbp + 8]
0x116e0:	mov	qword ptr [rsp + 0x20], rax
0x116e5:	movzx	eax, byte ptr [r12 + 3]
0x116eb:	xor	r12d, r12d
0x116ee:	mov	byte ptr [rsp + 7], al
0x116f2:	jmp	0x11733
		Instruction group(s): [7, 1] 

0x116f4:	nop	dword ptr [rax]
0x116f8:	mov	edx, dword ptr [rsp + 0x1c]
0x116fc:	mov	rsi, rcx
0x116ff:	mov	rdi, rbx
0x11702:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x11707:	mov	rsi, qword ptr [rbp]
0x1170b:	mov	edx, r15d
0x1170e:	mov	rdi, rax
0x11711:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x11716:	lea	rsi, [rip + 0x1c90d]
0x1171d:	mov	edx, 1
0x11722:	mov	rdi, rax
0x11725:	mov	r12d, 1
0x1172b:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x11730:	mov	rbx, rax
0x11733:	mov	rsi, r14
0x11736:	mov	rdi, r13
0x11739:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x1173e:	test	rax, rax
0x11741:	mov	rcx, rax
0x11744:	je	0x11780
		Instruction group(s): [7, 1] 

0x11746:	cmp	byte ptr [rsp + 7], 0x70
0x1174b:	jne	0x116f8
		Instruction group(s): [7, 1] 

0x1174d:	mov	rsi, qword ptr [rbp]
0x11751:	mov	edx, r15d
0x11754:	mov	rdi, rbx
0x11757:	mov	qword ptr [rsp + 8], rcx
0x1175c:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x11761:	mov	rcx, qword ptr [rsp + 8]
0x11766:	mov	edx, dword ptr [rsp + 0x1c]
0x1176a:	mov	rdi, rax
0x1176d:	mov	rsi, rcx
0x11770:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x11775:	jmp	0x11716
		Instruction group(s): [7, 1] 

0x11777:	nop	word ptr [rax + rax]
0x11780:	cmp	r12d, 1
0x11784:	mov	rax, rbx
0x11787:	adc	rax, -1
0x1178b:	mov	rbx, qword ptr [rsp + 0x28]
0x11790:	xor	rbx, qword ptr fs:[0x28]
0x11799:	jne	0x117aa
		Instruction group(s): [7, 1] 

0x1179b:	add	rsp, 0x38
0x1179f:	pop	rbx
		Instruction group(s): [145] 

0x117a0:	pop	rbp
		Instruction group(s): [145] 

0x117a1:	pop	r12
		Instruction group(s): [145] 

0x117a3:	pop	r13
		Instruction group(s): [145] 

0x117a5:	pop	r14
		Instruction group(s): [145] 

0x117a7:	pop	r15
		Instruction group(s): [145] 

0x117a9:	ret	
		Instruction group(s): [3, 145] 

0x117aa:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x117af:	nop	
0x117b0:	push	r12
		Instruction group(s): [145] 

0x117b2:	push	rbp
		Instruction group(s): [145] 

0x117b3:	mov	r12, rdi
0x117b6:	push	rbx
		Instruction group(s): [145] 

0x117b7:	xor	ebx, ebx
0x117b9:	sub	rsp, 0x30
0x117bd:	mov	rax, qword ptr fs:[0x28]
0x117c6:	mov	qword ptr [rsp + 0x28], rax
0x117cb:	xor	eax, eax
0x117cd:	mov	rax, qword ptr [rsi]
0x117d0:	lea	rbp, [rsp + 8]
0x117d5:	mov	qword ptr [rsp + 8], rax
0x117da:	jmp	0x117e3
		Instruction group(s): [7, 1] 

0x117dc:	nop	dword ptr [rax]
0x117e0:	add	ebx, 1
0x117e3:	xor	esi, esi
0x117e5:	mov	rdi, rbp
0x117e8:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x117ed:	test	rax, rax
0x117f0:	jne	0x117e0
		Instruction group(s): [7, 1] 

0x117f2:	lea	rbp, [rsp + 0x10]
0x117f7:	lea	rcx, [rip + 0x1bd25]
0x117fe:	mov	edx, 0x14
0x11803:	mov	r8d, ebx
0x11806:	mov	esi, 1
0x1180b:	mov	rdi, rbp
0x1180e:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x11813:	mov	rdx, rbp
0x11816:	mov	ecx, dword ptr [rdx]
0x11818:	add	rdx, 4
0x1181c:	lea	eax, [rcx - 0x1010101]
		Instruction group(s): [145] 

0x11822:	not	ecx
0x11824:	and	eax, ecx
0x11826:	and	eax, 0x80808080
0x1182b:	je	0x11816
		Instruction group(s): [7, 1] 

0x1182d:	mov	ecx, eax
0x1182f:	mov	rsi, rbp
0x11832:	mov	rdi, r12
0x11835:	shr	ecx, 0x10
0x11838:	test	eax, 0x8080
0x1183d:	cmove	eax, ecx
		Instruction group(s): [137] 

0x11840:	lea	rcx, [rdx + 2]
0x11844:	mov	ebx, eax
0x11846:	cmove	rdx, rcx
		Instruction group(s): [137] 

0x1184a:	add	bl, al
0x1184c:	sbb	rdx, 3
0x11850:	sub	rdx, rbp
0x11853:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x11858:	mov	rdx, qword ptr [rsp + 0x28]
0x1185d:	xor	rdx, qword ptr fs:[0x28]
0x11866:	jne	0x11871
		Instruction group(s): [7, 1] 

0x11868:	add	rsp, 0x30
0x1186c:	pop	rbx
		Instruction group(s): [145] 

0x1186d:	pop	rbp
		Instruction group(s): [145] 

0x1186e:	pop	r12
		Instruction group(s): [145] 

0x11870:	ret	
		Instruction group(s): [3, 145] 

0x11871:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x11876:	nop	word ptr cs:[rax + rax]
0x11880:	push	r12
		Instruction group(s): [145] 

0x11882:	push	rbp
		Instruction group(s): [145] 

0x11883:	push	rbx
		Instruction group(s): [145] 

0x11884:	mov	ebx, esi
0x11886:	sub	rsp, 0x10
0x1188a:	movzx	eax, byte ptr [rcx + 0x11]
0x1188e:	cmp	eax, esi
0x11890:	jg	0x1190f
		Instruction group(s): [7, 1] 

0x11892:	test	ebx, ebx
0x11894:	mov	rbp, rdi
0x11897:	mov	rsi, rdx
0x1189a:	jne	0x118f0
		Instruction group(s): [7, 1] 

0x1189c:	test	byte ptr [rcx + 0x13], 2
0x118a0:	je	0x118e4
		Instruction group(s): [7, 1] 

0x118a2:	mov	rax, qword ptr [rcx]
0x118a5:	mov	r12, qword ptr [rcx + 8]
0x118a9:	test	rax, rax
0x118ac:	je	0x1195f
		Instruction group(s): [7, 1] 

0x118b2:	mov	rdx, rsi
0x118b5:	mov	rdi, r12
0x118b8:	mov	esi, ebx
0x118ba:	call	rax
		Instruction group(s): [2, 145] 

0x118bc:	test	rax, rax
0x118bf:	mov	rbx, rax
0x118c2:	je	0x118e4
		Instruction group(s): [7, 1] 

0x118c4:	mov	rdi, rax
0x118c7:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x118cc:	mov	rdi, rbp
0x118cf:	mov	edx, eax
0x118d1:	mov	rsi, rbx
0x118d4:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x118d9:	mov	rdi, rbx
0x118dc:	mov	rbp, rax
0x118df:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x118e4:	add	rsp, 0x10
0x118e8:	mov	rax, rbp
0x118eb:	pop	rbx
		Instruction group(s): [145] 

0x118ec:	pop	rbp
		Instruction group(s): [145] 

0x118ed:	pop	r12
		Instruction group(s): [145] 

0x118ef:	ret	
		Instruction group(s): [3, 145] 

0x118f0:	mov	rax, qword ptr [rcx]
0x118f3:	mov	r12, qword ptr [rcx + 8]
0x118f7:	test	rax, rax
0x118fa:	je	0x1195f
		Instruction group(s): [7, 1] 

0x118fc:	test	byte ptr [rcx + 0x13], 2
0x11900:	jne	0x118b2
		Instruction group(s): [7, 1] 

0x11902:	add	rsp, 0x10
0x11906:	mov	rdx, r12
0x11909:	pop	rbx
		Instruction group(s): [145] 

0x1190a:	pop	rbp
		Instruction group(s): [145] 

0x1190b:	pop	r12
		Instruction group(s): [145] 

0x1190d:	jmp	rax
		Instruction group(s): [145, 1] 

0x1190f:	lea	rsi, [rip + 0x19fd2]
0x11916:	mov	edx, 5
0x1191b:	xor	edi, edi
0x1191d:	mov	rbp, qword ptr [rcx + 8]
0x11921:	mov	qword ptr [rsp + 8], rcx
0x11926:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1192b:	mov	rcx, qword ptr [rsp + 8]
0x11930:	mov	rdx, rax
0x11933:	xor	eax, eax
0x11935:	mov	r8, rbp
0x11938:	mov	rdi, qword ptr [rcx + 8]
0x1193c:	or	rcx, 0xffffffffffffffff
0x11940:	repne scasb	al, byte ptr [rdi]
0x11942:	mov	rax, rcx
0x11945:	mov	ecx, ebx
0x11947:	not	rax
0x1194a:	lea	rsi, [rax - 1]
0x1194e:	mov	rax, qword ptr [rip + 0x223fc3]
0x11955:	mov	rdi, qword ptr [rax]
0x11958:	xor	eax, eax
0x1195a:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x1195f:	lea	rsi, [rip + 0x19fba]
0x11966:	mov	edx, 5
0x1196b:	xor	edi, edi
0x1196d:	mov	qword ptr [rsp + 8], rcx
0x11972:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x11977:	mov	rcx, qword ptr [rsp + 8]
0x1197c:	mov	rdx, rax
0x1197f:	xor	eax, eax
0x11981:	mov	rdi, qword ptr [rcx + 8]
0x11985:	or	rcx, 0xffffffffffffffff
0x11989:	repne scasb	al, byte ptr [rdi]
0x1198b:	mov	rax, rcx
0x1198e:	mov	rcx, r12
0x11991:	not	rax
0x11994:	lea	rsi, [rax - 1]
0x11998:	mov	rax, qword ptr [rip + 0x223f79]
0x1199f:	mov	rdi, qword ptr [rax]
0x119a2:	xor	eax, eax
0x119a4:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x119a9:	nop	dword ptr [rax]
0x119b0:	sub	rsp, 0x28
0x119b4:	lea	rcx, [rip + 0x2247e5]
0x119bb:	mov	rax, qword ptr fs:[0x28]
0x119c4:	mov	qword ptr [rsp + 0x18], rax
0x119c9:	xor	eax, eax
0x119cb:	movzx	eax, byte ptr [rdi]
0x119ce:	test	byte ptr [rcx + rax*2 + 1], 0x20
0x119d3:	je	0x11a30
		Instruction group(s): [7, 1] 

0x119d5:	mov	rax, rdi
0x119d8:	nop	dword ptr [rax + rax]
0x119e0:	add	rax, 1
0x119e4:	movzx	edx, byte ptr [rax]
0x119e7:	movzx	edx, word ptr [rcx + rdx*2]
0x119eb:	test	dh, 0x20
0x119ee:	jne	0x119e0
		Instruction group(s): [7, 1] 

0x119f0:	cmp	rdi, rax
0x119f3:	je	0x11a30
		Instruction group(s): [7, 1] 

0x119f5:	and	edx, 5
0x119f8:	je	0x11a30
		Instruction group(s): [7, 1] 

0x119fa:	sub	rax, rdi
0x119fd:	mov	qword ptr [rsp + 8], rdi
0x11a02:	lea	rdi, [rip + 0x224657]
0x11a09:	mov	rsi, rsp
0x11a0c:	mov	byte ptr [rsp + 0x10], al
0x11a10:	call	0x29600
		Instruction group(s): [2, 7, 145] 

0x11a15:	mov	rsi, qword ptr [rsp + 0x18]
0x11a1a:	xor	rsi, qword ptr fs:[0x28]
0x11a23:	jne	0x11a34
		Instruction group(s): [7, 1] 

0x11a25:	add	rsp, 0x28
0x11a29:	ret	
		Instruction group(s): [3, 145] 

0x11a2a:	nop	word ptr [rax + rax]
0x11a30:	xor	eax, eax
0x11a32:	jmp	0x11a15
		Instruction group(s): [7, 1] 

0x11a34:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x11a39:	nop	dword ptr [rax]
0x11a40:	push	r13
		Instruction group(s): [145] 

0x11a42:	push	r12
		Instruction group(s): [145] 

0x11a44:	push	rbp
		Instruction group(s): [145] 

0x11a45:	push	rbx
		Instruction group(s): [145] 

0x11a46:	sub	rsp, 8
0x11a4a:	mov	rbx, qword ptr [rsi]
0x11a4d:	cmp	byte ptr [rbx], 0x3e
0x11a50:	jne	0x11b8d
		Instruction group(s): [7, 1] 

0x11a56:	cmp	byte ptr [rbx + 1], 0x3e
0x11a5a:	mov	r12, rdi
0x11a5d:	mov	rbp, rsi
0x11a60:	je	0x11b60
		Instruction group(s): [7, 1] 

0x11a66:	lea	rdi, [rbx + 1]
0x11a6a:	lea	rbx, [rip + 0x1bcb8]
0x11a71:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x11a76:	mov	rsi, rbx
0x11a79:	mov	rdi, rax
0x11a7c:	mov	r13, rax
0x11a7f:	call	0x8c10
		Instruction group(s): [2, 7, 145] 

0x11a84:	test	rax, rax
0x11a87:	mov	rbx, rax
0x11a8a:	je	0x11b70
		Instruction group(s): [7, 1] 

0x11a90:	mov	rbp, qword ptr [rbp + 8]
0x11a94:	test	rbp, rbp
0x11a97:	je	0x11ac7
		Instruction group(s): [7, 1] 

0x11a99:	mov	rdi, rbp
0x11a9c:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x11aa1:	test	eax, eax
0x11aa3:	jne	0x11ae0
		Instruction group(s): [7, 1] 

0x11aa5:	mov	rsi, rbx
0x11aa8:	mov	rdi, rbp
0x11aab:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0x11ab0:	cmp	eax, -1
0x11ab3:	je	0x11af9
		Instruction group(s): [7, 1] 

0x11ab5:	mov	rsi, rbx
0x11ab8:	mov	edi, 0xa
0x11abd:	call	0x8970
		Instruction group(s): [2, 7, 145] 

0x11ac2:	cmp	eax, -1
0x11ac5:	je	0x11af9
		Instruction group(s): [7, 1] 

0x11ac7:	mov	rdi, rbx
0x11aca:	call	0x87a0
		Instruction group(s): [2, 7, 145] 

0x11acf:	add	rsp, 8
0x11ad3:	mov	rax, r12
0x11ad6:	pop	rbx
		Instruction group(s): [145] 

0x11ad7:	pop	rbp
		Instruction group(s): [145] 

0x11ad8:	pop	r12
		Instruction group(s): [145] 

0x11ada:	pop	r13
		Instruction group(s): [145] 

0x11adc:	ret	
		Instruction group(s): [3, 145] 

0x11add:	nop	dword ptr [rax]
0x11ae0:	cdqe	
0x11ae2:	cmp	byte ptr [rbp + rax - 1], 0xa
0x11ae7:	jne	0x11aa5
		Instruction group(s): [7, 1] 

0x11ae9:	mov	rsi, rbx
0x11aec:	mov	rdi, rbp
0x11aef:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0x11af4:	cmp	eax, -1
0x11af7:	jne	0x11ac7
		Instruction group(s): [7, 1] 

0x11af9:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x11afe:	mov	edi, dword ptr [rax]
0x11b00:	call	0x8cc0
		Instruction group(s): [2, 7, 145] 

0x11b05:	lea	rsi, [rip + 0x19c1d]
0x11b0c:	mov	rbx, rax
0x11b0f:	mov	edx, 5
0x11b14:	xor	edi, edi
0x11b16:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x11b1b:	or	r8, 0xffffffffffffffff
0x11b1f:	mov	rdi, r13
0x11b22:	mov	rdx, rax
0x11b25:	mov	rcx, r8
0x11b28:	xor	eax, eax
0x11b2a:	repne scasb	al, byte ptr [rdi]
0x11b2c:	mov	rdi, rbx
0x11b2f:	not	rcx
0x11b32:	mov	rsi, rcx
0x11b35:	mov	rcx, r8
0x11b38:	mov	r8, rbx
0x11b3b:	repne scasb	al, byte ptr [rdi]
0x11b3d:	mov	rdi, qword ptr [rip + 0x226fac]
0x11b44:	mov	rax, rcx
0x11b47:	mov	rcx, r13
0x11b4a:	not	rax
0x11b4d:	lea	rsi, [rsi + rax - 2]
0x11b52:	xor	eax, eax
0x11b54:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x11b59:	nop	dword ptr [rax]
0x11b60:	lea	rdi, [rbx + 2]
0x11b64:	lea	rbx, [rip + 0x1872a]
0x11b6b:	jmp	0x11a71
		Instruction group(s): [7, 1] 

0x11b70:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x11b75:	mov	edi, dword ptr [rax]
0x11b77:	call	0x8cc0
		Instruction group(s): [2, 7, 145] 

0x11b7c:	mov	edx, 5
0x11b81:	mov	rbx, rax
0x11b84:	lea	rsi, [rip + 0x19b91]
0x11b8b:	jmp	0x11b14
		Instruction group(s): [7, 1] 

0x11b8d:	lea	rsi, [rip + 0x19ba3]
0x11b94:	mov	edx, 5
0x11b99:	xor	edi, edi
0x11b9b:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x11ba0:	mov	rdi, rbx
0x11ba3:	mov	rdx, rax
0x11ba6:	or	rcx, 0xffffffffffffffff
0x11baa:	xor	eax, eax
0x11bac:	repne scasb	al, byte ptr [rdi]
0x11bae:	mov	rdi, qword ptr [rip + 0x226f3b]
0x11bb5:	mov	rax, rcx
0x11bb8:	mov	rcx, rbx
0x11bbb:	not	rax
0x11bbe:	lea	rsi, [rax - 1]
0x11bc2:	xor	eax, eax
0x11bc4:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x11bc9:	nop	dword ptr [rax]
0x11bd0:	push	rbp
		Instruction group(s): [145] 

0x11bd1:	push	rbx
		Instruction group(s): [145] 

0x11bd2:	mov	rbp, rsi
0x11bd5:	mov	rbx, rdi
0x11bd8:	sub	rsp, 0x28
0x11bdc:	lea	rsi, [rsp + 0xc]
0x11be1:	lea	rdi, [rsp + 0x10]
0x11be6:	mov	rax, qword ptr fs:[0x28]
0x11bef:	mov	qword ptr [rsp + 0x18], rax
0x11bf4:	xor	eax, eax
0x11bf6:	call	0xecf0
		Instruction group(s): [2, 7, 145] 

0x11bfb:	mov	rdi, qword ptr [rbp]
0x11bff:	xor	esi, esi
0x11c01:	call	0x21df0
		Instruction group(s): [2, 7, 145] 

0x11c06:	mov	esi, dword ptr [rsp + 0xc]
0x11c0a:	mov	rdi, qword ptr [rsp + 0x10]
0x11c0f:	call	0xed20
		Instruction group(s): [2, 7, 145] 

0x11c14:	mov	rdx, qword ptr [rsp + 0x18]
0x11c19:	xor	rdx, qword ptr fs:[0x28]
0x11c22:	jne	0x11c2e
		Instruction group(s): [7, 1] 

0x11c24:	add	rsp, 0x28
0x11c28:	mov	rax, rbx
0x11c2b:	pop	rbx
		Instruction group(s): [145] 

0x11c2c:	pop	rbp
		Instruction group(s): [145] 

0x11c2d:	ret	
		Instruction group(s): [3, 145] 

0x11c2e:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x11c33:	nop	dword ptr [rax]
0x11c36:	nop	word ptr cs:[rax + rax]
0x11c40:	push	rbp
		Instruction group(s): [145] 

0x11c41:	push	rbx
		Instruction group(s): [145] 

0x11c42:	mov	rbp, rdi
0x11c45:	sub	rsp, 8
0x11c49:	mov	rbx, qword ptr [rsi]
0x11c4c:	mov	rdi, rbx
0x11c4f:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x11c54:	mov	rdi, rbx
0x11c57:	mov	esi, eax
0x11c59:	call	0x27020
		Instruction group(s): [2, 7, 145] 

0x11c5e:	test	rax, rax
0x11c61:	je	0x11c88
		Instruction group(s): [7, 1] 

0x11c63:	mov	rbx, qword ptr [rax + 8]
0x11c67:	mov	rdi, rbx
0x11c6a:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x11c6f:	add	rsp, 8
0x11c73:	mov	rsi, rbx
0x11c76:	mov	rdi, rbp
0x11c79:	pop	rbx
		Instruction group(s): [145] 

0x11c7a:	pop	rbp
		Instruction group(s): [145] 

0x11c7b:	mov	edx, eax
0x11c7d:	jmp	0xdfa0
		Instruction group(s): [7, 1] 

0x11c82:	nop	word ptr [rax + rax]
0x11c88:	add	rsp, 8
0x11c8c:	mov	rax, rbp
0x11c8f:	pop	rbx
		Instruction group(s): [145] 

0x11c90:	pop	rbp
		Instruction group(s): [145] 

0x11c91:	ret	
		Instruction group(s): [3, 145] 

0x11c92:	nop	dword ptr [rax]
0x11c96:	nop	word ptr cs:[rax + rax]
0x11ca0:	push	rbp
		Instruction group(s): [145] 

0x11ca1:	mov	rbp, rsp
0x11ca4:	push	r15
		Instruction group(s): [145] 

0x11ca6:	push	r14
		Instruction group(s): [145] 

0x11ca8:	push	r13
		Instruction group(s): [145] 

0x11caa:	push	r12
		Instruction group(s): [145] 

0x11cac:	push	rbx
		Instruction group(s): [145] 

0x11cad:	mov	rbx, rsi
0x11cb0:	sub	rsp, 0x28
0x11cb4:	mov	r15, qword ptr [rsi]
0x11cb7:	mov	qword ptr [rbp - 0x50], rdi
0x11cbb:	mov	rax, qword ptr fs:[0x28]
0x11cc4:	mov	qword ptr [rbp - 0x38], rax
0x11cc8:	xor	eax, eax
0x11cca:	mov	qword ptr [rbp - 0x48], rdx
0x11cce:	test	r15, r15
0x11cd1:	je	0x11e20
		Instruction group(s): [7, 1] 

0x11cd7:	mov	r13, rsi
0x11cda:	mov	rdi, r15
0x11cdd:	xor	r12d, r12d
0x11ce0:	add	r13, 8
0x11ce4:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x11ce9:	mov	rdi, qword ptr [r13]
0x11ced:	lea	r12d, [r12 + rax + 2]
		Instruction group(s): [145] 

0x11cf2:	test	rdi, rdi
0x11cf5:	jne	0x11ce0
		Instruction group(s): [7, 1] 

0x11cf7:	add	r12d, 1
0x11cfb:	movsxd	r12, r12d
		Instruction group(s): [145] 

0x11cfe:	add	r12, 0x1e
0x11d02:	mov	r13, qword ptr [rbx + 8]
0x11d06:	and	r12, 0xfffffffffffffff0
0x11d0a:	sub	rsp, r12
0x11d0d:	lea	r12, [rsp + 0xf]
0x11d12:	and	r12, 0xfffffffffffffff0
0x11d16:	test	r13, r13
0x11d19:	je	0x11e10
		Instruction group(s): [7, 1] 

0x11d1f:	mov	r14, r12
0x11d22:	jmp	0x11d2b
		Instruction group(s): [7, 1] 

0x11d24:	nop	dword ptr [rax]
0x11d28:	mov	r13, rax
0x11d2b:	mov	rsi, r15
0x11d2e:	mov	rdi, r14
0x11d31:	add	rbx, 8
0x11d35:	call	0x86c0
		Instruction group(s): [2, 7, 145] 

0x11d3a:	mov	rdi, r15
0x11d3d:	mov	r15, r13
0x11d40:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x11d45:	mov	edx, 0x202c
0x11d4a:	add	rax, r14
0x11d4d:	lea	r14, [rax + 2]
0x11d51:	mov	word ptr [rax], dx
0x11d54:	mov	rax, qword ptr [rbx + 8]
0x11d58:	test	rax, rax
0x11d5b:	jne	0x11d28
		Instruction group(s): [7, 1] 

0x11d5d:	mov	rsi, r13
0x11d60:	mov	rdi, r14
0x11d63:	call	0x86c0
		Instruction group(s): [2, 7, 145] 

0x11d68:	mov	rax, qword ptr [rbp - 0x48]
0x11d6c:	movzx	eax, byte ptr [rax]
0x11d6f:	cmp	al, 0x69
0x11d71:	je	0x11dd0
		Instruction group(s): [7, 1] 

0x11d73:	cmp	al, 0x77
0x11d75:	jne	0x11e30
		Instruction group(s): [7, 1] 

0x11d7b:	mov	rsi, r12
0x11d7e:	mov	edx, dword ptr [rsi]
0x11d80:	add	rsi, 4
0x11d84:	lea	eax, [rdx - 0x1010101]
		Instruction group(s): [145] 

0x11d8a:	not	edx
0x11d8c:	and	eax, edx
0x11d8e:	and	eax, 0x80808080
0x11d93:	je	0x11d7e
		Instruction group(s): [7, 1] 

0x11d95:	mov	edx, eax
0x11d97:	mov	rdi, qword ptr [rip + 0x226d52]
0x11d9e:	shr	edx, 0x10
0x11da1:	test	eax, 0x8080
0x11da6:	cmove	eax, edx
		Instruction group(s): [137] 

0x11da9:	lea	rdx, [rsi + 2]
0x11dad:	mov	ecx, eax
0x11daf:	cmove	rsi, rdx
		Instruction group(s): [137] 

0x11db3:	add	cl, al
0x11db5:	lea	rdx, [rip + 0x19376]
0x11dbc:	sbb	rsi, 3
0x11dc0:	mov	rcx, r12
0x11dc3:	xor	eax, eax
0x11dc5:	sub	rsi, r12
0x11dc8:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x11dcd:	jmp	0x11de8
		Instruction group(s): [7, 1] 

0x11dcf:	nop	
0x11dd0:	mov	rsi, r12
0x11dd3:	xor	edi, edi
0x11dd5:	call	0x1ca30
		Instruction group(s): [2, 7, 145] 

0x11dda:	lea	rsi, [rip + 0x1bbeb]
0x11de1:	xor	edi, edi
0x11de3:	call	0x1ca30
		Instruction group(s): [2, 7, 145] 

0x11de8:	mov	rcx, qword ptr [rbp - 0x38]
0x11dec:	xor	rcx, qword ptr fs:[0x28]
0x11df5:	mov	rax, qword ptr [rbp - 0x50]
0x11df9:	jne	0x11e2b
		Instruction group(s): [7, 1] 

0x11dfb:	lea	rsp, [rbp - 0x28]
0x11dff:	pop	rbx
		Instruction group(s): [145] 

0x11e00:	pop	r12
		Instruction group(s): [145] 

0x11e02:	pop	r13
		Instruction group(s): [145] 

0x11e04:	pop	r14
		Instruction group(s): [145] 

0x11e06:	pop	r15
		Instruction group(s): [145] 

0x11e08:	pop	rbp
		Instruction group(s): [145] 

0x11e09:	ret	
		Instruction group(s): [3, 145] 

0x11e0a:	nop	word ptr [rax + rax]
0x11e10:	mov	r13, r15
0x11e13:	mov	r14, r12
0x11e16:	jmp	0x11d5d
		Instruction group(s): [7, 1] 

0x11e1b:	nop	dword ptr [rax + rax]
0x11e20:	mov	r12d, 1
0x11e26:	jmp	0x11cfe
		Instruction group(s): [7, 1] 

0x11e2b:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x11e30:	or	rcx, 0xffffffffffffffff
0x11e34:	cmp	al, 0x65
0x11e36:	mov	eax, 0
0x11e3b:	je	0x11e69
		Instruction group(s): [7, 1] 

0x11e3d:	mov	rdi, qword ptr [rbp - 0x48]
0x11e41:	lea	rdx, [rip + 0x19b08]
0x11e48:	repne scasb	al, byte ptr [rdi]
0x11e4a:	mov	rax, rcx
0x11e4d:	mov	rcx, qword ptr [rbp - 0x48]
0x11e51:	not	rax
0x11e54:	lea	rsi, [rax - 1]
0x11e58:	mov	rax, qword ptr [rip + 0x223ab9]
0x11e5f:	mov	rdi, qword ptr [rax]
0x11e62:	xor	eax, eax
0x11e64:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x11e69:	mov	rdi, r12
0x11e6c:	lea	rdx, [rip + 0x192bf]
0x11e73:	repne scasb	al, byte ptr [rdi]
0x11e75:	mov	rdi, qword ptr [rip + 0x226c74]
0x11e7c:	mov	rax, rcx
0x11e7f:	mov	rcx, r12
0x11e82:	not	rax
0x11e85:	lea	rsi, [rax - 1]
0x11e89:	xor	eax, eax
0x11e8b:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x11e90:	push	rbp
		Instruction group(s): [145] 

0x11e91:	mov	rbp, rsp
0x11e94:	push	r15
		Instruction group(s): [145] 

0x11e96:	push	r14
		Instruction group(s): [145] 

0x11e98:	push	r13
		Instruction group(s): [145] 

0x11e9a:	push	r12
		Instruction group(s): [145] 

0x11e9c:	mov	r12, rdi
0x11e9f:	push	rbx
		Instruction group(s): [145] 

0x11ea0:	mov	rbx, rsi
0x11ea3:	sub	rsp, 0x48
0x11ea7:	mov	r13, qword ptr [rsi]
0x11eaa:	mov	rax, qword ptr fs:[0x28]
0x11eb3:	mov	qword ptr [rbp - 0x38], rax
0x11eb7:	xor	eax, eax
0x11eb9:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0x11ebe:	mov	r14, qword ptr [rax]
0x11ec1:	jmp	0x11ecc
		Instruction group(s): [7, 1] 

0x11ec3:	nop	dword ptr [rax + rax]
0x11ec8:	add	r13, 1
0x11ecc:	movzx	eax, byte ptr [r13]
0x11ed1:	test	byte ptr [r14 + rax*2 + 1], 0x20
0x11ed7:	jne	0x11ec8
		Instruction group(s): [7, 1] 

0x11ed9:	mov	rdi, r13
0x11edc:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x11ee1:	lea	rax, [r13 + rax - 1]
0x11ee6:	cmp	r13, rax
0x11ee9:	jb	0x11ef9
		Instruction group(s): [7, 1] 

0x11eeb:	jmp	0x11f04
		Instruction group(s): [7, 1] 

0x11eed:	nop	dword ptr [rax]
0x11ef0:	sub	rax, 1
0x11ef4:	cmp	r13, rax
0x11ef7:	je	0x11f38
		Instruction group(s): [7, 1] 

0x11ef9:	movzx	edx, byte ptr [rax]
0x11efc:	test	byte ptr [r14 + rdx*2 + 1], 0x20
0x11f02:	jne	0x11ef0
		Instruction group(s): [7, 1] 

0x11f04:	mov	byte ptr [rax + 1], 0
0x11f08:	cmp	byte ptr [r13], 0
0x11f0d:	jne	0x11f46
		Instruction group(s): [7, 1] 

0x11f0f:	mov	rax, r12
0x11f12:	mov	rcx, qword ptr [rbp - 0x38]
0x11f16:	xor	rcx, qword ptr fs:[0x28]
0x11f1f:	jne	0x1218f
		Instruction group(s): [7, 1] 

0x11f25:	lea	rsp, [rbp - 0x28]
0x11f29:	pop	rbx
		Instruction group(s): [145] 

0x11f2a:	pop	r12
		Instruction group(s): [145] 

0x11f2c:	pop	r13
		Instruction group(s): [145] 

0x11f2e:	pop	r14
		Instruction group(s): [145] 

0x11f30:	pop	r15
		Instruction group(s): [145] 

0x11f32:	pop	rbp
		Instruction group(s): [145] 

0x11f33:	ret	
		Instruction group(s): [3, 145] 

0x11f34:	nop	dword ptr [rax]
0x11f38:	mov	rax, r13
0x11f3b:	mov	byte ptr [rax + 1], 0
0x11f3f:	cmp	byte ptr [r13], 0
0x11f44:	je	0x11f0f
		Instruction group(s): [7, 1] 

0x11f46:	mov	rdi, r13
0x11f49:	call	0x119b0
		Instruction group(s): [2, 7, 145] 

0x11f4e:	test	rax, rax
0x11f51:	je	0x11f8a
		Instruction group(s): [7, 1] 

0x11f53:	cmp	qword ptr [rbx + 8], 0
0x11f58:	lea	rdx, [rbx + 8]
0x11f5c:	je	0x12188
		Instruction group(s): [7, 1] 

0x11f62:	mov	edi, 1
0x11f67:	nop	word ptr [rax + rax]
0x11f70:	mov	esi, edi
0x11f72:	add	rdi, 1
0x11f76:	cmp	qword ptr [rbx + rdi*8], 0
0x11f7b:	jne	0x11f70
		Instruction group(s): [7, 1] 

0x11f7d:	mov	rcx, rax
0x11f80:	mov	rdi, r12
0x11f83:	call	0x11880
		Instruction group(s): [2, 7, 145] 

0x11f88:	jmp	0x11f12
		Instruction group(s): [7, 1] 

0x11f8a:	mov	rdi, r13
0x11f8d:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x11f92:	mov	rdi, r13
0x11f95:	mov	esi, eax
0x11f97:	mov	qword ptr [rbp - 0x58], rax
0x11f9b:	call	0x27020
		Instruction group(s): [2, 7, 145] 

0x11fa0:	test	rax, rax
0x11fa3:	mov	r15, rax
0x11fa6:	je	0x12145
		Instruction group(s): [7, 1] 

0x11fac:	mov	rax, qword ptr [rax + 8]
0x11fb0:	cmp	byte ptr [rax], 0
0x11fb3:	je	0x11f0f
		Instruction group(s): [7, 1] 

0x11fb9:	mov	rcx, qword ptr [rbp - 0x58]
0x11fbd:	mov	edi, 0x2824
0x11fc2:	mov	rsi, r13
0x11fc5:	mov	eax, ecx
0x11fc7:	movsxd	rcx, ecx
		Instruction group(s): [145] 

0x11fca:	add	eax, 4
0x11fcd:	mov	rdx, rcx
0x11fd0:	mov	r14, rcx
0x11fd3:	cdqe	
0x11fd5:	add	rax, 0x1e
0x11fd9:	and	rax, 0xfffffffffffffff0
0x11fdd:	sub	rsp, rax
0x11fe0:	lea	rax, [rsp + 0xf]
0x11fe5:	and	rax, 0xfffffffffffffff0
0x11fe9:	mov	word ptr [rax], di
0x11fec:	lea	rdi, [rax + 2]
0x11ff0:	mov	qword ptr [rbp - 0x60], rax
0x11ff4:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x11ff9:	mov	rax, qword ptr [rbp - 0x60]
0x11ffd:	mov	byte ptr [rax + r14 + 2], 0x29
0x12003:	mov	byte ptr [rax + r14 + 3], 0
0x12009:	xor	r14d, r14d
0x1200c:	call	0x272b0
		Instruction group(s): [2, 7, 145] 

0x12011:	cmp	qword ptr [rbx], 0
0x12015:	je	0x1207d
		Instruction group(s): [7, 1] 

0x12017:	lea	r13, [rbp - 0x43]
0x1201b:	nop	dword ptr [rax + rax]
0x12020:	lea	rcx, [rip + 0x1b4fc]
0x12027:	mov	r8d, r14d
0x1202a:	mov	edx, 0xb
0x1202f:	mov	esi, 1
0x12034:	mov	rdi, r13
0x12037:	xor	eax, eax
0x12039:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x1203e:	mov	rdi, r13
0x12041:	add	rbx, 8
0x12045:	add	r14d, 1
0x12049:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1204e:	mov	rdx, qword ptr [rip + 0x223d7b]
0x12055:	sub	rsp, 8
0x12059:	xor	r8d, r8d
0x1205c:	push	0
		Instruction group(s): [145] 

0x1205e:	mov	ecx, 6
0x12063:	mov	esi, eax
0x12065:	mov	rdi, r13
0x12068:	mov	r9, qword ptr [rdx + 8]
0x1206c:	mov	rdx, qword ptr [rbx - 8]
0x12070:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x12075:	cmp	qword ptr [rbx], 0
0x12079:	pop	rcx
		Instruction group(s): [145] 

0x1207a:	pop	rsi
		Instruction group(s): [145] 

0x1207b:	jne	0x12020
		Instruction group(s): [7, 1] 

0x1207d:	mov	ecx, dword ptr [rip + 0x223fcd]
0x12083:	cmp	r14d, ecx
0x12086:	jge	0x120f5
		Instruction group(s): [7, 1] 

0x12088:	lea	r13, [rbp - 0x43]
0x1208c:	lea	rbx, [rip + 0x1b490]
0x12093:	nop	dword ptr [rax + rax]
0x12098:	mov	r8d, r14d
0x1209b:	mov	rcx, rbx
0x1209e:	mov	edx, 0xb
0x120a3:	mov	esi, 1
0x120a8:	mov	rdi, r13
0x120ab:	xor	eax, eax
0x120ad:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x120b2:	mov	rdi, r13
0x120b5:	add	r14d, 1
0x120b9:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x120be:	mov	rdx, qword ptr [rip + 0x223d0b]
0x120c5:	sub	rsp, 8
0x120c9:	xor	r8d, r8d
0x120cc:	push	0
		Instruction group(s): [145] 

0x120ce:	mov	ecx, 6
0x120d3:	mov	esi, eax
0x120d5:	mov	rdi, r13
0x120d8:	mov	r9, qword ptr [rdx + 8]
0x120dc:	lea	rdx, [rip + 0x1b8ea]
0x120e3:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x120e8:	mov	ecx, dword ptr [rip + 0x223f62]
0x120ee:	pop	rax
		Instruction group(s): [145] 

0x120ef:	pop	rdx
		Instruction group(s): [145] 

0x120f0:	cmp	ecx, r14d
0x120f3:	jg	0x12098
		Instruction group(s): [7, 1] 

0x120f5:	mov	dword ptr [rbp - 0x64], ecx
0x120f8:	or	dword ptr [r15 + 0x24], 0x7fff00
0x12100:	mov	rdi, r12
0x12103:	mov	edx, dword ptr [rbp - 0x58]
0x12106:	mov	rsi, qword ptr [rbp - 0x60]
0x1210a:	mov	dword ptr [rip + 0x223f3f], r14d
0x12111:	add	edx, 3
0x12114:	movsxd	rdx, edx
		Instruction group(s): [145] 

0x12117:	call	0xe160
		Instruction group(s): [2, 7, 145] 

0x1211c:	mov	ecx, dword ptr [rbp - 0x64]
0x1211f:	mov	r12, rax
0x12122:	mov	dword ptr [rip + 0x223f28], ecx
0x12128:	and	dword ptr [r15 + 0x24], 0xff8000ff
0x12130:	call	0x27310
		Instruction group(s): [2, 7, 145] 

0x12135:	mov	rdi, r12
0x12138:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1213d:	add	rax, r12
0x12140:	jmp	0x11f12
		Instruction group(s): [7, 1] 

0x12145:	mov	r8d, dword ptr [rip + 0x227424]
0x1214c:	test	r8d, r8d
0x1214f:	je	0x11f0f
		Instruction group(s): [7, 1] 

0x12155:	lea	rsi, [rip + 0x18f5c]
0x1215c:	xor	edi, edi
0x1215e:	mov	edx, 5
0x12163:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x12168:	mov	rcx, qword ptr [rbp - 0x58]
0x1216c:	mov	rdi, qword ptr [rip + 0x22697d]
0x12173:	mov	rdx, rax
0x12176:	mov	r8, r13
0x12179:	xor	eax, eax
0x1217b:	movsxd	rsi, ecx
		Instruction group(s): [145] 

0x1217e:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x12183:	jmp	0x11f0f
		Instruction group(s): [7, 1] 

0x12188:	xor	esi, esi
0x1218a:	jmp	0x11f7d
		Instruction group(s): [7, 1] 

0x1218f:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x12194:	nop	
0x12196:	nop	word ptr cs:[rax + rax]
0x121a0:	push	r15
		Instruction group(s): [145] 

0x121a2:	push	r14
		Instruction group(s): [145] 

0x121a4:	push	r13
		Instruction group(s): [145] 

0x121a6:	push	r12
		Instruction group(s): [145] 

0x121a8:	push	rbp
		Instruction group(s): [145] 

0x121a9:	push	rbx
		Instruction group(s): [145] 

0x121aa:	mov	rbx, rsi
0x121ad:	mov	rbp, rdi
0x121b0:	xor	esi, esi
0x121b2:	sub	rsp, 0x48
0x121b6:	mov	rdi, qword ptr [rbx]
0x121b9:	mov	rax, qword ptr fs:[0x28]
0x121c2:	mov	qword ptr [rsp + 0x38], rax
0x121c7:	xor	eax, eax
0x121c9:	call	0xe010
		Instruction group(s): [2, 7, 145] 

0x121ce:	mov	rdi, qword ptr [rbx + 8]
0x121d2:	xor	esi, esi
0x121d4:	mov	qword ptr [rsp + 0x10], rax
0x121d9:	mov	r14, rax
0x121dc:	call	0xe010
		Instruction group(s): [2, 7, 145] 

0x121e1:	mov	rcx, qword ptr [rbx + 0x10]
0x121e5:	mov	qword ptr [rsp + 0x18], rax
0x121ea:	xor	ebx, ebx
0x121ec:	mov	qword ptr [rsp + 0x30], rax
0x121f1:	mov	qword ptr [rsp + 8], rcx
0x121f6:	call	0x272b0
		Instruction group(s): [2, 7, 145] 

0x121fb:	mov	rdi, r14
0x121fe:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x12203:	mov	rdx, qword ptr [rip + 0x223bc6]
0x1220a:	sub	rsp, 8
0x1220e:	mov	rdi, r14
0x12211:	push	0
		Instruction group(s): [145] 

0x12213:	xor	r8d, r8d
0x12216:	mov	ecx, 6
0x1221b:	mov	esi, eax
0x1221d:	mov	r9, qword ptr [rdx + 8]
0x12221:	lea	rdx, [rip + 0x1b7a5]
0x12228:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x1222d:	mov	r12, rax
0x12230:	pop	rax
		Instruction group(s): [145] 

0x12231:	pop	rdx
		Instruction group(s): [145] 

0x12232:	lea	r14, [rsp + 0x2c]
0x12237:	lea	r13, [rsp + 0x30]
0x1223c:	jmp	0x122a3
		Instruction group(s): [7, 1] 

0x1223e:	nop	
0x12240:	mov	rdi, qword ptr [r12 + 8]
0x12245:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1224a:	mov	esi, dword ptr [rsp + 0x2c]
0x1224e:	mov	rdi, r15
0x12251:	call	0x1bae0
		Instruction group(s): [2, 7, 145] 

0x12256:	mov	rdi, qword ptr [rsp + 8]
0x1225b:	xor	esi, esi
0x1225d:	mov	qword ptr [r12 + 8], rax
0x12262:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x12267:	mov	rbx, rax
0x1226a:	mov	rdi, rax
0x1226d:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x12272:	mov	rsi, rbx
0x12275:	mov	rdi, rbp
0x12278:	mov	edx, eax
0x1227a:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x1227f:	lea	rsi, [rip + 0x1bda4]
0x12286:	mov	edx, 1
0x1228b:	mov	rdi, rax
0x1228e:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x12293:	mov	rdi, rbx
0x12296:	mov	ebx, 1
0x1229b:	mov	rbp, rax
0x1229e:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x122a3:	mov	rsi, r14
0x122a6:	mov	rdi, r13
0x122a9:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x122ae:	test	rax, rax
0x122b1:	mov	r15, rax
0x122b4:	jne	0x12240
		Instruction group(s): [7, 1] 

0x122b6:	cmp	ebx, 1
0x122b9:	adc	rbp, -1
0x122bd:	call	0x27310
		Instruction group(s): [2, 7, 145] 

0x122c2:	mov	rdi, qword ptr [rsp + 0x10]
0x122c7:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x122cc:	mov	rdi, qword ptr [rsp + 0x18]
0x122d1:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x122d6:	mov	rcx, qword ptr [rsp + 0x38]
0x122db:	xor	rcx, qword ptr fs:[0x28]
0x122e4:	mov	rax, rbp
0x122e7:	jne	0x122f8
		Instruction group(s): [7, 1] 

0x122e9:	add	rsp, 0x48
0x122ed:	pop	rbx
		Instruction group(s): [145] 

0x122ee:	pop	rbp
		Instruction group(s): [145] 

0x122ef:	pop	r12
		Instruction group(s): [145] 

0x122f1:	pop	r13
		Instruction group(s): [145] 

0x122f3:	pop	r14
		Instruction group(s): [145] 

0x122f5:	pop	r15
		Instruction group(s): [145] 

0x122f7:	ret	
		Instruction group(s): [3, 145] 

0x122f8:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x122fd:	nop	dword ptr [rax]
0x12300:	push	rbp
		Instruction group(s): [145] 

0x12301:	push	rbx
		Instruction group(s): [145] 

0x12302:	mov	rbx, rdi
0x12305:	sub	rsp, 8
0x12309:	mov	rbp, qword ptr [rsi]
0x1230c:	mov	rdi, rbp
0x1230f:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x12314:	mov	rdi, rbp
0x12317:	mov	esi, eax
0x12319:	call	0x27020
		Instruction group(s): [2, 7, 145] 

0x1231e:	test	rax, rax
0x12321:	mov	edx, 9
0x12326:	lea	rsi, [rip + 0x19425]
0x1232d:	je	0x12364
		Instruction group(s): [7, 1] 

0x1232f:	movzx	eax, byte ptr [rax + 0x27]
0x12333:	shr	al, 2
0x12336:	and	eax, 7
0x12339:	cmp	al, 6
0x1233b:	ja	0x12432
		Instruction group(s): [7, 1] 

0x12341:	lea	rdx, [rip + 0x19814]
0x12348:	movzx	eax, al
0x1234b:	movsxd	rax, dword ptr [rdx + rax*4]
		Instruction group(s): [145] 

0x1234f:	add	rax, rdx
0x12352:	jmp	rax
		Instruction group(s): [145, 1] 

0x12354:	nop	dword ptr [rax]
0x12358:	lea	rsi, [rip + 0x19433]
0x1235f:	mov	edx, 9
0x12364:	add	rsp, 8
0x12368:	mov	rdi, rbx
0x1236b:	pop	rbx
		Instruction group(s): [145] 

0x1236c:	pop	rbp
		Instruction group(s): [145] 

0x1236d:	jmp	0xdfa0
		Instruction group(s): [7, 1] 

0x12372:	nop	word ptr [rax + rax]
0x12378:	add	rsp, 8
0x1237c:	mov	rdi, rbx
0x1237f:	lea	rsi, [rip + 0x193f6]
0x12386:	pop	rbx
		Instruction group(s): [145] 

0x12387:	pop	rbp
		Instruction group(s): [145] 

0x12388:	mov	edx, 8
0x1238d:	jmp	0xdfa0
		Instruction group(s): [7, 1] 

0x12392:	nop	word ptr [rax + rax]
0x12398:	add	rsp, 8
0x1239c:	mov	rdi, rbx
0x1239f:	lea	rsi, [rip + 0x193b6]
0x123a6:	pop	rbx
		Instruction group(s): [145] 

0x123a7:	pop	rbp
		Instruction group(s): [145] 

0x123a8:	mov	edx, 7
0x123ad:	jmp	0xdfa0
		Instruction group(s): [7, 1] 

0x123b2:	nop	word ptr [rax + rax]
0x123b8:	add	rsp, 8
0x123bc:	mov	rdi, rbx
0x123bf:	lea	rsi, [rip + 0x1939e]
0x123c6:	pop	rbx
		Instruction group(s): [145] 

0x123c7:	pop	rbp
		Instruction group(s): [145] 

0x123c8:	mov	edx, 0xb
0x123cd:	jmp	0xdfa0
		Instruction group(s): [7, 1] 

0x123d2:	nop	word ptr [rax + rax]
0x123d8:	add	rsp, 8
0x123dc:	mov	rdi, rbx
0x123df:	lea	rsi, [rip + 0x1b43f]
0x123e6:	pop	rbx
		Instruction group(s): [145] 

0x123e7:	pop	rbp
		Instruction group(s): [145] 

0x123e8:	mov	edx, 4
0x123ed:	jmp	0xdfa0
		Instruction group(s): [7, 1] 

0x123f2:	nop	word ptr [rax + rax]
0x123f8:	add	rsp, 8
0x123fc:	mov	rdi, rbx
0x123ff:	lea	rsi, [rip + 0x1936a]
0x12406:	pop	rbx
		Instruction group(s): [145] 

0x12407:	pop	rbp
		Instruction group(s): [145] 

0x12408:	mov	edx, 0x14
0x1240d:	jmp	0xdfa0
		Instruction group(s): [7, 1] 

0x12412:	nop	word ptr [rax + rax]
0x12418:	add	rsp, 8
0x1241c:	mov	rdi, rbx
0x1241f:	lea	rsi, [rip + 0x1935f]
0x12426:	pop	rbx
		Instruction group(s): [145] 

0x12427:	pop	rbp
		Instruction group(s): [145] 

0x12428:	mov	edx, 0xc
0x1242d:	jmp	0xdfa0
		Instruction group(s): [7, 1] 

0x12432:	call	0x8650
		Instruction group(s): [2, 7, 145] 

0x12437:	nop	word ptr [rax + rax]
0x12440:	push	r15
		Instruction group(s): [145] 

0x12442:	push	r14
		Instruction group(s): [145] 

0x12444:	xor	ecx, ecx
0x12446:	push	r13
		Instruction group(s): [145] 

0x12448:	push	r12
		Instruction group(s): [145] 

0x1244a:	mov	r8d, 0x19
0x12450:	push	rbp
		Instruction group(s): [145] 

0x12451:	push	rbx
		Instruction group(s): [145] 

0x12452:	mov	edx, 1
0x12457:	sub	rsp, 0x38
0x1245b:	mov	rax, qword ptr fs:[0x28]
0x12464:	mov	qword ptr [rsp + 0x28], rax
0x12469:	xor	eax, eax
0x1246b:	mov	rax, qword ptr [rsi]
0x1246e:	mov	qword ptr [rsp + 0x18], rdi
0x12473:	lea	rdi, [rsp + 0x20]
0x12478:	mov	esi, 0x10
0x1247d:	mov	qword ptr [rsp + 0x20], rax
0x12482:	call	0x1f330
		Instruction group(s): [2, 7, 145] 

0x12487:	mov	rbp, qword ptr [rip + 0x223bba]
0x1248e:	mov	r14, rax
0x12491:	test	rbp, rbp
0x12494:	je	0x12590
		Instruction group(s): [7, 1] 

0x1249a:	test	r14, r14
0x1249d:	je	0x12580
		Instruction group(s): [7, 1] 

0x124a3:	xor	ebx, ebx
0x124a5:	jmp	0x124e5
		Instruction group(s): [7, 1] 

0x124a7:	nop	word ptr [rax + rax]
0x124b0:	mov	edx, r15d
0x124b3:	mov	edi, ebx
0x124b5:	mov	r15d, r13d
0x124b8:	add	rdi, rbp
0x124bb:	add	r15, rbp
0x124be:	mov	ebx, r12d
0x124c1:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x124c6:	mov	byte ptr [r15], 0x20
0x124ca:	mov	rdi, qword ptr [r14 + 8]
0x124ce:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x124d3:	mov	rdi, r14
0x124d6:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x124db:	mov	r14, qword ptr [rsp + 8]
0x124e0:	test	r14, r14
0x124e3:	je	0x12540
		Instruction group(s): [7, 1] 

0x124e5:	mov	rsi, qword ptr [r14 + 8]
0x124e9:	mov	rax, qword ptr [r14]
0x124ec:	mov	rdi, rsi
0x124ef:	mov	qword ptr [rsp + 0x10], rsi
0x124f4:	mov	qword ptr [rsp + 8], rax
0x124f9:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x124fe:	lea	r13d, [rbx + rax]
		Instruction group(s): [145] 

0x12502:	mov	r15, rax
0x12505:	mov	eax, dword ptr [rip + 0x223b39]
0x1250b:	mov	rsi, qword ptr [rsp + 0x10]
0x12510:	lea	r12d, [r13 + 1]
		Instruction group(s): [145] 

0x12514:	cmp	r12d, eax
0x12517:	jbe	0x124b0
		Instruction group(s): [7, 1] 

0x12519:	lea	esi, [rax + r15*2 + 2]
		Instruction group(s): [145] 

0x1251e:	mov	rdi, rbp
0x12521:	mov	dword ptr [rip + 0x223b1d], esi
0x12527:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x1252c:	mov	rsi, qword ptr [r14 + 8]
0x12530:	mov	rbp, rax
0x12533:	mov	qword ptr [rip + 0x223b0e], rax
0x1253a:	jmp	0x124b0
		Instruction group(s): [7, 1] 

0x1253f:	nop	
0x12540:	test	r12d, r12d
0x12543:	je	0x12580
		Instruction group(s): [7, 1] 

0x12545:	mov	byte ptr [r15], 0
0x12549:	mov	rdi, rbp
0x1254c:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x12551:	mov	rdi, qword ptr [rsp + 0x18]
0x12556:	mov	edx, eax
0x12558:	mov	rsi, rbp
0x1255b:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x12560:	mov	rcx, qword ptr [rsp + 0x28]
0x12565:	xor	rcx, qword ptr fs:[0x28]
0x1256e:	jne	0x125b3
		Instruction group(s): [7, 1] 

0x12570:	add	rsp, 0x38
0x12574:	pop	rbx
		Instruction group(s): [145] 

0x12575:	pop	rbp
		Instruction group(s): [145] 

0x12576:	pop	r12
		Instruction group(s): [145] 

0x12578:	pop	r13
		Instruction group(s): [145] 

0x1257a:	pop	r14
		Instruction group(s): [145] 

0x1257c:	pop	r15
		Instruction group(s): [145] 

0x1257e:	ret	
		Instruction group(s): [3, 145] 

0x1257f:	nop	
0x12580:	mov	byte ptr [rbp], 0
0x12584:	jmp	0x12549
		Instruction group(s): [7, 1] 

0x12586:	nop	word ptr cs:[rax + rax]
0x12590:	mov	edi, 0x64
0x12595:	mov	dword ptr [rip + 0x223aa5], 0x64
0x1259f:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x125a4:	mov	rbp, rax
0x125a7:	mov	qword ptr [rip + 0x223a9a], rax
0x125ae:	jmp	0x1249a
		Instruction group(s): [7, 1] 

0x125b3:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x125b8:	nop	dword ptr [rax + rax]
0x125c0:	push	r15
		Instruction group(s): [145] 

0x125c2:	push	r14
		Instruction group(s): [145] 

0x125c4:	mov	r14, rdi
0x125c7:	push	r13
		Instruction group(s): [145] 

0x125c9:	push	r12
		Instruction group(s): [145] 

0x125cb:	mov	r12, rsi
0x125ce:	push	rbp
		Instruction group(s): [145] 

0x125cf:	push	rbx
		Instruction group(s): [145] 

0x125d0:	xor	ebx, ebx
0x125d2:	sub	rsp, 0x38
0x125d6:	mov	rax, qword ptr fs:[0x28]
0x125df:	mov	qword ptr [rsp + 0x28], rax
0x125e4:	xor	eax, eax
0x125e6:	mov	rax, qword ptr [rsi]
0x125e9:	lea	r13, [rsp + 0x20]
0x125ee:	mov	qword ptr [rsp + 0x20], rax
0x125f3:	jmp	0x12601
		Instruction group(s): [7, 1] 

0x125f5:	nop	dword ptr [rax]
0x125f8:	add	qword ptr [rsp + 0x20], 1
0x125fe:	add	ebx, 1
0x12601:	xor	esi, esi
0x12603:	mov	rdi, r13
0x12606:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x1260b:	test	rax, rax
0x1260e:	jne	0x125f8
		Instruction group(s): [7, 1] 

0x12610:	lea	edi, [rbx*8]
		Instruction group(s): [145] 

0x12617:	test	ebx, ebx
0x12619:	mov	eax, 8
0x1261e:	lea	r15, [rsp + 0x1c]
0x12623:	cmove	edi, eax
		Instruction group(s): [137] 

0x12626:	xor	ebx, ebx
0x12628:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x1262d:	mov	rbp, rax
0x12630:	mov	rax, qword ptr [r12]
0x12634:	mov	qword ptr [rsp + 0x20], rax
0x12639:	jmp	0x12657
		Instruction group(s): [7, 1] 

0x1263b:	nop	dword ptr [rax + rax]
0x12640:	mov	edx, dword ptr [rsp + 0x1c]
0x12644:	add	qword ptr [rsp + 0x20], 1
0x1264a:	mov	byte ptr [rax + rdx], 0
0x1264e:	mov	qword ptr [rbp + rbx*8], rax
0x12653:	add	rbx, 1
0x12657:	mov	rsi, r15
0x1265a:	mov	rdi, r13
0x1265d:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x12662:	test	rax, rax
0x12665:	jne	0x12640
		Instruction group(s): [7, 1] 

0x12667:	test	ebx, ebx
0x12669:	jne	0x126a0
		Instruction group(s): [7, 1] 

0x1266b:	mov	rdi, rbp
0x1266e:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x12673:	mov	rcx, qword ptr [rsp + 0x28]
0x12678:	xor	rcx, qword ptr fs:[0x28]
0x12681:	mov	rax, r14
0x12684:	jne	0x12759
		Instruction group(s): [7, 1] 

0x1268a:	add	rsp, 0x38
0x1268e:	pop	rbx
		Instruction group(s): [145] 

0x1268f:	pop	rbp
		Instruction group(s): [145] 

0x12690:	pop	r12
		Instruction group(s): [145] 

0x12692:	pop	r13
		Instruction group(s): [145] 

0x12694:	pop	r14
		Instruction group(s): [145] 

0x12696:	pop	r15
		Instruction group(s): [145] 

0x12698:	ret	
		Instruction group(s): [3, 145] 

0x12699:	nop	dword ptr [rax]
0x126a0:	lea	rcx, [rip + 0x9189]
0x126a7:	movsxd	rsi, ebx
		Instruction group(s): [145] 

0x126aa:	mov	edx, 8
0x126af:	mov	rdi, rbp
0x126b2:	lea	r15d, [rbx - 1]
		Instruction group(s): [145] 

0x126b6:	call	0x86f0
		Instruction group(s): [2, 7, 145] 

0x126bb:	lea	eax, [rbx - 1]
		Instruction group(s): [145] 

0x126be:	xor	ebx, ebx
0x126c0:	mov	dword ptr [rsp + 0xc], eax
0x126c4:	lea	rax, [r15 + 1]
0x126c8:	mov	qword ptr [rsp], rax
0x126cc:	jmp	0x126ff
		Instruction group(s): [7, 1] 

0x126ce:	nop	
0x126d0:	mov	rdi, r14
0x126d3:	mov	edx, r12d
0x126d6:	mov	rsi, r13
0x126d9:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x126de:	lea	rsi, [rip + 0x1b945]
0x126e5:	mov	edx, 1
0x126ea:	mov	rdi, rax
0x126ed:	add	rbx, 1
0x126f1:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x126f6:	cmp	rbx, qword ptr [rsp]
0x126fa:	mov	r14, rax
0x126fd:	je	0x12750
		Instruction group(s): [7, 1] 

0x126ff:	mov	r13, qword ptr [rbp + rbx*8]
0x12704:	mov	rdi, r13
0x12707:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1270c:	cmp	dword ptr [rsp + 0xc], ebx
0x12710:	mov	r12, rax
0x12713:	mov	dword ptr [rsp + 0x1c], eax
0x12717:	je	0x126d0
		Instruction group(s): [7, 1] 

0x12719:	mov	r15, qword ptr [rbp + rbx*8 + 8]
0x1271e:	mov	rdi, r15
0x12721:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x12726:	mov	ecx, r12d
0x12729:	cmp	rax, rcx
0x1272c:	jne	0x126d0
		Instruction group(s): [7, 1] 

0x1272e:	mov	rsi, r15
0x12731:	mov	rdi, r13
0x12734:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x12739:	test	eax, eax
0x1273b:	jne	0x126d0
		Instruction group(s): [7, 1] 

0x1273d:	add	rbx, 1
0x12741:	cmp	rbx, qword ptr [rsp]
0x12745:	jne	0x126ff
		Instruction group(s): [7, 1] 

0x12747:	nop	word ptr [rax + rax]
0x12750:	sub	r14, 1
0x12754:	jmp	0x1266b
		Instruction group(s): [7, 1] 

0x12759:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x1275e:	nop	
0x12760:	push	r15
		Instruction group(s): [145] 

0x12762:	push	r14
		Instruction group(s): [145] 

0x12764:	push	r13
		Instruction group(s): [145] 

0x12766:	push	r12
		Instruction group(s): [145] 

0x12768:	push	rbp
		Instruction group(s): [145] 

0x12769:	push	rbx
		Instruction group(s): [145] 

0x1276a:	sub	rsp, 0x20c8
0x12771:	mov	rax, qword ptr fs:[0x28]
0x1277a:	mov	qword ptr [rsp + 0x20b8], rax
0x12782:	xor	eax, eax
0x12784:	mov	rax, qword ptr [rsi]
0x12787:	mov	qword ptr [rsp], rdi
0x1278b:	lea	r12, [rsp + 0x14]
0x12790:	mov	dword ptr [rsp + 0x14], 0
0x12798:	mov	dword ptr [rsp + 0xc], 0
0x127a0:	lea	rbp, [rsp + 0x18]
0x127a5:	lea	r14, [rsp + 0xb0]
0x127ad:	lea	r13, [rsp + 0x10b0]
0x127b5:	lea	r15, [rsp + 0x20]
0x127ba:	mov	qword ptr [rsp + 0x18], rax
0x127bf:	jmp	0x127d4
		Instruction group(s): [7, 1] 

0x127c1:	nop	dword ptr [rax]
0x127c8:	mov	edx, dword ptr [rsp + 0x14]
0x127cc:	cmp	edx, 0xfff
0x127d2:	jbe	0x12820
		Instruction group(s): [7, 1] 

0x127d4:	mov	rsi, r12
0x127d7:	mov	rdi, rbp
0x127da:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x127df:	test	rax, rax
0x127e2:	jne	0x127c8
		Instruction group(s): [7, 1] 

0x127e4:	cmp	dword ptr [rsp + 0xc], 1
0x127e9:	mov	rax, qword ptr [rsp]
0x127ed:	adc	rax, -1
0x127f1:	mov	rcx, qword ptr [rsp + 0x20b8]
0x127f9:	xor	rcx, qword ptr fs:[0x28]
0x12802:	jne	0x12911
		Instruction group(s): [7, 1] 

0x12808:	add	rsp, 0x20c8
0x1280f:	pop	rbx
		Instruction group(s): [145] 

0x12810:	pop	rbp
		Instruction group(s): [145] 

0x12811:	pop	r12
		Instruction group(s): [145] 

0x12813:	pop	r13
		Instruction group(s): [145] 

0x12815:	pop	r14
		Instruction group(s): [145] 

0x12817:	pop	r15
		Instruction group(s): [145] 

0x12819:	ret	
		Instruction group(s): [3, 145] 

0x1281a:	nop	word ptr [rax + rax]
0x12820:	mov	ebx, edx
0x12822:	mov	ecx, 0x1000
0x12827:	mov	rsi, rax
0x1282a:	mov	rdx, rbx
0x1282d:	mov	rdi, r14
0x12830:	call	0x8b40
		Instruction group(s): [2, 7, 145] 

0x12835:	mov	byte ptr [rsp + rbx + 0xb0], 0
0x1283d:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x12842:	mov	rbx, rax
0x12845:	jmp	0x12859
		Instruction group(s): [7, 1] 

0x12847:	nop	word ptr [rax + rax]
0x12850:	cmp	dword ptr [rbx], 4
0x12853:	jne	0x127d4
		Instruction group(s): [7, 1] 

0x12859:	mov	dword ptr [rbx], 0
0x1285f:	mov	edx, 0x1000
0x12864:	mov	rsi, r13
0x12867:	mov	rdi, r14
0x1286a:	call	0x8940
		Instruction group(s): [2, 7, 145] 

0x1286f:	test	rax, rax
0x12872:	je	0x12850
		Instruction group(s): [7, 1] 

0x12874:	jmp	0x12889
		Instruction group(s): [7, 1] 

0x12876:	nop	word ptr cs:[rax + rax]
0x12880:	cmp	dword ptr [rbx], 4
0x12883:	jne	0x127d4
		Instruction group(s): [7, 1] 

0x12889:	mov	rdx, r15
0x1288c:	mov	rsi, r13
0x1288f:	mov	edi, 1
0x12894:	call	0x8a90
		Instruction group(s): [2, 7, 145] 

0x12899:	cmp	eax, -1
0x1289c:	je	0x12880
		Instruction group(s): [7, 1] 

0x1289e:	test	eax, eax
0x128a0:	jne	0x127d4
		Instruction group(s): [7, 1] 

0x128a6:	mov	rdx, r13
0x128a9:	mov	ecx, dword ptr [rdx]
0x128ab:	add	rdx, 4
0x128af:	lea	eax, [rcx - 0x1010101]
		Instruction group(s): [145] 

0x128b5:	not	ecx
0x128b7:	and	eax, ecx
0x128b9:	and	eax, 0x80808080
0x128be:	je	0x128a9
		Instruction group(s): [7, 1] 

0x128c0:	mov	ecx, eax
0x128c2:	mov	rdi, qword ptr [rsp]
0x128c6:	mov	rsi, r13
0x128c9:	shr	ecx, 0x10
0x128cc:	test	eax, 0x8080
0x128d1:	cmove	eax, ecx
		Instruction group(s): [137] 

0x128d4:	lea	rcx, [rdx + 2]
0x128d8:	cmove	rdx, rcx
		Instruction group(s): [137] 

0x128dc:	mov	ecx, eax
0x128de:	add	cl, al
0x128e0:	sbb	rdx, 3
0x128e4:	sub	rdx, r13
0x128e7:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x128ec:	lea	rsi, [rip + 0x1b737]
0x128f3:	mov	edx, 1
0x128f8:	mov	rdi, rax
0x128fb:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x12900:	mov	dword ptr [rsp + 0xc], 1
0x12908:	mov	qword ptr [rsp], rax
0x1290c:	jmp	0x127d4
		Instruction group(s): [7, 1] 

0x12911:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x12916:	nop	word ptr cs:[rax + rax]
0x12920:	push	r15
		Instruction group(s): [145] 

0x12922:	push	r14
		Instruction group(s): [145] 

0x12924:	lea	r15, [rip + 0x223875]
0x1292b:	push	r13
		Instruction group(s): [145] 

0x1292d:	push	r12
		Instruction group(s): [145] 

0x1292f:	push	rbp
		Instruction group(s): [145] 

0x12930:	push	rbx
		Instruction group(s): [145] 

0x12931:	sub	rsp, 0x2048
0x12938:	mov	rax, qword ptr fs:[0x28]
0x12941:	mov	qword ptr [rsp + 0x2038], rax
0x12949:	xor	eax, eax
0x1294b:	mov	rax, qword ptr [rsi]
0x1294e:	mov	qword ptr [rsp], rdi
0x12952:	lea	rbp, [rsp + 0x24]
0x12957:	mov	dword ptr [rsp + 0x24], 0
0x1295f:	mov	dword ptr [rsp + 0xc], 0
0x12967:	lea	rbx, [rsp + 0x28]
0x1296c:	lea	r12, [rsp + 0x1030]
0x12974:	mov	qword ptr [rsp + 0x28], rax
0x12979:	lea	rax, [rsp + 0x30]
0x1297e:	mov	qword ptr [rsp + 0x10], rax
0x12983:	jmp	0x12994
		Instruction group(s): [7, 1] 

0x12985:	nop	dword ptr [rax]
0x12988:	mov	edx, dword ptr [rsp + 0x24]
0x1298c:	cmp	edx, 0xfff
0x12992:	jbe	0x129e0
		Instruction group(s): [7, 1] 

0x12994:	mov	rsi, rbp
0x12997:	mov	rdi, rbx
0x1299a:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x1299f:	test	rax, rax
0x129a2:	jne	0x12988
		Instruction group(s): [7, 1] 

0x129a4:	cmp	dword ptr [rsp + 0xc], 1
0x129a9:	mov	rax, qword ptr [rsp]
0x129ad:	adc	rax, -1
0x129b1:	mov	rcx, qword ptr [rsp + 0x2038]
0x129b9:	xor	rcx, qword ptr fs:[0x28]
0x129c2:	jne	0x12c2f
		Instruction group(s): [7, 1] 

0x129c8:	add	rsp, 0x2048
0x129cf:	pop	rbx
		Instruction group(s): [145] 

0x129d0:	pop	rbp
		Instruction group(s): [145] 

0x129d1:	pop	r12
		Instruction group(s): [145] 

0x129d3:	pop	r13
		Instruction group(s): [145] 

0x129d5:	pop	r14
		Instruction group(s): [145] 

0x129d7:	pop	r15
		Instruction group(s): [145] 

0x129d9:	ret	
		Instruction group(s): [3, 145] 

0x129da:	nop	word ptr [rax + rax]
0x129e0:	mov	r14, qword ptr [rsp + 0x10]
0x129e5:	mov	r8d, edx
0x129e8:	mov	ecx, 0x1000
0x129ed:	mov	rdx, r8
0x129f0:	mov	rsi, rax
0x129f3:	mov	qword ptr [rsp + 0x18], r8
0x129f8:	mov	rdi, r14
0x129fb:	call	0x8b40
		Instruction group(s): [2, 7, 145] 

0x12a00:	mov	r8, qword ptr [rsp + 0x18]
0x12a05:	mov	byte ptr [rsp + r8 + 0x30], 0
0x12a0b:	movzx	r8d, byte ptr [rsp + 0x30]
0x12a11:	test	r8b, r8b
0x12a14:	je	0x12994
		Instruction group(s): [7, 1] 

0x12a1a:	cmp	r8b, 0x2f
0x12a1e:	mov	byte ptr [rsp + 0x18], r8b
0x12a23:	je	0x12bfe
		Instruction group(s): [7, 1] 

0x12a29:	mov	rsi, qword ptr [rip + 0x226af8]
0x12a30:	test	rsi, rsi
0x12a33:	je	0x12994
		Instruction group(s): [7, 1] 

0x12a39:	mov	rdi, r12
0x12a3c:	mov	edx, 0x1000
0x12a41:	call	0x8a80
		Instruction group(s): [2, 7, 145] 

0x12a46:	movzx	r8d, byte ptr [rsp + 0x18]
0x12a4c:	mov	rdi, rax
0x12a4f:	mov	rsi, r14
0x12a52:	test	r8b, r8b
0x12a55:	je	0x12b14
		Instruction group(s): [7, 1] 

0x12a5b:	nop	dword ptr [rax + rax]
0x12a60:	movzx	eax, r8b
0x12a64:	movzx	edx, word ptr [r15 + rax*2]
0x12a69:	test	dx, dx
0x12a6c:	jns	0x12a84
		Instruction group(s): [7, 1] 

0x12a6e:	nop	
0x12a70:	add	rsi, 1
0x12a74:	movzx	eax, byte ptr [rsi]
0x12a77:	movzx	edx, word ptr [r15 + rax*2]
0x12a7c:	mov	r8, rax
0x12a7f:	test	dx, dx
0x12a82:	js	0x12a70
		Instruction group(s): [7, 1] 

0x12a84:	test	dx, 0x8001
0x12a89:	jne	0x12b14
		Instruction group(s): [7, 1] 

0x12a8f:	mov	r13, rsi
0x12a92:	nop	word ptr [rax + rax]
0x12a98:	add	r13, 1
0x12a9c:	movzx	eax, byte ptr [r13]
0x12aa1:	test	word ptr [r15 + rax*2], 0x8001
0x12aa8:	je	0x12a98
		Instruction group(s): [7, 1] 

0x12aaa:	mov	r14, r13
0x12aad:	sub	r14, rsi
0x12ab0:	je	0x12b14
		Instruction group(s): [7, 1] 

0x12ab2:	cmp	r14, 1
0x12ab6:	je	0x12b90
		Instruction group(s): [7, 1] 

0x12abc:	cmp	r14, 2
0x12ac0:	jne	0x12acc
		Instruction group(s): [7, 1] 

0x12ac2:	cmp	r8b, 0x2e
0x12ac6:	je	0x12ba0
		Instruction group(s): [7, 1] 

0x12acc:	movzx	eax, byte ptr [rdi - 1]
0x12ad0:	cmp	word ptr [r15 + rax*2], 0
0x12ad6:	js	0x12adf
		Instruction group(s): [7, 1] 

0x12ad8:	mov	byte ptr [rdi], 0x2f
0x12adb:	add	rdi, 1
0x12adf:	lea	rdx, [r12 + 0x1000]
0x12ae7:	lea	rax, [rdi + r14]
0x12aeb:	cmp	rdx, rax
0x12aee:	jbe	0x12994
		Instruction group(s): [7, 1] 

0x12af4:	mov	rdx, r14
0x12af7:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x12afc:	lea	rdi, [rax + r14]
0x12b00:	mov	byte ptr [rdi], 0
0x12b03:	movzx	r8d, byte ptr [r13]
0x12b08:	mov	rsi, r13
0x12b0b:	test	r8b, r8b
0x12b0e:	jne	0x12a60
		Instruction group(s): [7, 1] 

0x12b14:	lea	rax, [r12 + 1]
0x12b19:	cmp	rdi, rax
0x12b1c:	ja	0x12be5
		Instruction group(s): [7, 1] 

0x12b22:	mov	byte ptr [rdi], 0
0x12b25:	mov	rdx, r12
0x12b28:	mov	ecx, dword ptr [rdx]
0x12b2a:	add	rdx, 4
0x12b2e:	lea	eax, [rcx - 0x1010101]
		Instruction group(s): [145] 

0x12b34:	not	ecx
0x12b36:	and	eax, ecx
0x12b38:	and	eax, 0x80808080
0x12b3d:	je	0x12b28
		Instruction group(s): [7, 1] 

0x12b3f:	mov	ecx, eax
0x12b41:	mov	rdi, qword ptr [rsp]
0x12b45:	mov	rsi, r12
0x12b48:	shr	ecx, 0x10
0x12b4b:	test	eax, 0x8080
0x12b50:	cmove	eax, ecx
		Instruction group(s): [137] 

0x12b53:	lea	rcx, [rdx + 2]
0x12b57:	cmove	rdx, rcx
		Instruction group(s): [137] 

0x12b5b:	mov	ecx, eax
0x12b5d:	add	cl, al
0x12b5f:	sbb	rdx, 3
0x12b63:	sub	rdx, r12
0x12b66:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x12b6b:	lea	rsi, [rip + 0x1b4b8]
0x12b72:	mov	edx, 1
0x12b77:	mov	rdi, rax
0x12b7a:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x12b7f:	mov	dword ptr [rsp + 0xc], 1
0x12b87:	mov	qword ptr [rsp], rax
0x12b8b:	jmp	0x12994
		Instruction group(s): [7, 1] 

0x12b90:	cmp	r8b, 0x2e
0x12b94:	jne	0x12acc
		Instruction group(s): [7, 1] 

0x12b9a:	jmp	0x12b03
		Instruction group(s): [7, 1] 

0x12b9f:	nop	
0x12ba0:	cmp	byte ptr [rsi + 1], 0x2e
0x12ba4:	jne	0x12acc
		Instruction group(s): [7, 1] 

0x12baa:	lea	rax, [r12 + 1]
0x12baf:	cmp	rdi, rax
0x12bb2:	jbe	0x12b03
		Instruction group(s): [7, 1] 

0x12bb8:	movzx	edx, byte ptr [rdi - 2]
0x12bbc:	lea	rax, [rdi - 1]
0x12bc0:	mov	rdi, rax
0x12bc3:	cmp	word ptr [r15 + rdx*2], 0
0x12bc9:	js	0x12b03
		Instruction group(s): [7, 1] 

0x12bcf:	nop	
0x12bd0:	sub	rdi, 1
0x12bd4:	movzx	eax, byte ptr [rdi - 1]
0x12bd8:	cmp	word ptr [r15 + rax*2], 0
0x12bde:	jns	0x12bd0
		Instruction group(s): [7, 1] 

0x12be0:	jmp	0x12b03
		Instruction group(s): [7, 1] 

0x12be5:	movzx	eax, byte ptr [rdi - 1]
0x12be9:	cmp	word ptr [r15 + rax*2], 0
0x12bef:	jns	0x12b22
		Instruction group(s): [7, 1] 

0x12bf5:	sub	rdi, 1
0x12bf9:	jmp	0x12b22
		Instruction group(s): [7, 1] 

0x12bfe:	mov	r14, qword ptr [rsp + 0x10]
0x12c03:	mov	rdi, r12
0x12c06:	mov	edx, 1
0x12c0b:	mov	rsi, r14
0x12c0e:	call	0x8680
		Instruction group(s): [2, 7, 145] 

0x12c13:	mov	byte ptr [rsp + 0x1031], 0
0x12c1b:	movzx	r8d, byte ptr [rsp + 0x31]
0x12c21:	lea	rsi, [r14 + 1]
0x12c25:	lea	rdi, [r12 + 1]
0x12c2a:	jmp	0x12a52
		Instruction group(s): [7, 1] 

0x12c2f:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x12c34:	nop	
0x12c36:	nop	word ptr cs:[rax + rax]
0x12c40:	mov	eax, dword ptr [rdi + 0x18]
0x12c43:	sub	eax, dword ptr [rsi + 0x18]
0x12c46:	jne	0x12c60
		Instruction group(s): [7, 1] 

0x12c48:	mov	rdi, qword ptr [rdi + 0x10]
0x12c4c:	mov	rsi, qword ptr [rsi + 0x10]
0x12c50:	cmp	rdi, rsi
0x12c53:	je	0x12c60
		Instruction group(s): [7, 1] 

0x12c55:	jmp	0x89e0
		Instruction group(s): [7, 1] 

0x12c5a:	nop	word ptr [rax + rax]
0x12c60:	ret	
		Instruction group(s): [3, 145] 

0x12c62:	nop	dword ptr [rax]
0x12c66:	nop	word ptr cs:[rax + rax]
0x12c70:	push	rbp
		Instruction group(s): [145] 

0x12c71:	push	rbx
		Instruction group(s): [145] 

0x12c72:	mov	rbp, rdi
0x12c75:	sub	rsp, 8
0x12c79:	mov	rbx, qword ptr [rsi]
0x12c7c:	mov	rdi, rbx
0x12c7f:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x12c84:	mov	rdi, rbx
0x12c87:	mov	esi, eax
0x12c89:	call	0x27020
		Instruction group(s): [2, 7, 145] 

0x12c8e:	test	rax, rax
0x12c91:	mov	edx, 9
0x12c96:	lea	rsi, [rip + 0x18ab5]
0x12c9d:	je	0x12cbd
		Instruction group(s): [7, 1] 

0x12c9f:	test	byte ptr [rax + 0x24], 1
0x12ca3:	mov	edx, 9
0x12ca8:	lea	rsi, [rip + 0x18aed]
0x12caf:	jne	0x12cbd
		Instruction group(s): [7, 1] 

0x12cb1:	lea	rsi, [rip + 0x18aee]
0x12cb8:	mov	edx, 6
0x12cbd:	add	rsp, 8
0x12cc1:	mov	rdi, rbp
0x12cc4:	pop	rbx
		Instruction group(s): [145] 

0x12cc5:	pop	rbp
		Instruction group(s): [145] 

0x12cc6:	jmp	0xdfa0
		Instruction group(s): [7, 1] 

0x12ccb:	nop	dword ptr [rax + rax]
0x12cd0:	push	r15
		Instruction group(s): [145] 

0x12cd2:	push	r14
		Instruction group(s): [145] 

0x12cd4:	push	r13
		Instruction group(s): [145] 

0x12cd6:	push	r12
		Instruction group(s): [145] 

0x12cd8:	push	rbp
		Instruction group(s): [145] 

0x12cd9:	push	rbx
		Instruction group(s): [145] 

0x12cda:	mov	rbx, rdi
0x12cdd:	sub	rsp, 0x28
0x12ce1:	mov	r12d, dword ptr [rsp + 0x60]
0x12ce6:	mov	qword ptr [rsp + 0x10], rsi
0x12ceb:	mov	qword ptr [rsp], rdx
0x12cef:	mov	qword ptr [rsp + 0x18], rcx
0x12cf4:	mov	dword ptr [rsp + 0xc], r9d
0x12cf9:	mov	eax, r12d
0x12cfc:	or	eax, r8d
0x12cff:	je	0x12e28
		Instruction group(s): [7, 1] 

0x12d05:	test	r8d, r8d
0x12d08:	mov	ebp, r8d
0x12d0b:	mov	r14, qword ptr [rsp + 0x10]
0x12d10:	sete	r13b
0x12d14:	test	r12d, r12d
0x12d17:	setne	al
0x12d1a:	and	r13d, eax
0x12d1d:	jmp	0x12d59
		Instruction group(s): [7, 1] 

0x12d1f:	nop	
0x12d20:	cmp	r15, qword ptr [rsp + 0x10]
0x12d25:	jbe	0x12dc8
		Instruction group(s): [7, 1] 

0x12d2b:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0x12d30:	movzx	edx, byte ptr [r15 - 1]
0x12d35:	mov	rax, qword ptr [rax]
0x12d38:	test	byte ptr [rax + rdx*2], 1
0x12d3c:	jne	0x12dc8
		Instruction group(s): [7, 1] 

0x12d42:	mov	rsi, qword ptr [rsp]
0x12d46:	mov	rdi, rbx
0x12d49:	mov	edx, ebp
0x12d4b:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x12d50:	mov	rbx, rax
0x12d53:	cmp	byte ptr [r14], 0
0x12d57:	je	0x12db0
		Instruction group(s): [7, 1] 

0x12d59:	test	r13b, r13b
0x12d5c:	jne	0x12df0
		Instruction group(s): [7, 1] 

0x12d62:	mov	rsi, qword ptr [rsp]
0x12d66:	mov	rdi, r14
0x12d69:	call	0x8d10
		Instruction group(s): [2, 7, 145] 

0x12d6e:	test	rax, rax
0x12d71:	mov	r15, rax
0x12d74:	je	0x12e60
		Instruction group(s): [7, 1] 

0x12d7a:	cmp	r14, r15
0x12d7d:	jb	0x12e0c
		Instruction group(s): [7, 1] 

0x12d83:	mov	ecx, ebp
0x12d85:	test	r12d, r12d
0x12d88:	lea	r14, [r15 + rcx]
0x12d8c:	jne	0x12d20
		Instruction group(s): [7, 1] 

0x12d8e:	mov	eax, dword ptr [rsp + 0xc]
0x12d92:	test	eax, eax
0x12d94:	je	0x12d53
		Instruction group(s): [7, 1] 

0x12d96:	mov	edx, dword ptr [rsp + 0xc]
0x12d9a:	mov	rsi, qword ptr [rsp + 0x18]
0x12d9f:	mov	rdi, rbx
0x12da2:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x12da7:	cmp	byte ptr [r14], 0
0x12dab:	mov	rbx, rax
0x12dae:	jne	0x12d59
		Instruction group(s): [7, 1] 

0x12db0:	add	rsp, 0x28
0x12db4:	mov	rax, rbx
0x12db7:	pop	rbx
		Instruction group(s): [145] 

0x12db8:	pop	rbp
		Instruction group(s): [145] 

0x12db9:	pop	r12
		Instruction group(s): [145] 

0x12dbb:	pop	r13
		Instruction group(s): [145] 

0x12dbd:	pop	r14
		Instruction group(s): [145] 

0x12dbf:	pop	r15
		Instruction group(s): [145] 

0x12dc1:	ret	
		Instruction group(s): [3, 145] 

0x12dc2:	nop	word ptr [rax + rax]
0x12dc8:	movzx	eax, byte ptr [r14]
0x12dcc:	lea	rsi, [rip + 0x2233cd]
0x12dd3:	test	byte ptr [rsi + rax*2], 3
0x12dd7:	je	0x12d42
		Instruction group(s): [7, 1] 

0x12ddd:	mov	eax, dword ptr [rsp + 0xc]
0x12de1:	test	eax, eax
0x12de3:	je	0x12d53
		Instruction group(s): [7, 1] 

0x12de9:	jmp	0x12d96
		Instruction group(s): [7, 1] 

0x12deb:	nop	dword ptr [rax + rax]
0x12df0:	mov	rdi, r14
0x12df3:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x12df8:	mov	rdi, rax
0x12dfb:	call	0x1bb60
		Instruction group(s): [2, 7, 145] 

0x12e00:	mov	r15, rax
0x12e03:	cmp	r14, r15
0x12e06:	jae	0x12d83
		Instruction group(s): [7, 1] 

0x12e0c:	mov	rdx, r15
0x12e0f:	mov	rdi, rbx
0x12e12:	mov	rsi, r14
0x12e15:	sub	rdx, r14
0x12e18:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x12e1d:	mov	rbx, rax
0x12e20:	jmp	0x12d83
		Instruction group(s): [7, 1] 

0x12e25:	nop	dword ptr [rax]
0x12e28:	mov	rdi, rsi
0x12e2b:	mov	r15, rsi
0x12e2e:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x12e33:	mov	rdi, rbx
0x12e36:	mov	edx, eax
0x12e38:	mov	rsi, r15
0x12e3b:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x12e40:	mov	edx, dword ptr [rsp + 0xc]
0x12e44:	mov	rbx, rax
0x12e47:	test	edx, edx
0x12e49:	je	0x12db0
		Instruction group(s): [7, 1] 

0x12e4f:	mov	edx, dword ptr [rsp + 0xc]
0x12e53:	mov	rsi, qword ptr [rsp + 0x18]
0x12e58:	jmp	0x12e6d
		Instruction group(s): [7, 1] 

0x12e5a:	nop	word ptr [rax + rax]
0x12e60:	mov	rdi, r14
0x12e63:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x12e68:	mov	rsi, r14
0x12e6b:	mov	edx, eax
0x12e6d:	add	rsp, 0x28
0x12e71:	mov	rdi, rbx
0x12e74:	pop	rbx
		Instruction group(s): [145] 

0x12e75:	pop	rbp
		Instruction group(s): [145] 

0x12e76:	pop	r12
		Instruction group(s): [145] 

0x12e78:	pop	r13
		Instruction group(s): [145] 

0x12e7a:	pop	r14
		Instruction group(s): [145] 

0x12e7c:	pop	r15
		Instruction group(s): [145] 

0x12e7e:	jmp	0xdfa0
		Instruction group(s): [7, 1] 

0x12e83:	nop	dword ptr [rax]
0x12e86:	nop	word ptr cs:[rax + rax]
0x12e90:	push	r14
		Instruction group(s): [145] 

0x12e92:	push	r13
		Instruction group(s): [145] 

0x12e94:	mov	r13, rdi
0x12e97:	push	r12
		Instruction group(s): [145] 

0x12e99:	push	rbp
		Instruction group(s): [145] 

0x12e9a:	push	rbx
		Instruction group(s): [145] 

0x12e9b:	mov	r12, qword ptr [rsi + 8]
0x12e9f:	mov	rbx, rsi
0x12ea2:	mov	rdi, r12
0x12ea5:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x12eaa:	mov	rbp, qword ptr [rbx]
0x12ead:	mov	r14, rax
0x12eb0:	mov	rdi, rbp
0x12eb3:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x12eb8:	sub	rsp, 8
0x12ebc:	mov	rsi, qword ptr [rbx + 0x10]
0x12ec0:	mov	rcx, r12
0x12ec3:	push	0
		Instruction group(s): [145] 

0x12ec5:	mov	rdx, rbp
0x12ec8:	mov	r9d, r14d
0x12ecb:	mov	rdi, r13
0x12ece:	mov	r8d, eax
0x12ed1:	call	0x12cd0
		Instruction group(s): [2, 7, 145] 

0x12ed6:	pop	rdx
		Instruction group(s): [145] 

0x12ed7:	pop	rcx
		Instruction group(s): [145] 

0x12ed8:	pop	rbx
		Instruction group(s): [145] 

0x12ed9:	pop	rbp
		Instruction group(s): [145] 

0x12eda:	pop	r12
		Instruction group(s): [145] 

0x12edc:	pop	r13
		Instruction group(s): [145] 

0x12ede:	pop	r14
		Instruction group(s): [145] 

0x12ee0:	ret	
		Instruction group(s): [3, 145] 

0x12ee1:	nop	dword ptr [rax + rax]
0x12ee6:	nop	word ptr cs:[rax + rax]
0x12ef0:	push	r15
		Instruction group(s): [145] 

0x12ef2:	push	r14
		Instruction group(s): [145] 

0x12ef4:	mov	r15, rdi
0x12ef7:	push	r13
		Instruction group(s): [145] 

0x12ef9:	push	r12
		Instruction group(s): [145] 

0x12efb:	mov	r14, rdx
0x12efe:	push	rbp
		Instruction group(s): [145] 

0x12eff:	push	rbx
		Instruction group(s): [145] 

0x12f00:	mov	rbx, r8
0x12f03:	sub	rsp, 0x68
0x12f07:	mov	rax, qword ptr fs:[0x28]
0x12f10:	mov	qword ptr [rsp + 0x58], rax
0x12f15:	xor	eax, eax
0x12f17:	test	r9, r9
0x12f1a:	mov	qword ptr [rsp + 0x48], rsi
0x12f1f:	mov	qword ptr [rsp + 0x20], rcx
0x12f24:	mov	qword ptr [rsp + 0x28], r9
0x12f29:	je	0x13138
		Instruction group(s): [7, 1] 

0x12f2f:	mov	rax, r9
0x12f32:	mov	rdi, r9
0x12f35:	sub	rax, rcx
0x12f38:	sub	eax, 1
0x12f3b:	mov	dword ptr [rsp + 0x1c], eax
0x12f3f:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x12f44:	test	rbx, rbx
0x12f47:	mov	dword ptr [rsp + 0x40], eax
0x12f4b:	je	0x13157
		Instruction group(s): [7, 1] 

0x12f51:	mov	rax, rbx
0x12f54:	mov	rdi, rbx
0x12f57:	lea	r12, [rsp + 0x54]
0x12f5c:	sub	rax, r14
0x12f5f:	lea	rbp, [rsp + 0x48]
0x12f64:	lea	r13d, [rax - 1]
		Instruction group(s): [145] 

0x12f68:	mov	dword ptr [rsp + 0x10], eax
0x12f6c:	mov	dword ptr [rsp + 0xc], r13d
0x12f71:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x12f76:	lea	ecx, [rax - 1]
		Instruction group(s): [145] 

0x12f79:	mov	dword ptr [rsp + 0x30], eax
0x12f7d:	add	r13d, eax
0x12f80:	mov	eax, dword ptr [rsp + 0x10]
0x12f84:	mov	dword ptr [rsp + 8], 0
0x12f8c:	mov	qword ptr [rsp + 0x10], r14
0x12f91:	mov	dword ptr [rsp + 0x18], ecx
0x12f95:	sub	eax, 2
0x12f98:	mov	dword ptr [rsp + 0x34], eax
0x12f9c:	lea	rax, [r14 + 1]
0x12fa0:	mov	r14, rbx
0x12fa3:	mov	qword ptr [rsp + 0x38], rax
0x12fa8:	nop	dword ptr [rax + rax]
0x12fb0:	mov	rsi, r12
0x12fb3:	mov	rdi, rbp
0x12fb6:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x12fbb:	test	rax, rax
0x12fbe:	mov	rbx, rax
0x12fc1:	je	0x13020
		Instruction group(s): [7, 1] 

0x12fc3:	mov	r8d, dword ptr [rsp + 0x54]
0x12fc8:	cmp	r13d, r8d
0x12fcb:	ja	0x12fe5
		Instruction group(s): [7, 1] 

0x12fcd:	mov	esi, dword ptr [rsp + 0xc]
0x12fd1:	test	esi, esi
0x12fd3:	je	0x1307e
		Instruction group(s): [7, 1] 

0x12fd9:	mov	rax, qword ptr [rsp + 0x10]
0x12fde:	movzx	eax, byte ptr [rax]
0x12fe1:	cmp	byte ptr [rbx], al
0x12fe3:	je	0x13050
		Instruction group(s): [7, 1] 

0x12fe5:	mov	rdi, r15
0x12fe8:	mov	edx, r8d
0x12feb:	mov	rsi, rbx
0x12fee:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x12ff3:	mov	r15, rax
0x12ff6:	lea	rsi, [rip + 0x1b02d]
0x12ffd:	mov	rdi, r15
0x13000:	mov	edx, 1
0x13005:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x1300a:	mov	dword ptr [rsp + 8], 1
0x13012:	mov	r15, rax
0x13015:	jmp	0x12fb0
		Instruction group(s): [7, 1] 

0x13017:	nop	word ptr [rax + rax]
0x13020:	cmp	dword ptr [rsp + 8], 1
0x13025:	mov	rax, r15
0x13028:	adc	rax, -1
0x1302c:	mov	rcx, qword ptr [rsp + 0x58]
0x13031:	xor	rcx, qword ptr fs:[0x28]
0x1303a:	jne	0x131b1
		Instruction group(s): [7, 1] 

0x13040:	add	rsp, 0x68
0x13044:	pop	rbx
		Instruction group(s): [145] 

0x13045:	pop	rbp
		Instruction group(s): [145] 

0x13046:	pop	r12
		Instruction group(s): [145] 

0x13048:	pop	r13
		Instruction group(s): [145] 

0x1304a:	pop	r14
		Instruction group(s): [145] 

0x1304c:	pop	r15
		Instruction group(s): [145] 

0x1304e:	ret	
		Instruction group(s): [3, 145] 

0x1304f:	nop	
0x13050:	mov	edx, dword ptr [rsp + 0x34]
0x13054:	movzx	eax, byte ptr [r14 - 2]
0x13059:	cmp	byte ptr [rbx + rdx], al
0x1305c:	jne	0x12fe5
		Instruction group(s): [7, 1] 

0x1305e:	mov	rsi, qword ptr [rsp + 0x38]
0x13063:	lea	rdi, [rbx + 1]
0x13067:	mov	dword ptr [rsp + 0x44], r8d
0x1306c:	call	0x86a0
		Instruction group(s): [2, 7, 145] 

0x13071:	test	eax, eax
0x13073:	mov	r8d, dword ptr [rsp + 0x44]
0x13078:	jne	0x12fe5
		Instruction group(s): [7, 1] 

0x1307e:	mov	edx, dword ptr [rsp + 0x30]
0x13082:	test	edx, edx
0x13084:	je	0x130cc
		Instruction group(s): [7, 1] 

0x13086:	mov	edx, dword ptr [rsp + 0x18]
0x1308a:	lea	eax, [r8 - 1]
		Instruction group(s): [145] 

0x1308e:	movzx	ecx, byte ptr [r14 + rdx]
0x13093:	cmp	byte ptr [rbx + rax], cl
0x13096:	jne	0x12fe5
		Instruction group(s): [7, 1] 

0x1309c:	mov	edi, r8d
0x1309f:	sub	edi, dword ptr [rsp + 0x30]
0x130a3:	movzx	eax, byte ptr [r14]
0x130a7:	add	rdi, rbx
0x130aa:	cmp	byte ptr [rdi], al
0x130ac:	jne	0x12fe5
		Instruction group(s): [7, 1] 

0x130b2:	mov	rsi, r14
0x130b5:	mov	dword ptr [rsp + 0x44], r8d
0x130ba:	call	0x86a0
		Instruction group(s): [2, 7, 145] 

0x130bf:	test	eax, eax
0x130c1:	mov	r8d, dword ptr [rsp + 0x44]
0x130c6:	jne	0x12fe5
		Instruction group(s): [7, 1] 

0x130cc:	mov	edx, dword ptr [rsp + 0x1c]
0x130d0:	mov	rsi, qword ptr [rsp + 0x20]
0x130d5:	mov	rdi, r15
0x130d8:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x130dd:	cmp	qword ptr [rsp + 0x28], 0
0x130e3:	mov	r15, rax
0x130e6:	je	0x131a0
		Instruction group(s): [7, 1] 

0x130ec:	mov	esi, dword ptr [rsp + 0xc]
0x130f0:	mov	edx, dword ptr [rsp + 0x54]
0x130f4:	mov	rdi, rax
0x130f7:	sub	edx, r13d
0x130fa:	add	rsi, rbx
0x130fd:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x13102:	mov	ebx, dword ptr [rsp + 0x40]
0x13106:	mov	rsi, qword ptr [rsp + 0x28]
0x1310b:	mov	rdi, rax
0x1310e:	mov	edx, ebx
0x13110:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x13115:	mov	ecx, dword ptr [rsp + 0x1c]
0x13119:	mov	r15, rax
0x1311c:	test	ecx, ecx
0x1311e:	jne	0x12ff6
		Instruction group(s): [7, 1] 

0x13124:	add	ebx, dword ptr [rsp + 0x54]
0x13128:	je	0x12fb0
		Instruction group(s): [7, 1] 

0x1312e:	jmp	0x12ff6
		Instruction group(s): [7, 1] 

0x13133:	nop	dword ptr [rax + rax]
0x13138:	mov	rdi, qword ptr [rsp + 0x20]
0x1313d:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x13142:	test	rbx, rbx
0x13145:	mov	dword ptr [rsp + 0x1c], eax
0x13149:	mov	dword ptr [rsp + 0x40], 0
0x13151:	jne	0x12f51
		Instruction group(s): [7, 1] 

0x13157:	mov	rbp, qword ptr [rsp + 0x20]
0x1315c:	mov	rdi, rbp
0x1315f:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x13164:	mov	rdi, r14
0x13167:	mov	rbx, rax
0x1316a:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1316f:	sub	rsp, 8
0x13173:	mov	r8d, eax
0x13176:	mov	rdi, r15
0x13179:	push	1
		Instruction group(s): [145] 

0x1317b:	mov	rsi, qword ptr [rsp + 0x58]
0x13180:	mov	r9d, ebx
0x13183:	mov	rcx, rbp
0x13186:	mov	rdx, r14
0x13189:	call	0x12cd0
		Instruction group(s): [2, 7, 145] 

0x1318e:	pop	rdi
		Instruction group(s): [145] 

0x1318f:	pop	r8
		Instruction group(s): [145] 

0x13191:	jmp	0x1302c
		Instruction group(s): [7, 1] 

0x13196:	nop	word ptr cs:[rax + rax]
0x131a0:	mov	eax, dword ptr [rsp + 0x1c]
0x131a4:	test	eax, eax
0x131a6:	je	0x12fb0
		Instruction group(s): [7, 1] 

0x131ac:	jmp	0x12ff6
		Instruction group(s): [7, 1] 

0x131b1:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x131b6:	nop	word ptr cs:[rax + rax]
0x131c0:	push	r14
		Instruction group(s): [145] 

0x131c2:	push	r13
		Instruction group(s): [145] 

0x131c4:	mov	r13, rdi
0x131c7:	push	r12
		Instruction group(s): [145] 

0x131c9:	push	rbp
		Instruction group(s): [145] 

0x131ca:	mov	r12, rcx
0x131cd:	push	rbx
		Instruction group(s): [145] 

0x131ce:	mov	rdi, rdx
0x131d1:	mov	r14, rsi
0x131d4:	mov	rbp, rdx
0x131d7:	call	0x1e250
		Instruction group(s): [2, 7, 145] 

0x131dc:	mov	rdi, r12
0x131df:	mov	rbx, rax
0x131e2:	call	0x1e250
		Instruction group(s): [2, 7, 145] 

0x131e7:	cmp	rax, 1
0x131eb:	mov	r9, rax
0x131ee:	mov	rcx, r12
0x131f1:	sbb	r9, -1
0x131f5:	cmp	rbx, 1
0x131f9:	mov	rdx, rbp
0x131fc:	sbb	rbx, -1
0x13200:	mov	rsi, r14
0x13203:	mov	rdi, r13
0x13206:	mov	r8, rbx
0x13209:	pop	rbx
		Instruction group(s): [145] 

0x1320a:	pop	rbp
		Instruction group(s): [145] 

0x1320b:	pop	r12
		Instruction group(s): [145] 

0x1320d:	pop	r13
		Instruction group(s): [145] 

0x1320f:	pop	r14
		Instruction group(s): [145] 

0x13211:	jmp	0x12ef0
		Instruction group(s): [7, 1] 

0x13216:	nop	word ptr cs:[rax + rax]
0x13220:	mov	rax, rsi
0x13223:	mov	rcx, qword ptr [rsi + 8]
0x13227:	mov	rsi, qword ptr [rsi + 0x10]
0x1322b:	mov	rdx, qword ptr [rax]
0x1322e:	jmp	0x131c0
		Instruction group(s): [7, 1] 

0x13230:	push	rbp
		Instruction group(s): [145] 

0x13231:	mov	rbp, rsp
0x13234:	push	r15
		Instruction group(s): [145] 

0x13236:	push	r14
		Instruction group(s): [145] 

0x13238:	push	r13
		Instruction group(s): [145] 

0x1323a:	push	r12
		Instruction group(s): [145] 

0x1323c:	mov	r15, rdi
0x1323f:	push	rbx
		Instruction group(s): [145] 

0x13240:	mov	r12, rdx
0x13243:	mov	rbx, rsi
0x13246:	sub	rsp, 0x28
0x1324a:	mov	rax, qword ptr fs:[0x28]
0x13253:	mov	qword ptr [rbp - 0x38], rax
0x13257:	xor	eax, eax
0x13259:	test	rsi, rsi
0x1325c:	je	0x132c0
		Instruction group(s): [7, 1] 

0x1325e:	lea	r13, [rbx + 1]
0x13262:	sub	rbx, r15
0x13265:	mov	rdi, r13
0x13268:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1326d:	mov	rdi, r12
0x13270:	mov	r14, rax
0x13273:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x13278:	mov	esi, eax
0x1327a:	mov	qword ptr [rbp - 0x48], rax
0x1327e:	mov	eax, r14d
0x13281:	add	rax, rbx
0x13284:	cmp	rsi, rax
0x13287:	jl	0x13330
		Instruction group(s): [7, 1] 

0x1328d:	mov	rdx, rbx
0x13290:	mov	rsi, r12
0x13293:	mov	rdi, r15
0x13296:	call	0x86a0
		Instruction group(s): [2, 7, 145] 

0x1329b:	test	eax, eax
0x1329d:	jne	0x13330
		Instruction group(s): [7, 1] 

0x132a3:	mov	rcx, qword ptr [rbp - 0x48]
0x132a7:	mov	rdi, r13
0x132aa:	xor	ebx, ebx
0x132ac:	sub	ecx, r14d
0x132af:	lea	rsi, [r12 + rcx]
0x132b3:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x132b8:	test	eax, eax
0x132ba:	sete	bl
0x132bd:	jmp	0x13332
		Instruction group(s): [7, 1] 

0x132bf:	nop	
0x132c0:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x132c5:	lea	edx, [rax + 1]
		Instruction group(s): [145] 

0x132c8:	mov	rsi, r15
0x132cb:	lea	rax, [rdx + 0x1e]
0x132cf:	shr	rax, 4
0x132d3:	shl	rax, 4
0x132d7:	sub	rsp, rax
0x132da:	lea	r13, [rsp + 0xf]
0x132df:	and	r13, 0xfffffffffffffff0
0x132e3:	mov	rdi, r13
0x132e6:	mov	r15, r13
0x132e9:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x132ee:	mov	rdi, r13
0x132f1:	call	0x1e250
		Instruction group(s): [2, 7, 145] 

0x132f6:	test	rax, rax
0x132f9:	mov	rbx, rax
0x132fc:	jne	0x1325e
		Instruction group(s): [7, 1] 

0x13302:	cmp	r13, r12
0x13305:	mov	ebx, 1
0x1330a:	je	0x13332
		Instruction group(s): [7, 1] 

0x1330c:	movzx	eax, byte ptr [r13]
0x13311:	cmp	al, byte ptr [r12]
0x13315:	jne	0x13330
		Instruction group(s): [7, 1] 

0x13317:	test	al, al
0x13319:	je	0x13332
		Instruction group(s): [7, 1] 

0x1331b:	lea	rsi, [r12 + 1]
0x13320:	lea	rdi, [r13 + 1]
0x13324:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x13329:	test	eax, eax
0x1332b:	je	0x13332
		Instruction group(s): [7, 1] 

0x1332d:	nop	dword ptr [rax]
0x13330:	xor	ebx, ebx
0x13332:	mov	rdx, qword ptr [rbp - 0x38]
0x13336:	xor	rdx, qword ptr fs:[0x28]
0x1333f:	mov	eax, ebx
0x13341:	jne	0x13352
		Instruction group(s): [7, 1] 

0x13343:	lea	rsp, [rbp - 0x28]
0x13347:	pop	rbx
		Instruction group(s): [145] 

0x13348:	pop	r12
		Instruction group(s): [145] 

0x1334a:	pop	r13
		Instruction group(s): [145] 

0x1334c:	pop	r14
		Instruction group(s): [145] 

0x1334e:	pop	r15
		Instruction group(s): [145] 

0x13350:	pop	rbp
		Instruction group(s): [145] 

0x13351:	ret	
		Instruction group(s): [3, 145] 

0x13352:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x13357:	nop	word ptr [rax + rax]
0x13360:	push	rbp
		Instruction group(s): [145] 

0x13361:	mov	rbp, rsp
0x13364:	push	r15
		Instruction group(s): [145] 

0x13366:	push	r14
		Instruction group(s): [145] 

0x13368:	push	r13
		Instruction group(s): [145] 

0x1336a:	push	r12
		Instruction group(s): [145] 

0x1336c:	lea	r13, [rbp - 0xc8]
0x13373:	push	rbx
		Instruction group(s): [145] 

0x13374:	lea	r12, [rbp - 0xd4]
0x1337b:	xor	ebx, ebx
0x1337d:	lea	r14, [rbp - 0xc0]
0x13384:	sub	rsp, 0xe8
0x1338b:	mov	qword ptr [rbp - 0xe8], rdi
0x13392:	mov	rax, qword ptr fs:[0x28]
0x1339b:	mov	qword ptr [rbp - 0x38], rax
0x1339f:	xor	eax, eax
0x133a1:	movzx	eax, byte ptr [rdx + 6]
0x133a5:	mov	byte ptr [rbp - 0xe9], al
0x133ab:	mov	rax, qword ptr [rsi]
0x133ae:	mov	qword ptr [rbp - 0xc0], rax
0x133b5:	mov	rax, qword ptr [rsi + 8]
0x133b9:	mov	qword ptr [rbp - 0xb8], rax
0x133c0:	jmp	0x13424
		Instruction group(s): [7, 1] 

0x133c2:	nop	word ptr [rax + rax]
0x133c8:	sub	rsp, 0x30
0x133cc:	mov	rcx, qword ptr [rbp - 0xc0]
0x133d3:	lea	rdx, [rsp + 0xf]
0x133d8:	and	rdx, 0xfffffffffffffff0
0x133dc:	mov	qword ptr [r13], rdx
0x133e0:	cmp	byte ptr [rcx], 0
0x133e3:	mov	r15, rdx
0x133e6:	mov	r13, rdx
0x133e9:	je	0x133f6
		Instruction group(s): [7, 1] 

0x133eb:	add	rcx, 1
0x133ef:	mov	qword ptr [rbp - 0xc0], rcx
0x133f6:	mov	ecx, dword ptr [rbp - 0xd4]
0x133fc:	mov	qword ptr [r15 + 8], rax
0x13400:	mov	rdi, rax
0x13403:	mov	byte ptr [rax + rcx], 0
0x13407:	call	0x1e250
		Instruction group(s): [2, 7, 145] 

0x1340c:	mov	rdi, qword ptr [r15 + 8]
0x13410:	cmp	rax, 1
0x13414:	mov	qword ptr [r15 + 0x10], rax
0x13418:	adc	ebx, 0
0x1341b:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x13420:	mov	dword ptr [r15 + 0x18], eax
0x13424:	mov	rsi, r12
0x13427:	mov	rdi, r14
0x1342a:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x1342f:	test	rax, rax
0x13432:	jne	0x133c8
		Instruction group(s): [7, 1] 

0x13434:	mov	qword ptr [r13], 0
0x1343c:	lea	r15, [rbp - 0xd0]
0x13443:	xor	r13d, r13d
0x13446:	lea	r14, [rbp - 0xb8]
0x1344d:	jmp	0x134a4
		Instruction group(s): [7, 1] 

0x1344f:	nop	
0x13450:	sub	rsp, 0x30
0x13454:	mov	rcx, qword ptr [rbp - 0xb8]
0x1345b:	lea	rdx, [rsp + 0xf]
0x13460:	and	rdx, 0xfffffffffffffff0
0x13464:	mov	qword ptr [r15], rdx
0x13467:	cmp	byte ptr [rcx], 0
0x1346a:	mov	r15, rdx
0x1346d:	je	0x1347a
		Instruction group(s): [7, 1] 

0x1346f:	add	rcx, 1
0x13473:	mov	qword ptr [rbp - 0xb8], rcx
0x1347a:	mov	ecx, dword ptr [rbp - 0xd4]
0x13480:	add	r13d, 1
0x13484:	mov	byte ptr [rax + rcx], 0
0x13488:	mov	qword ptr [rdx + 0x10], rax
0x1348c:	mov	eax, dword ptr [rbp - 0xd4]
0x13492:	mov	dword ptr [rdx + 0x1c], 0
0x13499:	mov	qword ptr [rdx + 8], 0
0x134a1:	mov	dword ptr [rdx + 0x18], eax
0x134a4:	mov	rsi, r12
0x134a7:	mov	rdi, r14
0x134aa:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x134af:	test	rax, rax
0x134b2:	jne	0x13450
		Instruction group(s): [7, 1] 

0x134b4:	cmp	ebx, 1
0x134b7:	mov	qword ptr [r15], 0
0x134be:	jle	0x137b0
		Instruction group(s): [7, 1] 

0x134c4:	imul	ebx, r13d
0x134c8:	cmp	ebx, 9
0x134cb:	jg	0x13640
		Instruction group(s): [7, 1] 

0x134d1:	test	r13d, r13d
0x134d4:	je	0x13617
		Instruction group(s): [7, 1] 

0x134da:	mov	r14, qword ptr [rbp - 0xc8]
0x134e1:	mov	rbx, qword ptr [rbp - 0xd0]
0x134e8:	mov	dword ptr [rbp - 0xf0], 0
0x134f2:	test	r14, r14
0x134f5:	je	0x137d1
		Instruction group(s): [7, 1] 

0x134fb:	lea	rax, [rbp - 0xb0]
0x13502:	mov	qword ptr [rbp - 0x100], rax
0x13509:	lea	rax, [rbp - 0x90]
0x13510:	mov	qword ptr [rbp - 0x108], rax
0x13517:	nop	word ptr [rax + rax]
0x13520:	mov	rsi, qword ptr [r14 + 0x10]
0x13524:	test	rsi, rsi
0x13527:	je	0x136d8
		Instruction group(s): [7, 1] 

0x1352d:	test	rbx, rbx
0x13530:	je	0x13560
		Instruction group(s): [7, 1] 

0x13532:	mov	r12, rbx
0x13535:	jmp	0x13544
		Instruction group(s): [7, 1] 

0x13537:	nop	word ptr [rax + rax]
0x13540:	mov	rsi, qword ptr [r14 + 0x10]
0x13544:	mov	rdx, qword ptr [r12 + 0x10]
0x13549:	mov	rdi, qword ptr [r14 + 8]
0x1354d:	call	0x13230
		Instruction group(s): [2, 7, 145] 

0x13552:	or	dword ptr [r12 + 0x1c], eax
0x13557:	mov	r12, qword ptr [r12]
0x1355b:	test	r12, r12
0x1355e:	jne	0x13540
		Instruction group(s): [7, 1] 

0x13560:	mov	r14, qword ptr [r14]
0x13563:	test	r14, r14
0x13566:	jne	0x13520
		Instruction group(s): [7, 1] 

0x13568:	test	rbx, rbx
0x1356b:	je	0x137c5
		Instruction group(s): [7, 1] 

0x13571:	xor	edx, edx
0x13573:	lea	r12, [rip + 0x1aab0]
0x1357a:	jmp	0x13591
		Instruction group(s): [7, 1] 

0x1357c:	nop	dword ptr [rax]
0x13580:	test	eax, eax
0x13582:	setne	al
0x13585:	test	al, al
0x13587:	jne	0x135a6
		Instruction group(s): [7, 1] 

0x13589:	mov	rbx, qword ptr [rbx]
0x1358c:	test	rbx, rbx
0x1358f:	je	0x135e7
		Instruction group(s): [7, 1] 

0x13591:	cmp	byte ptr [rbp - 0xe9], 0
0x13598:	mov	eax, dword ptr [rbx + 0x1c]
0x1359b:	je	0x13580
		Instruction group(s): [7, 1] 

0x1359d:	test	eax, eax
0x1359f:	sete	al
0x135a2:	test	al, al
0x135a4:	je	0x13589
		Instruction group(s): [7, 1] 

0x135a6:	mov	r14, qword ptr [rbx + 0x10]
0x135aa:	mov	rdi, r14
0x135ad:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x135b2:	mov	rdi, qword ptr [rbp - 0xe8]
0x135b9:	mov	edx, eax
0x135bb:	mov	rsi, r14
0x135be:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x135c3:	mov	edx, 1
0x135c8:	mov	rsi, r12
0x135cb:	mov	rdi, rax
0x135ce:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x135d3:	mov	rbx, qword ptr [rbx]
0x135d6:	mov	qword ptr [rbp - 0xe8], rax
0x135dd:	mov	edx, 1
0x135e2:	test	rbx, rbx
0x135e5:	jne	0x13591
		Instruction group(s): [7, 1] 

0x135e7:	mov	rax, qword ptr [rbp - 0xe8]
0x135ee:	cmp	edx, 1
0x135f1:	adc	rax, -1
0x135f5:	mov	edx, dword ptr [rbp - 0xf0]
0x135fb:	test	edx, edx
0x135fd:	je	0x1361e
		Instruction group(s): [7, 1] 

0x135ff:	lea	r12, [rbp - 0x90]
0x13606:	xor	esi, esi
0x13608:	mov	rdi, r12
0x1360b:	mov	qword ptr [rbp - 0xe8], rax
0x13612:	call	0x29900
		Instruction group(s): [2, 7, 145] 

0x13617:	mov	rax, qword ptr [rbp - 0xe8]
0x1361e:	mov	rbx, qword ptr [rbp - 0x38]
0x13622:	xor	rbx, qword ptr fs:[0x28]
0x1362b:	jne	0x137df
		Instruction group(s): [7, 1] 

0x13631:	lea	rsp, [rbp - 0x28]
0x13635:	pop	rbx
		Instruction group(s): [145] 

0x13636:	pop	r12
		Instruction group(s): [145] 

0x13638:	pop	r13
		Instruction group(s): [145] 

0x1363a:	pop	r14
		Instruction group(s): [145] 

0x1363c:	pop	r15
		Instruction group(s): [145] 

0x1363e:	pop	rbp
		Instruction group(s): [145] 

0x1363f:	ret	
		Instruction group(s): [3, 145] 

0x13640:	lea	r12, [rbp - 0x90]
0x13647:	lea	r8, [rip - 0xa0e]
0x1364e:	lea	rcx, [rip - 0x2665]
0x13655:	lea	rdx, [rip - 0x26ac]
0x1365c:	movsxd	rsi, r13d
		Instruction group(s): [145] 

0x1365f:	mov	rdi, r12
0x13662:	call	0x29440
		Instruction group(s): [2, 7, 145] 

0x13667:	mov	rbx, qword ptr [rbp - 0xd0]
0x1366e:	test	rbx, rbx
0x13671:	je	0x1369c
		Instruction group(s): [7, 1] 

0x13673:	mov	r14, rbx
0x13676:	nop	word ptr cs:[rax + rax]
0x13680:	mov	rsi, r14
0x13683:	mov	rdi, r12
0x13686:	call	0x29750
		Instruction group(s): [2, 7, 145] 

0x1368b:	test	rax, rax
0x1368e:	je	0x13694
		Instruction group(s): [7, 1] 

0x13690:	mov	qword ptr [r14 + 8], rax
0x13694:	mov	r14, qword ptr [r14]
0x13697:	test	r14, r14
0x1369a:	jne	0x13680
		Instruction group(s): [7, 1] 

0x1369c:	test	r13d, r13d
0x1369f:	je	0x136c8
		Instruction group(s): [7, 1] 

0x136a1:	mov	r14, qword ptr [rbp - 0xc8]
0x136a8:	mov	dword ptr [rbp - 0xf0], 1
0x136b2:	test	r14, r14
0x136b5:	jne	0x134fb
		Instruction group(s): [7, 1] 

0x136bb:	test	rbx, rbx
0x136be:	jne	0x13571
		Instruction group(s): [7, 1] 

0x136c4:	nop	dword ptr [rax]
0x136c8:	mov	rax, qword ptr [rbp - 0xe8]
0x136cf:	jmp	0x13606
		Instruction group(s): [7, 1] 

0x136d4:	nop	dword ptr [rax]
0x136d8:	mov	ecx, dword ptr [rbp - 0xf0]
0x136de:	test	ecx, ecx
0x136e0:	jne	0x13750
		Instruction group(s): [7, 1] 

0x136e2:	test	rbx, rbx
0x136e5:	je	0x13560
		Instruction group(s): [7, 1] 

0x136eb:	movsxd	rax, dword ptr [r14 + 0x18]
		Instruction group(s): [145] 

0x136ef:	mov	r12, rbx
0x136f2:	mov	r15, rax
0x136f5:	mov	qword ptr [rbp - 0xf8], rax
0x136fc:	nop	dword ptr [rax]
0x13700:	cmp	dword ptr [r12 + 0x18], r15d
0x13705:	mov	r13d, dword ptr [r12 + 0x1c]
0x1370a:	jne	0x1372d
		Instruction group(s): [7, 1] 

0x1370c:	mov	rdx, qword ptr [rbp - 0xf8]
0x13713:	mov	rsi, qword ptr [r12 + 0x10]
0x13718:	mov	rdi, qword ptr [r14 + 8]
0x1371c:	call	0x86a0
		Instruction group(s): [2, 7, 145] 

0x13721:	mov	edx, r13d
0x13724:	or	edx, 1
0x13727:	test	eax, eax
0x13729:	cmove	r13d, edx
		Instruction group(s): [137] 

0x1372d:	mov	dword ptr [r12 + 0x1c], r13d
0x13732:	mov	r12, qword ptr [r12]
0x13736:	test	r12, r12
0x13739:	jne	0x13700
		Instruction group(s): [7, 1] 

0x1373b:	mov	r14, qword ptr [r14]
0x1373e:	test	r14, r14
0x13741:	jne	0x13520
		Instruction group(s): [7, 1] 

0x13747:	jmp	0x13568
		Instruction group(s): [7, 1] 

0x1374c:	nop	dword ptr [rax]
0x13750:	mov	rax, qword ptr [r14 + 8]
0x13754:	mov	rsi, qword ptr [rbp - 0x100]
0x1375b:	mov	rdi, qword ptr [rbp - 0x108]
0x13762:	mov	qword ptr [rbp - 0xa0], rax
0x13769:	mov	eax, dword ptr [r14 + 0x18]
0x1376d:	mov	dword ptr [rbp - 0x98], eax
0x13773:	call	0x29600
		Instruction group(s): [2, 7, 145] 

0x13778:	test	rax, rax
0x1377b:	je	0x13560
		Instruction group(s): [7, 1] 

0x13781:	nop	dword ptr [rax]
0x13788:	or	dword ptr [rax + 0x1c], 1
0x1378c:	mov	rax, qword ptr [rax + 8]
0x13790:	test	rax, rax
0x13793:	jne	0x13788
		Instruction group(s): [7, 1] 

0x13795:	mov	r14, qword ptr [r14]
0x13798:	test	r14, r14
0x1379b:	jne	0x13520
		Instruction group(s): [7, 1] 

0x137a1:	jmp	0x13568
		Instruction group(s): [7, 1] 

0x137a6:	nop	word ptr cs:[rax + rax]
0x137b0:	test	r13d, r13d
0x137b3:	mov	rax, qword ptr [rbp - 0xe8]
0x137ba:	je	0x1361e
		Instruction group(s): [7, 1] 

0x137c0:	jmp	0x134da
		Instruction group(s): [7, 1] 

0x137c5:	mov	rax, qword ptr [rbp - 0xe8]
0x137cc:	jmp	0x135f5
		Instruction group(s): [7, 1] 

0x137d1:	test	rbx, rbx
0x137d4:	jne	0x13571
		Instruction group(s): [7, 1] 

0x137da:	jmp	0x13617
		Instruction group(s): [7, 1] 

0x137df:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x137e4:	nop	
0x137e6:	nop	word ptr cs:[rax + rax]
0x137f0:	push	r13
		Instruction group(s): [145] 

0x137f2:	push	r12
		Instruction group(s): [145] 

0x137f4:	push	rbp
		Instruction group(s): [145] 

0x137f5:	push	rbx
		Instruction group(s): [145] 

0x137f6:	sub	rsp, 8
0x137fa:	mov	rbx, qword ptr [rdi]
0x137fd:	cmp	qword ptr [rsi], rbx
0x13800:	jb	0x1386c
		Instruction group(s): [7, 1] 

0x13802:	mov	r13, rsi
0x13805:	mov	r12, rdi
0x13808:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0x1380d:	mov	rdx, qword ptr [rax]
0x13810:	jmp	0x13826
		Instruction group(s): [7, 1] 

0x13812:	nop	word ptr [rax + rax]
0x13818:	add	rbx, 1
0x1381c:	mov	qword ptr [r12], rbx
0x13820:	cmp	rbx, qword ptr [r13]
0x13824:	ja	0x1386c
		Instruction group(s): [7, 1] 

0x13826:	movzx	eax, byte ptr [rbx]
0x13829:	test	byte ptr [rdx + rax*2 + 1], 0x20
0x1382e:	jne	0x13818
		Instruction group(s): [7, 1] 

0x13830:	mov	rbp, qword ptr [r13]
0x13834:	mov	rbx, qword ptr [r12]
0x13838:	cmp	rbp, rbx
0x1383b:	jb	0x1386c
		Instruction group(s): [7, 1] 

0x1383d:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0x13842:	mov	rdx, qword ptr [rax]
0x13845:	jmp	0x13861
		Instruction group(s): [7, 1] 

0x13847:	nop	word ptr [rax + rax]
0x13850:	sub	rbp, 1
0x13854:	mov	qword ptr [r13], rbp
0x13858:	mov	rbx, qword ptr [r12]
0x1385c:	cmp	rbp, rbx
0x1385f:	jb	0x1386c
		Instruction group(s): [7, 1] 

0x13861:	movzx	eax, byte ptr [rbp]
0x13865:	test	byte ptr [rdx + rax*2 + 1], 0x20
0x1386a:	jne	0x13850
		Instruction group(s): [7, 1] 

0x1386c:	add	rsp, 8
0x13870:	mov	rax, rbx
0x13873:	pop	rbx
		Instruction group(s): [145] 

0x13874:	pop	rbp
		Instruction group(s): [145] 

0x13875:	pop	r12
		Instruction group(s): [145] 

0x13877:	pop	r13
		Instruction group(s): [145] 

0x13879:	ret	
		Instruction group(s): [3, 145] 

0x1387a:	nop	word ptr [rax + rax]
0x13880:	push	r14
		Instruction group(s): [145] 

0x13882:	push	r13
		Instruction group(s): [145] 

0x13884:	mov	r13, rdi
0x13887:	push	r12
		Instruction group(s): [145] 

0x13889:	push	rbp
		Instruction group(s): [145] 

0x1388a:	push	rbx
		Instruction group(s): [145] 

0x1388b:	mov	rbx, rsi
0x1388e:	sub	rsp, 0x20
0x13892:	mov	rax, qword ptr fs:[0x28]
0x1389b:	mov	qword ptr [rsp + 0x18], rax
0x138a0:	xor	eax, eax
0x138a2:	lea	r12, [rsp + 0x10]
0x138a7:	lea	rbp, [rsp + 8]
0x138ac:	jmp	0x138da
		Instruction group(s): [7, 1] 

0x138ae:	nop	
0x138b0:	add	rsi, 1
0x138b4:	call	0xe010
		Instruction group(s): [2, 7, 145] 

0x138b9:	mov	rdi, rax
0x138bc:	mov	r14, rax
0x138bf:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x138c4:	test	eax, eax
0x138c6:	je	0x13940
		Instruction group(s): [7, 1] 

0x138c8:	add	rbx, 8
0x138cc:	cmp	qword ptr [rbx], 0
0x138d0:	je	0x13930
		Instruction group(s): [7, 1] 

0x138d2:	mov	rdi, r14
0x138d5:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x138da:	mov	r14, qword ptr [rbx]
0x138dd:	mov	rdi, r14
0x138e0:	mov	qword ptr [rsp + 8], r14
0x138e5:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x138ea:	lea	rax, [r14 + rax - 1]
0x138ef:	mov	rsi, r12
0x138f2:	mov	rdi, rbp
0x138f5:	mov	qword ptr [rsp + 0x10], rax
0x138fa:	call	0x137f0
		Instruction group(s): [2, 7, 145] 

0x138ff:	mov	rdi, qword ptr [rsp + 8]
0x13904:	mov	rsi, qword ptr [rsp + 0x10]
0x13909:	cmp	rdi, rsi
0x1390c:	jbe	0x138b0
		Instruction group(s): [7, 1] 

0x1390e:	mov	rcx, qword ptr [rsp + 0x18]
0x13913:	xor	rcx, qword ptr fs:[0x28]
0x1391c:	mov	rax, r13
0x1391f:	jne	0x1394a
		Instruction group(s): [7, 1] 

0x13921:	add	rsp, 0x20
0x13925:	pop	rbx
		Instruction group(s): [145] 

0x13926:	pop	rbp
		Instruction group(s): [145] 

0x13927:	pop	r12
		Instruction group(s): [145] 

0x13929:	pop	r13
		Instruction group(s): [145] 

0x1392b:	pop	r14
		Instruction group(s): [145] 

0x1392d:	ret	
		Instruction group(s): [3, 145] 

0x1392e:	nop	
0x13930:	mov	rdi, r13
0x13933:	mov	edx, eax
0x13935:	mov	rsi, r14
0x13938:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x1393d:	mov	r13, rax
0x13940:	mov	rdi, r14
0x13943:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x13948:	jmp	0x1390e
		Instruction group(s): [7, 1] 

0x1394a:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x1394f:	nop	
0x13950:	push	r14
		Instruction group(s): [145] 

0x13952:	push	r13
		Instruction group(s): [145] 

0x13954:	push	r12
		Instruction group(s): [145] 

0x13956:	push	rbp
		Instruction group(s): [145] 

0x13957:	mov	r12, rdi
0x1395a:	push	rbx
		Instruction group(s): [145] 

0x1395b:	sub	rsp, 0x20
0x1395f:	mov	rbx, qword ptr [rsi]
0x13962:	mov	rax, qword ptr fs:[0x28]
0x1396b:	mov	qword ptr [rsp + 0x18], rax
0x13970:	xor	eax, eax
0x13972:	test	rbx, rbx
0x13975:	je	0x139e5
		Instruction group(s): [7, 1] 

0x13977:	lea	r14, [rsp + 0x10]
0x1397c:	lea	r13, [rsp + 8]
0x13981:	mov	rbp, rsi
0x13984:	mov	rdi, rbx
0x13987:	mov	qword ptr [rsp + 8], rbx
0x1398c:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x13991:	lea	rax, [rbx + rax - 1]
0x13996:	mov	rsi, r14
0x13999:	mov	rdi, r13
0x1399c:	mov	qword ptr [rsp + 0x10], rax
0x139a1:	call	0x137f0
		Instruction group(s): [2, 7, 145] 

0x139a6:	mov	rdi, qword ptr [rsp + 8]
0x139ab:	mov	rsi, qword ptr [rsp + 0x10]
0x139b0:	cmp	rdi, rsi
0x139b3:	ja	0x13a10
		Instruction group(s): [7, 1] 

0x139b5:	add	rsi, 1
0x139b9:	call	0xe010
		Instruction group(s): [2, 7, 145] 

0x139be:	mov	rdi, rax
0x139c1:	mov	rbx, rax
0x139c4:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x139c9:	test	eax, eax
0x139cb:	je	0x13a08
		Instruction group(s): [7, 1] 

0x139cd:	mov	rdi, r12
0x139d0:	mov	edx, eax
0x139d2:	mov	rsi, rbx
0x139d5:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x139da:	mov	rdi, rbx
0x139dd:	mov	r12, rax
0x139e0:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x139e5:	mov	rcx, qword ptr [rsp + 0x18]
0x139ea:	xor	rcx, qword ptr fs:[0x28]
0x139f3:	mov	rax, r12
0x139f6:	jne	0x13a23
		Instruction group(s): [7, 1] 

0x139f8:	add	rsp, 0x20
0x139fc:	pop	rbx
		Instruction group(s): [145] 

0x139fd:	pop	rbp
		Instruction group(s): [145] 

0x139fe:	pop	r12
		Instruction group(s): [145] 

0x13a00:	pop	r13
		Instruction group(s): [145] 

0x13a02:	pop	r14
		Instruction group(s): [145] 

0x13a04:	ret	
		Instruction group(s): [3, 145] 

0x13a05:	nop	dword ptr [rax]
0x13a08:	mov	rdi, rbx
0x13a0b:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x13a10:	add	rbp, 8
0x13a14:	mov	rbx, qword ptr [rbp]
0x13a18:	test	rbx, rbx
0x13a1b:	jne	0x13984
		Instruction group(s): [7, 1] 

0x13a21:	jmp	0x139e5
		Instruction group(s): [7, 1] 

0x13a23:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x13a28:	nop	dword ptr [rax + rax]
0x13a30:	push	r13
		Instruction group(s): [145] 

0x13a32:	push	r12
		Instruction group(s): [145] 

0x13a34:	mov	r12, rsi
0x13a37:	push	rbp
		Instruction group(s): [145] 

0x13a38:	push	rbx
		Instruction group(s): [145] 

0x13a39:	mov	rbx, rdi
0x13a3c:	sub	rsp, 0x28
0x13a40:	mov	rbp, qword ptr [rsi]
0x13a43:	mov	rax, qword ptr fs:[0x28]
0x13a4c:	mov	qword ptr [rsp + 0x18], rax
0x13a51:	xor	eax, eax
0x13a53:	mov	rdi, rbp
0x13a56:	mov	qword ptr [rsp + 8], rbp
0x13a5b:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x13a60:	lea	rsi, [rsp + 0x10]
0x13a65:	lea	rax, [rbp + rax - 1]
0x13a6a:	lea	rdi, [rsp + 8]
0x13a6f:	mov	qword ptr [rsp + 0x10], rax
0x13a74:	call	0x137f0
		Instruction group(s): [2, 7, 145] 

0x13a79:	mov	rdi, qword ptr [rsp + 8]
0x13a7e:	mov	rsi, qword ptr [rsp + 0x10]
0x13a83:	cmp	rdi, rsi
0x13a86:	jbe	0x13ae0
		Instruction group(s): [7, 1] 

0x13a88:	mov	eax, 0x10
0x13a8d:	mov	rdi, qword ptr [r12 + rax]
0x13a91:	test	rdi, rdi
0x13a94:	je	0x13ac0
		Instruction group(s): [7, 1] 

0x13a96:	xor	esi, esi
0x13a98:	call	0xe010
		Instruction group(s): [2, 7, 145] 

0x13a9d:	mov	rbp, rax
0x13aa0:	mov	rdi, rax
0x13aa3:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x13aa8:	mov	rdi, rbx
0x13aab:	mov	edx, eax
0x13aad:	mov	rsi, rbp
0x13ab0:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x13ab5:	mov	rdi, rbp
0x13ab8:	mov	rbx, rax
0x13abb:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x13ac0:	mov	rcx, qword ptr [rsp + 0x18]
0x13ac5:	xor	rcx, qword ptr fs:[0x28]
0x13ace:	mov	rax, rbx
0x13ad1:	jne	0x13b0b
		Instruction group(s): [7, 1] 

0x13ad3:	add	rsp, 0x28
0x13ad7:	pop	rbx
		Instruction group(s): [145] 

0x13ad8:	pop	rbp
		Instruction group(s): [145] 

0x13ad9:	pop	r12
		Instruction group(s): [145] 

0x13adb:	pop	r13
		Instruction group(s): [145] 

0x13add:	ret	
		Instruction group(s): [3, 145] 

0x13ade:	nop	
0x13ae0:	add	rsi, 1
0x13ae4:	call	0xe010
		Instruction group(s): [2, 7, 145] 

0x13ae9:	mov	rbp, rax
0x13aec:	mov	rdi, rax
0x13aef:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x13af4:	mov	rdi, rbp
0x13af7:	mov	r13, rax
0x13afa:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x13aff:	test	r13d, r13d
0x13b02:	je	0x13a88
		Instruction group(s): [7, 1] 

0x13b04:	mov	eax, 8
0x13b09:	jmp	0x13a8d
		Instruction group(s): [7, 1] 

0x13b0b:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x13b10:	push	r12
		Instruction group(s): [145] 

0x13b12:	push	rbp
		Instruction group(s): [145] 

0x13b13:	mov	rbp, rsi
0x13b16:	push	rbx
		Instruction group(s): [145] 

0x13b17:	mov	rbx, rdi
0x13b1a:	sub	rsp, 0x20
0x13b1e:	mov	qword ptr [rsp + 8], rdi
0x13b23:	mov	rax, qword ptr fs:[0x28]
0x13b2c:	mov	qword ptr [rsp + 0x18], rax
0x13b31:	xor	eax, eax
0x13b33:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x13b38:	lea	rsi, [rsp + 0x10]
0x13b3d:	lea	rax, [rbx + rax - 1]
0x13b42:	lea	rdi, [rsp + 8]
0x13b47:	mov	qword ptr [rsp + 0x10], rax
0x13b4c:	call	0x137f0
		Instruction group(s): [2, 7, 145] 

0x13b51:	mov	rax, qword ptr [rsp + 8]
0x13b56:	mov	rsi, qword ptr [rsp + 0x10]
0x13b5b:	cmp	rax, rsi
0x13b5e:	ja	0x13b94
		Instruction group(s): [7, 1] 

0x13b60:	movsx	edx, byte ptr [rax]
0x13b63:	sub	edx, 0x30
0x13b66:	cmp	edx, 9
0x13b69:	ja	0x13bb8
		Instruction group(s): [7, 1] 

0x13b6b:	add	rax, 1
0x13b6f:	lea	rcx, [rsi + 1]
0x13b73:	jmp	0x13b87
		Instruction group(s): [7, 1] 

0x13b75:	nop	dword ptr [rax]
0x13b78:	movsx	edx, byte ptr [rdx]
0x13b7b:	add	rax, 1
0x13b7f:	sub	edx, 0x30
0x13b82:	cmp	edx, 9
0x13b85:	ja	0x13bb8
		Instruction group(s): [7, 1] 

0x13b87:	cmp	rcx, rax
0x13b8a:	mov	rdx, rax
0x13b8d:	mov	qword ptr [rsp + 8], rax
0x13b92:	jne	0x13b78
		Instruction group(s): [7, 1] 

0x13b94:	cmp	rsi, rbx
0x13b97:	js	0x13bb8
		Instruction group(s): [7, 1] 

0x13b99:	mov	rax, qword ptr [rsp + 0x18]
0x13b9e:	xor	rax, qword ptr fs:[0x28]
0x13ba7:	jne	0x13bed
		Instruction group(s): [7, 1] 

0x13ba9:	add	rsp, 0x20
0x13bad:	pop	rbx
		Instruction group(s): [145] 

0x13bae:	pop	rbp
		Instruction group(s): [145] 

0x13baf:	pop	r12
		Instruction group(s): [145] 

0x13bb1:	ret	
		Instruction group(s): [3, 145] 

0x13bb2:	nop	word ptr [rax + rax]
0x13bb8:	mov	rdi, rbp
0x13bbb:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x13bc0:	mov	rdi, rbx
0x13bc3:	mov	r12, rax
0x13bc6:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x13bcb:	lea	rsi, [r12 + rax]
0x13bcf:	mov	rax, qword ptr [rip + 0x221d42]
0x13bd6:	lea	rdx, [rip + 0x17bd0]
0x13bdd:	mov	r8, rbx
0x13be0:	mov	rcx, rbp
0x13be3:	mov	rdi, qword ptr [rax]
0x13be6:	xor	eax, eax
0x13be8:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x13bed:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x13bf2:	nop	dword ptr [rax]
0x13bf6:	nop	word ptr cs:[rax + rax]
0x13c00:	push	r14
		Instruction group(s): [145] 

0x13c02:	push	r13
		Instruction group(s): [145] 

0x13c04:	mov	edx, 5
0x13c09:	push	r12
		Instruction group(s): [145] 

0x13c0b:	push	rbp
		Instruction group(s): [145] 

0x13c0c:	mov	r12, rsi
0x13c0f:	push	rbx
		Instruction group(s): [145] 

0x13c10:	lea	rsi, [rip + 0x17d61]
0x13c17:	mov	r14, rdi
0x13c1a:	xor	edi, edi
0x13c1c:	sub	rsp, 0x10
0x13c20:	mov	rax, qword ptr fs:[0x28]
0x13c29:	mov	qword ptr [rsp + 8], rax
0x13c2e:	xor	eax, eax
0x13c30:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x13c35:	mov	rdi, qword ptr [r12]
0x13c39:	mov	rsi, rax
0x13c3c:	call	0x13b10
		Instruction group(s): [2, 7, 145] 

0x13c41:	lea	rsi, [rip + 0x17d68]
0x13c48:	mov	edx, 5
0x13c4d:	xor	edi, edi
0x13c4f:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x13c54:	mov	rdi, qword ptr [r12 + 8]
0x13c59:	mov	rsi, rax
0x13c5c:	call	0x13b10
		Instruction group(s): [2, 7, 145] 

0x13c61:	mov	rdi, qword ptr [r12]
0x13c65:	xor	esi, esi
0x13c67:	mov	edx, 0xa
0x13c6c:	call	0x8a30
		Instruction group(s): [2, 7, 145] 

0x13c71:	test	eax, eax
0x13c73:	mov	r13, rax
0x13c76:	jle	0x13d1b
		Instruction group(s): [7, 1] 

0x13c7c:	mov	rdi, qword ptr [r12 + 8]
0x13c81:	xor	esi, esi
0x13c83:	mov	edx, 0xa
0x13c88:	mov	ebp, eax
0x13c8a:	call	0x8a30
		Instruction group(s): [2, 7, 145] 

0x13c8f:	sub	eax, r13d
0x13c92:	lea	ebx, [rax + 1]
		Instruction group(s): [145] 

0x13c95:	test	ebx, ebx
0x13c97:	jle	0x13cc7
		Instruction group(s): [7, 1] 

0x13c99:	mov	rax, qword ptr [r12 + 0x10]
0x13c9e:	mov	r13, rsp
0x13ca1:	mov	qword ptr [rsp], rax
0x13ca5:	jmp	0x13cb5
		Instruction group(s): [7, 1] 

0x13ca7:	nop	word ptr [rax + rax]
0x13cb0:	sub	ebp, 1
0x13cb3:	je	0x13cff
		Instruction group(s): [7, 1] 

0x13cb5:	xor	esi, esi
0x13cb7:	mov	rdi, r13
0x13cba:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x13cbf:	test	rax, rax
0x13cc2:	mov	r12, rax
0x13cc5:	jne	0x13cb0
		Instruction group(s): [7, 1] 

0x13cc7:	mov	rcx, qword ptr [rsp + 8]
0x13ccc:	xor	rcx, qword ptr fs:[0x28]
0x13cd5:	mov	rax, r14
0x13cd8:	jne	0x13d3a
		Instruction group(s): [7, 1] 

0x13cda:	add	rsp, 0x10
0x13cde:	pop	rbx
		Instruction group(s): [145] 

0x13cdf:	pop	rbp
		Instruction group(s): [145] 

0x13ce0:	pop	r12
		Instruction group(s): [145] 

0x13ce2:	pop	r13
		Instruction group(s): [145] 

0x13ce4:	pop	r14
		Instruction group(s): [145] 

0x13ce6:	ret	
		Instruction group(s): [3, 145] 

0x13ce7:	nop	word ptr [rax + rax]
0x13cf0:	xor	esi, esi
0x13cf2:	mov	rdi, r13
0x13cf5:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x13cfa:	test	rax, rax
0x13cfd:	je	0x13d04
		Instruction group(s): [7, 1] 

0x13cff:	sub	ebx, 1
0x13d02:	jne	0x13cf0
		Instruction group(s): [7, 1] 

0x13d04:	mov	rdx, qword ptr [rsp]
0x13d08:	mov	rdi, r14
0x13d0b:	mov	rsi, r12
0x13d0e:	sub	rdx, r12
0x13d11:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x13d16:	mov	r14, rax
0x13d19:	jmp	0x13cc7
		Instruction group(s): [7, 1] 

0x13d1b:	mov	ecx, eax
0x13d1d:	mov	rax, qword ptr [rip + 0x221bf4]
0x13d24:	lea	rdx, [rip + 0x17cbd]
0x13d2b:	mov	esi, 0x14
0x13d30:	mov	rdi, qword ptr [rax]
0x13d33:	xor	eax, eax
0x13d35:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x13d3a:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x13d3f:	nop	
0x13d40:	push	r12
		Instruction group(s): [145] 

0x13d42:	push	rbp
		Instruction group(s): [145] 

0x13d43:	mov	rbp, rsi
0x13d46:	push	rbx
		Instruction group(s): [145] 

0x13d47:	lea	rsi, [rip + 0x17cd2]
0x13d4e:	mov	edx, 5
0x13d53:	mov	r12, rdi
0x13d56:	xor	edi, edi
0x13d58:	sub	rsp, 0x10
0x13d5c:	mov	rax, qword ptr fs:[0x28]
0x13d65:	mov	qword ptr [rsp + 8], rax
0x13d6a:	xor	eax, eax
0x13d6c:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x13d71:	mov	rdi, qword ptr [rbp]
0x13d75:	mov	rsi, rax
0x13d78:	call	0x13b10
		Instruction group(s): [2, 7, 145] 

0x13d7d:	mov	rdi, qword ptr [rbp]
0x13d81:	xor	esi, esi
0x13d83:	mov	edx, 0xa
0x13d88:	call	0x8a30
		Instruction group(s): [2, 7, 145] 

0x13d8d:	test	eax, eax
0x13d8f:	je	0x13de7
		Instruction group(s): [7, 1] 

0x13d91:	mov	ebx, eax
0x13d93:	mov	rax, qword ptr [rbp + 8]
0x13d97:	mov	rbp, rsp
0x13d9a:	mov	qword ptr [rsp], rax
0x13d9e:	jmp	0x13da5
		Instruction group(s): [7, 1] 

0x13da0:	sub	ebx, 1
0x13da3:	je	0x13dd0
		Instruction group(s): [7, 1] 

0x13da5:	xor	esi, esi
0x13da7:	mov	rdi, rbp
0x13daa:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x13daf:	test	rax, rax
0x13db2:	jne	0x13da0
		Instruction group(s): [7, 1] 

0x13db4:	mov	rcx, qword ptr [rsp + 8]
0x13db9:	xor	rcx, qword ptr fs:[0x28]
0x13dc2:	mov	rax, r12
0x13dc5:	jne	0x13e10
		Instruction group(s): [7, 1] 

0x13dc7:	add	rsp, 0x10
0x13dcb:	pop	rbx
		Instruction group(s): [145] 

0x13dcc:	pop	rbp
		Instruction group(s): [145] 

0x13dcd:	pop	r12
		Instruction group(s): [145] 

0x13dcf:	ret	
		Instruction group(s): [3, 145] 

0x13dd0:	mov	rdx, qword ptr [rsp]
0x13dd4:	mov	rdi, r12
0x13dd7:	mov	rsi, rax
0x13dda:	sub	rdx, rax
0x13ddd:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x13de2:	mov	r12, rax
0x13de5:	jmp	0x13db4
		Instruction group(s): [7, 1] 

0x13de7:	lea	rsi, [rip + 0x17c62]
0x13dee:	mov	edx, 5
0x13df3:	xor	edi, edi
0x13df5:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x13dfa:	mov	rdx, rax
0x13dfd:	mov	rax, qword ptr [rip + 0x221b14]
0x13e04:	xor	esi, esi
0x13e06:	mov	rdi, qword ptr [rax]
0x13e09:	xor	eax, eax
0x13e0b:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x13e10:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x13e15:	nop	
0x13e16:	nop	word ptr cs:[rax + rax]
0x13e20:	push	rbp
		Instruction group(s): [145] 

0x13e21:	mov	rax, rsi
0x13e24:	xor	esi, esi
0x13e26:	mov	rbp, rsp
0x13e29:	push	r15
		Instruction group(s): [145] 

0x13e2b:	push	r14
		Instruction group(s): [145] 

0x13e2d:	push	r13
		Instruction group(s): [145] 

0x13e2f:	push	r12
		Instruction group(s): [145] 

0x13e31:	lea	r8, [rbp - 0x48]
0x13e35:	push	rbx
		Instruction group(s): [145] 

0x13e36:	sub	rsp, 0x38
0x13e3a:	mov	qword ptr [rbp - 0x58], rdi
0x13e3e:	mov	rdi, qword ptr [rax]
0x13e41:	mov	rcx, qword ptr fs:[0x28]
0x13e4a:	mov	qword ptr [rbp - 0x38], rcx
0x13e4e:	xor	ecx, ecx
0x13e50:	mov	dword ptr [rbp - 0x5c], edx
0x13e53:	xor	edx, edx
0x13e55:	mov	qword ptr [rbp - 0x48], 0
0x13e5d:	call	0x17700
		Instruction group(s): [2, 7, 145] 

0x13e62:	test	rax, rax
0x13e65:	je	0x14130
		Instruction group(s): [7, 1] 

0x13e6b:	mov	r13, qword ptr [rip + 0x224c7e]
0x13e72:	mov	rbx, rax
0x13e75:	mov	r14, qword ptr [rip + 0x221fc4]
0x13e7c:	lea	r12, [rip + 0x19b4a]
0x13e83:	test	r13, r13
0x13e86:	je	0x13ed1
		Instruction group(s): [7, 1] 

0x13e88:	mov	r15, qword ptr [r13]
0x13e8c:	test	r15, r15
0x13e8f:	je	0x13ed1
		Instruction group(s): [7, 1] 

0x13e91:	mov	rdi, r15
0x13e94:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x13e99:	add	rax, 0x2d
0x13e9d:	mov	r9, qword ptr [r13 + 8]
0x13ea1:	lea	rcx, [rip + 0x1790e]
0x13ea8:	and	rax, 0xfffffffffffffff0
0x13eac:	mov	r8, r15
0x13eaf:	mov	rdx, -1
0x13eb6:	sub	rsp, rax
0x13eb9:	mov	esi, 1
0x13ebe:	xor	eax, eax
0x13ec0:	lea	r12, [rsp + 0xf]
0x13ec5:	and	r12, 0xfffffffffffffff0
0x13ec9:	mov	rdi, r12
0x13ecc:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x13ed1:	call	0x1c850
		Instruction group(s): [2, 7, 145] 

0x13ed6:	mov	rax, qword ptr [rip + 0x222bcb]
0x13edd:	test	rax, rax
0x13ee0:	je	0x13ff8
		Instruction group(s): [7, 1] 

0x13ee6:	mov	r13d, dword ptr [rax + 4]
0x13eea:	test	r13d, r13d
0x13eed:	js	0x13ff8
		Instruction group(s): [7, 1] 

0x13ef3:	lea	rdi, [rbp - 0x40]
0x13ef7:	call	0x8950
		Instruction group(s): [2, 7, 145] 

0x13efc:	test	eax, eax
0x13efe:	js	0x13fc0
		Instruction group(s): [7, 1] 

0x13f04:	call	0x8d00
		Instruction group(s): [2, 7, 145] 

0x13f09:	test	eax, eax
0x13f0b:	js	0x14194
		Instruction group(s): [7, 1] 

0x13f11:	je	0x141b1
		Instruction group(s): [7, 1] 

0x13f17:	mov	rdi, qword ptr [rbx]
0x13f1a:	mov	dword ptr [rip + 0x222120], eax
0x13f20:	mov	dword ptr [rip + 0x225586], 0
0x13f2a:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x13f2f:	mov	rdi, rbx
0x13f32:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x13f37:	mov	edi, dword ptr [rbp - 0x3c]
0x13f3a:	test	edi, edi
0x13f3c:	js	0x13f43
		Instruction group(s): [7, 1] 

0x13f3e:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0x13f43:	mov	edi, 0xc9
0x13f48:	xor	r13d, r13d
0x13f4b:	mov	r14d, 0xc8
0x13f51:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x13f56:	mov	r15, rax
0x13f59:	nop	dword ptr [rax]
0x13f60:	mov	r12d, r14d
0x13f63:	mov	ebx, r13d
0x13f66:	sub	r12d, r13d
0x13f69:	add	rbx, r15
0x13f6c:	jmp	0x13f7e
		Instruction group(s): [7, 1] 

0x13f6e:	nop	
0x13f70:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x13f75:	cmp	dword ptr [rax], 4
0x13f78:	jne	0x14020
		Instruction group(s): [7, 1] 

0x13f7e:	mov	edi, dword ptr [rbp - 0x40]
0x13f81:	mov	rdx, r12
0x13f84:	mov	rsi, rbx
0x13f87:	call	0x8980
		Instruction group(s): [2, 7, 145] 

0x13f8c:	cmp	eax, -1
0x13f8f:	je	0x13f70
		Instruction group(s): [7, 1] 

0x13f91:	test	eax, eax
0x13f93:	jle	0x14020
		Instruction group(s): [7, 1] 

0x13f99:	add	r13d, eax
0x13f9c:	cmp	r13d, r14d
0x13f9f:	jne	0x13f60
		Instruction group(s): [7, 1] 

0x13fa1:	lea	esi, [r13 + 0x201]
		Instruction group(s): [145] 

0x13fa8:	mov	rdi, r15
0x13fab:	lea	r14d, [r13 + 0x200]
		Instruction group(s): [145] 

0x13fb2:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x13fb7:	mov	r15, rax
0x13fba:	jmp	0x13f60
		Instruction group(s): [7, 1] 

0x13fbc:	nop	dword ptr [rax]
0x13fc0:	lea	rsi, [rip + 0x1967e]
0x13fc7:	mov	rdi, r12
0x13fca:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0x13fcf:	mov	rax, qword ptr [rbp - 0x58]
0x13fd3:	mov	rcx, qword ptr [rbp - 0x38]
0x13fd7:	xor	rcx, qword ptr fs:[0x28]
0x13fe0:	jne	0x141ac
		Instruction group(s): [7, 1] 

0x13fe6:	lea	rsp, [rbp - 0x28]
0x13fea:	pop	rbx
		Instruction group(s): [145] 

0x13feb:	pop	r12
		Instruction group(s): [145] 

0x13fed:	pop	r13
		Instruction group(s): [145] 

0x13fef:	pop	r14
		Instruction group(s): [145] 

0x13ff1:	pop	r15
		Instruction group(s): [145] 

0x13ff3:	pop	rbp
		Instruction group(s): [145] 

0x13ff4:	ret	
		Instruction group(s): [3, 145] 

0x13ff5:	nop	dword ptr [rax]
0x13ff8:	mov	rdi, qword ptr [rip + 0x221e81]
0x13fff:	call	0x8a70
		Instruction group(s): [2, 7, 145] 

0x14004:	lea	rdi, [rbp - 0x40]
0x14008:	mov	r13d, eax
0x1400b:	call	0x8950
		Instruction group(s): [2, 7, 145] 

0x14010:	test	eax, eax
0x14012:	jns	0x13f04
		Instruction group(s): [7, 1] 

0x14018:	jmp	0x13fc0
		Instruction group(s): [7, 1] 

0x1401a:	nop	word ptr [rax + rax]
0x14020:	mov	byte ptr [rbx], 0
0x14023:	mov	edi, dword ptr [rbp - 0x40]
0x14026:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0x1402b:	mov	ecx, dword ptr [rip + 0x22547f]
0x14031:	test	ecx, ecx
0x14033:	jne	0x1404e
		Instruction group(s): [7, 1] 

0x14035:	nop	dword ptr [rax]
0x14038:	xor	esi, esi
0x1403a:	mov	edi, 1
0x1403f:	call	0x17ed0
		Instruction group(s): [2, 7, 145] 

0x14044:	mov	edx, dword ptr [rip + 0x225466]
0x1404a:	test	edx, edx
0x1404c:	je	0x14038
		Instruction group(s): [7, 1] 

0x1404e:	mov	r12, qword ptr [rbp - 0x48]
0x14052:	test	r12, r12
0x14055:	je	0x14075
		Instruction group(s): [7, 1] 

0x14057:	test	byte ptr [rip + 0x22239a], 2
0x1405e:	jne	0x14139
		Instruction group(s): [7, 1] 

0x14064:	mov	rdi, r12
0x14067:	call	0x8690
		Instruction group(s): [2, 7, 145] 

0x1406c:	mov	rdi, qword ptr [rbp - 0x48]
0x14070:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x14075:	cmp	dword ptr [rip + 0x225434], -1
0x1407c:	mov	dword ptr [rip + 0x221fba], 0
0x14086:	je	0x14173
		Instruction group(s): [7, 1] 

0x1408c:	mov	byte ptr [rbx], 0
0x1408f:	movzx	eax, byte ptr [r15]
0x14093:	lea	rsi, [r15 - 1]
0x14097:	mov	rdx, r15
0x1409a:	test	al, al
0x1409c:	je	0x140ec
		Instruction group(s): [7, 1] 

0x1409e:	mov	rcx, r15
0x140a1:	jmp	0x140c4
		Instruction group(s): [7, 1] 

0x140a3:	nop	dword ptr [rax + rax]
0x140a8:	cmp	al, 0xa
0x140aa:	lea	rdi, [rdx + 1]
0x140ae:	je	0x140da
		Instruction group(s): [7, 1] 

0x140b0:	mov	byte ptr [rdx], al
0x140b2:	movzx	eax, byte ptr [rcx + 1]
0x140b6:	add	rcx, 1
0x140ba:	mov	rsi, rdx
0x140bd:	mov	rdx, rdi
0x140c0:	test	al, al
0x140c2:	je	0x140ec
		Instruction group(s): [7, 1] 

0x140c4:	cmp	al, 0xd
0x140c6:	jne	0x140a8
		Instruction group(s): [7, 1] 

0x140c8:	cmp	byte ptr [rcx + 1], 0xa
0x140cc:	lea	rdi, [rdx + 1]
0x140d0:	jne	0x140b0
		Instruction group(s): [7, 1] 

0x140d2:	lea	rdi, [rdx + 1]
0x140d6:	add	rcx, 1
0x140da:	mov	byte ptr [rdx], 0x20
0x140dd:	movzx	eax, byte ptr [rcx + 1]
0x140e1:	add	rcx, 1
0x140e5:	mov	rdx, rdi
0x140e8:	test	al, al
0x140ea:	jne	0x140c4
		Instruction group(s): [7, 1] 

0x140ec:	mov	eax, dword ptr [rbp - 0x5c]
0x140ef:	test	eax, eax
0x140f1:	jne	0x140fe
		Instruction group(s): [7, 1] 

0x140f3:	sub	rdx, 2
0x140f7:	cmp	rsi, rdx
0x140fa:	cmovb	rsi, rdx
		Instruction group(s): [137] 

0x140fe:	lea	rdx, [rsi + 1]
0x14102:	mov	rdi, qword ptr [rbp - 0x58]
0x14106:	mov	byte ptr [rsi + 1], 0
0x1410a:	mov	rsi, r15
0x1410d:	sub	rdx, r15
0x14110:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x14115:	mov	rdi, r15
0x14118:	mov	qword ptr [rbp - 0x58], rax
0x1411c:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x14121:	mov	rax, qword ptr [rbp - 0x58]
0x14125:	jmp	0x13fd3
		Instruction group(s): [7, 1] 

0x1412a:	nop	word ptr [rax + rax]
0x14130:	mov	rax, qword ptr [rbp - 0x58]
0x14134:	jmp	0x13fd3
		Instruction group(s): [7, 1] 

0x14139:	lea	rsi, [rip + 0x17950]
0x14140:	mov	edx, 5
0x14145:	xor	edi, edi
0x14147:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1414c:	mov	rdx, r12
0x1414f:	mov	rsi, rax
0x14152:	mov	edi, 1
0x14157:	xor	eax, eax
0x14159:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x1415e:	mov	rdi, qword ptr [rip + 0x221cbb]
0x14165:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x1416a:	mov	r12, qword ptr [rbp - 0x48]
0x1416e:	jmp	0x14064
		Instruction group(s): [7, 1] 

0x14173:	mov	rsi, qword ptr [rip + 0x221d06]
0x1417a:	mov	rdi, r15
0x1417d:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0x14182:	mov	rdi, qword ptr [rip + 0x221cf7]
0x14189:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x1418e:	mov	rax, qword ptr [rbp - 0x58]
0x14192:	jmp	0x14115
		Instruction group(s): [7, 1] 

0x14194:	lea	rsi, [rip + 0x17624]
0x1419b:	mov	rdi, r12
0x1419e:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0x141a3:	mov	rax, qword ptr [rbp - 0x58]
0x141a7:	jmp	0x13fd3
		Instruction group(s): [7, 1] 

0x141ac:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x141b1:	cmp	qword ptr [rip + 0x225327], 0
0x141b9:	je	0x141cc
		Instruction group(s): [7, 1] 

0x141bb:	lea	rsi, [rip + 0x22531e]
0x141c2:	mov	edi, 3
0x141c7:	call	0x8b50
		Instruction group(s): [2, 7, 145] 

0x141cc:	mov	r12d, dword ptr [rbp - 0x3c]
0x141d0:	mov	rdi, qword ptr [rip + 0x221c59]
0x141d7:	call	0x8a70
		Instruction group(s): [2, 7, 145] 

0x141dc:	mov	r8, r14
0x141df:	mov	rcx, rbx
0x141e2:	mov	edx, r13d
0x141e5:	mov	esi, r12d
0x141e8:	mov	edi, eax
0x141ea:	call	0x17630
		Instruction group(s): [2, 7, 145] 

0x141ef:	nop	
0x141f0:	mov	edx, 1
0x141f5:	jmp	0x13e20
		Instruction group(s): [7, 1] 

0x141fa:	nop	word ptr [rax + rax]
0x14200:	push	rbp
		Instruction group(s): [145] 

0x14201:	mov	rbp, rsp
0x14204:	push	r15
		Instruction group(s): [145] 

0x14206:	push	r14
		Instruction group(s): [145] 

0x14208:	push	r13
		Instruction group(s): [145] 

0x1420a:	push	r12
		Instruction group(s): [145] 

0x1420c:	mov	r12d, 0x29
0x14212:	push	rbx
		Instruction group(s): [145] 

0x14213:	sub	rsp, 0x48
0x14217:	mov	rbx, qword ptr [rsi]
0x1421a:	mov	qword ptr [rbp - 0x48], rdi
0x1421e:	mov	rax, qword ptr fs:[0x28]
0x14227:	mov	qword ptr [rbp - 0x38], rax
0x1422b:	xor	eax, eax
0x1422d:	mov	eax, 0x7d
0x14232:	mov	qword ptr [rbp - 0x50], rsi
0x14236:	movzx	r13d, byte ptr [rbx]
0x1423a:	cmp	r13b, 0x28
0x1423e:	cmovne	r12d, eax
		Instruction group(s): [137] 

0x14242:	add	rbx, 1
0x14246:	mov	rdi, rbx
0x14249:	call	0x119b0
		Instruction group(s): [2, 7, 145] 

0x1424e:	test	rax, rax
0x14251:	je	0x14390
		Instruction group(s): [7, 1] 

0x14257:	movzx	edi, byte ptr [rax + 0x10]
0x1425b:	mov	r14, rax
0x1425e:	add	rdi, rbx
0x14261:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x14266:	movzx	ebx, byte ptr [rax]
0x14269:	mov	rcx, rax
0x1426c:	test	bl, bl
0x1426e:	je	0x142aa
		Instruction group(s): [7, 1] 

0x14270:	mov	r15, rax
0x14273:	xor	edx, edx
0x14275:	mov	eax, 1
0x1427a:	mov	rsi, qword ptr [rbp - 0x50]
0x1427e:	jmp	0x14296
		Instruction group(s): [7, 1] 

0x14280:	cmp	r13b, bl
0x14283:	je	0x142f0
		Instruction group(s): [7, 1] 

0x14285:	cmp	r12b, bl
0x14288:	je	0x142f8
		Instruction group(s): [7, 1] 

0x1428a:	add	r15, 1
0x1428e:	movzx	ebx, byte ptr [r15]
0x14292:	test	bl, bl
0x14294:	je	0x142aa
		Instruction group(s): [7, 1] 

0x14296:	cmp	bl, 0x2c
0x14299:	jne	0x14280
		Instruction group(s): [7, 1] 

0x1429b:	add	r15, 1
0x1429f:	movzx	ebx, byte ptr [r15]
0x142a3:	add	eax, 1
0x142a6:	test	bl, bl
0x142a8:	jne	0x14296
		Instruction group(s): [7, 1] 

0x142aa:	lea	rsi, [rip + 0x17807]
0x142b1:	mov	edx, 5
0x142b6:	xor	edi, edi
0x142b8:	mov	r13, qword ptr [r14 + 8]
0x142bc:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x142c1:	mov	rdi, qword ptr [r14 + 8]
0x142c5:	mov	rbx, rax
0x142c8:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x142cd:	mov	rsi, rax
0x142d0:	mov	rax, qword ptr [rip + 0x221641]
0x142d7:	movsx	r8d, r12b
0x142db:	mov	rcx, r13
0x142de:	mov	rdx, rbx
0x142e1:	mov	rdi, qword ptr [rax]
0x142e4:	xor	eax, eax
0x142e6:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x142eb:	nop	dword ptr [rax + rax]
0x142f0:	add	edx, 1
0x142f3:	jmp	0x1428a
		Instruction group(s): [7, 1] 

0x142f5:	nop	dword ptr [rax]
0x142f8:	sub	edx, 1
0x142fb:	cmp	edx, -1
0x142fe:	jne	0x1428a
		Instruction group(s): [7, 1] 

0x14300:	add	eax, 2
0x14303:	mov	qword ptr [rsi], r15
0x14306:	xor	r10d, r10d
0x14309:	cdqe	
0x1430b:	lea	rax, [rax*8 + 0x1e]
0x14313:	and	rax, 0xfffffffffffffff0
0x14317:	sub	rsp, rax
0x1431a:	lea	r9, [rsp + 0xf]
0x1431f:	and	r9, 0xfffffffffffffff0
0x14323:	test	byte ptr [r14 + 0x13], 1
0x14328:	mov	r12, r9
0x1432b:	mov	rdx, r9
0x1432e:	je	0x143b8
		Instruction group(s): [7, 1] 

0x14334:	movzx	eax, byte ptr [r14 + 0x12]
0x14339:	add	r10d, 1
0x1433d:	mov	r11, r15
0x14340:	cmp	eax, r10d
0x14343:	je	0x1447f
		Instruction group(s): [7, 1] 

0x14349:	cmp	r15, rcx
0x1434c:	jbe	0x1447c
		Instruction group(s): [7, 1] 

0x14352:	mov	r11, rcx
0x14355:	xor	esi, esi
0x14357:	jmp	0x14381
		Instruction group(s): [7, 1] 

0x14359:	nop	dword ptr [rax]
0x14360:	cmp	bl, al
0x14362:	je	0x14470
		Instruction group(s): [7, 1] 

0x14368:	test	esi, esi
0x1436a:	jne	0x14374
		Instruction group(s): [7, 1] 

0x1436c:	cmp	al, 0x2c
0x1436e:	je	0x1447f
		Instruction group(s): [7, 1] 

0x14374:	add	r11, 1
0x14378:	cmp	r15, r11
0x1437b:	je	0x1447c
		Instruction group(s): [7, 1] 

0x14381:	movzx	eax, byte ptr [r11]
0x14385:	cmp	r13b, al
0x14388:	jne	0x14360
		Instruction group(s): [7, 1] 

0x1438a:	add	esi, 1
0x1438d:	jmp	0x14374
		Instruction group(s): [7, 1] 

0x1438f:	nop	
0x14390:	xor	eax, eax
0x14392:	mov	rcx, qword ptr [rbp - 0x38]
0x14396:	xor	rcx, qword ptr fs:[0x28]
0x1439f:	jne	0x14551
		Instruction group(s): [7, 1] 

0x143a5:	lea	rsp, [rbp - 0x28]
0x143a9:	pop	rbx
		Instruction group(s): [145] 

0x143aa:	pop	r12
		Instruction group(s): [145] 

0x143ac:	pop	r13
		Instruction group(s): [145] 

0x143ae:	pop	r14
		Instruction group(s): [145] 

0x143b0:	pop	r15
		Instruction group(s): [145] 

0x143b2:	pop	rbp
		Instruction group(s): [145] 

0x143b3:	ret	
		Instruction group(s): [3, 145] 

0x143b4:	nop	dword ptr [rax]
0x143b8:	mov	r11, r15
0x143bb:	mov	qword ptr [rbp - 0x68], r9
0x143bf:	mov	dword ptr [rbp - 0x5c], r10d
0x143c3:	sub	r11, rcx
0x143c6:	mov	qword ptr [rbp - 0x58], rcx
0x143ca:	lea	edi, [r11 + 1]
		Instruction group(s): [145] 

0x143ce:	mov	qword ptr [rbp - 0x50], r11
0x143d2:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x143d7:	mov	r11, qword ptr [rbp - 0x50]
0x143db:	mov	rcx, qword ptr [rbp - 0x58]
0x143df:	mov	rdi, rax
0x143e2:	mov	r15, rax
0x143e5:	movsxd	r11, r11d
		Instruction group(s): [145] 

0x143e8:	mov	rsi, rcx
0x143eb:	mov	rdx, r11
0x143ee:	mov	qword ptr [rbp - 0x50], r11
0x143f2:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x143f7:	mov	r11, qword ptr [rbp - 0x50]
0x143fb:	mov	r9, qword ptr [rbp - 0x68]
0x143ff:	mov	r10d, dword ptr [rbp - 0x5c]
0x14403:	lea	rax, [r15 + r11]
0x14407:	mov	rdx, r9
0x1440a:	cmp	rax, r15
0x1440d:	mov	byte ptr [rax], 0
0x14410:	jae	0x144e2
		Instruction group(s): [7, 1] 

0x14416:	mov	rbx, qword ptr [rbp - 0x48]
0x1441a:	mov	qword ptr [rdx], 0
0x14421:	mov	rcx, r14
0x14424:	mov	rdx, r9
0x14427:	mov	esi, r10d
0x1442a:	mov	qword ptr [rbp - 0x50], r9
0x1442e:	mov	rdi, qword ptr [rbx]
0x14431:	call	0x11880
		Instruction group(s): [2, 7, 145] 

0x14436:	mov	qword ptr [rbx], rax
0x14439:	test	byte ptr [r14 + 0x13], 1
0x1443e:	je	0x144d0
		Instruction group(s): [7, 1] 

0x14444:	mov	r9, qword ptr [rbp - 0x50]
0x14448:	mov	rdi, qword ptr [r9]
0x1444b:	test	rdi, rdi
0x1444e:	je	0x14462
		Instruction group(s): [7, 1] 

0x14450:	add	r12, 8
0x14454:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x14459:	mov	rdi, qword ptr [r12]
0x1445d:	test	rdi, rdi
0x14460:	jne	0x14450
		Instruction group(s): [7, 1] 

0x14462:	mov	eax, 1
0x14467:	jmp	0x14392
		Instruction group(s): [7, 1] 

0x1446c:	nop	dword ptr [rax]
0x14470:	sub	esi, 1
0x14473:	cmp	esi, -1
0x14476:	jne	0x14374
		Instruction group(s): [7, 1] 

0x1447c:	mov	r11, r15
0x1447f:	mov	rsi, r11
0x14482:	mov	rdi, rcx
0x14485:	mov	qword ptr [rbp - 0x68], r9
0x14489:	mov	dword ptr [rbp - 0x5c], r10d
0x1448d:	mov	qword ptr [rbp - 0x58], rdx
0x14491:	mov	qword ptr [rbp - 0x50], r11
0x14495:	call	0xe010
		Instruction group(s): [2, 7, 145] 

0x1449a:	mov	r11, qword ptr [rbp - 0x50]
0x1449e:	mov	rdx, qword ptr [rbp - 0x58]
0x144a2:	mov	r10d, dword ptr [rbp - 0x5c]
0x144a6:	mov	r9, qword ptr [rbp - 0x68]
0x144aa:	lea	rcx, [r11 + 1]
0x144ae:	mov	qword ptr [rdx], rax
0x144b1:	add	rdx, 8
0x144b5:	cmp	r15, rcx
0x144b8:	jae	0x14334
		Instruction group(s): [7, 1] 

0x144be:	xor	r15d, r15d
0x144c1:	jmp	0x14416
		Instruction group(s): [7, 1] 

0x144c6:	nop	word ptr cs:[rax + rax]
0x144d0:	mov	rdi, r15
0x144d3:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x144d8:	mov	eax, 1
0x144dd:	jmp	0x14392
		Instruction group(s): [7, 1] 

0x144e2:	mov	r11, r15
0x144e5:	movzx	esi, byte ptr [r14 + 0x12]
0x144ea:	add	r10d, 1
0x144ee:	mov	rcx, rax
0x144f1:	cmp	esi, r10d
0x144f4:	je	0x14538
		Instruction group(s): [7, 1] 

0x144f6:	cmp	rax, r11
0x144f9:	jbe	0x14535
		Instruction group(s): [7, 1] 

0x144fb:	mov	rcx, r11
0x144fe:	xor	edi, edi
0x14500:	jmp	0x14520
		Instruction group(s): [7, 1] 

0x14502:	nop	word ptr [rax + rax]
0x14508:	cmp	bl, sil
0x1450b:	je	0x1452d
		Instruction group(s): [7, 1] 

0x1450d:	test	edi, edi
0x1450f:	jne	0x14517
		Instruction group(s): [7, 1] 

0x14511:	cmp	sil, 0x2c
0x14515:	je	0x14538
		Instruction group(s): [7, 1] 

0x14517:	add	rcx, 1
0x1451b:	cmp	rax, rcx
0x1451e:	je	0x14535
		Instruction group(s): [7, 1] 

0x14520:	movzx	esi, byte ptr [rcx]
0x14523:	cmp	r13b, sil
0x14526:	jne	0x14508
		Instruction group(s): [7, 1] 

0x14528:	add	edi, 1
0x1452b:	jmp	0x14517
		Instruction group(s): [7, 1] 

0x1452d:	sub	edi, 1
0x14530:	cmp	edi, -1
0x14533:	jne	0x14517
		Instruction group(s): [7, 1] 

0x14535:	mov	rcx, rax
0x14538:	mov	qword ptr [rdx], r11
0x1453b:	lea	r11, [rcx + 1]
0x1453f:	add	rdx, 8
0x14543:	mov	byte ptr [rcx], 0
0x14546:	cmp	rax, r11
0x14549:	jb	0x14416
		Instruction group(s): [7, 1] 

0x1454f:	jmp	0x144e5
		Instruction group(s): [7, 1] 

0x14551:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x14556:	nop	word ptr cs:[rax + rax]
0x14560:	push	r15
		Instruction group(s): [145] 

0x14562:	push	r14
		Instruction group(s): [145] 

0x14564:	mov	r15, rdi
0x14567:	push	r13
		Instruction group(s): [145] 

0x14569:	push	r12
		Instruction group(s): [145] 

0x1456b:	mov	r12, rsi
0x1456e:	push	rbp
		Instruction group(s): [145] 

0x1456f:	push	rbx
		Instruction group(s): [145] 

0x14570:	sub	rsp, 0x18
0x14574:	movzx	eax, byte ptr [rsi]
0x14577:	lea	rsi, [rip + 0x221c22]
0x1457e:	test	byte ptr [rsi + rax*2 + 1], 0x20
0x14583:	je	0x14757
		Instruction group(s): [7, 1] 

0x14589:	mov	rdi, rax
0x1458c:	mov	r14d, edx
0x1458f:	mov	r13d, ecx
0x14592:	mov	ebp, r8d
0x14595:	mov	rax, r12
0x14598:	nop	dword ptr [rax + rax]
0x145a0:	add	rax, 1
0x145a4:	movzx	ecx, byte ptr [rax]
0x145a7:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x145ac:	jne	0x145a0
		Instruction group(s): [7, 1] 

0x145ae:	sub	rax, r12
0x145b1:	mov	rbx, rax
0x145b4:	je	0x14757
		Instruction group(s): [7, 1] 

0x145ba:	cmp	dil, 0x2e
0x145be:	je	0x1471f
		Instruction group(s): [7, 1] 

0x145c4:	test	cl, cl
0x145c6:	setne	r8b
0x145ca:	jne	0x1471f
		Instruction group(s): [7, 1] 

0x145d0:	cmp	rax, 0xff
0x145d6:	ja	0x146db
		Instruction group(s): [7, 1] 

0x145dc:	cmp	r14d, 0xff
0x145e3:	ja	0x14694
		Instruction group(s): [7, 1] 

0x145e9:	cmp	r13d, 0xff
0x145f0:	ja	0x14659
		Instruction group(s): [7, 1] 

0x145f2:	test	r13d, r13d
0x145f5:	je	0x145fc
		Instruction group(s): [7, 1] 

0x145f7:	cmp	r14d, r13d
0x145fa:	ja	0x14659
		Instruction group(s): [7, 1] 

0x145fc:	mov	edi, 0x18
0x14601:	not	ebp
0x14603:	mov	qword ptr [rsp + 8], r9
0x14608:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x1460d:	mov	r8d, ebp
0x14610:	movzx	ebp, byte ptr [rax + 0x13]
0x14614:	mov	r9, qword ptr [rsp + 8]
0x14619:	and	r8d, 1
0x1461d:	mov	qword ptr [rax + 8], r12
0x14621:	mov	byte ptr [rax + 0x10], bl
0x14624:	mov	byte ptr [rax + 0x11], r14b
0x14628:	mov	byte ptr [rax + 0x12], r13b
0x1462c:	lea	rdi, [rip + 0x221a2d]
0x14633:	mov	qword ptr [rax], r9
0x14636:	mov	rsi, rax
0x14639:	and	ebp, 0xfffffffe
0x1463c:	or	ebp, r8d
0x1463f:	or	ebp, 2
0x14642:	mov	byte ptr [rax + 0x13], bpl
0x14646:	add	rsp, 0x18
0x1464a:	pop	rbx
		Instruction group(s): [145] 

0x1464b:	pop	rbp
		Instruction group(s): [145] 

0x1464c:	pop	r12
		Instruction group(s): [145] 

0x1464e:	pop	r13
		Instruction group(s): [145] 

0x14650:	pop	r14
		Instruction group(s): [145] 

0x14652:	pop	r15
		Instruction group(s): [145] 

0x14654:	jmp	0x29750
		Instruction group(s): [7, 1] 

0x14659:	lea	rsi, [rip + 0x174c8]
0x14660:	mov	edx, 5
0x14665:	xor	edi, edi
0x14667:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1466c:	mov	rdi, r12
0x1466f:	mov	rdx, rax
0x14672:	or	rcx, 0xffffffffffffffff
0x14676:	xor	eax, eax
0x14678:	mov	r8, r12
0x1467b:	repne scasb	al, byte ptr [rdi]
0x1467d:	mov	rdi, r15
0x14680:	mov	rax, rcx
0x14683:	mov	ecx, r13d
0x14686:	not	rax
0x14689:	lea	rsi, [rax + 0x13]
0x1468d:	xor	eax, eax
0x1468f:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x14694:	lea	rsi, [rip + 0x17455]
0x1469b:	mov	edx, 5
0x146a0:	xor	edi, edi
0x146a2:	mov	byte ptr [rsp + 8], r8b
0x146a7:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x146ac:	movzx	r8d, byte ptr [rsp + 8]
0x146b2:	mov	rdi, r12
0x146b5:	mov	rdx, rax
0x146b8:	or	rcx, 0xffffffffffffffff
0x146bc:	mov	eax, r8d
0x146bf:	mov	r8, r12
0x146c2:	repne scasb	al, byte ptr [rdi]
0x146c4:	mov	rdi, r15
0x146c7:	xor	eax, eax
0x146c9:	mov	rbx, rcx
0x146cc:	mov	ecx, r14d
0x146cf:	not	rbx
0x146d2:	lea	rsi, [rbx + 0x13]
0x146d6:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x146db:	lea	rsi, [rip + 0x17110]
0x146e2:	mov	edx, 5
0x146e7:	xor	edi, edi
0x146e9:	mov	byte ptr [rsp + 8], r8b
0x146ee:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x146f3:	movzx	r8d, byte ptr [rsp + 8]
0x146f9:	mov	rdi, r12
0x146fc:	mov	rdx, rax
0x146ff:	or	rcx, 0xffffffffffffffff
0x14703:	mov	eax, r8d
0x14706:	repne scasb	al, byte ptr [rdi]
0x14708:	mov	rdi, r15
0x1470b:	xor	eax, eax
0x1470d:	mov	rbx, rcx
0x14710:	mov	rcx, r12
0x14713:	not	rbx
0x14716:	lea	rsi, [rbx - 1]
0x1471a:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x1471f:	lea	rsi, [rip + 0x170b2]
0x14726:	mov	edx, 5
0x1472b:	xor	edi, edi
0x1472d:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x14732:	mov	rdi, r12
0x14735:	mov	rdx, rax
0x14738:	or	rcx, 0xffffffffffffffff
0x1473c:	xor	eax, eax
0x1473e:	repne scasb	al, byte ptr [rdi]
0x14740:	mov	rdi, r15
0x14743:	mov	rax, rcx
0x14746:	mov	rcx, r12
0x14749:	not	rax
0x1474c:	lea	rsi, [rax - 1]
0x14750:	xor	eax, eax
0x14752:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x14757:	lea	rsi, [rip + 0x17066]
0x1475e:	mov	edx, 5
0x14763:	xor	edi, edi
0x14765:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1476a:	xor	esi, esi
0x1476c:	mov	rdx, rax
0x1476f:	mov	rdi, r15
0x14772:	xor	eax, eax
0x14774:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x14779:	nop	dword ptr [rax]
0x14780:	lea	rcx, [rip - 0x3847]
0x14787:	lea	rdx, [rip - 0x38be]
0x1478e:	lea	rdi, [rip + 0x2218cb]
0x14795:	lea	r8, [rip - 0x363c]
0x1479c:	sub	rsp, 8
0x147a0:	mov	esi, 0x48
0x147a5:	call	0x29440
		Instruction group(s): [2, 7, 145] 

0x147aa:	lea	rsi, [rip + 0x22116f]
0x147b1:	lea	rdi, [rip + 0x2218a8]
0x147b8:	mov	ecx, 0x18
0x147bd:	mov	edx, 0x24
0x147c2:	add	rsp, 8
0x147c6:	jmp	0x29790
		Instruction group(s): [7, 1] 

0x147cb:	nop	dword ptr [rax + rax]
0x147d0:	mov	eax, 1
0x147d5:	ret	
		Instruction group(s): [3, 145] 

0x147d6:	nop	word ptr cs:[rax + rax]
0x147e0:	mov	eax, dword ptr [rdi + 0xc]
0x147e3:	sub	eax, dword ptr [rsi + 0xc]
0x147e6:	jne	0x147ee
		Instruction group(s): [7, 1] 

0x147e8:	mov	eax, dword ptr [rdi + 0x10]
0x147eb:	sub	eax, dword ptr [rsi + 0x10]
0x147ee:	ret	
		Instruction group(s): [3, 145] 

0x147f0:	push	rbp
		Instruction group(s): [145] 

0x147f1:	mov	rbp, rsp
0x147f4:	push	r15
		Instruction group(s): [145] 

0x147f6:	push	r14
		Instruction group(s): [145] 

0x147f8:	push	r13
		Instruction group(s): [145] 

0x147fa:	push	r12
		Instruction group(s): [145] 

0x147fc:	mov	r12d, esi
0x147ff:	push	rbx
		Instruction group(s): [145] 

0x14800:	sub	rsp, 0x1128
0x14807:	mov	qword ptr [rbp - 0x1060], rdi
0x1480e:	mov	rdi, qword ptr [rdi]
0x14811:	mov	rbx, qword ptr fs:[0x28]
0x1481a:	mov	qword ptr [rbp - 0x38], rbx
0x1481e:	xor	ebx, ebx
0x14820:	test	esi, esi
0x14822:	mov	dword ptr [rbp - 0x10bc], edx
0x14828:	mov	dword ptr [rbp - 0x1088], ecx
0x1482e:	mov	qword ptr [rbp - 0x1078], rdi
0x14835:	je	0x14848
		Instruction group(s): [7, 1] 

0x14837:	mov	esi, 0x28
0x1483c:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x14841:	mov	qword ptr [rbp - 0x1078], rax
0x14848:	mov	rdi, qword ptr [rbp - 0x1078]
0x1484f:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x14854:	mov	rbx, rax
0x14857:	mov	dword ptr [rbp - 0x1084], eax
0x1485d:	mov	eax, dword ptr [rip + 0x224dbd]
0x14863:	mov	edi, eax
0x14865:	mov	dword ptr [rbp - 0x10e8], eax
0x1486b:	shl	edi, 5
0x1486e:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x14873:	mov	qword ptr [rbp - 0x10f8], rax
0x1487a:	mov	eax, ebx
0x1487c:	add	eax, dword ptr [rip + 0x224d96]
0x14882:	add	rax, 0x1e
0x14886:	shr	rax, 4
0x1488a:	shl	rax, 4
0x1488e:	sub	rsp, rax
0x14891:	lea	rax, [rsp + 0xf]
0x14896:	and	rax, 0xfffffffffffffff0
0x1489a:	mov	qword ptr [rbp - 0x10e0], rax
0x148a1:	mov	eax, dword ptr [rip + 0x224d8d]
0x148a7:	imul	eax, dword ptr [rip + 0x224d6e]
0x148ae:	lea	edi, [rax + rax*2]
		Instruction group(s): [145] 

0x148b1:	shl	edi, 3
0x148b4:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x148b9:	test	r12d, r12d
0x148bc:	mov	qword ptr [rbp - 0x1108], rax
0x148c3:	je	0x15e2b
		Instruction group(s): [7, 1] 

0x148c9:	mov	qword ptr [rbp - 0x10d0], 0
0x148d4:	mov	qword ptr [rbp - 0x10b8], 0
0x148df:	mov	rax, qword ptr [rbp - 0x10d0]
0x148e6:	sub	rax, qword ptr [rbp - 0x1078]
0x148ed:	mov	r15, qword ptr [rip + 0x224d1c]
0x148f4:	add	rax, 1
0x148f8:	test	r15, r15
0x148fb:	mov	qword ptr [rbp - 0x10c8], rax
0x14902:	je	0x1567a
		Instruction group(s): [7, 1] 

0x14908:	mov	eax, dword ptr [rbp - 0x1084]
0x1490e:	mov	dword ptr [rbp - 0x10a0], 0
0x14918:	mov	dword ptr [rbp - 0x109c], 0
0x14922:	add	eax, 1
0x14925:	mov	dword ptr [rbp - 0x1098], eax
0x1492b:	mov	rax, qword ptr [rbp - 0x10b8]
0x14932:	add	rax, 1
0x14936:	mov	qword ptr [rbp - 0x10b0], rax
0x1493d:	nop	dword ptr [rax]
0x14940:	mov	rax, qword ptr [r15 + 0x20]
0x14944:	test	rax, rax
0x14947:	mov	qword ptr [rbp - 0x10a8], rax
0x1494e:	je	0x1495b
		Instruction group(s): [7, 1] 

0x14950:	cmp	qword ptr [r15 + 0x28], 0
0x14955:	je	0x14b64
		Instruction group(s): [7, 1] 

0x1495b:	cmp	byte ptr [r15 + 0x33], 0
0x14960:	jne	0x15110
		Instruction group(s): [7, 1] 

0x14966:	movzx	eax, word ptr [r15 + 0x30]
0x1496b:	test	eax, eax
0x1496d:	je	0x14b64
		Instruction group(s): [7, 1] 

0x14973:	lea	r12d, [rax - 1]
		Instruction group(s): [145] 

0x14977:	mov	rbx, qword ptr [r15 + 8]
0x1497b:	mov	rsi, qword ptr [r15 + 0x18]
0x1497f:	mov	r14, r15
0x14982:	lea	rax, [r12 + 1]
0x14987:	mov	qword ptr [rbp - 0x1058], rbx
0x1498e:	mov	qword ptr [rbp - 0x1090], rsi
0x14995:	xor	ebx, ebx
0x14997:	mov	qword ptr [rbp - 0x1068], rax
0x1499e:	nop	
0x149a0:	mov	rax, qword ptr [rbp - 0x1058]
0x149a7:	mov	dword ptr [rbp - 0x1070], ebx
0x149ad:	mov	r13, qword ptr [rax + rbx*8]
0x149b1:	mov	eax, dword ptr [rbp - 0x1088]
0x149b7:	test	eax, eax
0x149b9:	je	0x149d0
		Instruction group(s): [7, 1] 

0x149bb:	cmp	byte ptr [r13 + 1], 0
0x149c0:	jne	0x149d0
		Instruction group(s): [7, 1] 

0x149c2:	cmp	byte ptr [r14 + 0x32], 0
0x149c7:	je	0x14b50
		Instruction group(s): [7, 1] 

0x149cd:	nop	dword ptr [rax]
0x149d0:	mov	rax, qword ptr [r14 + 0x10]
0x149d4:	mov	eax, dword ptr [rax + rbx*4]
0x149d7:	cmp	eax, dword ptr [rbp - 0x1084]
0x149dd:	ja	0x14b50
		Instruction group(s): [7, 1] 

0x149e3:	mov	rcx, qword ptr [rbp - 0x1090]
0x149ea:	mov	r15d, dword ptr [rbp - 0x1098]
0x149f1:	mov	rsi, qword ptr [rbp - 0x1078]
0x149f8:	mov	r12, qword ptr [rcx + rbx*8]
0x149fc:	sub	r15d, eax
0x149ff:	mov	rdx, r12
0x14a02:	sub	rdx, r13
0x14a05:	sub	rdx, 1
0x14a09:	cmp	qword ptr [rbp - 0x10b8], 0
0x14a11:	lea	r9, [rsi + rdx]
0x14a15:	je	0x15050
		Instruction group(s): [7, 1] 

0x14a1b:	mov	esi, 0x2f
0x14a20:	mov	rdi, r13
0x14a23:	mov	qword ptr [rbp - 0x1080], r9
0x14a2a:	mov	qword ptr [rbp - 0x1070], rdx
0x14a31:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x14a36:	test	rax, rax
0x14a39:	mov	rdx, qword ptr [rbp - 0x1070]
0x14a40:	mov	r9, qword ptr [rbp - 0x1080]
0x14a47:	jne	0x15050
		Instruction group(s): [7, 1] 

0x14a4d:	mov	rcx, qword ptr [rbp - 0x10c8]
0x14a54:	mov	eax, r15d
0x14a57:	cmp	rax, rcx
0x14a5a:	jb	0x14b50
		Instruction group(s): [7, 1] 

0x14a60:	mov	rsi, qword ptr [rbp - 0x10b0]
0x14a67:	add	r9, rcx
0x14a6a:	sub	r15d, ecx
0x14a6d:	cmp	rsi, r9
0x14a70:	jae	0x1558d
		Instruction group(s): [7, 1] 

0x14a76:	mov	rdx, r9
0x14a79:	sub	rdx, qword ptr [rbp - 0x10d0]
0x14a80:	mov	rdi, r13
0x14a83:	mov	qword ptr [rbp - 0x1070], r9
0x14a8a:	sub	rdx, 1
0x14a8e:	call	0x86a0
		Instruction group(s): [2, 7, 145] 

0x14a93:	test	eax, eax
0x14a95:	jne	0x14b50
		Instruction group(s): [7, 1] 

0x14a9b:	mov	r9, qword ptr [rbp - 0x1070]
0x14aa2:	mov	edx, 1
0x14aa7:	movzx	eax, byte ptr [r12]
0x14aac:	mov	esi, r15d
0x14aaf:	cmp	al, byte ptr [r9 + rsi]
0x14ab3:	jne	0x14b50
		Instruction group(s): [7, 1] 

0x14ab9:	test	al, al
0x14abb:	je	0x14ae8
		Instruction group(s): [7, 1] 

0x14abd:	lea	esi, [r15 + 1]
		Instruction group(s): [145] 

0x14ac1:	lea	rdi, [r12 + 1]
0x14ac6:	lea	rax, [r9 + rsi]
0x14aca:	cmp	rax, rdi
0x14acd:	je	0x14ae8
		Instruction group(s): [7, 1] 

0x14acf:	movzx	edi, byte ptr [r12 + 1]
0x14ad5:	cmp	dil, byte ptr [rax]
0x14ad8:	jne	0x14b50
		Instruction group(s): [7, 1] 

0x14ada:	test	dil, dil
0x14add:	jne	0x1583e
		Instruction group(s): [7, 1] 

0x14ae3:	nop	dword ptr [rax + rax]
0x14ae8:	cmp	byte ptr [r13 + 1], 0
0x14aed:	mov	eax, 1
0x14af2:	cmove	eax, dword ptr [rbp - 0x10a0]
		Instruction group(s): [137] 

0x14af9:	cmp	qword ptr [rbp - 0x10a8], 0
0x14b01:	mov	dword ptr [rbp - 0x10a0], eax
0x14b07:	je	0x15703
		Instruction group(s): [7, 1] 

0x14b0d:	mov	eax, dword ptr [rbp - 0x109c]
0x14b13:	mov	rdi, qword ptr [rbp - 0x1108]
0x14b1a:	test	edx, edx
0x14b1c:	mov	rsi, rax
0x14b1f:	lea	rax, [rax + rax*2]
0x14b23:	lea	rax, [rdi + rax*8]
0x14b27:	mov	edi, dword ptr [rbp - 0x10c8]
0x14b2d:	mov	dword ptr [rax + 0x10], esi
0x14b30:	mov	qword ptr [rax], r14
0x14b33:	lea	ecx, [r15 + rdi]
		Instruction group(s): [145] 

0x14b37:	mov	dword ptr [rax + 8], ebx
0x14b3a:	mov	byte ptr [rax + 0x14], dl
0x14b3d:	cmovne	r15d, ecx
		Instruction group(s): [137] 

0x14b41:	add	esi, 1
0x14b44:	mov	dword ptr [rax + 0xc], r15d
0x14b48:	mov	dword ptr [rbp - 0x109c], esi
0x14b4e:	nop	
0x14b50:	add	rbx, 1
0x14b54:	cmp	qword ptr [rbp - 0x1068], rbx
0x14b5b:	jne	0x149a0
		Instruction group(s): [7, 1] 

0x14b61:	mov	r15, r14
0x14b64:	mov	r15, qword ptr [r15]
0x14b67:	test	r15, r15
0x14b6a:	jne	0x14940
		Instruction group(s): [7, 1] 

0x14b70:	mov	eax, dword ptr [rbp - 0x109c]
0x14b76:	xor	ebx, ebx
0x14b78:	test	eax, eax
0x14b7a:	je	0x1567c
		Instruction group(s): [7, 1] 

0x14b80:	cmp	eax, 1
0x14b83:	ja	0x15910
		Instruction group(s): [7, 1] 

0x14b89:	mov	eax, dword ptr [rbp - 0x10a0]
0x14b8f:	test	eax, eax
0x14b91:	jne	0x15866
		Instruction group(s): [7, 1] 

0x14b97:	mov	rax, qword ptr [rbp - 0x10c8]
0x14b9e:	mov	qword ptr [rbp - 0x1130], 0
0x14ba9:	mov	dword ptr [rbp - 0x10fc], 0
0x14bb3:	mov	dword ptr [rbp - 0x10c0], 0
0x14bbd:	mov	qword ptr [rbp - 0x1138], 0
0x14bc8:	add	rax, 0x1f
0x14bcc:	and	rax, 0xfffffffffffffff0
0x14bd0:	mov	qword ptr [rbp - 0x1150], rax
0x14bd7:	mov	rax, qword ptr [rbp - 0x1108]
0x14bde:	mov	dword ptr [rbp - 0x1080], 0
0x14be8:	mov	qword ptr [rbp - 0x1070], rax
0x14bef:	mov	rax, qword ptr [rbp - 0x10f8]
0x14bf6:	mov	qword ptr [rbp - 0x1068], rax
0x14bfd:	lea	rax, [rbp - 0x1040]
0x14c04:	mov	qword ptr [rbp - 0x1128], rax
0x14c0b:	jmp	0x14c39
		Instruction group(s): [7, 1] 

0x14c0d:	nop	dword ptr [rax]
0x14c10:	test	eax, eax
0x14c12:	jne	0x156b8
		Instruction group(s): [7, 1] 

0x14c18:	add	dword ptr [rbp - 0x1080], 1
0x14c1f:	add	qword ptr [rbp - 0x1070], 0x18
0x14c27:	mov	eax, dword ptr [rbp - 0x1080]
0x14c2d:	cmp	dword ptr [rbp - 0x109c], eax
0x14c33:	je	0x1566d
		Instruction group(s): [7, 1] 

0x14c39:	mov	rax, qword ptr [rbp - 0x1070]
0x14c40:	mov	rax, qword ptr [rax]
0x14c43:	test	rax, rax
0x14c46:	mov	qword ptr [rbp - 0x1098], rax
0x14c4d:	je	0x14c18
		Instruction group(s): [7, 1] 

0x14c4f:	mov	r15d, dword ptr [rbp - 0x10c0]
0x14c56:	test	r15d, r15d
0x14c59:	je	0x14c61
		Instruction group(s): [7, 1] 

0x14c5b:	cmp	byte ptr [rax + 0x32], 0
0x14c5f:	jne	0x14c18
		Instruction group(s): [7, 1] 

0x14c61:	mov	rdi, qword ptr [rbp - 0x1070]
0x14c68:	mov	rsi, qword ptr [rbp - 0x1098]
0x14c6f:	mov	qword ptr [rbp - 0x10d8], 0
0x14c7a:	mov	eax, dword ptr [rdi + 8]
0x14c7d:	mov	rcx, qword ptr [rsi + 8]
0x14c81:	mov	rdx, qword ptr [rsi + 0x18]
0x14c85:	mov	rdx, qword ptr [rdx + rax*8]
0x14c89:	sub	rdx, qword ptr [rcx + rax*8]
0x14c8d:	mov	rcx, qword ptr [rbp - 0x1078]
0x14c94:	lea	rbx, [rcx + rdx - 1]
0x14c99:	mov	ecx, dword ptr [rbp - 0x1084]
0x14c9f:	mov	rdx, qword ptr [rsi + 0x10]
0x14ca3:	mov	qword ptr [rbp - 0x10d0], rbx
0x14caa:	add	ecx, 1
0x14cad:	sub	ecx, dword ptr [rdx + rax*4]
0x14cb0:	mov	eax, ecx
0x14cb2:	mov	dword ptr [rbp - 0x10a8], ecx
0x14cb8:	movsx	ecx, byte ptr [rdi + 0x14]
0x14cbc:	test	ecx, ecx
0x14cbe:	mov	dword ptr [rbp - 0x10e4], ecx
0x14cc4:	je	0x14cf6
		Instruction group(s): [7, 1] 

0x14cc6:	mov	rsi, qword ptr [rbp - 0x10c8]
0x14ccd:	sub	eax, esi
0x14ccf:	add	rbx, rsi
0x14cd2:	mov	dword ptr [rbp - 0x10a8], eax
0x14cd8:	mov	rax, qword ptr [rbp - 0x1130]
0x14cdf:	mov	qword ptr [rbp - 0x10d0], rbx
0x14ce6:	test	rax, rax
0x14ce9:	mov	qword ptr [rbp - 0x10d8], rax
0x14cf0:	je	0x15ec0
		Instruction group(s): [7, 1] 

0x14cf6:	mov	eax, dword ptr [rip + 0x2216fc]
0x14cfc:	and	eax, 8
0x14cff:	cmp	dword ptr [rbp - 0x10a8], 0x1000
0x14d09:	ja	0x14c10
		Instruction group(s): [7, 1] 

0x14d0f:	test	eax, eax
0x14d11:	jne	0x15e75
		Instruction group(s): [7, 1] 

0x14d17:	mov	eax, dword ptr [rbp - 0x10a8]
0x14d1d:	mov	r14, qword ptr [rbp - 0x1128]
0x14d24:	mov	ecx, 0x1000
0x14d29:	mov	rsi, qword ptr [rbp - 0x10d0]
0x14d30:	mov	rdi, r14
0x14d33:	mov	rdx, rax
0x14d36:	mov	rbx, rax
0x14d39:	mov	qword ptr [rbp - 0x10f0], rax
0x14d40:	call	0x8b40
		Instruction group(s): [2, 7, 145] 

0x14d45:	mov	rsi, qword ptr [rbp - 0x1098]
0x14d4c:	mov	byte ptr [rbp + rbx - 0x1040], 0
0x14d54:	mov	rax, qword ptr [rsi + 0x20]
0x14d58:	test	rax, rax
0x14d5b:	mov	qword ptr [rbp - 0x1058], rax
0x14d62:	je	0x1565b
		Instruction group(s): [7, 1] 

0x14d68:	mov	rbx, qword ptr [rbp - 0x1060]
0x14d6f:	mov	qword ptr [rbx + 0x28], r14
0x14d73:	mov	byte ptr [rsi + 0x33], 1
0x14d77:	mov	r13, qword ptr [rax + 8]
0x14d7b:	test	r13, r13
0x14d7e:	je	0x15f00
		Instruction group(s): [7, 1] 

0x14d84:	mov	rsi, qword ptr [rbp - 0x10e0]
0x14d8b:	mov	rax, qword ptr [rbp - 0x10c8]
0x14d92:	mov	r14d, dword ptr [rbp - 0x10e4]
0x14d99:	mov	dword ptr [rbp - 0x1090], 0
0x14da3:	mov	dword ptr [rbp - 0x10a0], 0
0x14dad:	mov	dword ptr [rbp - 0x1100], 0
0x14db7:	add	rax, rsi
0x14dba:	test	r14d, r14d
0x14dbd:	cmove	rax, rsi
		Instruction group(s): [137] 

0x14dc1:	mov	qword ptr [rbp - 0x1140], rax
0x14dc8:	mov	rax, qword ptr [rbp - 0x10f8]
0x14dcf:	mov	qword ptr [rbp - 0x1068], rax
0x14dd6:	mov	eax, dword ptr [rbp - 0x1088]
0x14ddc:	add	eax, 1
0x14ddf:	mov	dword ptr [rbp - 0x1144], eax
0x14de5:	lea	rax, [rbp - 0x1048]
0x14dec:	mov	qword ptr [rbp - 0x1118], rax
0x14df3:	lea	rax, [rbp - 0x1050]
0x14dfa:	mov	qword ptr [rbp - 0x1120], rax
0x14e01:	test	r13, r13
0x14e04:	je	0x14ea6
		Instruction group(s): [7, 1] 

0x14e0a:	mov	rax, qword ptr [rbp - 0x1058]
0x14e11:	test	byte ptr [rax + 0x21], 4
0x14e15:	je	0x14ee5
		Instruction group(s): [7, 1] 

0x14e1b:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0x14e20:	mov	rsi, qword ptr [rax]
0x14e23:	jmp	0x14e2b
		Instruction group(s): [7, 1] 

0x14e25:	nop	dword ptr [rax]
0x14e28:	mov	r13, rdx
0x14e2b:	movzx	ecx, byte ptr [r13]
0x14e30:	lea	rdx, [r13 + 1]
0x14e34:	test	byte ptr [rsi + rcx*2], 1
0x14e38:	mov	rax, rcx
0x14e3b:	jne	0x14e28
		Instruction group(s): [7, 1] 

0x14e3d:	test	cl, cl
0x14e3f:	je	0x15752
		Instruction group(s): [7, 1] 

0x14e45:	cmp	cl, 0x20
0x14e48:	mov	rsi, rdx
0x14e4b:	je	0x150a8
		Instruction group(s): [7, 1] 

0x14e51:	jle	0x15088
		Instruction group(s): [7, 1] 

0x14e57:	cmp	cl, 0x24
0x14e5a:	je	0x150b8
		Instruction group(s): [7, 1] 

0x14e60:	cmp	cl, 0x7c
0x14e63:	jne	0x15091
		Instruction group(s): [7, 1] 

0x14e69:	mov	r11d, dword ptr [rbp - 0x1090]
0x14e70:	sub	rsi, r13
0x14e73:	mov	r14, rsi
0x14e76:	test	r11d, r11d
0x14e79:	jne	0x15160
		Instruction group(s): [7, 1] 

0x14e7f:	cmp	esi, 1
0x14e82:	jne	0x15160
		Instruction group(s): [7, 1] 

0x14e88:	cmp	al, 0x7c
0x14e8a:	jne	0x15160
		Instruction group(s): [7, 1] 

0x14e90:	mov	dword ptr [rbp - 0x1090], 1
0x14e9a:	mov	r13, rdx
0x14e9d:	test	r13, r13
0x14ea0:	jne	0x14e0a
		Instruction group(s): [7, 1] 

0x14ea6:	mov	rax, qword ptr [rbp - 0x1058]
0x14ead:	mov	rax, qword ptr [rax]
0x14eb0:	test	rax, rax
0x14eb3:	mov	qword ptr [rbp - 0x1058], rax
0x14eba:	je	0x15641
		Instruction group(s): [7, 1] 

0x14ec0:	mov	r13, qword ptr [rax + 8]
0x14ec4:	test	r13, r13
0x14ec7:	jne	0x14e0a
		Instruction group(s): [7, 1] 

0x14ecd:	mov	rax, qword ptr [rax + 0x18]
0x14ed1:	mov	r13, qword ptr [rax]
0x14ed4:	mov	rax, qword ptr [rbp - 0x1058]
0x14edb:	test	byte ptr [rax + 0x21], 4
0x14edf:	jne	0x14e1b
		Instruction group(s): [7, 1] 

0x14ee5:	mov	esi, 0x25
0x14eea:	mov	rdi, r13
0x14eed:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x14ef2:	test	rax, rax
0x14ef5:	mov	rbx, rax
0x14ef8:	mov	qword ptr [rbp - 0x1048], rax
0x14eff:	je	0x15f0c
		Instruction group(s): [7, 1] 

0x14f05:	mov	r12d, dword ptr [rbp - 0x10e4]
0x14f0c:	test	r12d, r12d
0x14f0f:	jne	0x15e0c
		Instruction group(s): [7, 1] 

0x14f15:	mov	r14, qword ptr [rbp - 0x1140]
0x14f1c:	mov	r12, rbx
0x14f1f:	mov	rsi, r13
0x14f22:	sub	r12, r13
0x14f25:	mov	rdx, r12
0x14f28:	mov	rdi, r14
0x14f2b:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x14f30:	mov	rcx, qword ptr [rbp - 0x10f0]
0x14f37:	add	rax, r12
0x14f3a:	cmp	ecx, 8
0x14f3d:	jae	0x15759
		Instruction group(s): [7, 1] 

0x14f43:	and	ecx, 4
0x14f46:	jne	0x16100
		Instruction group(s): [7, 1] 

0x14f4c:	mov	rdi, qword ptr [rbp - 0x10f0]
0x14f53:	test	edi, edi
0x14f55:	jne	0x158db
		Instruction group(s): [7, 1] 

0x14f5b:	lea	rsi, [rbx + 1]
0x14f5f:	mov	rbx, qword ptr [rbp - 0x10f0]
0x14f66:	lea	rdi, [rax + rbx]
0x14f6a:	call	0x86c0
		Instruction group(s): [2, 7, 145] 

0x14f6f:	mov	rax, qword ptr [rbp - 0x10e0]
0x14f76:	mov	rdi, qword ptr [rbp - 0x1118]
0x14f7d:	xor	ecx, ecx
0x14f7f:	xor	r8d, r8d
0x14f82:	mov	edx, 1
0x14f87:	mov	esi, 0x28
0x14f8c:	mov	qword ptr [rbp - 0x1048], rax
0x14f93:	call	0x1f330
		Instruction group(s): [2, 7, 145] 

0x14f98:	test	rax, rax
0x14f9b:	mov	rcx, rax
0x14f9e:	mov	qword ptr [rbp - 0x10b0], rax
0x14fa5:	mov	qword ptr [rbp - 0x1050], rax
0x14fac:	je	0x15fd0
		Instruction group(s): [7, 1] 

0x14fb2:	mov	rdi, qword ptr [rbp - 0x1058]
0x14fb9:	mov	esi, dword ptr [rbp - 0x10a0]
0x14fbf:	nop	
0x14fc0:	movzx	eax, byte ptr [rcx + 0x21]
0x14fc4:	movzx	edx, byte ptr [rdi + 0x21]
0x14fc8:	add	esi, 1
0x14fcb:	and	edx, 1
0x14fce:	and	eax, 0xfffffffe
0x14fd1:	or	eax, edx
0x14fd3:	mov	byte ptr [rcx + 0x21], al
0x14fd6:	mov	rcx, qword ptr [rcx]
0x14fd9:	test	rcx, rcx
0x14fdc:	jne	0x14fc0
		Instruction group(s): [7, 1] 

0x14fde:	mov	dword ptr [rbp - 0x10a0], esi
0x14fe4:	xor	r13d, r13d
0x14fe7:	mov	ecx, dword ptr [rbp - 0x10a0]
0x14fed:	cmp	dword ptr [rbp - 0x10e8], ecx
0x14ff3:	jae	0x15304
		Instruction group(s): [7, 1] 

0x14ff9:	mov	rbx, qword ptr [rbp - 0x1068]
0x15000:	mov	rdi, qword ptr [rbp - 0x10f8]
0x15007:	mov	eax, ecx
0x15009:	sub	rbx, rdi
0x1500c:	sar	rbx, 5
0x15010:	cmp	dword ptr [rip + 0x22460a], ecx
0x15016:	cmovae	eax, dword ptr [rip + 0x224603]
		Instruction group(s): [137] 

0x1501d:	mov	ebx, ebx
0x1501f:	shl	rbx, 5
0x15023:	mov	esi, eax
0x15025:	mov	dword ptr [rbp - 0x10e8], eax
0x1502b:	mov	dword ptr [rip + 0x2245ef], eax
0x15031:	shl	esi, 5
0x15034:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x15039:	add	rbx, rax
0x1503c:	mov	qword ptr [rbp - 0x10f8], rax
0x15043:	mov	qword ptr [rbp - 0x1068], rbx
0x1504a:	jmp	0x15304
		Instruction group(s): [7, 1] 

0x1504f:	nop	
0x15050:	mov	rsi, qword ptr [rbp - 0x1078]
0x15057:	cmp	rsi, r9
0x1505a:	jae	0x15597
		Instruction group(s): [7, 1] 

0x15060:	mov	rdi, r13
0x15063:	mov	qword ptr [rbp - 0x1070], r9
0x1506a:	call	0x86a0
		Instruction group(s): [2, 7, 145] 

0x1506f:	test	eax, eax
0x15071:	mov	edx, eax
0x15073:	mov	r9, qword ptr [rbp - 0x1070]
0x1507a:	je	0x14aa7
		Instruction group(s): [7, 1] 

0x15080:	jmp	0x14b50
		Instruction group(s): [7, 1] 

0x15085:	nop	dword ptr [rax]
0x15088:	test	cl, cl
0x1508a:	je	0x150a8
		Instruction group(s): [7, 1] 

0x1508c:	cmp	cl, 9
0x1508f:	je	0x150a8
		Instruction group(s): [7, 1] 

0x15091:	movzx	ecx, byte ptr [rsi]
0x15094:	mov	rdi, rsi
0x15097:	cmp	cl, 0x20
0x1509a:	lea	rsi, [rdi + 1]
0x1509e:	jne	0x14e51
		Instruction group(s): [7, 1] 

0x150a4:	nop	dword ptr [rax]
0x150a8:	sub	rsi, 1
0x150ac:	jmp	0x14e69
		Instruction group(s): [7, 1] 

0x150b1:	nop	dword ptr [rax]
0x150b8:	movzx	r8d, byte ptr [rsi]
0x150bc:	lea	rdi, [rsi + 1]
0x150c0:	movzx	ecx, byte ptr [rsi + 1]
0x150c4:	cmp	r8b, 0x24
0x150c8:	je	0x15097
		Instruction group(s): [7, 1] 

0x150ca:	cmp	r8b, 0x28
0x150ce:	je	0x159e9
		Instruction group(s): [7, 1] 

0x150d4:	cmp	r8b, 0x7b
0x150d8:	mov	r9d, 0x7d
0x150de:	jne	0x15097
		Instruction group(s): [7, 1] 

0x150e0:	test	cl, cl
0x150e2:	je	0x160f7
		Instruction group(s): [7, 1] 

0x150e8:	xor	esi, esi
0x150ea:	jmp	0x15104
		Instruction group(s): [7, 1] 

0x150ec:	nop	dword ptr [rax]
0x150f0:	cmp	r9b, cl
0x150f3:	je	0x15628
		Instruction group(s): [7, 1] 

0x150f9:	add	rdi, 1
0x150fd:	movzx	ecx, byte ptr [rdi]
0x15100:	test	cl, cl
0x15102:	je	0x15097
		Instruction group(s): [7, 1] 

0x15104:	cmp	r8b, cl
0x15107:	jne	0x150f0
		Instruction group(s): [7, 1] 

0x15109:	add	esi, 1
0x1510c:	jmp	0x150f9
		Instruction group(s): [7, 1] 

0x1510e:	nop	
0x15110:	test	byte ptr [rip + 0x2212e1], 8
0x15117:	je	0x14b64
		Instruction group(s): [7, 1] 

0x1511d:	mov	edi, dword ptr [rbp - 0x10bc]
0x15123:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x15128:	lea	rsi, [rip + 0x16a49]
0x1512f:	mov	edx, 5
0x15134:	xor	edi, edi
0x15136:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1513b:	mov	edi, 1
0x15140:	mov	rsi, rax
0x15143:	xor	eax, eax
0x15145:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x1514a:	mov	rdi, qword ptr [rip + 0x220ccf]
0x15151:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x15156:	jmp	0x14b64
		Instruction group(s): [7, 1] 

0x1515b:	nop	dword ptr [rax + rax]
0x15160:	mov	ebx, r14d
0x15163:	mov	edx, 0x25
0x15168:	mov	rdi, r13
0x1516b:	lea	r12, [r13 + rbx]
0x15170:	mov	rsi, r12
0x15173:	call	0x1bb20
		Instruction group(s): [2, 7, 145] 

0x15178:	test	rax, rax
0x1517b:	mov	r15, rax
0x1517e:	mov	qword ptr [rbp - 0x1048], rax
0x15185:	je	0x15731
		Instruction group(s): [7, 1] 

0x1518b:	mov	rcx, rax
0x1518e:	mov	rsi, r13
0x15191:	sub	rcx, r13
0x15194:	mov	r13, qword ptr [rbp - 0x10e0]
0x1519b:	mov	ebx, ecx
0x1519d:	mov	qword ptr [rbp - 0x10b0], rcx
0x151a4:	mov	rdx, rbx
0x151a7:	mov	rdi, r13
0x151aa:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x151af:	mov	rcx, qword ptr [rbp - 0x10b0]
0x151b6:	lea	edx, [r14 - 1]
		Instruction group(s): [145] 

0x151ba:	mov	r9d, 0x2a24
0x151c0:	lea	rdi, [r13 + rbx + 2]
0x151c5:	lea	rsi, [r15 + 1]
0x151c9:	mov	word ptr [r13 + rbx], r9w
0x151cf:	xor	ebx, ebx
0x151d1:	sub	edx, ecx
0x151d3:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x151d8:	mov	r10d, dword ptr [rbp - 0x10e4]
0x151df:	lea	eax, [r14 + 1]
		Instruction group(s): [145] 

0x151e3:	mov	byte ptr [r13 + rax], 0
0x151e9:	test	r10d, r10d
0x151ec:	setne	bl
0x151ef:	mov	r8d, dword ptr [rbp - 0x10fc]
0x151f6:	test	r8d, r8d
0x151f9:	je	0x15713
		Instruction group(s): [7, 1] 

0x151ff:	mov	edi, dword ptr [rbp - 0x1100]
0x15205:	test	edi, edi
0x15207:	je	0x157ea
		Instruction group(s): [7, 1] 

0x1520d:	mov	rsi, qword ptr [rbp - 0x1060]
0x15214:	mov	rdi, qword ptr [rbp - 0x10e0]
0x1521b:	call	0xec20
		Instruction group(s): [2, 7, 145] 

0x15220:	mov	r14, qword ptr [rbp - 0x1120]
0x15227:	test	ebx, ebx
0x15229:	mov	ebx, 0
0x1522e:	cmovne	rbx, qword ptr [rbp - 0x10d8]
		Instruction group(s): [137] 

0x15236:	mov	qword ptr [rbp - 0x10b0], r12
0x1523d:	mov	r15d, dword ptr [rbp - 0x10a0]
0x15244:	mov	r13, qword ptr [rbp - 0x1118]
0x1524b:	mov	r12, r14
0x1524e:	mov	r14d, dword ptr [rbp - 0x1090]
0x15255:	mov	qword ptr [rbp - 0x1048], rax
0x1525c:	test	r14d, r14d
0x1525f:	mov	edx, 0x100
0x15264:	jne	0x15445
		Instruction group(s): [7, 1] 

0x1526a:	xor	r8d, r8d
0x1526d:	mov	rcx, rbx
0x15270:	mov	esi, 0x28
0x15275:	mov	rdi, r13
0x15278:	call	0x1f330
		Instruction group(s): [2, 7, 145] 

0x1527d:	test	rax, rax
0x15280:	mov	qword ptr [r12], rax
0x15284:	jne	0x15293
		Instruction group(s): [7, 1] 

0x15286:	jmp	0x152ab
		Instruction group(s): [7, 1] 

0x15288:	nop	dword ptr [rax + rax]
0x15290:	mov	rax, rdx
0x15293:	add	r15d, 1
0x15297:	test	r14d, r14d
0x1529a:	je	0x152a0
		Instruction group(s): [7, 1] 

0x1529c:	or	byte ptr [rax + 0x21], 1
0x152a0:	mov	rdx, qword ptr [rax]
0x152a3:	test	rdx, rdx
0x152a6:	jne	0x15290
		Instruction group(s): [7, 1] 

0x152a8:	mov	r12, rax
0x152ab:	mov	rax, qword ptr [rbp - 0x1048]
0x152b2:	movzx	edx, byte ptr [rax]
0x152b5:	cmp	dl, 0x7c
0x152b8:	je	0x15430
		Instruction group(s): [7, 1] 

0x152be:	test	dl, dl
0x152c0:	jne	0x1525c
		Instruction group(s): [7, 1] 

0x152c2:	mov	r12, qword ptr [rbp - 0x10b0]
0x152c9:	mov	dword ptr [rbp - 0x1090], r14d
0x152d0:	mov	dword ptr [rbp - 0x10a0], r15d
0x152d7:	mov	rax, qword ptr [rbp - 0x1050]
0x152de:	mov	r13, r12
0x152e1:	mov	dword ptr [rbp - 0x10fc], 1
0x152eb:	mov	qword ptr [rbp - 0x10b0], rax
0x152f2:	mov	ecx, dword ptr [rbp - 0x10a0]
0x152f8:	cmp	dword ptr [rbp - 0x10e8], ecx
0x152fe:	jb	0x14ff9
		Instruction group(s): [7, 1] 

0x15304:	mov	r12, qword ptr [rbp - 0x10b0]
0x1530b:	test	r12, r12
0x1530e:	je	0x15418
		Instruction group(s): [7, 1] 

0x15314:	mov	rbx, qword ptr [rbp - 0x1068]
0x1531b:	mov	qword ptr [rbp - 0x1110], r13
0x15322:	nop	word ptr [rax + rax]
0x15328:	mov	rax, qword ptr [rbp - 0x1058]
0x1532f:	mov	qword ptr [rbp - 0x1068], rbx
0x15336:	mov	r14, qword ptr [r12 + 8]
0x1533b:	mov	r15, qword ptr [rax + 8]
0x1533f:	test	r15, r15
0x15342:	je	0x15500
		Instruction group(s): [7, 1] 

0x15348:	mov	rdi, r14
0x1534b:	call	0xd930
		Instruction group(s): [2, 7, 145] 

0x15350:	test	eax, eax
0x15352:	jne	0x15517
		Instruction group(s): [7, 1] 

0x15358:	pxor	xmm0, xmm0
		Instruction group(s): [149] 

0x1535c:	movups	xmmword ptr [rbx + 0x10], xmm0
		Instruction group(s): [148] 

0x15360:	movzx	eax, byte ptr [rbx + 0x18]
0x15364:	movups	xmmword ptr [rbx], xmm0
		Instruction group(s): [148] 

0x15367:	and	eax, 0xfffffffe
0x1536a:	movzx	edx, byte ptr [r12 + 0x21]
0x15370:	and	edx, 1
0x15373:	or	eax, edx
0x15375:	test	byte ptr [rip + 0x22107c], 8
0x1537c:	mov	byte ptr [rbx + 0x18], al
0x1537f:	jne	0x154a8
		Instruction group(s): [7, 1] 

0x15385:	mov	rax, qword ptr [rbp - 0x1060]
0x1538c:	mov	r13, qword ptr [r12 + 8]
0x15391:	mov	r15, qword ptr [rax + 0x18]
0x15395:	test	r15, r15
0x15398:	je	0x15480
		Instruction group(s): [7, 1] 

0x1539e:	lea	r14, [r13 + 1]
0x153a2:	jmp	0x153b4
		Instruction group(s): [7, 1] 

0x153a4:	nop	dword ptr [rax]
0x153a8:	mov	r15, qword ptr [r15]
0x153ab:	test	r15, r15
0x153ae:	je	0x15480
		Instruction group(s): [7, 1] 

0x153b4:	mov	rax, qword ptr [r15 + 8]
0x153b8:	test	rax, rax
0x153bb:	mov	rdx, rax
0x153be:	je	0x15458
		Instruction group(s): [7, 1] 

0x153c4:	cmp	rdx, r13
0x153c7:	je	0x153f0
		Instruction group(s): [7, 1] 

0x153c9:	movzx	edx, byte ptr [rdx]
0x153cc:	cmp	dl, byte ptr [r13]
0x153d0:	jne	0x153a8
		Instruction group(s): [7, 1] 

0x153d2:	test	dl, dl
0x153d4:	je	0x153f0
		Instruction group(s): [7, 1] 

0x153d6:	test	rax, rax
0x153d9:	lea	rdi, [rax + 1]
0x153dd:	je	0x15468
		Instruction group(s): [7, 1] 

0x153e3:	mov	rsi, r14
0x153e6:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x153eb:	test	eax, eax
0x153ed:	jne	0x153a8
		Instruction group(s): [7, 1] 

0x153ef:	nop	
0x153f0:	lea	rax, [rbx + 0x20]
0x153f4:	mov	qword ptr [rbx], r13
0x153f7:	mov	rdx, rax
0x153fa:	mov	r12, qword ptr [r12]
0x153fe:	mov	rbx, rax
0x15401:	test	r12, r12
0x15404:	jne	0x15328
		Instruction group(s): [7, 1] 

0x1540a:	mov	r13, qword ptr [rbp - 0x1110]
0x15411:	mov	qword ptr [rbp - 0x1068], rdx
0x15418:	mov	rdi, qword ptr [rbp - 0x10b0]
0x1541f:	call	0x1bee0
		Instruction group(s): [2, 7, 145] 

0x15424:	jmp	0x14e01
		Instruction group(s): [7, 1] 

0x15429:	nop	dword ptr [rax]
0x15430:	lea	rdx, [rax + 1]
0x15434:	mov	qword ptr [rbp - 0x1048], rdx
0x1543b:	cmp	byte ptr [rax + 1], 0
0x1543f:	je	0x1555d
		Instruction group(s): [7, 1] 

0x15445:	mov	r14d, 1
0x1544b:	mov	edx, 1
0x15450:	jmp	0x1526a
		Instruction group(s): [7, 1] 

0x15455:	nop	dword ptr [rax]
0x15458:	mov	rdx, qword ptr [r15 + 0x18]
0x1545c:	mov	rdx, qword ptr [rdx]
0x1545f:	jmp	0x153c4
		Instruction group(s): [7, 1] 

0x15464:	nop	dword ptr [rax]
0x15468:	mov	rax, qword ptr [r15 + 0x18]
0x1546c:	mov	rdi, qword ptr [rax]
0x1546f:	add	rdi, 1
0x15473:	jmp	0x153e3
		Instruction group(s): [7, 1] 

0x15478:	nop	dword ptr [rax + rax]
0x15480:	mov	rdi, r13
0x15483:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x15488:	test	rax, rax
0x1548b:	je	0x155a0
		Instruction group(s): [7, 1] 

0x15491:	mov	rcx, qword ptr [r12 + 8]
0x15496:	lea	rax, [rbx + 0x20]
0x1549a:	mov	rdx, rax
0x1549d:	mov	qword ptr [rbx], rcx
0x154a0:	jmp	0x153fa
		Instruction group(s): [7, 1] 

0x154a5:	nop	dword ptr [rax]
0x154a8:	mov	edi, dword ptr [rbp - 0x10bc]
0x154ae:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x154b3:	cmp	r14, r15
0x154b6:	mov	r13, qword ptr [r12 + 8]
0x154bb:	mov	edx, 5
0x154c0:	je	0x1557a
		Instruction group(s): [7, 1] 

0x154c6:	lea	rsi, [rip + 0x16783]
0x154cd:	xor	edi, edi
0x154cf:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x154d4:	mov	rsi, rax
0x154d7:	mov	rdx, r13
0x154da:	mov	edi, 1
0x154df:	xor	eax, eax
0x154e1:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x154e6:	mov	rdi, qword ptr [rip + 0x220933]
0x154ed:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x154f2:	jmp	0x15385
		Instruction group(s): [7, 1] 

0x154f7:	nop	word ptr [rax + rax]
0x15500:	mov	rax, qword ptr [rax + 0x18]
0x15504:	mov	rdi, r14
0x15507:	mov	r15, qword ptr [rax]
0x1550a:	call	0xd930
		Instruction group(s): [2, 7, 145] 

0x1550f:	test	eax, eax
0x15511:	je	0x15358
		Instruction group(s): [7, 1] 

0x15517:	test	byte ptr [rip + 0x220eda], 8
0x1551e:	jne	0x1579b
		Instruction group(s): [7, 1] 

0x15524:	mov	rax, qword ptr [rbp - 0x1070]
0x1552b:	mov	rdi, qword ptr [rbp - 0x10b0]
0x15532:	mov	qword ptr [rax], 0
0x15539:	call	0x1bee0
		Instruction group(s): [2, 7, 145] 

0x1553e:	mov	rax, qword ptr [rbp - 0x1060]
0x15545:	mov	qword ptr [rax + 0x28], 0
0x1554d:	mov	rax, qword ptr [rbp - 0x1098]
0x15554:	mov	byte ptr [rax + 0x33], 0
0x15558:	jmp	0x14c18
		Instruction group(s): [7, 1] 

0x1555d:	mov	r12, qword ptr [rbp - 0x10b0]
0x15564:	mov	dword ptr [rbp - 0x10a0], r15d
0x1556b:	mov	dword ptr [rbp - 0x1090], 1
0x15575:	jmp	0x152d7
		Instruction group(s): [7, 1] 

0x1557a:	lea	rsi, [rip + 0x166af]
0x15581:	xor	edi, edi
0x15583:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x15588:	jmp	0x154d4
		Instruction group(s): [7, 1] 

0x1558d:	mov	edx, 1
0x15592:	jmp	0x14aa7
		Instruction group(s): [7, 1] 

0x15597:	xor	edx, edx
0x15599:	jmp	0x14aa7
		Instruction group(s): [7, 1] 

0x1559e:	nop	
0x155a0:	mov	rdi, qword ptr [r12 + 8]
0x155a5:	call	0xd6f0
		Instruction group(s): [2, 7, 145] 

0x155aa:	test	eax, eax
0x155ac:	jne	0x15491
		Instruction group(s): [7, 1] 

0x155b2:	mov	rdi, qword ptr [r12 + 8]
0x155b7:	xor	ecx, ecx
0x155b9:	xor	edx, edx
0x155bb:	xor	esi, esi
0x155bd:	call	0x29190
		Instruction group(s): [2, 7, 145] 

0x155c2:	test	rax, rax
0x155c5:	mov	r15, rax
0x155c8:	je	0x1593d
		Instruction group(s): [7, 1] 

0x155ce:	test	byte ptr [rip + 0x220e23], 8
0x155d5:	je	0x15491
		Instruction group(s): [7, 1] 

0x155db:	mov	edi, dword ptr [rbp - 0x10bc]
0x155e1:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x155e6:	mov	r14, qword ptr [r12 + 8]
0x155eb:	lea	rsi, [rip + 0x16686]
0x155f2:	xor	edi, edi
0x155f4:	mov	edx, 5
0x155f9:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x155fe:	mov	rcx, r15
0x15601:	mov	rsi, rax
0x15604:	mov	rdx, r14
0x15607:	mov	edi, 1
0x1560c:	xor	eax, eax
0x1560e:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x15613:	mov	rdi, qword ptr [rip + 0x220806]
0x1561a:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x1561f:	jmp	0x15491
		Instruction group(s): [7, 1] 

0x15624:	nop	dword ptr [rax]
0x15628:	sub	esi, 1
0x1562b:	cmp	esi, -1
0x1562e:	jne	0x150f9
		Instruction group(s): [7, 1] 

0x15634:	movzx	ecx, byte ptr [rdi + 1]
0x15638:	add	rdi, 1
0x1563c:	jmp	0x15097
		Instruction group(s): [7, 1] 

0x15641:	mov	rax, qword ptr [rbp - 0x1060]
0x15648:	mov	qword ptr [rax + 0x28], 0
0x15650:	mov	rax, qword ptr [rbp - 0x1098]
0x15657:	mov	byte ptr [rax + 0x33], 0
0x1565b:	mov	esi, dword ptr [rbp - 0x1080]
0x15661:	cmp	dword ptr [rbp - 0x109c], esi
0x15667:	ja	0x159f4
		Instruction group(s): [7, 1] 

0x1566d:	cmp	dword ptr [rbp - 0x10c0], 1
0x15674:	jne	0x1582f
		Instruction group(s): [7, 1] 

0x1567a:	xor	ebx, ebx
0x1567c:	mov	rdi, qword ptr [rbp - 0x1108]
0x15683:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x15688:	mov	rdi, qword ptr [rbp - 0x10f8]
0x1568f:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x15694:	mov	rsi, qword ptr [rbp - 0x38]
0x15698:	xor	rsi, qword ptr fs:[0x28]
0x156a1:	mov	eax, ebx
0x156a3:	jne	0x16169
		Instruction group(s): [7, 1] 

0x156a9:	lea	rsp, [rbp - 0x28]
0x156ad:	pop	rbx
		Instruction group(s): [145] 

0x156ae:	pop	r12
		Instruction group(s): [145] 

0x156b0:	pop	r13
		Instruction group(s): [145] 

0x156b2:	pop	r14
		Instruction group(s): [145] 

0x156b4:	pop	r15
		Instruction group(s): [145] 

0x156b6:	pop	rbp
		Instruction group(s): [145] 

0x156b7:	ret	
		Instruction group(s): [3, 145] 

0x156b8:	mov	edi, dword ptr [rbp - 0x10bc]
0x156be:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x156c3:	lea	rsi, [rip + 0x1666a]
0x156ca:	xor	edi, edi
0x156cc:	mov	edx, 5
0x156d1:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x156d6:	mov	rcx, qword ptr [rbp - 0x10d0]
0x156dd:	mov	edx, dword ptr [rbp - 0x10a8]
0x156e3:	mov	rsi, rax
0x156e6:	mov	edi, 1
0x156eb:	xor	eax, eax
0x156ed:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x156f2:	mov	rdi, qword ptr [rip + 0x220727]
0x156f9:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x156fe:	jmp	0x14c18
		Instruction group(s): [7, 1] 

0x15703:	cmp	qword ptr [r14 + 0x28], 0
0x15708:	jne	0x14b0d
		Instruction group(s): [7, 1] 

0x1570e:	jmp	0x14b50
		Instruction group(s): [7, 1] 

0x15713:	mov	r14, qword ptr [rbp - 0x1060]
0x1571a:	xor	esi, esi
0x1571c:	mov	rdi, r14
0x1571f:	call	0x28130
		Instruction group(s): [2, 7, 145] 

0x15724:	mov	rdi, r14
0x15727:	call	0xbdb0
		Instruction group(s): [2, 7, 145] 

0x1572c:	jmp	0x1520d
		Instruction group(s): [7, 1] 

0x15731:	mov	r14, qword ptr [rbp - 0x10e0]
0x15738:	mov	rdx, rbx
0x1573b:	mov	rsi, r13
0x1573e:	mov	rdi, r14
0x15741:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x15746:	mov	byte ptr [r14 + rbx], 0
0x1574b:	xor	ebx, ebx
0x1574d:	jmp	0x151ef
		Instruction group(s): [7, 1] 

0x15752:	xor	edx, edx
0x15754:	jmp	0x14e9a
		Instruction group(s): [7, 1] 

0x15759:	mov	rsi, qword ptr [rbp - 0x1128]
0x15760:	lea	rdi, [rax + 8]
0x15764:	and	rdi, 0xfffffffffffffff8
0x15768:	mov	rdx, qword ptr [rsi]
0x1576b:	mov	qword ptr [rax], rdx
0x1576e:	mov	r10, qword ptr [rbp - 0x10f0]
0x15775:	mov	edx, r10d
0x15778:	mov	rcx, qword ptr [rsi + rdx - 8]
0x1577d:	mov	qword ptr [rax + rdx - 8], rcx
0x15782:	mov	rdx, rax
0x15785:	mov	ecx, r10d
0x15788:	sub	rdx, rdi
0x1578b:	add	ecx, edx
0x1578d:	sub	rsi, rdx
0x15790:	shr	ecx, 3
0x15793:	rep movsq	qword ptr [rdi], qword ptr [rsi]
0x15796:	jmp	0x14f5b
		Instruction group(s): [7, 1] 

0x1579b:	mov	edi, dword ptr [rbp - 0x10bc]
0x157a1:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x157a6:	cmp	r14, r15
0x157a9:	mov	rbx, qword ptr [r12 + 8]
0x157ae:	mov	edx, 5
0x157b3:	je	0x15fd8
		Instruction group(s): [7, 1] 

0x157b9:	lea	rsi, [rip + 0x16438]
0x157c0:	xor	edi, edi
0x157c2:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x157c7:	mov	rsi, rax
0x157ca:	mov	rdx, rbx
0x157cd:	mov	edi, 1
0x157d2:	xor	eax, eax
0x157d4:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x157d9:	mov	rdi, qword ptr [rip + 0x220640]
0x157e0:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x157e5:	jmp	0x15524
		Instruction group(s): [7, 1] 

0x157ea:	mov	rcx, qword ptr [rbp - 0x1060]
0x157f1:	sub	rsp, 8
0x157f5:	lea	rdi, [rip + 0x15952]
0x157fc:	mov	esi, 1
0x15801:	xor	r8d, r8d
0x15804:	mov	rax, qword ptr [rcx + 0x50]
0x15808:	mov	rdx, qword ptr [rcx + 0x28]
0x1580c:	mov	ecx, 6
0x15811:	push	0
		Instruction group(s): [145] 

0x15813:	mov	r9, qword ptr [rax + 8]
0x15817:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x1581c:	mov	eax, dword ptr [rbp - 0x10fc]
0x15822:	pop	rcx
		Instruction group(s): [145] 

0x15823:	pop	rsi
		Instruction group(s): [145] 

0x15824:	mov	dword ptr [rbp - 0x1100], eax
0x1582a:	jmp	0x1520d
		Instruction group(s): [7, 1] 

0x1582f:	mov	dword ptr [rbp - 0x10c0], 1
0x15839:	jmp	0x14bd7
		Instruction group(s): [7, 1] 

0x1583e:	lea	rsi, [r9 + rsi + 1]
0x15843:	lea	rdi, [r12 + 2]
0x15848:	mov	dword ptr [rbp - 0x1070], edx
0x1584e:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x15853:	test	eax, eax
0x15855:	mov	edx, dword ptr [rbp - 0x1070]
0x1585b:	je	0x14ae8
		Instruction group(s): [7, 1] 

0x15861:	jmp	0x14b50
		Instruction group(s): [7, 1] 

0x15866:	mov	eax, dword ptr [rbp - 0x109c]
0x1586c:	mov	rsi, qword ptr [rbp - 0x1108]
0x15873:	sub	eax, 1
0x15876:	mov	rcx, rsi
0x15879:	lea	rax, [rax + rax*2]
0x1587d:	lea	rdi, [rsi + rax*8 + 0x18]
0x15882:	jmp	0x15891
		Instruction group(s): [7, 1] 

0x15884:	add	rcx, 0x18
0x15888:	cmp	rdi, rcx
0x1588b:	je	0x14b97
		Instruction group(s): [7, 1] 

0x15891:	mov	rax, qword ptr [rcx]
0x15894:	cmp	byte ptr [rax + 0x32], 0
0x15898:	jne	0x15884
		Instruction group(s): [7, 1] 

0x1589a:	movzx	edx, word ptr [rax + 0x30]
0x1589e:	test	edx, edx
0x158a0:	je	0x15884
		Instruction group(s): [7, 1] 

0x158a2:	mov	rax, qword ptr [rax + 8]
0x158a6:	mov	rsi, qword ptr [rax]
0x158a9:	cmp	byte ptr [rsi + 1], 0
0x158ad:	je	0x158d2
		Instruction group(s): [7, 1] 

0x158af:	add	rax, 8
0x158b3:	sub	edx, 1
0x158b6:	lea	rsi, [rax + rdx*8]
0x158ba:	nop	word ptr [rax + rax]
0x158c0:	cmp	rsi, rax
0x158c3:	je	0x15884
		Instruction group(s): [7, 1] 

0x158c5:	mov	rdx, qword ptr [rax]
0x158c8:	add	rax, 8
0x158cc:	cmp	byte ptr [rdx + 1], 0
0x158d0:	jne	0x158c0
		Instruction group(s): [7, 1] 

0x158d2:	mov	qword ptr [rcx], 0
0x158d9:	jmp	0x15884
		Instruction group(s): [7, 1] 

0x158db:	mov	rsi, qword ptr [rbp - 0x1128]
0x158e2:	and	edi, 2
0x158e5:	movzx	edx, byte ptr [rsi]
0x158e8:	mov	byte ptr [rax], dl
0x158ea:	je	0x14f5b
		Instruction group(s): [7, 1] 

0x158f0:	mov	edx, dword ptr [rbp - 0x10f0]
0x158f6:	mov	rcx, qword ptr [rbp - 0x1128]
0x158fd:	movzx	ecx, word ptr [rcx + rdx - 2]
0x15902:	mov	word ptr [rax + rdx - 2], cx
0x15907:	jmp	0x14f5b
		Instruction group(s): [7, 1] 

0x1590c:	nop	dword ptr [rax]
0x15910:	mov	rdi, qword ptr [rbp - 0x1108]
0x15917:	lea	rcx, [rip - 0x113e]
0x1591e:	mov	esi, eax
0x15920:	mov	edx, 0x18
0x15925:	call	0x86f0
		Instruction group(s): [2, 7, 145] 

0x1592a:	mov	eax, dword ptr [rbp - 0x10a0]
0x15930:	test	eax, eax
0x15932:	je	0x14b97
		Instruction group(s): [7, 1] 

0x15938:	jmp	0x15866
		Instruction group(s): [7, 1] 

0x1593d:	mov	edx, dword ptr [rbp - 0x10c0]
0x15943:	test	edx, edx
0x15945:	je	0x1613c
		Instruction group(s): [7, 1] 

0x1594b:	test	byte ptr [rip + 0x220aa6], 8
0x15952:	jne	0x160a7
		Instruction group(s): [7, 1] 

0x15958:	cmp	qword ptr [rbp - 0x1138], 0
0x15960:	je	0x1608b
		Instruction group(s): [7, 1] 

0x15966:	mov	rdi, qword ptr [rbp - 0x1138]
0x1596d:	xor	eax, eax
0x1596f:	mov	ecx, 0x11
0x15974:	xor	esi, esi
0x15976:	rep stosq	qword ptr [rdi], rax
0x15979:	mov	rdi, qword ptr [rbp - 0x1138]
0x15980:	mov	ecx, dword ptr [rbp - 0x1144]
0x15986:	mov	rax, qword ptr [r12 + 8]
0x1598b:	mov	qword ptr [rdi], rax
0x1598e:	mov	eax, dword ptr [rbp - 0x10bc]
0x15994:	lea	edx, [rax + 1]
		Instruction group(s): [145] 

0x15997:	call	0x147f0
		Instruction group(s): [2, 7, 145] 

0x1599c:	test	eax, eax
0x1599e:	jne	0x16057
		Instruction group(s): [7, 1] 

0x159a4:	mov	rax, qword ptr [rbp - 0x1138]
0x159ab:	mov	rdi, qword ptr [rax + 0x50]
0x159af:	test	rdi, rdi
0x159b2:	je	0x159b9
		Instruction group(s): [7, 1] 

0x159b4:	call	0x26f00
		Instruction group(s): [2, 7, 145] 

0x159b9:	mov	rax, qword ptr [rbp - 0x1138]
0x159c0:	mov	rdi, qword ptr [rax + 0x58]
0x159c4:	test	rdi, rdi
0x159c7:	je	0x159ce
		Instruction group(s): [7, 1] 

0x159c9:	call	0x26f00
		Instruction group(s): [2, 7, 145] 

0x159ce:	mov	rdi, qword ptr [r12 + 8]
0x159d3:	call	0xd7d0
		Instruction group(s): [2, 7, 145] 

0x159d8:	mov	rdi, qword ptr [rbp - 0x10b0]
0x159df:	call	0x1bee0
		Instruction group(s): [2, 7, 145] 

0x159e4:	jmp	0x1553e
		Instruction group(s): [7, 1] 

0x159e9:	mov	r9d, 0x29
0x159ef:	jmp	0x150e0
		Instruction group(s): [7, 1] 

0x159f4:	mov	eax, dword ptr [rbp - 0x1088]
0x159fa:	test	eax, eax
0x159fc:	je	0x15a21
		Instruction group(s): [7, 1] 

0x159fe:	mov	rax, qword ptr [rbp - 0x1070]
0x15a05:	mov	rcx, qword ptr [rbp - 0x1060]
0x15a0c:	mov	edx, dword ptr [rax + 8]
0x15a0f:	mov	rax, qword ptr [rbp - 0x1098]
0x15a16:	mov	rax, qword ptr [rax + 8]
0x15a1a:	mov	rax, qword ptr [rax + rdx*8]
0x15a1e:	mov	qword ptr [rcx], rax
0x15a21:	mov	rax, qword ptr [rbp - 0x1068]
0x15a28:	cmp	qword ptr [rbp - 0x10f8], rax
0x15a2f:	lea	r12, [rax - 0x20]
0x15a33:	jae	0x15c25
		Instruction group(s): [7, 1] 

0x15a39:	mov	rax, r12
0x15a3c:	sub	rax, qword ptr [rbp - 0x10f8]
0x15a43:	mov	rbx, qword ptr [rbp - 0x1068]
0x15a4a:	mov	r13, qword ptr [rbp - 0x1060]
0x15a51:	mov	r14d, dword ptr [rbp - 0x1088]
0x15a58:	add	rax, 0x1f
0x15a5c:	and	rax, 0xffffffffffffffe0
0x15a60:	sub	r12, rax
0x15a63:	jmp	0x15ac2
		Instruction group(s): [7, 1] 

0x15a65:	nop	dword ptr [rax]
0x15a68:	mov	edi, 0x28
0x15a6d:	call	0x1b8c0
		Instruction group(s): [2, 7, 145] 

0x15a72:	movzx	ecx, byte ptr [rbx - 8]
0x15a76:	mov	r15, rax
0x15a79:	movzx	eax, byte ptr [rax + 0x21]
0x15a7d:	and	ecx, 1
0x15a80:	and	eax, 0xfffffffe
0x15a83:	or	eax, ecx
0x15a85:	mov	byte ptr [r15 + 0x21], al
0x15a89:	mov	rdi, qword ptr [rbx - 0x20]
0x15a8d:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x15a92:	test	r14d, r14d
0x15a95:	je	0x15bbe
		Instruction group(s): [7, 1] 

0x15a9b:	mov	qword ptr [r15 + 8], rax
0x15a9f:	cmp	qword ptr [rbx - 0x10], 0
0x15aa4:	je	0x15bf8
		Instruction group(s): [7, 1] 

0x15aaa:	mov	rax, qword ptr [r13 + 0x18]
0x15aae:	sub	rbx, 0x20
0x15ab2:	cmp	r12, rbx
0x15ab5:	mov	qword ptr [r15], rax
0x15ab8:	mov	qword ptr [r13 + 0x18], r15
0x15abc:	je	0x15c25
		Instruction group(s): [7, 1] 

0x15ac2:	mov	rcx, qword ptr [rbx - 0x10]
0x15ac6:	test	rcx, rcx
0x15ac9:	je	0x15a68
		Instruction group(s): [7, 1] 

0x15acb:	mov	rdi, qword ptr [rcx]
0x15ace:	mov	qword ptr [rbp - 0x1058], rcx
0x15ad5:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x15ada:	test	rax, rax
0x15add:	mov	r15, rax
0x15ae0:	mov	rcx, qword ptr [rbp - 0x1058]
0x15ae7:	je	0x16039
		Instruction group(s): [7, 1] 

0x15aed:	or	byte ptr [rax + 0x84], 0x20
0x15af4:	mov	rax, qword ptr [rcx + 0x18]
0x15af8:	movzx	esi, byte ptr [rcx + 0x86]
0x15aff:	mov	qword ptr [r15 + 0x18], rax
0x15b03:	mov	rax, qword ptr [rcx + 0x20]
0x15b07:	and	esi, 4
0x15b0a:	mov	qword ptr [r15 + 0x20], rax
0x15b0e:	mov	rax, qword ptr [rcx + 0x28]
0x15b12:	mov	qword ptr [r15 + 0x28], rax
0x15b16:	mov	rax, qword ptr [rcx + 0x50]
0x15b1a:	mov	qword ptr [r15 + 0x50], rax
0x15b1e:	mov	rax, qword ptr [rcx + 0x58]
0x15b22:	mov	qword ptr [r15 + 0x58], rax
0x15b26:	movzx	eax, byte ptr [r15 + 0x86]
0x15b2e:	and	eax, 0xfffffffb
0x15b31:	or	eax, esi
0x15b33:	mov	byte ptr [r15 + 0x86], al
0x15b3a:	mov	rax, qword ptr [rcx + 0x30]
0x15b3e:	or	byte ptr [r15 + 0x85], 0x49
0x15b46:	mov	rdi, qword ptr [rbx - 0x18]
0x15b4a:	mov	qword ptr [r15 + 0x30], rax
0x15b4e:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x15b53:	test	rax, rax
0x15b56:	je	0x15b69
		Instruction group(s): [7, 1] 

0x15b58:	test	byte ptr [rax + 0x84], 0x20
0x15b5f:	je	0x15b69
		Instruction group(s): [7, 1] 

0x15b61:	or	byte ptr [r15 + 0x84], 0x20
0x15b69:	mov	r15, qword ptr [r15 + 0x18]
0x15b6d:	test	r15, r15
0x15b70:	je	0x15a68
		Instruction group(s): [7, 1] 

0x15b76:	nop	word ptr cs:[rax + rax]
0x15b80:	mov	rdi, qword ptr [r15 + 8]
0x15b84:	call	0xf1a0
		Instruction group(s): [2, 7, 145] 

0x15b89:	movzx	ecx, byte ptr [r15 + 0x20]
0x15b8e:	movzx	edx, byte ptr [rax + 0x85]
0x15b95:	mov	qword ptr [r15 + 0x18], rax
0x15b99:	mov	qword ptr [r15 + 8], 0
0x15ba1:	or	ecx, edx
0x15ba3:	and	edx, 0xfffffffe
0x15ba6:	and	ecx, 1
0x15ba9:	or	edx, ecx
0x15bab:	mov	byte ptr [rax + 0x85], dl
0x15bb1:	mov	r15, qword ptr [r15]
0x15bb4:	test	r15, r15
0x15bb7:	jne	0x15b80
		Instruction group(s): [7, 1] 

0x15bb9:	jmp	0x15a68
		Instruction group(s): [7, 1] 

0x15bbe:	mov	rdi, rax
0x15bc1:	mov	qword ptr [rbp - 0x1058], rax
0x15bc8:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x15bcd:	test	rax, rax
0x15bd0:	mov	qword ptr [r15 + 0x18], rax
0x15bd4:	mov	rcx, qword ptr [rbp - 0x1058]
0x15bdb:	jne	0x15a9f
		Instruction group(s): [7, 1] 

0x15be1:	mov	rdi, rcx
0x15be4:	call	0xf1a0
		Instruction group(s): [2, 7, 145] 

0x15be9:	mov	qword ptr [r15 + 0x18], rax
0x15bed:	cmp	qword ptr [rbx - 0x10], 0
0x15bf2:	jne	0x15aaa
		Instruction group(s): [7, 1] 

0x15bf8:	mov	rax, qword ptr [rbp - 0x1070]
0x15bff:	mov	rax, qword ptr [rax]
0x15c02:	cmp	byte ptr [rax + 0x32], 0
0x15c06:	je	0x15aaa
		Instruction group(s): [7, 1] 

0x15c0c:	mov	rax, qword ptr [r15 + 0x18]
0x15c10:	test	rax, rax
0x15c13:	je	0x160ed
		Instruction group(s): [7, 1] 

0x15c19:	or	byte ptr [rax + 0x85], 1
0x15c20:	jmp	0x15aaa
		Instruction group(s): [7, 1] 

0x15c25:	mov	rax, qword ptr [rbp - 0x1070]
0x15c2c:	cmp	byte ptr [rax + 0x14], 0
0x15c30:	jne	0x15f20
		Instruction group(s): [7, 1] 

0x15c36:	mov	esi, dword ptr [rbp - 0x10a8]
0x15c3c:	mov	rdi, qword ptr [rbp - 0x10d0]
0x15c43:	call	0x26050
		Instruction group(s): [2, 7, 145] 

0x15c48:	mov	rcx, qword ptr [rbp - 0x1060]
0x15c4f:	mov	qword ptr [rcx + 0x28], rax
0x15c53:	mov	rdi, qword ptr [rbp - 0x1098]
0x15c5a:	mov	rbx, qword ptr [rbp - 0x1060]
0x15c61:	mov	rax, qword ptr [rdi + 0x28]
0x15c65:	or	byte ptr [rbx + 0x85], 8
0x15c6c:	mov	qword ptr [rbx + 0x20], rax
0x15c70:	mov	rax, qword ptr [rbp - 0x1070]
0x15c77:	mov	edx, dword ptr [rax + 8]
0x15c7a:	mov	rax, qword ptr [rdi + 8]
0x15c7e:	mov	rdi, qword ptr [rax + rdx*8]
0x15c82:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x15c87:	test	rax, rax
0x15c8a:	je	0x15c99
		Instruction group(s): [7, 1] 

0x15c8c:	test	byte ptr [rax + 0x84], 0x20
0x15c93:	jne	0x15feb
		Instruction group(s): [7, 1] 

0x15c99:	mov	rax, qword ptr [rbp - 0x1098]
0x15ca0:	cmp	word ptr [rax + 0x30], 1
0x15ca5:	jbe	0x15e02
		Instruction group(s): [7, 1] 

0x15cab:	mov	ebx, dword ptr [rbp - 0x10a8]
0x15cb1:	xor	r13d, r13d
0x15cb4:	mov	r14, qword ptr [rbp - 0x1060]
0x15cbb:	mov	r15, r13
0x15cbe:	add	ebx, 1
0x15cc1:	mov	dword ptr [rbp - 0x1060], ebx
0x15cc7:	mov	rbx, rax
0x15cca:	mov	rax, qword ptr [rbp - 0x1070]
0x15cd1:	mov	ecx, r15d
0x15cd4:	cmp	dword ptr [rax + 8], r15d
0x15cd8:	je	0x15ded
		Instruction group(s): [7, 1] 

0x15cde:	mov	rax, qword ptr [rbx + 0x10]
0x15ce2:	mov	esi, dword ptr [rbp - 0x1060]
0x15ce8:	mov	edi, 0x28
0x15ced:	mov	dword ptr [rbp - 0x1058], r15d
0x15cf4:	add	esi, dword ptr [rax + r15*4]
0x15cf8:	mov	rax, rsi
0x15cfb:	add	rax, 0x1e
0x15cff:	shr	rax, 4
0x15d03:	shl	rax, 4
0x15d07:	sub	rsp, rax
0x15d0a:	call	0x1b8c0
		Instruction group(s): [2, 7, 145] 

0x15d0f:	mov	r13, rax
0x15d12:	mov	rax, qword ptr [rbx + 8]
0x15d16:	lea	r12, [rsp + 0xf]
0x15d1b:	and	r12, 0xfffffffffffffff0
0x15d1f:	mov	rsi, qword ptr [rax + r15*8]
0x15d23:	mov	rax, qword ptr [rbx + 0x18]
0x15d27:	mov	rdi, r12
0x15d2a:	mov	rdx, rsi
0x15d2d:	not	rdx
0x15d30:	add	rdx, qword ptr [rax + r15*8]
0x15d34:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x15d39:	mov	rdx, qword ptr [rbx + 8]
0x15d3d:	mov	rax, qword ptr [rbx + 0x18]
0x15d41:	mov	rsi, qword ptr [r14 + 0x28]
0x15d45:	mov	rax, qword ptr [rax + r15*8]
0x15d49:	sub	rax, qword ptr [rdx + r15*8]
0x15d4d:	mov	rdx, qword ptr [rbp - 0x10f0]
0x15d54:	lea	r11, [r12 + rax - 1]
0x15d59:	mov	rdi, r11
0x15d5c:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x15d61:	mov	r11, rax
0x15d64:	mov	rax, qword ptr [rbx + 0x18]
0x15d68:	mov	rsi, qword ptr [rax + r15*8]
0x15d6c:	mov	rax, qword ptr [rbp - 0x10f0]
0x15d73:	lea	rdi, [r11 + rax]
0x15d77:	mov	rax, qword ptr [rbx + 0x10]
0x15d7b:	mov	rcx, rsi
0x15d7e:	mov	edx, dword ptr [rax + r15*4]
0x15d82:	mov	rax, qword ptr [rbx + 8]
0x15d86:	sub	rcx, qword ptr [rax + r15*8]
0x15d8a:	sub	rdx, rcx
0x15d8d:	add	rdx, 1
0x15d91:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x15d96:	mov	rdi, r12
0x15d99:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x15d9e:	mov	rdi, rax
0x15da1:	mov	qword ptr [r13 + 8], rax
0x15da5:	call	0xf1a0
		Instruction group(s): [2, 7, 145] 

0x15daa:	mov	qword ptr [r13 + 0x18], rax
0x15dae:	mov	rax, qword ptr [r14 + 0x30]
0x15db2:	mov	qword ptr [r13], rax
0x15db6:	mov	rax, qword ptr [rbx + 8]
0x15dba:	mov	rdi, qword ptr [rax + r15*8]
0x15dbe:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x15dc3:	test	rax, rax
0x15dc6:	mov	rdx, qword ptr [r13 + 0x18]
0x15dca:	mov	ecx, dword ptr [rbp - 0x1058]
0x15dd0:	je	0x15de2
		Instruction group(s): [7, 1] 

0x15dd2:	test	byte ptr [rax + 0x84], 0x20
0x15dd9:	je	0x15de2
		Instruction group(s): [7, 1] 

0x15ddb:	or	byte ptr [rdx + 0x84], 0x20
0x15de2:	or	byte ptr [rdx + 0x85], 8
0x15de9:	mov	qword ptr [r14 + 0x30], r13
0x15ded:	movzx	eax, word ptr [rbx + 0x30]
0x15df1:	lea	r9d, [rcx + 1]
		Instruction group(s): [145] 

0x15df5:	add	r15, 1
0x15df9:	cmp	eax, r9d
0x15dfc:	ja	0x15cca
		Instruction group(s): [7, 1] 

0x15e02:	mov	ebx, 1
0x15e07:	jmp	0x1567c
		Instruction group(s): [7, 1] 

0x15e0c:	mov	rdx, qword ptr [rbp - 0x10c8]
0x15e13:	mov	rsi, qword ptr [rbp - 0x1078]
0x15e1a:	mov	rdi, qword ptr [rbp - 0x10e0]
0x15e21:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x15e26:	jmp	0x14f15
		Instruction group(s): [7, 1] 

0x15e2b:	mov	rbx, qword ptr [rbp - 0x1078]
0x15e32:	mov	rdi, rbx
0x15e35:	call	0xae90
		Instruction group(s): [2, 7, 145] 

0x15e3a:	test	eax, eax
0x15e3c:	jne	0x148c9
		Instruction group(s): [7, 1] 

0x15e42:	mov	esi, 0x2f
0x15e47:	mov	rdi, rbx
0x15e4a:	call	0x8890
		Instruction group(s): [2, 7, 145] 

0x15e4f:	test	rax, rax
0x15e52:	mov	qword ptr [rbp - 0x10b8], rax
0x15e59:	je	0x148c9
		Instruction group(s): [7, 1] 

0x15e5f:	cmp	byte ptr [rax + 1], 0
0x15e63:	je	0x148c9
		Instruction group(s): [7, 1] 

0x15e69:	mov	qword ptr [rbp - 0x10d0], rax
0x15e70:	jmp	0x148df
		Instruction group(s): [7, 1] 

0x15e75:	mov	edi, dword ptr [rbp - 0x10bc]
0x15e7b:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x15e80:	lea	rsi, [rip + 0x15d19]
0x15e87:	xor	edi, edi
0x15e89:	mov	edx, 5
0x15e8e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x15e93:	mov	rcx, qword ptr [rbp - 0x10d0]
0x15e9a:	mov	edx, dword ptr [rbp - 0x10a8]
0x15ea0:	mov	rsi, rax
0x15ea3:	mov	edi, 1
0x15ea8:	xor	eax, eax
0x15eaa:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x15eaf:	mov	rdi, qword ptr [rip + 0x21ff6a]
0x15eb6:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x15ebb:	jmp	0x14d17
		Instruction group(s): [7, 1] 

0x15ec0:	sub	rsp, qword ptr [rbp - 0x1150]
0x15ec7:	mov	r14, rsi
0x15eca:	mov	rdx, rsi
0x15ecd:	mov	rsi, qword ptr [rbp - 0x1078]
0x15ed4:	lea	rax, [rsp + 0xf]
0x15ed9:	and	rax, 0xfffffffffffffff0
0x15edd:	mov	rbx, rax
0x15ee0:	mov	rdi, rax
0x15ee3:	mov	qword ptr [rbp - 0x1130], rax
0x15eea:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x15eef:	mov	byte ptr [rbx + r14], 0
0x15ef4:	mov	qword ptr [rbp - 0x10d8], rbx
0x15efb:	jmp	0x14cf6
		Instruction group(s): [7, 1] 

0x15f00:	mov	rax, qword ptr [rax + 0x18]
0x15f04:	mov	r13, qword ptr [rax]
0x15f07:	jmp	0x14d84
		Instruction group(s): [7, 1] 

0x15f0c:	mov	rdi, qword ptr [rbp - 0x10e0]
0x15f13:	mov	rsi, r13
0x15f16:	call	0x86c0
		Instruction group(s): [2, 7, 145] 

0x15f1b:	jmp	0x14f6f
		Instruction group(s): [7, 1] 

0x15f20:	mov	rax, qword ptr [rbp - 0x10b8]
0x15f27:	mov	rsi, qword ptr [rbp - 0x1078]
0x15f2e:	add	rax, 1
0x15f32:	sub	rax, rsi
0x15f35:	add	dword ptr [rbp - 0x10a8], eax
0x15f3b:	mov	ebx, dword ptr [rbp - 0x10a8]
0x15f41:	lea	edx, [rbx + 1]
		Instruction group(s): [145] 

0x15f44:	movsxd	rbx, eax
		Instruction group(s): [145] 

0x15f47:	add	rdx, 0x1e
0x15f4b:	shr	rdx, 4
0x15f4f:	shl	rdx, 4
0x15f53:	sub	rsp, rdx
0x15f56:	mov	rdx, rbx
0x15f59:	lea	r8, [rsp + 0xf]
0x15f5e:	and	r8, 0xfffffffffffffff0
0x15f62:	mov	rdi, r8
0x15f65:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x15f6a:	mov	rcx, qword ptr [rbp - 0x10f0]
0x15f71:	mov	r8, rax
0x15f74:	lea	rax, [rax + rbx]
0x15f78:	cmp	ecx, 8
0x15f7b:	jae	0x15ff7
		Instruction group(s): [7, 1] 

0x15f7d:	and	ecx, 4
0x15f80:	jne	0x1611e
		Instruction group(s): [7, 1] 

0x15f86:	mov	rcx, qword ptr [rbp - 0x10f0]
0x15f8d:	test	ecx, ecx
0x15f8f:	je	0x15fa6
		Instruction group(s): [7, 1] 

0x15f91:	mov	rdi, qword ptr [rbp - 0x10d0]
0x15f98:	and	ecx, 2
0x15f9b:	movzx	edx, byte ptr [rdi]
0x15f9e:	mov	byte ptr [rax], dl
0x15fa0:	jne	0x1614d
		Instruction group(s): [7, 1] 

0x15fa6:	mov	eax, dword ptr [rbp - 0x10a8]
0x15fac:	mov	rdi, r8
0x15faf:	mov	byte ptr [r8 + rax], 0
0x15fb4:	mov	qword ptr [rbp - 0x10f0], rax
0x15fbb:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x15fc0:	mov	rbx, qword ptr [rbp - 0x1060]
0x15fc7:	mov	qword ptr [rbx + 0x28], rax
0x15fcb:	jmp	0x15c53
		Instruction group(s): [7, 1] 

0x15fd0:	xor	r13d, r13d
0x15fd3:	jmp	0x152f2
		Instruction group(s): [7, 1] 

0x15fd8:	lea	rsi, [rip + 0x15be9]
0x15fdf:	xor	edi, edi
0x15fe1:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x15fe6:	jmp	0x157c7
		Instruction group(s): [7, 1] 

0x15feb:	or	byte ptr [rbx + 0x84], 0x20
0x15ff2:	jmp	0x15c99
		Instruction group(s): [7, 1] 

0x15ff7:	mov	rbx, qword ptr [rbp - 0x10d0]
0x15ffe:	lea	rdi, [rax + 8]
0x16002:	and	rdi, 0xfffffffffffffff8
0x16006:	mov	rdx, qword ptr [rbx]
0x16009:	mov	qword ptr [rax], rdx
0x1600c:	mov	r10, qword ptr [rbp - 0x10f0]
0x16013:	mov	edx, r10d
0x16016:	mov	rcx, qword ptr [rbx + rdx - 8]
0x1601b:	mov	qword ptr [rax + rdx - 8], rcx
0x16020:	sub	rax, rdi
0x16023:	sub	rbx, rax
0x16026:	add	eax, r10d
0x16029:	shr	eax, 3
0x1602c:	mov	rsi, rbx
0x1602f:	mov	ecx, eax
0x16031:	rep movsq	qword ptr [rdi], qword ptr [rsi]
0x16034:	jmp	0x15fa6
		Instruction group(s): [7, 1] 

0x16039:	mov	rdi, qword ptr [rcx]
0x1603c:	mov	qword ptr [rbp - 0x1058], rcx
0x16043:	call	0xf1a0
		Instruction group(s): [2, 7, 145] 

0x16048:	mov	rcx, qword ptr [rbp - 0x1058]
0x1604f:	mov	r15, rax
0x16052:	jmp	0x15af4
		Instruction group(s): [7, 1] 

0x16057:	mov	rdi, qword ptr [rbp - 0x1138]
0x1605e:	mov	qword ptr [rbp - 0x1138], 0
0x16069:	mov	rax, qword ptr [rdi]
0x1606c:	mov	qword ptr [rbx + 8], rax
0x16070:	mov	rcx, qword ptr [r12 + 8]
0x16075:	lea	rax, [rbx + 0x20]
0x16079:	mov	rdx, rax
0x1607c:	mov	qword ptr [rdi], rcx
0x1607f:	mov	qword ptr [rbx + 0x10], rdi
0x16083:	mov	qword ptr [rbx], rcx
0x16086:	jmp	0x153fa
		Instruction group(s): [7, 1] 

0x1608b:	sub	rsp, 0xa0
0x16092:	lea	rax, [rsp + 0xf]
0x16097:	and	rax, 0xfffffffffffffff0
0x1609b:	mov	qword ptr [rbp - 0x1138], rax
0x160a2:	jmp	0x15966
		Instruction group(s): [7, 1] 

0x160a7:	mov	edi, dword ptr [rbp - 0x10bc]
0x160ad:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x160b2:	mov	r14, qword ptr [r12 + 8]
0x160b7:	lea	rsi, [rip + 0x15be2]
0x160be:	xor	edi, edi
0x160c0:	mov	edx, 5
0x160c5:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x160ca:	mov	rdx, r14
0x160cd:	mov	rsi, rax
0x160d0:	mov	edi, 1
0x160d5:	xor	eax, eax
0x160d7:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x160dc:	mov	rdi, qword ptr [rip + 0x21fd3d]
0x160e3:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x160e8:	jmp	0x15958
		Instruction group(s): [7, 1] 

0x160ed:	mov	byte ptr [r15 + 0x20], 1
0x160f2:	jmp	0x15aaa
		Instruction group(s): [7, 1] 

0x160f7:	add	rsi, 2
0x160fb:	jmp	0x150a8
		Instruction group(s): [7, 1] 

0x16100:	mov	rcx, qword ptr [rbp - 0x1128]
0x16107:	mov	edx, dword ptr [rcx]
0x16109:	mov	dword ptr [rax], edx
0x1610b:	mov	edx, dword ptr [rbp - 0x10f0]
0x16111:	mov	ecx, dword ptr [rcx + rdx - 4]
0x16115:	mov	dword ptr [rax + rdx - 4], ecx
0x16119:	jmp	0x14f5b
		Instruction group(s): [7, 1] 

0x1611e:	mov	rsi, qword ptr [rbp - 0x10d0]
0x16125:	mov	edx, dword ptr [rsi]
0x16127:	mov	dword ptr [rax], edx
0x16129:	mov	edx, dword ptr [rbp - 0x10f0]
0x1612f:	mov	ecx, dword ptr [rsi + rdx - 4]
0x16133:	mov	dword ptr [rax + rdx - 4], ecx
0x16137:	jmp	0x15fa6
		Instruction group(s): [7, 1] 

0x1613c:	mov	rdi, qword ptr [rbp - 0x10b0]
0x16143:	call	0x1bee0
		Instruction group(s): [2, 7, 145] 

0x16148:	jmp	0x1553e
		Instruction group(s): [7, 1] 

0x1614d:	mov	edx, dword ptr [rbp - 0x10f0]
0x16153:	mov	rsi, qword ptr [rbp - 0x10d0]
0x1615a:	movzx	ecx, word ptr [rsi + rdx - 2]
0x1615f:	mov	word ptr [rax + rdx - 2], cx
0x16164:	jmp	0x15fa6
		Instruction group(s): [7, 1] 

0x16169:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x1616e:	nop	
0x16170:	test	byte ptr [rip + 0x220281], 8
0x16177:	push	r12
		Instruction group(s): [145] 

0x16179:	push	rbp
		Instruction group(s): [145] 

0x1617a:	mov	ebp, esi
0x1617c:	push	rbx
		Instruction group(s): [145] 

0x1617d:	mov	rbx, rdi
0x16180:	jne	0x161e0
		Instruction group(s): [7, 1] 

0x16182:	xor	ecx, ecx
0x16184:	mov	edx, ebp
0x16186:	xor	esi, esi
0x16188:	mov	rdi, rbx
0x1618b:	call	0x147f0
		Instruction group(s): [2, 7, 145] 

0x16190:	test	eax, eax
0x16192:	mov	edx, 1
0x16197:	je	0x161a0
		Instruction group(s): [7, 1] 

0x16199:	pop	rbx
		Instruction group(s): [145] 

0x1619a:	mov	eax, edx
0x1619c:	pop	rbp
		Instruction group(s): [145] 

0x1619d:	pop	r12
		Instruction group(s): [145] 

0x1619f:	ret	
		Instruction group(s): [3, 145] 

0x161a0:	mov	rdi, qword ptr [rbx]
0x161a3:	call	0xae90
		Instruction group(s): [2, 7, 145] 

0x161a8:	test	eax, eax
0x161aa:	mov	edx, eax
0x161ac:	je	0x16199
		Instruction group(s): [7, 1] 

0x161ae:	test	byte ptr [rip + 0x220243], 8
0x161b5:	jne	0x16220
		Instruction group(s): [7, 1] 

0x161b7:	mov	edx, ebp
0x161b9:	xor	ecx, ecx
0x161bb:	mov	rdi, rbx
0x161be:	mov	esi, 1
0x161c3:	call	0x147f0
		Instruction group(s): [2, 7, 145] 

0x161c8:	xor	edx, edx
0x161ca:	test	eax, eax
0x161cc:	setne	dl
0x161cf:	pop	rbx
		Instruction group(s): [145] 

0x161d0:	mov	eax, edx
0x161d2:	pop	rbp
		Instruction group(s): [145] 

0x161d3:	pop	r12
		Instruction group(s): [145] 

0x161d5:	ret	
		Instruction group(s): [3, 145] 

0x161d6:	nop	word ptr cs:[rax + rax]
0x161e0:	mov	edi, esi
0x161e2:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x161e7:	mov	r12, qword ptr [rbx]
0x161ea:	lea	rsi, [rip + 0x15ae7]
0x161f1:	xor	edi, edi
0x161f3:	mov	edx, 5
0x161f8:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x161fd:	mov	rdx, r12
0x16200:	mov	rsi, rax
0x16203:	mov	edi, 1
0x16208:	xor	eax, eax
0x1620a:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x1620f:	mov	rdi, qword ptr [rip + 0x21fc0a]
0x16216:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x1621b:	jmp	0x16182
		Instruction group(s): [7, 1] 

0x16220:	mov	edi, ebp
0x16222:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x16227:	mov	r12, qword ptr [rbx]
0x1622a:	lea	rsi, [rip + 0x15acf]
0x16231:	xor	edi, edi
0x16233:	mov	edx, 5
0x16238:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1623d:	mov	rdx, r12
0x16240:	mov	rsi, rax
0x16243:	mov	edi, 1
0x16248:	xor	eax, eax
0x1624a:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x1624f:	mov	rdi, qword ptr [rip + 0x21fbca]
0x16256:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x1625b:	jmp	0x161b7
		Instruction group(s): [7, 1] 

0x16260:	ret	
		Instruction group(s): [3, 145] 

0x16262:	nop	dword ptr [rax]
0x16266:	nop	word ptr cs:[rax + rax]
0x16270:	mov	edi, dword ptr [rip + 0x21faaa]
0x16276:	add	dword ptr [rip + 0x21feeb], 1
0x1627d:	test	edi, edi
0x1627f:	js	0x162a0
		Instruction group(s): [7, 1] 

0x16281:	sub	rsp, 8
0x16285:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0x1628a:	mov	dword ptr [rip + 0x21fa8c], 0xffffffff
0x16294:	add	rsp, 8
0x16298:	ret	
		Instruction group(s): [3, 145] 

0x16299:	nop	dword ptr [rax]
0x162a0:	ret	
		Instruction group(s): [3, 145] 

0x162a2:	nop	dword ptr [rax]
0x162a6:	nop	word ptr cs:[rax + rax]
0x162b0:	push	rbp
		Instruction group(s): [145] 

0x162b1:	mov	rbp, rsp
0x162b4:	push	r15
		Instruction group(s): [145] 

0x162b6:	push	r14
		Instruction group(s): [145] 

0x162b8:	push	r13
		Instruction group(s): [145] 

0x162ba:	push	r12
		Instruction group(s): [145] 

0x162bc:	mov	r13, rdi
0x162bf:	push	rbx
		Instruction group(s): [145] 

0x162c0:	mov	r14d, edx
0x162c3:	mov	r12d, ecx
0x162c6:	sub	rsp, 0x48
0x162ca:	mov	rbx, qword ptr [rdi + 8]
0x162ce:	mov	dword ptr [rbp - 0x50], r8d
0x162d2:	mov	rax, qword ptr fs:[0x28]
0x162db:	mov	qword ptr [rbp - 0x38], rax
0x162df:	xor	eax, eax
0x162e1:	mov	dword ptr [rbp - 0x64], esi
0x162e4:	mov	rdi, qword ptr [rbx]
0x162e7:	mov	r15, qword ptr [rbx + 0x20]
0x162eb:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x162f0:	mov	r8d, dword ptr [rbp - 0x50]
0x162f4:	mov	qword ptr [rbp - 0x48], rax
0x162f8:	test	r8d, r8d
0x162fb:	je	0x16380
		Instruction group(s): [7, 1] 

0x16301:	mov	edi, dword ptr [rip + 0x2231b9]
0x16307:	test	edi, edi
0x16309:	jne	0x164dc
		Instruction group(s): [7, 1] 

0x1630f:	test	r14d, r14d
0x16312:	je	0x16540
		Instruction group(s): [7, 1] 

0x16318:	test	r12d, r12d
0x1631b:	je	0x16540
		Instruction group(s): [7, 1] 

0x16321:	lea	rsi, [rip + 0x15a60]
0x16328:	mov	edx, 5
0x1632d:	xor	edi, edi
0x1632f:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x16334:	mov	qword ptr [rbp - 0x60], rax
0x16338:	lea	rsi, [rip + 0x15a0d]
0x1633f:	xor	edi, edi
0x16341:	mov	edx, 5
0x16346:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1634b:	mov	r8, qword ptr [r15]
0x1634e:	mov	qword ptr [rbp - 0x58], rax
0x16352:	lea	rax, [rip + 0x17674]
0x16359:	mov	qword ptr [rbp - 0x50], rax
0x1635d:	test	r8, r8
0x16360:	jne	0x163b0
		Instruction group(s): [7, 1] 

0x16362:	lea	rsi, [rip + 0x159ee]
0x16369:	mov	edx, 5
0x1636e:	xor	edi, edi
0x16370:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x16375:	mov	r12, rax
0x16378:	jmp	0x163f5
		Instruction group(s): [7, 1] 

0x1637a:	nop	word ptr [rax + rax]
0x16380:	test	r14d, r14d
0x16383:	je	0x1638e
		Instruction group(s): [7, 1] 

0x16385:	test	r12d, r12d
0x16388:	jne	0x16555
		Instruction group(s): [7, 1] 

0x1638e:	lea	rax, [rip + 0x17638]
0x16395:	mov	qword ptr [rbp - 0x60], rax
0x16399:	mov	qword ptr [rbp - 0x58], rax
0x1639d:	lea	rax, [rip + 0x176ad]
0x163a4:	mov	qword ptr [rbp - 0x50], rax
0x163a8:	mov	r8, qword ptr [r15]
0x163ab:	test	r8, r8
0x163ae:	je	0x16362
		Instruction group(s): [7, 1] 

0x163b0:	mov	rdi, r8
0x163b3:	mov	qword ptr [rbp - 0x70], r8
0x163b7:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x163bc:	add	rax, 0x2b
0x163c0:	mov	r9, qword ptr [r15 + 8]
0x163c4:	mov	r8, qword ptr [rbp - 0x70]
0x163c8:	and	rax, 0xfffffffffffffff0
0x163cc:	lea	rcx, [rip + 0x1598e]
0x163d3:	mov	rdx, -1
0x163da:	sub	rsp, rax
0x163dd:	mov	esi, 1
0x163e2:	xor	eax, eax
0x163e4:	lea	r12, [rsp + 0xf]
0x163e9:	and	r12, 0xfffffffffffffff0
0x163ed:	mov	rdi, r12
0x163f0:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x163f5:	test	byte ptr [r13 + 0x3c], 1
0x163fa:	lea	rax, [r13 + 0x34]
0x163fe:	lea	rsi, [rip + 0x15b73]
0x16405:	mov	edx, 0
0x1640a:	mov	r13, qword ptr [rbx]
0x1640d:	cmove	rax, rdx
		Instruction group(s): [137] 

0x16411:	mov	edx, 5
0x16416:	xor	edi, edi
0x16418:	mov	qword ptr [rip + 0x220689], rax
0x1641f:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x16424:	mov	rdi, r12
0x16427:	mov	r15, rax
0x1642a:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1642f:	mov	rcx, qword ptr [rbp - 0x48]
0x16433:	mov	r8, r13
0x16436:	mov	rdx, r15
0x16439:	xor	edi, edi
0x1643b:	lea	rsi, [rax + rcx]
0x1643f:	mov	rcx, r12
0x16442:	xor	eax, eax
0x16444:	call	0x1ca50
		Instruction group(s): [2, 7, 145] 

0x16449:	mov	r13, qword ptr [rbp - 0x50]
0x1644d:	mov	rdi, r13
0x16450:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x16455:	mov	r15, qword ptr [rbp - 0x58]
0x16459:	mov	r12, rax
0x1645c:	mov	rdi, r15
0x1645f:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x16464:	add	r12, rax
0x16467:	add	r12, qword ptr [rbp - 0x48]
0x1646b:	test	r14d, r14d
0x1646e:	je	0x16500
		Instruction group(s): [7, 1] 

0x16474:	mov	edi, r14d
0x16477:	call	0x8b60
		Instruction group(s): [2, 7, 145] 

0x1647c:	lea	rsi, [rip + 0x158f7]
0x16483:	mov	edx, 5
0x16488:	mov	r13, rax
0x1648b:	xor	edi, edi
0x1648d:	mov	r14, qword ptr [rbx]
0x16490:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x16495:	mov	rdi, r13
0x16498:	mov	r15, rax
0x1649b:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x164a0:	mov	rdi, qword ptr [rbp - 0x60]
0x164a4:	mov	rbx, rax
0x164a7:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x164ac:	mov	rcx, qword ptr [rbp - 0x50]
0x164b0:	lea	rsi, [rbx + rax]
0x164b4:	push	qword ptr [rbp - 0x58]
		Instruction group(s): [145] 

0x164b7:	push	qword ptr [rbp - 0x60]
		Instruction group(s): [145] 

0x164ba:	mov	rdx, r15
0x164bd:	xor	eax, eax
0x164bf:	add	rsi, r12
0x164c2:	mov	r9, r13
0x164c5:	mov	r8, r14
0x164c8:	xor	edi, edi
0x164ca:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x164cf:	pop	rax
		Instruction group(s): [145] 

0x164d0:	pop	rdx
		Instruction group(s): [145] 

0x164d1:	mov	qword ptr [rip + 0x2205cc], 0
0x164dc:	mov	rax, qword ptr [rbp - 0x38]
0x164e0:	xor	rax, qword ptr fs:[0x28]
0x164e9:	jne	0x16550
		Instruction group(s): [7, 1] 

0x164eb:	lea	rsp, [rbp - 0x28]
0x164ef:	pop	rbx
		Instruction group(s): [145] 

0x164f0:	pop	r12
		Instruction group(s): [145] 

0x164f2:	pop	r13
		Instruction group(s): [145] 

0x164f4:	pop	r14
		Instruction group(s): [145] 

0x164f6:	pop	r15
		Instruction group(s): [145] 

0x164f8:	pop	rbp
		Instruction group(s): [145] 

0x164f9:	ret	
		Instruction group(s): [3, 145] 

0x164fa:	nop	word ptr [rax + rax]
0x16500:	lea	rsi, [rip + 0x15861]
0x16507:	mov	rbx, qword ptr [rbx]
0x1650a:	mov	edx, 5
0x1650f:	xor	edi, edi
0x16511:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x16516:	sub	rsp, 8
0x1651a:	mov	r9d, dword ptr [rbp - 0x64]
0x1651e:	lea	rsi, [r12 + 0x14]
0x16523:	push	r15
		Instruction group(s): [145] 

0x16525:	mov	rcx, r13
0x16528:	mov	rdx, rax
0x1652b:	mov	r8, rbx
0x1652e:	xor	edi, edi
0x16530:	xor	eax, eax
0x16532:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x16537:	pop	rcx
		Instruction group(s): [145] 

0x16538:	pop	rsi
		Instruction group(s): [145] 

0x16539:	jmp	0x164d1
		Instruction group(s): [7, 1] 

0x1653b:	nop	dword ptr [rax + rax]
0x16540:	lea	rax, [rip + 0x17486]
0x16547:	mov	qword ptr [rbp - 0x60], rax
0x1654b:	jmp	0x16338
		Instruction group(s): [7, 1] 

0x16550:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x16555:	lea	rsi, [rip + 0x1582c]
0x1655c:	mov	edx, 5
0x16561:	xor	edi, edi
0x16563:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x16568:	mov	qword ptr [rbp - 0x60], rax
0x1656c:	lea	rax, [rip + 0x1745a]
0x16573:	mov	qword ptr [rbp - 0x58], rax
0x16577:	lea	rax, [rip + 0x174d3]
0x1657e:	mov	qword ptr [rbp - 0x50], rax
0x16582:	jmp	0x163a8
		Instruction group(s): [7, 1] 

0x16587:	nop	word ptr [rax + rax]
0x16590:	push	r12
		Instruction group(s): [145] 

0x16592:	push	rbp
		Instruction group(s): [145] 

0x16593:	push	rbx
		Instruction group(s): [145] 

0x16594:	mov	rbx, rdi
0x16597:	add	rdi, 0x34
0x1659b:	sub	rsp, 0x10
0x1659f:	mov	rax, qword ptr fs:[0x28]
0x165a8:	mov	qword ptr [rsp + 8], rax
0x165ad:	xor	eax, eax
0x165af:	call	0x1c710
		Instruction group(s): [2, 7, 145] 

0x165b4:	mov	eax, dword ptr [rip + 0x21fb06]
0x165ba:	test	eax, eax
0x165bc:	je	0x16745
		Instruction group(s): [7, 1] 

0x165c2:	cmp	eax, 1
0x165c5:	mov	edi, dword ptr [rip + 0x21f761]
0x165cb:	jbe	0x16622
		Instruction group(s): [7, 1] 

0x165cd:	test	edi, edi
0x165cf:	js	0x16622
		Instruction group(s): [7, 1] 

0x165d1:	mov	byte ptr [rsp + 7], 0x2b
0x165d6:	lea	rbp, [rsp + 7]
0x165db:	jmp	0x165f4
		Instruction group(s): [7, 1] 

0x165dd:	nop	dword ptr [rax]
0x165e0:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x165e5:	cmp	dword ptr [rax], 4
0x165e8:	jne	0x16774
		Instruction group(s): [7, 1] 

0x165ee:	mov	edi, dword ptr [rip + 0x21f738]
0x165f4:	mov	edx, 1
0x165f9:	mov	rsi, rbp
0x165fc:	call	0x8770
		Instruction group(s): [2, 7, 145] 

0x16601:	cmp	eax, -1
0x16604:	je	0x165e0
		Instruction group(s): [7, 1] 

0x16606:	cmp	eax, 1
0x16609:	jne	0x16774
		Instruction group(s): [7, 1] 

0x1660f:	test	byte ptr [rip + 0x21fde2], 4
0x16616:	jne	0x16700
		Instruction group(s): [7, 1] 

0x1661c:	mov	eax, dword ptr [rip + 0x21fa9e]
0x16622:	sub	eax, 1
0x16625:	mov	dword ptr [rip + 0x21fa95], eax
0x1662b:	mov	eax, dword ptr [rip + 0x21f85f]
0x16631:	test	eax, eax
0x16633:	jne	0x166e0
		Instruction group(s): [7, 1] 

0x16639:	mov	rdi, qword ptr [rbx + 0x20]
0x1663d:	test	rdi, rdi
0x16640:	je	0x16689
		Instruction group(s): [7, 1] 

0x16642:	mov	rax, qword ptr [rbx + 8]
0x16646:	mov	rax, qword ptr [rax + 0x20]
0x1664a:	cmp	word ptr [rax + 0x28], 0
0x1664f:	je	0x16684
		Instruction group(s): [7, 1] 

0x16651:	xor	r12d, r12d
0x16654:	xor	ebp, ebp
0x16656:	nop	word ptr cs:[rax + rax]
0x16660:	mov	rdi, qword ptr [rdi + r12]
0x16664:	add	ebp, 1
0x16667:	add	r12, 8
0x1666b:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x16670:	mov	rax, qword ptr [rbx + 8]
0x16674:	mov	rdi, qword ptr [rbx + 0x20]
0x16678:	mov	rax, qword ptr [rax + 0x20]
0x1667c:	movzx	eax, word ptr [rax + 0x28]
0x16680:	cmp	eax, ebp
0x16682:	ja	0x16660
		Instruction group(s): [7, 1] 

0x16684:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x16689:	mov	rbp, qword ptr [rbx + 0x10]
0x1668d:	test	rbp, rbp
0x16690:	je	0x166be
		Instruction group(s): [7, 1] 

0x16692:	mov	rdi, qword ptr [rbp]
0x16696:	test	rdi, rdi
0x16699:	je	0x166b6
		Instruction group(s): [7, 1] 

0x1669b:	nop	dword ptr [rax + rax]
0x166a0:	add	rbp, 8
0x166a4:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x166a9:	mov	rdi, qword ptr [rbp]
0x166ad:	test	rdi, rdi
0x166b0:	jne	0x166a0
		Instruction group(s): [7, 1] 

0x166b2:	mov	rbp, qword ptr [rbx + 0x10]
0x166b6:	mov	rdi, rbp
0x166b9:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x166be:	mov	rax, qword ptr [rsp + 8]
0x166c3:	xor	rax, qword ptr fs:[0x28]
0x166cc:	jne	0x16740
		Instruction group(s): [7, 1] 

0x166ce:	add	rsp, 0x10
0x166d2:	mov	rdi, rbx
0x166d5:	pop	rbx
		Instruction group(s): [145] 

0x166d6:	pop	rbp
		Instruction group(s): [145] 

0x166d7:	pop	r12
		Instruction group(s): [145] 

0x166d9:	jmp	0x8d70
		Instruction group(s): [7, 1] 

0x166de:	nop	
0x166e0:	mov	rax, qword ptr [rsp + 8]
0x166e5:	xor	rax, qword ptr fs:[0x28]
0x166ee:	jne	0x16740
		Instruction group(s): [7, 1] 

0x166f0:	add	rsp, 0x10
0x166f4:	pop	rbx
		Instruction group(s): [145] 

0x166f5:	pop	rbp
		Instruction group(s): [145] 

0x166f6:	pop	r12
		Instruction group(s): [145] 

0x166f8:	ret	
		Instruction group(s): [3, 145] 

0x166f9:	nop	dword ptr [rax]
0x16700:	mov	rax, qword ptr [rbx + 8]
0x16704:	lea	rsi, [rip + 0x158cd]
0x1670b:	xor	edi, edi
0x1670d:	mov	edx, 5
0x16712:	mov	rbp, qword ptr [rax]
0x16715:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1671a:	mov	rdx, rbx
0x1671d:	mov	rsi, rax
0x16720:	mov	edi, 1
0x16725:	mov	rcx, rbp
0x16728:	xor	eax, eax
0x1672a:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x1672f:	mov	rdi, qword ptr [rip + 0x21f6ea]
0x16736:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x1673b:	jmp	0x1661c
		Instruction group(s): [7, 1] 

0x16740:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x16745:	mov	rax, qword ptr [rbx + 8]
0x16749:	or	rcx, 0xffffffffffffffff
0x1674d:	lea	rdx, [rip + 0x1584c]
0x16754:	mov	r8, qword ptr [rax]
0x16757:	xor	eax, eax
0x16759:	mov	rdi, r8
0x1675c:	repne scasb	al, byte ptr [rdi]
0x1675e:	xor	edi, edi
0x16760:	mov	rax, rcx
0x16763:	mov	rcx, rbx
0x16766:	not	rax
0x16769:	lea	rsi, [rax + 0x13]
0x1676d:	xor	eax, eax
0x1676f:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x16774:	lea	rsi, [rip + 0x1561c]
0x1677b:	xor	edi, edi
0x1677d:	mov	edx, 5
0x16782:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x16787:	mov	rdi, rax
0x1678a:	call	0x1c790
		Instruction group(s): [2, 7, 145] 

0x1678f:	nop	
0x16790:	push	r12
		Instruction group(s): [145] 

0x16792:	push	rbp
		Instruction group(s): [145] 

0x16793:	mov	r12, rdi
0x16796:	push	rbx
		Instruction group(s): [145] 

0x16797:	mov	esi, 0x2f
0x1679c:	call	0x8890
		Instruction group(s): [2, 7, 145] 

0x167a1:	mov	esi, 0x5c
0x167a6:	mov	rbx, rax
0x167a9:	mov	rdi, r12
0x167ac:	call	0x8890
		Instruction group(s): [2, 7, 145] 

0x167b1:	test	rbx, rbx
0x167b4:	mov	rbp, rax
0x167b7:	je	0x16830
		Instruction group(s): [7, 1] 

0x167b9:	test	rax, rax
0x167bc:	je	0x16830
		Instruction group(s): [7, 1] 

0x167be:	cmp	rax, rbx
0x167c1:	cmovb	rbp, rbx
		Instruction group(s): [137] 

0x167c5:	movzx	eax, byte ptr [rbp]
0x167c9:	cmp	al, 0x2f
0x167cb:	je	0x16820
		Instruction group(s): [7, 1] 

0x167cd:	cmp	al, 0x5c
0x167cf:	je	0x16820
		Instruction group(s): [7, 1] 

0x167d1:	mov	rsi, qword ptr [rip + 0x21f4e8]
0x167d8:	test	rsi, rsi
0x167db:	je	0x16818
		Instruction group(s): [7, 1] 

0x167dd:	lea	rbx, [rip + 0x21f4dc]
0x167e4:	jmp	0x167fc
		Instruction group(s): [7, 1] 

0x167e6:	nop	word ptr cs:[rax + rax]
0x167f0:	add	rbx, 8
0x167f4:	mov	rsi, qword ptr [rbx]
0x167f7:	test	rsi, rsi
0x167fa:	je	0x16818
		Instruction group(s): [7, 1] 

0x167fc:	mov	rdi, rbp
0x167ff:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x16804:	test	eax, eax
0x16806:	jne	0x167f0
		Instruction group(s): [7, 1] 

0x16808:	pop	rbx
		Instruction group(s): [145] 

0x16809:	mov	eax, 1
0x1680e:	pop	rbp
		Instruction group(s): [145] 

0x1680f:	pop	r12
		Instruction group(s): [145] 

0x16811:	ret	
		Instruction group(s): [3, 145] 

0x16812:	nop	word ptr [rax + rax]
0x16818:	pop	rbx
		Instruction group(s): [145] 

0x16819:	xor	eax, eax
0x1681b:	pop	rbp
		Instruction group(s): [145] 

0x1681c:	pop	r12
		Instruction group(s): [145] 

0x1681e:	ret	
		Instruction group(s): [3, 145] 

0x1681f:	nop	
0x16820:	add	rbp, 1
0x16824:	jmp	0x167d1
		Instruction group(s): [7, 1] 

0x16826:	nop	word ptr cs:[rax + rax]
0x16830:	test	rbp, rbp
0x16833:	jne	0x167c5
		Instruction group(s): [7, 1] 

0x16835:	test	rbx, rbx
0x16838:	mov	rbp, r12
0x1683b:	cmovne	rbp, rbx
		Instruction group(s): [137] 

0x1683f:	jmp	0x167c5
		Instruction group(s): [7, 1] 

0x16841:	nop	dword ptr [rax + rax]
0x16846:	nop	word ptr cs:[rax + rax]
0x16850:	push	r15
		Instruction group(s): [145] 

0x16852:	push	r14
		Instruction group(s): [145] 

0x16854:	push	r13
		Instruction group(s): [145] 

0x16856:	push	r12
		Instruction group(s): [145] 

0x16858:	mov	r13, rdx
0x1685b:	push	rbp
		Instruction group(s): [145] 

0x1685c:	push	rbx
		Instruction group(s): [145] 

0x1685d:	mov	rbx, rdi
0x16860:	mov	rbp, r8
0x16863:	sub	rsp, 0x78
0x16867:	mov	rdi, qword ptr fs:[0x28]
0x16870:	mov	qword ptr [rsp + 0x68], rdi
0x16875:	xor	edi, edi
0x16877:	test	rsi, rsi
0x1687a:	mov	qword ptr [rsp + 0x10], rsi
0x1687f:	mov	qword ptr [rsp], rcx
0x16883:	mov	dword ptr [rsp + 0x2c], r9d
0x16888:	je	0x16891
		Instruction group(s): [7, 1] 

0x1688a:	mov	qword ptr [rsi], 0
0x16891:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0x16896:	mov	r15, rax
0x16899:	mov	rcx, qword ptr [rax]
0x1689c:	jmp	0x168a4
		Instruction group(s): [7, 1] 

0x1689e:	nop	
0x168a0:	add	rbx, 1
0x168a4:	movzx	edx, byte ptr [rbx]
0x168a7:	test	byte ptr [rcx + rdx*2], 1
0x168ab:	jne	0x168a0
		Instruction group(s): [7, 1] 

0x168ad:	test	dl, dl
0x168af:	je	0x16fe5
		Instruction group(s): [7, 1] 

0x168b5:	cmp	qword ptr [rsp], 0
0x168ba:	je	0x16ebe
		Instruction group(s): [7, 1] 

0x168c0:	test	r13, r13
0x168c3:	mov	rsi, qword ptr [rip + 0x21f436]
0x168ca:	je	0x16a3f
		Instruction group(s): [7, 1] 

0x168d0:	mov	rdi, r13
0x168d3:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x168d8:	test	eax, eax
0x168da:	je	0x16a42
		Instruction group(s): [7, 1] 

0x168e0:	mov	rdi, r13
0x168e3:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x168e8:	mov	rdi, rbx
0x168eb:	mov	qword ptr [rsp + 0x18], rax
0x168f0:	mov	r14d, eax
0x168f3:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x168f8:	mov	rdi, qword ptr [rsp]
0x168fc:	mov	r12d, eax
0x168ff:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x16904:	mov	qword ptr [rsp + 8], rax
0x16909:	mov	eax, dword ptr [rip + 0x222c5d]
0x1690f:	test	eax, eax
0x16911:	je	0x16bf8
		Instruction group(s): [7, 1] 

0x16917:	mov	rdi, r13
0x1691a:	call	0x16790
		Instruction group(s): [2, 7, 145] 

0x1691f:	test	eax, eax
0x16921:	je	0x1699c
		Instruction group(s): [7, 1] 

0x16923:	mov	rdi, rbx
0x16926:	mov	rdx, rbx
0x16929:	movzx	eax, byte ptr [rdx]
0x1692c:	test	al, al
0x1692e:	je	0x16999
		Instruction group(s): [7, 1] 

0x16930:	mov	r8, qword ptr [r15]
0x16933:	jmp	0x1693f
		Instruction group(s): [7, 1] 

0x16935:	nop	dword ptr [rax]
0x16938:	add	rdx, 1
0x1693c:	movzx	eax, byte ptr [rdx]
0x1693f:	lea	ecx, [rax - 0x2b]
		Instruction group(s): [145] 

0x16942:	and	ecx, 0xfd
0x16948:	sete	sil
0x1694c:	cmp	al, 0x40
0x1694e:	sete	cl
0x16951:	or	sil, cl
0x16954:	jne	0x16938
		Instruction group(s): [7, 1] 

0x16956:	movsx	rcx, al
0x1695a:	test	byte ptr [r8 + rcx*2], 1
0x1695f:	jne	0x16938
		Instruction group(s): [7, 1] 

0x16961:	xor	ecx, ecx
0x16963:	test	al, al
0x16965:	je	0x16999
		Instruction group(s): [7, 1] 

0x16967:	nop	word ptr [rax + rax]
0x16970:	add	rdx, 1
0x16974:	add	rdi, 1
0x16978:	mov	byte ptr [rdi - 1], al
0x1697b:	movzx	eax, byte ptr [rdx - 1]
0x1697f:	cmp	al, 0x5c
0x16981:	je	0x16bf0
		Instruction group(s): [7, 1] 

0x16987:	and	ecx, 1
0x1698a:	jne	0x16990
		Instruction group(s): [7, 1] 

0x1698c:	cmp	al, 0xa
0x1698e:	je	0x16929
		Instruction group(s): [7, 1] 

0x16990:	xor	ecx, ecx
0x16992:	movzx	eax, byte ptr [rdx]
0x16995:	test	al, al
0x16997:	jne	0x16970
		Instruction group(s): [7, 1] 

0x16999:	mov	byte ptr [rdi], 0
0x1699c:	mov	ebp, dword ptr [rsp + 8]
0x169a0:	lea	r15, [rsp + 0x5c]
0x169a5:	lea	r14, [rsp + 0x60]
0x169aa:	shr	ebp, 1
0x169ac:	lea	edi, [rbp*8 + 0x20]
		Instruction group(s): [145] 

0x169b3:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x169b8:	mov	rdi, r13
0x169bb:	mov	rbp, rax
0x169be:	mov	r13d, 1
0x169c4:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0x169c9:	mov	qword ptr [rbp], rax
0x169cd:	mov	rax, qword ptr [rsp]
0x169d1:	lea	r12, [rbp + 8]
0x169d5:	mov	qword ptr [rsp + 0x60], rax
0x169da:	jmp	0x169f5
		Instruction group(s): [7, 1] 

0x169dc:	nop	dword ptr [rax]
0x169e0:	mov	esi, dword ptr [rsp + 0x5c]
0x169e4:	mov	rdi, rax
0x169e7:	add	r12, 8
0x169eb:	call	0x1bae0
		Instruction group(s): [2, 7, 145] 

0x169f0:	mov	qword ptr [r12 - 8], rax
0x169f5:	mov	rsi, r15
0x169f8:	mov	rdi, r14
0x169fb:	add	r13d, 1
0x169ff:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x16a04:	test	rax, rax
0x16a07:	jne	0x169e0
		Instruction group(s): [7, 1] 

0x16a09:	movsxd	r13, r13d
		Instruction group(s): [145] 

0x16a0c:	mov	qword ptr [r12], rbx
0x16a10:	mov	qword ptr [rbp + r13*8], 0
0x16a19:	mov	rbx, qword ptr [rsp + 0x68]
0x16a1e:	xor	rbx, qword ptr fs:[0x28]
0x16a27:	mov	rax, rbp
0x16a2a:	jne	0x173eb
		Instruction group(s): [7, 1] 

0x16a30:	add	rsp, 0x78
0x16a34:	pop	rbx
		Instruction group(s): [145] 

0x16a35:	pop	rbp
		Instruction group(s): [145] 

0x16a36:	pop	r12
		Instruction group(s): [145] 

0x16a38:	pop	r13
		Instruction group(s): [145] 

0x16a3a:	pop	r14
		Instruction group(s): [145] 

0x16a3c:	pop	r15
		Instruction group(s): [145] 

0x16a3e:	ret	
		Instruction group(s): [3, 145] 

0x16a3f:	mov	r13, rsi
0x16a42:	test	rbp, rbp
0x16a45:	jne	0x16bcc
		Instruction group(s): [7, 1] 

0x16a4b:	mov	rax, qword ptr [rsp]
0x16a4f:	cmp	byte ptr [rax], 0x2d
0x16a52:	jne	0x168e0
		Instruction group(s): [7, 1] 

0x16a58:	movzx	eax, byte ptr [rax + 1]
0x16a5c:	cmp	al, 0x63
0x16a5e:	je	0x16fec
		Instruction group(s): [7, 1] 

0x16a64:	cmp	al, 0x65
0x16a66:	jne	0x168e0
		Instruction group(s): [7, 1] 

0x16a6c:	mov	rax, qword ptr [rsp]
0x16a70:	cmp	byte ptr [rax + 2], 0x63
0x16a74:	jne	0x168e0
		Instruction group(s): [7, 1] 

0x16a7a:	cmp	byte ptr [rax + 3], 0
0x16a7e:	jne	0x168e0
		Instruction group(s): [7, 1] 

0x16a84:	mov	rdi, rbx
0x16a87:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x16a8c:	lea	r12d, [rax + 1]
		Instruction group(s): [145] 

0x16a90:	lea	edi, [r12*8]
		Instruction group(s): [145] 

0x16a98:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x16a9d:	mov	edi, r12d
0x16aa0:	mov	rbp, rax
0x16aa3:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x16aa8:	mov	qword ptr [rbp], rax
0x16aac:	movzx	edx, byte ptr [rbx]
0x16aaf:	mov	qword ptr [rsp + 0x30], rax
0x16ab4:	test	dl, dl
0x16ab6:	je	0x17412
		Instruction group(s): [7, 1] 

0x16abc:	xor	r8d, r8d
0x16abf:	mov	qword ptr [rsp + 8], r15
0x16ac4:	mov	qword ptr [rsp + 0x20], r13
0x16ac9:	mov	dword ptr [rsp + 0x40], 0
0x16ad1:	mov	dword ptr [rsp + 0x48], 0
0x16ad9:	mov	r15d, r8d
0x16adc:	mov	dword ptr [rsp + 0x38], 0
0x16ae4:	mov	dword ptr [rsp + 0x3c], 0
0x16aec:	mov	r13, rax
0x16aef:	mov	qword ptr [rsp + 0x18], rbx
0x16af4:	mov	r14d, edx
0x16af7:	jmp	0x16b48
		Instruction group(s): [7, 1] 

0x16af9:	nop	dword ptr [rax]
0x16b00:	cmp	r12d, r15d
0x16b03:	je	0x17089
		Instruction group(s): [7, 1] 

0x16b09:	cmp	r14b, 0x5c
0x16b0d:	je	0x170b7
		Instruction group(s): [7, 1] 

0x16b13:	cmp	r14b, 0xa
0x16b17:	jne	0x16b25
		Instruction group(s): [7, 1] 

0x16b19:	cmp	qword ptr [rsp + 0x10], 0
0x16b1f:	jne	0x17307
		Instruction group(s): [7, 1] 

0x16b25:	cmp	r15d, 0x22
0x16b29:	je	0x170ed
		Instruction group(s): [7, 1] 

0x16b2f:	mov	byte ptr [r13], r14b
0x16b33:	add	rbx, 1
0x16b37:	movzx	r14d, byte ptr [rbx]
0x16b3b:	add	r13, 1
0x16b3f:	test	r14b, r14b
0x16b42:	je	0x17397
		Instruction group(s): [7, 1] 

0x16b48:	test	r15d, r15d
0x16b4b:	movsx	r12d, r14b
0x16b4f:	jne	0x16b00
		Instruction group(s): [7, 1] 

0x16b51:	lea	rdi, [rip + 0x1525a]
0x16b58:	mov	esi, r12d
0x16b5b:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x16b60:	test	rax, rax
0x16b63:	jne	0x17115
		Instruction group(s): [7, 1] 

0x16b69:	mov	r8d, dword ptr [rip + 0x2229fc]
0x16b70:	test	r8d, r8d
0x16b73:	je	0x16b7f
		Instruction group(s): [7, 1] 

0x16b75:	cmp	r14b, 0xa
0x16b79:	je	0x17115
		Instruction group(s): [7, 1] 

0x16b7f:	cmp	r14b, 0x22
0x16b83:	je	0x16ba5
		Instruction group(s): [7, 1] 

0x16b85:	jle	0x17000
		Instruction group(s): [7, 1] 

0x16b8b:	cmp	r14b, 0x3d
0x16b8f:	je	0x1715d
		Instruction group(s): [7, 1] 

0x16b95:	cmp	r14b, 0x5c
0x16b99:	je	0x1718d
		Instruction group(s): [7, 1] 

0x16b9f:	cmp	r14b, 0x27
0x16ba3:	jne	0x16b2f
		Instruction group(s): [7, 1] 

0x16ba5:	movzx	r14d, byte ptr [rbx + 1]
0x16baa:	mov	r15d, r12d
0x16bad:	add	rbx, 1
0x16bb1:	jmp	0x16b3f
		Instruction group(s): [7, 1] 

0x16bb3:	nop	dword ptr [rax + rax]
0x16bb8:	lea	edx, [rax - 9]
		Instruction group(s): [145] 

0x16bbb:	cmp	dl, 1
0x16bbe:	jbe	0x16bc8
		Instruction group(s): [7, 1] 

0x16bc0:	cmp	al, 0x20
0x16bc2:	jne	0x168e0
		Instruction group(s): [7, 1] 

0x16bc8:	add	rbp, 1
0x16bcc:	movzx	eax, byte ptr [rbp]
0x16bd0:	test	al, al
0x16bd2:	jne	0x16bb8
		Instruction group(s): [7, 1] 

0x16bd4:	mov	rax, qword ptr [rsp]
0x16bd8:	cmp	byte ptr [rax], 0x2d
0x16bdb:	jne	0x168e0
		Instruction group(s): [7, 1] 

0x16be1:	jmp	0x16a58
		Instruction group(s): [7, 1] 

0x16be6:	nop	word ptr cs:[rax + rax]
0x16bf0:	xor	ecx, 1
0x16bf3:	jmp	0x16992
		Instruction group(s): [7, 1] 

0x16bf8:	mov	rax, qword ptr [rsp + 8]
0x16bfd:	lea	edi, [r12 + r12]
		Instruction group(s): [145] 

0x16c01:	mov	dword ptr [rsp + 0x38], edi
0x16c05:	lea	eax, [r14 + rax + 0x22]
		Instruction group(s): [145] 

0x16c0a:	lea	edx, [rax + r14*2]
		Instruction group(s): [145] 

0x16c0e:	lea	eax, [rdi + r12]
		Instruction group(s): [145] 

0x16c12:	shl	eax, 3
0x16c15:	add	edx, edi
0x16c17:	mov	rcx, rax
0x16c1a:	shl	rcx, 0x10
0x16c1e:	add	rcx, rax
0x16c21:	shl	rcx, 0xf
0x16c25:	lea	rdi, [rcx + rax]
0x16c29:	shr	rdi, 0x30
0x16c2d:	add	edi, edx
0x16c2f:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x16c34:	movsx	esi, byte ptr [r13]
0x16c39:	mov	qword ptr [rsp + 0x20], rax
0x16c3e:	test	sil, sil
0x16c41:	je	0x16c95
		Instruction group(s): [7, 1] 

0x16c43:	mov	r14, r13
0x16c46:	mov	rbp, rax
0x16c49:	jmp	0x16c6e
		Instruction group(s): [7, 1] 

0x16c4b:	nop	dword ptr [rax + rax]
0x16c50:	mov	byte ptr [rbp], 0x5c
0x16c54:	lea	r8, [rbp + 3]
0x16c58:	mov	rbp, rcx
0x16c5b:	movzx	eax, byte ptr [r14]
0x16c5f:	add	r14, 1
0x16c63:	mov	byte ptr [rdx], al
0x16c65:	movsx	esi, byte ptr [r14]
0x16c69:	test	sil, sil
0x16c6c:	je	0x16c9e
		Instruction group(s): [7, 1] 

0x16c6e:	lea	rdi, [rip + 0x1513d]
0x16c75:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x16c7a:	test	rax, rax
0x16c7d:	lea	rdx, [rbp + 1]
0x16c81:	lea	rcx, [rbp + 2]
0x16c85:	jne	0x16c50
		Instruction group(s): [7, 1] 

0x16c87:	mov	rax, rdx
0x16c8a:	mov	r8, rcx
0x16c8d:	mov	rdx, rbp
0x16c90:	mov	rbp, rax
0x16c93:	jmp	0x16c5b
		Instruction group(s): [7, 1] 

0x16c95:	mov	rbp, qword ptr [rsp + 0x20]
0x16c9a:	lea	r8, [rbp + 1]
0x16c9e:	mov	byte ptr [rbp], 0x20
0x16ca2:	mov	ebp, dword ptr [rsp + 8]
0x16ca6:	mov	rdi, r8
0x16ca9:	mov	rsi, qword ptr [rsp]
0x16cad:	mov	rdx, rbp
0x16cb0:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x16cb5:	mov	r8, rax
0x16cb8:	add	r8, rbp
0x16cbb:	cmp	r12d, 0x20000
0x16cc2:	mov	byte ptr [r8], 0x20
0x16cc6:	mov	eax, dword ptr [rip + 0x21efdc]
0x16ccc:	seta	r9b
0x16cd0:	lea	r14, [r8 + 1]
0x16cd4:	test	eax, eax
0x16cd6:	je	0x16ce1
		Instruction group(s): [7, 1] 

0x16cd8:	test	r9b, r9b
0x16cdb:	jne	0x16ee3
		Instruction group(s): [7, 1] 

0x16ce1:	movzx	eax, byte ptr [rbx]
0x16ce4:	test	al, al
0x16ce6:	je	0x16da5
		Instruction group(s): [7, 1] 

0x16cec:	cmp	qword ptr [rsp + 0x10], 0
0x16cf2:	setne	dl
0x16cf5:	cmp	al, 0xa
0x16cf7:	jne	0x16d01
		Instruction group(s): [7, 1] 

0x16cf9:	test	dl, dl
0x16cfb:	jne	0x16d9d
		Instruction group(s): [7, 1] 

0x16d01:	lea	r10, [rip + 0x150aa]
0x16d08:	mov	rcx, r14
0x16d0b:	movabs	r13, 0x400000000000021
0x16d15:	nop	dword ptr [rax]
0x16d18:	cmp	al, 0x5c
0x16d1a:	lea	r12, [r14 + 1]
0x16d1e:	je	0x16e50
		Instruction group(s): [7, 1] 

0x16d24:	mov	r8d, dword ptr [rip + 0x21ef7d]
0x16d2b:	test	r8d, r8d
0x16d2e:	je	0x16e38
		Instruction group(s): [7, 1] 

0x16d34:	mov	edi, dword ptr [rip + 0x21f3a6]
0x16d3a:	test	edi, edi
0x16d3c:	jne	0x16e38
		Instruction group(s): [7, 1] 

0x16d42:	lea	esi, [rax - 0x22]
		Instruction group(s): [145] 

0x16d45:	cmp	sil, 0x3a
0x16d49:	jbe	0x16eaf
		Instruction group(s): [7, 1] 

0x16d4f:	mov	rdi, qword ptr [r15]
0x16d52:	movzx	esi, al
0x16d55:	test	byte ptr [rdi + rsi*2 + 1], 0x20
0x16d5a:	je	0x16dfa
		Instruction group(s): [7, 1] 

0x16d60:	mov	byte ptr [r14], 0x5c
0x16d64:	add	r14, 2
0x16d68:	movzx	eax, byte ptr [rbx]
0x16d6b:	mov	byte ptr [r12], al
0x16d6f:	mov	esi, dword ptr [rip + 0x21ef33]
0x16d75:	test	esi, esi
0x16d77:	je	0x16d82
		Instruction group(s): [7, 1] 

0x16d79:	test	r9b, r9b
0x16d7c:	jne	0x16e86
		Instruction group(s): [7, 1] 

0x16d82:	mov	rax, rbx
0x16d85:	lea	rbx, [rax + 1]
0x16d89:	movzx	eax, byte ptr [rax + 1]
0x16d8d:	test	al, al
0x16d8f:	je	0x16da5
		Instruction group(s): [7, 1] 

0x16d91:	cmp	al, 0xa
0x16d93:	jne	0x16d18
		Instruction group(s): [7, 1] 

0x16d95:	test	dl, dl
0x16d97:	je	0x16d18
		Instruction group(s): [7, 1] 

0x16d9d:	mov	rax, qword ptr [rsp + 0x10]
0x16da2:	mov	qword ptr [rax], rbx
0x16da5:	mov	r13d, dword ptr [rsp + 0x18]
0x16daa:	lea	rax, [rbp + r13 + 2]
0x16daf:	add	rax, qword ptr [rsp + 0x20]
0x16db4:	cmp	r14, rax
0x16db7:	je	0x172e1
		Instruction group(s): [7, 1] 

0x16dbd:	mov	byte ptr [r14], 0
0x16dc1:	mov	eax, dword ptr [rip + 0x21eee1]
0x16dc7:	test	eax, eax
0x16dc9:	je	0x173ba
		Instruction group(s): [7, 1] 

0x16dcf:	mov	rbx, qword ptr [rsp + 0x20]
0x16dd4:	mov	r9d, dword ptr [rsp + 0x2c]
0x16dd9:	xor	r8d, r8d
0x16ddc:	xor	ecx, ecx
0x16dde:	xor	edx, edx
0x16de0:	xor	esi, esi
0x16de2:	mov	rdi, rbx
0x16de5:	call	0x16850
		Instruction group(s): [2, 7, 145] 

0x16dea:	mov	rdi, rbx
0x16ded:	mov	rbp, rax
0x16df0:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x16df5:	jmp	0x16a19
		Instruction group(s): [7, 1] 

0x16dfa:	mov	rdi, r10
0x16dfd:	movsx	esi, al
0x16e00:	mov	byte ptr [rsp + 0x30], r9b
0x16e05:	mov	byte ptr [rsp + 0x38], dl
0x16e09:	mov	qword ptr [rsp + 8], rcx
0x16e0e:	mov	qword ptr [rsp], r10
0x16e12:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x16e17:	test	rax, rax
0x16e1a:	mov	r10, qword ptr [rsp]
0x16e1e:	mov	rcx, qword ptr [rsp + 8]
0x16e23:	movzx	edx, byte ptr [rsp + 0x38]
0x16e28:	movzx	r9d, byte ptr [rsp + 0x30]
0x16e2e:	jne	0x16d60
		Instruction group(s): [7, 1] 

0x16e34:	nop	dword ptr [rax]
0x16e38:	mov	rax, r12
0x16e3b:	mov	r12, r14
0x16e3e:	mov	r14, rax
0x16e41:	jmp	0x16d68
		Instruction group(s): [7, 1] 

0x16e46:	nop	word ptr cs:[rax + rax]
0x16e50:	cmp	byte ptr [rbx + 1], 0xa
0x16e54:	jne	0x16d24
		Instruction group(s): [7, 1] 

0x16e5a:	mov	byte ptr [r14], 0x5c
0x16e5e:	mov	r11d, dword ptr [rip + 0x21f27b]
0x16e65:	test	r11d, r11d
0x16e68:	jne	0x16e73
		Instruction group(s): [7, 1] 

0x16e6a:	lea	r12, [r14 + 2]
0x16e6e:	mov	byte ptr [r14 + 1], 0x5c
0x16e73:	lea	r14, [r12 + 1]
0x16e78:	mov	byte ptr [r12], 0xa
0x16e7d:	lea	rax, [rbx + 1]
0x16e81:	jmp	0x16d85
		Instruction group(s): [7, 1] 

0x16e86:	mov	rsi, r14
0x16e89:	mov	rax, rbx
0x16e8c:	sub	rsi, rcx
0x16e8f:	cmp	rsi, 0x1fffe
0x16e96:	jbe	0x16d85
		Instruction group(s): [7, 1] 

0x16e9c:	lea	r14, [r12 + 2]
0x16ea1:	mov	byte ptr [r12 + 1], 0x20
0x16ea7:	mov	rcx, r14
0x16eaa:	jmp	0x16d85
		Instruction group(s): [7, 1] 

0x16eaf:	bt	r13, rsi
0x16eb3:	jb	0x16d60
		Instruction group(s): [7, 1] 

0x16eb9:	jmp	0x16d4f
		Instruction group(s): [7, 1] 

0x16ebe:	mov	r10d, dword ptr [rip + 0x222673]
0x16ec5:	lea	rdx, [rip + 0x14edf]
0x16ecc:	lea	rax, [rip + 0x14ed4]
0x16ed3:	test	r10d, r10d
0x16ed6:	cmove	rax, rdx
		Instruction group(s): [137] 

0x16eda:	mov	qword ptr [rsp], rax
0x16ede:	jmp	0x168c0
		Instruction group(s): [7, 1] 

0x16ee3:	movdqa	xmm0, xmmword ptr [rip + 0x21ed95]
		Instruction group(s): [149] 

0x16eeb:	movups	xmmword ptr [r8 + 1], xmm0
		Instruction group(s): [148] 

0x16ef0:	mov	rax, qword ptr [rip + 0x21ed99]
0x16ef7:	mov	qword ptr [r14 + 0x10], rax
0x16efb:	movzx	eax, word ptr [rip + 0x21ed96]
0x16f02:	mov	word ptr [r14 + 0x18], ax
0x16f07:	movzx	eax, byte ptr [rip + 0x21ed8c]
0x16f0e:	mov	byte ptr [r14 + 0x1a], al
0x16f12:	mov	eax, dword ptr [rsp + 0x38]
0x16f16:	lea	r14, [r8 + 0x1c]
0x16f1a:	mov	rdx, rax
0x16f1d:	shl	rdx, 0x10
0x16f21:	add	rdx, rax
0x16f24:	shl	rdx, 0xf
0x16f28:	lea	r12, [rdx + rax]
0x16f2c:	shr	r12, 0x30
0x16f30:	test	r12d, r12d
0x16f33:	mov	dword ptr [rsp], r12d
0x16f37:	je	0x16f97
		Instruction group(s): [7, 1] 

0x16f39:	mov	r12d, 1
0x16f3f:	mov	rax, r13
0x16f42:	mov	qword ptr [rsp + 8], rbp
0x16f47:	mov	r13, rbx
0x16f4a:	mov	ebp, r12d
0x16f4d:	mov	rbx, r14
0x16f50:	mov	r12d, r9d
0x16f53:	mov	r14, rax
0x16f56:	lea	rcx, [rip + 0x14e6a]
0x16f5d:	mov	r8d, ebp
0x16f60:	mov	rdi, rbx
0x16f63:	xor	eax, eax
0x16f65:	mov	rdx, -1
0x16f6c:	mov	esi, 1
0x16f71:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x16f76:	cdqe	
0x16f78:	add	ebp, 1
0x16f7b:	add	rbx, rax
0x16f7e:	cmp	dword ptr [rsp], ebp
0x16f81:	jae	0x16f56
		Instruction group(s): [7, 1] 

0x16f83:	mov	rbp, qword ptr [rsp + 8]
0x16f88:	mov	rax, r14
0x16f8b:	mov	r9d, r12d
0x16f8e:	mov	r14, rbx
0x16f91:	mov	rbx, r13
0x16f94:	mov	r13, rax
0x16f97:	mov	r12d, 0x225c
0x16f9d:	mov	byte ptr [r14 + 2], 0x20
0x16fa2:	lea	rcx, [r14 + 3]
0x16fa6:	mov	word ptr [r14], r12w
0x16faa:	movzx	eax, byte ptr [r13]
0x16faf:	test	al, al
0x16fb1:	jne	0x16fcc
		Instruction group(s): [7, 1] 

0x16fb3:	jmp	0x16fd9
		Instruction group(s): [7, 1] 

0x16fb5:	nop	dword ptr [rax]
0x16fb8:	add	rcx, 1
0x16fbc:	add	r13, 1
0x16fc0:	mov	byte ptr [rcx - 1], al
0x16fc3:	movzx	eax, byte ptr [r13]
0x16fc8:	test	al, al
0x16fca:	je	0x16fd9
		Instruction group(s): [7, 1] 

0x16fcc:	mov	rsi, qword ptr [r15]
0x16fcf:	movzx	edx, al
0x16fd2:	test	byte ptr [rsi + rdx*2 + 1], 0x20
0x16fd7:	je	0x16fb8
		Instruction group(s): [7, 1] 

0x16fd9:	lea	r14, [rcx + 1]
0x16fdd:	mov	byte ptr [rcx], 0x20
0x16fe0:	jmp	0x16ce1
		Instruction group(s): [7, 1] 

0x16fe5:	xor	ebp, ebp
0x16fe7:	jmp	0x16a19
		Instruction group(s): [7, 1] 

0x16fec:	mov	rax, qword ptr [rsp]
0x16ff0:	cmp	byte ptr [rax + 2], 0
0x16ff4:	jne	0x168e0
		Instruction group(s): [7, 1] 

0x16ffa:	jmp	0x16a84
		Instruction group(s): [7, 1] 

0x16fff:	nop	
0x17000:	cmp	r14b, 0xa
0x17004:	je	0x1713b
		Instruction group(s): [7, 1] 

0x1700a:	cmp	r14b, 0x20
0x1700e:	je	0x1701a
		Instruction group(s): [7, 1] 

0x17010:	cmp	r14b, 9
0x17014:	jne	0x16b2f
		Instruction group(s): [7, 1] 

0x1701a:	add	dword ptr [rsp + 0x38], 1
0x1701f:	mov	edi, dword ptr [rsp + 0x48]
0x17023:	lea	r12, [r13 + 1]
0x17027:	movsxd	rax, dword ptr [rsp + 0x38]
		Instruction group(s): [145] 

0x1702c:	mov	byte ptr [r13], 0
0x17031:	mov	rsi, rax
0x17034:	mov	qword ptr [rbp + rax*8], r12
0x17039:	mov	eax, edi
0x1703b:	xor	eax, 1
0x1703e:	or	dword ptr [rsp + 0x3c], eax
0x17042:	mov	edx, dword ptr [rsp + 0x3c]
0x17046:	mov	r8d, edx
0x17049:	xor	r8d, 1
0x1704d:	and	edi, r8d
0x17050:	mov	r15d, edi
0x17053:	jne	0x17115
		Instruction group(s): [7, 1] 

0x17059:	cmp	esi, 1
0x1705c:	je	0x171c6
		Instruction group(s): [7, 1] 

0x17062:	mov	rdi, rbx
0x17065:	mov	r13, r12
0x17068:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1706d:	mov	dword ptr [rsp + 0x40], 0
0x17075:	mov	rbx, rax
0x17078:	movzx	r14d, byte ptr [rax]
0x1707c:	mov	dword ptr [rsp + 0x48], 0
0x17084:	jmp	0x16b3f
		Instruction group(s): [7, 1] 

0x17089:	movzx	r14d, byte ptr [rbx + 1]
0x1708e:	add	rbx, 1
0x17092:	cmp	qword ptr [rbp], r13
0x17096:	je	0x171b6
		Instruction group(s): [7, 1] 

0x1709c:	xor	r15d, r15d
0x1709f:	cmp	byte ptr [r13 - 1], 0
0x170a4:	mov	eax, 1
0x170a9:	cmovne	eax, dword ptr [rsp + 0x40]
		Instruction group(s): [137] 

0x170ae:	mov	dword ptr [rsp + 0x40], eax
0x170b2:	jmp	0x16b3f
		Instruction group(s): [7, 1] 

0x170b7:	cmp	byte ptr [rbx + 1], 0xa
0x170bb:	jne	0x16b25
		Instruction group(s): [7, 1] 

0x170c1:	cmp	r15d, 0x22
0x170c5:	lea	rax, [rbx + 2]
0x170c9:	je	0x172ca
		Instruction group(s): [7, 1] 

0x170cf:	mov	byte ptr [r13], 0x5c
0x170d4:	movzx	edx, byte ptr [rbx + 1]
0x170d8:	add	r13, 2
0x170dc:	mov	byte ptr [r13 - 1], dl
0x170e0:	movzx	r14d, byte ptr [rbx + 2]
0x170e5:	mov	rbx, rax
0x170e8:	jmp	0x16b3f
		Instruction group(s): [7, 1] 

0x170ed:	lea	rdi, [rip + 0x14cba]
0x170f4:	mov	esi, r12d
0x170f7:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x170fc:	test	rax, rax
0x170ff:	je	0x16b2f
		Instruction group(s): [7, 1] 

0x17105:	mov	r9d, dword ptr [rip + 0x21eb9c]
0x1710c:	test	r9d, r9d
0x1710f:	je	0x16b2f
		Instruction group(s): [7, 1] 

0x17115:	mov	r15, qword ptr [rsp + 8]
0x1711a:	mov	rbx, qword ptr [rsp + 0x18]
0x1711f:	mov	r13, qword ptr [rsp + 0x20]
0x17124:	mov	rdi, qword ptr [rsp + 0x30]
0x17129:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1712e:	mov	rdi, rbp
0x17131:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x17136:	jmp	0x168e0
		Instruction group(s): [7, 1] 

0x1713b:	cmp	qword ptr [rsp + 0x10], 0
0x17141:	jne	0x173f0
		Instruction group(s): [7, 1] 

0x17147:	mov	byte ptr [r13], 0xa
0x1714c:	add	rbx, 1
0x17150:	movzx	r14d, byte ptr [rbx]
0x17154:	add	r13, 1
0x17158:	jmp	0x16b3f
		Instruction group(s): [7, 1] 

0x1715d:	mov	edi, dword ptr [rsp + 0x3c]
0x17161:	test	edi, edi
0x17163:	jne	0x1716f
		Instruction group(s): [7, 1] 

0x17165:	mov	esi, dword ptr [rip + 0x21eb3d]
0x1716b:	test	esi, esi
0x1716d:	jne	0x17115
		Instruction group(s): [7, 1] 

0x1716f:	mov	byte ptr [r13], 0x3d
0x17174:	add	rbx, 1
0x17178:	movzx	r14d, byte ptr [rbx]
0x1717c:	add	r13, 1
0x17180:	mov	dword ptr [rsp + 0x48], 1
0x17188:	jmp	0x16b3f
		Instruction group(s): [7, 1] 

0x1718d:	movzx	eax, byte ptr [rbx + 1]
0x17191:	cmp	al, 0xa
0x17193:	je	0x172b0
		Instruction group(s): [7, 1] 

0x17199:	test	al, al
0x1719b:	je	0x1723a
		Instruction group(s): [7, 1] 

0x171a1:	mov	byte ptr [r13], al
0x171a5:	add	rbx, 2
0x171a9:	movzx	r14d, byte ptr [rbx]
0x171ad:	add	r13, 1
0x171b1:	jmp	0x16b3f
		Instruction group(s): [7, 1] 

0x171b6:	mov	dword ptr [rsp + 0x40], 1
0x171be:	xor	r15d, r15d
0x171c1:	jmp	0x16b3f
		Instruction group(s): [7, 1] 

0x171c6:	mov	r13, qword ptr [rbp]
0x171ca:	lea	rax, [rip + 0x17211]
0x171d1:	cmp	r13, rax
0x171d4:	je	0x17115
		Instruction group(s): [7, 1] 

0x171da:	movzx	r10d, byte ptr [r13]
0x171df:	lea	rdi, [r13 + 1]
0x171e3:	mov	qword ptr [rsp + 0x48], rbx
0x171e8:	lea	r14, [rip + 0x21ce79]
0x171ef:	mov	rbx, r13
0x171f2:	mov	qword ptr [rsp + 0x40], rdi
0x171f7:	mov	r13d, r10d
0x171fa:	jmp	0x17215
		Instruction group(s): [7, 1] 

0x171fc:	mov	rax, qword ptr [r14]
0x171ff:	test	rax, rax
0x17202:	je	0x172d7
		Instruction group(s): [7, 1] 

0x17208:	add	r14, 8
0x1720c:	cmp	rax, rbx
0x1720f:	je	0x17115
		Instruction group(s): [7, 1] 

0x17215:	cmp	byte ptr [rax], r13b
0x17218:	jne	0x171fc
		Instruction group(s): [7, 1] 

0x1721a:	test	r13b, r13b
0x1721d:	je	0x17115
		Instruction group(s): [7, 1] 

0x17223:	mov	rsi, qword ptr [rsp + 0x40]
0x17228:	lea	rdi, [rax + 1]
0x1722c:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x17231:	test	eax, eax
0x17233:	jne	0x171fc
		Instruction group(s): [7, 1] 

0x17235:	jmp	0x17115
		Instruction group(s): [7, 1] 

0x1723a:	mov	r14, r13
0x1723d:	mov	r15, qword ptr [rsp + 8]
0x17242:	mov	rbx, qword ptr [rsp + 0x18]
0x17247:	mov	r13, qword ptr [rsp + 0x20]
0x1724c:	movsxd	rax, dword ptr [rsp + 0x38]
		Instruction group(s): [145] 

0x17251:	mov	byte ptr [r14], 0
0x17255:	shl	rax, 3
0x17259:	lea	rdx, [rbp + rax]
0x1725e:	mov	rcx, qword ptr [rdx]
0x17261:	cmp	byte ptr [rcx], 0
0x17264:	jne	0x1726e
		Instruction group(s): [7, 1] 

0x17266:	mov	ecx, dword ptr [rsp + 0x40]
0x1726a:	test	ecx, ecx
0x1726c:	je	0x17278
		Instruction group(s): [7, 1] 

0x1726e:	add	dword ptr [rsp + 0x38], 1
0x17273:	lea	rdx, [rbp + rax + 8]
0x17278:	cmp	dword ptr [rsp + 0x38], 1
0x1727d:	mov	qword ptr [rdx], 0
0x17284:	je	0x17326
		Instruction group(s): [7, 1] 

0x1728a:	cmp	qword ptr [rbp], 0
0x1728f:	jne	0x16a19
		Instruction group(s): [7, 1] 

0x17295:	mov	rdi, qword ptr [rsp + 0x30]
0x1729a:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1729f:	mov	rdi, rbp
0x172a2:	xor	ebp, ebp
0x172a4:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x172a9:	jmp	0x16a19
		Instruction group(s): [7, 1] 

0x172ae:	nop	
0x172b0:	movsxd	rax, dword ptr [rsp + 0x38]
		Instruction group(s): [145] 

0x172b5:	cmp	qword ptr [rbp + rax*8], r13
0x172ba:	je	0x172f2
		Instruction group(s): [7, 1] 

0x172bc:	movzx	r14d, byte ptr [rbx + 2]
0x172c1:	add	rbx, 2
0x172c5:	jmp	0x16b3f
		Instruction group(s): [7, 1] 

0x172ca:	movzx	r14d, byte ptr [rbx + 2]
0x172cf:	mov	rbx, rax
0x172d2:	jmp	0x16b3f
		Instruction group(s): [7, 1] 

0x172d7:	mov	rbx, qword ptr [rsp + 0x48]
0x172dc:	jmp	0x17062
		Instruction group(s): [7, 1] 

0x172e1:	mov	rdi, qword ptr [rsp + 0x20]
0x172e6:	xor	ebp, ebp
0x172e8:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x172ed:	jmp	0x16a19
		Instruction group(s): [7, 1] 

0x172f2:	lea	rdi, [rbx + 2]
0x172f6:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x172fb:	mov	rbx, rax
0x172fe:	movzx	r14d, byte ptr [rax]
0x17302:	jmp	0x16b3f
		Instruction group(s): [7, 1] 

0x17307:	mov	rax, qword ptr [rsp + 0x10]
0x1730c:	mov	rcx, rbx
0x1730f:	mov	r15, qword ptr [rsp + 8]
0x17314:	mov	rbx, qword ptr [rsp + 0x18]
0x17319:	mov	r13, qword ptr [rsp + 0x20]
0x1731e:	mov	qword ptr [rax], rcx
0x17321:	jmp	0x17124
		Instruction group(s): [7, 1] 

0x17326:	mov	r12, qword ptr [rbp]
0x1732a:	lea	rax, [rip + 0x170b1]
0x17331:	cmp	r12, rax
0x17334:	je	0x17124
		Instruction group(s): [7, 1] 

0x1733a:	lea	rdi, [r12 + 1]
0x1733f:	movzx	edx, byte ptr [r12]
0x17344:	lea	r14, [rip + 0x21cd1d]
0x1734b:	mov	qword ptr [rsp + 8], rdi
0x17350:	jmp	0x1736b
		Instruction group(s): [7, 1] 

0x17352:	mov	rax, qword ptr [r14]
0x17355:	test	rax, rax
0x17358:	je	0x1728a
		Instruction group(s): [7, 1] 

0x1735e:	add	r14, 8
0x17362:	cmp	rax, r12
0x17365:	je	0x17124
		Instruction group(s): [7, 1] 

0x1736b:	cmp	byte ptr [rax], dl
0x1736d:	jne	0x17352
		Instruction group(s): [7, 1] 

0x1736f:	test	dl, dl
0x17371:	mov	byte ptr [rsp + 0x18], dl
0x17375:	je	0x17124
		Instruction group(s): [7, 1] 

0x1737b:	mov	rsi, qword ptr [rsp + 8]
0x17380:	lea	rdi, [rax + 1]
0x17384:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x17389:	test	eax, eax
0x1738b:	movzx	edx, byte ptr [rsp + 0x18]
0x17390:	jne	0x17352
		Instruction group(s): [7, 1] 

0x17392:	jmp	0x17124
		Instruction group(s): [7, 1] 

0x17397:	mov	r8d, r15d
0x1739a:	mov	r14, r13
0x1739d:	mov	r15, qword ptr [rsp + 8]
0x173a2:	test	r8d, r8d
0x173a5:	mov	rbx, qword ptr [rsp + 0x18]
0x173aa:	mov	r13, qword ptr [rsp + 0x20]
0x173af:	jne	0x17124
		Instruction group(s): [7, 1] 

0x173b5:	jmp	0x1724c
		Instruction group(s): [7, 1] 

0x173ba:	lea	rsi, [rip + 0x14c3f]
0x173c1:	mov	edx, 5
0x173c6:	xor	edi, edi
0x173c8:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x173cd:	lea	rcx, [rip + 0x149fc]
0x173d4:	mov	rdx, rax
0x173d7:	mov	r8d, 0xde9
0x173dd:	mov	esi, 0x1f
0x173e2:	xor	edi, edi
0x173e4:	xor	eax, eax
0x173e6:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x173eb:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x173f0:	mov	rax, qword ptr [rsp + 0x10]
0x173f5:	mov	rcx, rbx
0x173f8:	mov	r14, r13
0x173fb:	mov	r15, qword ptr [rsp + 8]
0x17400:	mov	rbx, qword ptr [rsp + 0x18]
0x17405:	mov	r13, qword ptr [rsp + 0x20]
0x1740a:	mov	qword ptr [rax], rcx
0x1740d:	jmp	0x1724c
		Instruction group(s): [7, 1] 

0x17412:	mov	r14, qword ptr [rsp + 0x30]
0x17417:	mov	dword ptr [rsp + 0x40], 0
0x1741f:	mov	dword ptr [rsp + 0x38], 0
0x17427:	jmp	0x1724c
		Instruction group(s): [7, 1] 

0x1742c:	nop	dword ptr [rax]
0x17430:	lea	rsi, [rip + 0x222149]
0x17437:	xor	edx, edx
0x17439:	xor	edi, edi
0x1743b:	jmp	0x8630
		Instruction group(s): [7, 1] 

0x17440:	push	rbx
		Instruction group(s): [145] 

0x17441:	sub	rsp, 0x90
0x17448:	mov	rbx, rsp
0x1744b:	mov	rdi, rbx
0x1744e:	mov	rax, qword ptr fs:[0x28]
0x17457:	mov	qword ptr [rsp + 0x88], rax
0x1745f:	xor	eax, eax
0x17461:	call	0x8a10
		Instruction group(s): [2, 7, 145] 

0x17466:	xor	edx, edx
0x17468:	mov	rsi, rbx
0x1746b:	mov	edi, 2
0x17470:	call	0x8630
		Instruction group(s): [2, 7, 145] 

0x17475:	mov	rax, qword ptr [rsp + 0x88]
0x1747d:	xor	rax, qword ptr fs:[0x28]
0x17486:	jne	0x17491
		Instruction group(s): [7, 1] 

0x17488:	add	rsp, 0x90
0x1748f:	pop	rbx
		Instruction group(s): [145] 

0x17490:	ret	
		Instruction group(s): [3, 145] 

0x17491:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x17496:	nop	word ptr cs:[rax + rax]
0x174a0:	push	rbp
		Instruction group(s): [145] 

0x174a1:	mov	rbp, rsp
0x174a4:	push	r13
		Instruction group(s): [145] 

0x174a6:	push	r12
		Instruction group(s): [145] 

0x174a8:	push	rbx
		Instruction group(s): [145] 

0x174a9:	mov	rbx, rdi
0x174ac:	mov	r12, rsi
0x174af:	sub	rsp, 0x18
0x174b3:	mov	rax, qword ptr fs:[0x28]
0x174bc:	mov	qword ptr [rbp - 0x28], rax
0x174c0:	xor	eax, eax
0x174c2:	call	0x1bf60
		Instruction group(s): [2, 7, 145] 

0x174c7:	mov	rdi, qword ptr [rbx]
0x174ca:	mov	rsi, rbx
0x174cd:	mov	qword ptr [rip + 0x21e96c], r12
0x174d4:	call	0x8c30
		Instruction group(s): [2, 7, 145] 

0x174d9:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x174de:	mov	r13, rax
0x174e1:	mov	eax, dword ptr [rax]
0x174e3:	cmp	eax, 2
0x174e6:	je	0x175bb
		Instruction group(s): [7, 1] 

0x174ec:	cmp	eax, 8
0x174ef:	jne	0x175a2
		Instruction group(s): [7, 1] 

0x174f5:	lea	rdi, [rip + 0x16a81]
0x174fc:	call	0x8610
		Instruction group(s): [2, 7, 145] 

0x17501:	test	rax, rax
0x17504:	mov	r12, rax
0x17507:	je	0x17616
		Instruction group(s): [7, 1] 

0x1750d:	cmp	qword ptr [rbx + 8], 0
0x17512:	je	0x17622
		Instruction group(s): [7, 1] 

0x17518:	mov	eax, 2
0x1751d:	nop	dword ptr [rax]
0x17520:	mov	ecx, eax
0x17522:	add	rax, 1
0x17526:	cmp	qword ptr [rbx + rax*8 - 8], 0
0x1752c:	jne	0x17520
		Instruction group(s): [7, 1] 

0x1752e:	lea	edx, [rcx + 2]
		Instruction group(s): [145] 

0x17531:	lea	edi, [rcx - 1]
		Instruction group(s): [145] 

0x17534:	movsxd	rdx, edx
		Instruction group(s): [145] 

0x17537:	add	rdi, 1
0x1753b:	shl	rdx, 3
0x1753f:	lea	rax, [rdx + 0x1e]
0x17543:	sub	rdx, 0x10
0x17547:	imul	rdi, rdi, -8
0x1754b:	and	rax, 0xfffffffffffffff0
0x1754f:	sub	rsp, rax
0x17552:	mov	rax, qword ptr [rbx]
0x17555:	add	rbx, rdx
0x17558:	lea	rsi, [rsp + 0xf]
0x1755d:	and	rsi, 0xfffffffffffffff0
0x17561:	mov	qword ptr [rsi + 8], rax
0x17565:	mov	qword ptr [rsi], r12
0x17568:	add	rdx, rsi
0x1756b:	xor	eax, eax
0x1756d:	nop	dword ptr [rax]
0x17570:	mov	rcx, qword ptr [rbx + rax]
0x17574:	mov	qword ptr [rdx + rax + 8], rcx
0x17579:	sub	rax, 8
0x1757d:	cmp	rdi, rax
0x17580:	jne	0x17570
		Instruction group(s): [7, 1] 

0x17582:	mov	rdi, r12
0x17585:	call	0x8c30
		Instruction group(s): [2, 7, 145] 

0x1758a:	cmp	dword ptr [r13], 2
0x1758f:	je	0x175f5
		Instruction group(s): [7, 1] 

0x17591:	lea	rdi, [rip + 0x14876]
0x17598:	mov	rsi, r12
0x1759b:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0x175a0:	jmp	0x175b1
		Instruction group(s): [7, 1] 

0x175a2:	mov	rsi, qword ptr [rbx]
0x175a5:	lea	rdi, [rip + 0x14862]
0x175ac:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0x175b1:	mov	edi, 0x7f
0x175b6:	call	0x86b0
		Instruction group(s): [2, 7, 145] 

0x175bb:	lea	rsi, [rip + 0x1481a]
0x175c2:	mov	edx, 5
0x175c7:	xor	edi, edi
0x175c9:	mov	r12, qword ptr [rbx]
0x175cc:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x175d1:	mov	rdi, qword ptr [rbx]
0x175d4:	mov	rdx, rax
0x175d7:	or	rcx, 0xffffffffffffffff
0x175db:	xor	eax, eax
0x175dd:	repne scasb	al, byte ptr [rdi]
0x175df:	xor	edi, edi
0x175e1:	mov	rsi, rcx
0x175e4:	mov	rcx, r12
0x175e7:	not	rsi
0x175ea:	lea	rsi, [rsi - 1]
0x175ee:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x175f3:	jmp	0x175b1
		Instruction group(s): [7, 1] 

0x175f5:	lea	rsi, [rip + 0x147f6]
0x175fc:	mov	edx, 5
0x17601:	xor	edi, edi
0x17603:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x17608:	or	rcx, 0xffffffffffffffff
0x1760c:	mov	rdx, rax
0x1760f:	mov	rdi, r12
0x17612:	xor	eax, eax
0x17614:	jmp	0x175dd
		Instruction group(s): [7, 1] 

0x17616:	mov	r12, qword ptr [rip + 0x21e6e3]
0x1761d:	jmp	0x1750d
		Instruction group(s): [7, 1] 

0x17622:	mov	ecx, 1
0x17627:	jmp	0x1752e
		Instruction group(s): [7, 1] 

0x1762c:	nop	dword ptr [rax]
0x17630:	push	r14
		Instruction group(s): [145] 

0x17632:	push	r13
		Instruction group(s): [145] 

0x17634:	mov	r14, r8
0x17637:	push	r12
		Instruction group(s): [145] 

0x17639:	mov	r12d, edi
0x1763c:	mov	rdi, qword ptr [rip + 0x21e7ed]
0x17643:	push	rbp
		Instruction group(s): [145] 

0x17644:	push	rbx
		Instruction group(s): [145] 

0x17645:	mov	ebp, edx
0x17647:	mov	ebx, esi
0x17649:	mov	r13, rcx
0x1764c:	call	0x8a70
		Instruction group(s): [2, 7, 145] 

0x17651:	cmp	eax, r12d
0x17654:	je	0x17674
		Instruction group(s): [7, 1] 

0x17656:	mov	rdi, qword ptr [rip + 0x21e7d3]
0x1765d:	call	0x8a70
		Instruction group(s): [2, 7, 145] 

0x17662:	mov	edi, r12d
0x17665:	mov	esi, eax
0x17667:	call	0x8860
		Instruction group(s): [2, 7, 145] 

0x1766c:	mov	edi, r12d
0x1766f:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0x17674:	mov	rdi, qword ptr [rip + 0x21e7a5]
0x1767b:	call	0x8a70
		Instruction group(s): [2, 7, 145] 

0x17680:	cmp	eax, ebx
0x17682:	je	0x17699
		Instruction group(s): [7, 1] 

0x17684:	mov	rdi, qword ptr [rip + 0x21e795]
0x1768b:	call	0x8a70
		Instruction group(s): [2, 7, 145] 

0x17690:	mov	edi, ebx
0x17692:	mov	esi, eax
0x17694:	call	0x8860
		Instruction group(s): [2, 7, 145] 

0x17699:	mov	rdi, qword ptr [rip + 0x21e7e0]
0x176a0:	call	0x8a70
		Instruction group(s): [2, 7, 145] 

0x176a5:	cmp	eax, ebp
0x176a7:	je	0x176be
		Instruction group(s): [7, 1] 

0x176a9:	mov	rdi, qword ptr [rip + 0x21e7d0]
0x176b0:	call	0x8a70
		Instruction group(s): [2, 7, 145] 

0x176b5:	mov	edi, ebp
0x176b7:	mov	esi, eax
0x176b9:	call	0x8860
		Instruction group(s): [2, 7, 145] 

0x176be:	mov	rdi, qword ptr [rip + 0x21e75b]
0x176c5:	call	0x8a70
		Instruction group(s): [2, 7, 145] 

0x176ca:	cmp	eax, ebx
0x176cc:	je	0x176d5
		Instruction group(s): [7, 1] 

0x176ce:	mov	edi, ebx
0x176d0:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0x176d5:	mov	rdi, qword ptr [rip + 0x21e7a4]
0x176dc:	call	0x8a70
		Instruction group(s): [2, 7, 145] 

0x176e1:	cmp	eax, ebp
0x176e3:	je	0x176e9
		Instruction group(s): [7, 1] 

0x176e5:	cmp	ebx, ebp
0x176e7:	jne	0x176f4
		Instruction group(s): [7, 1] 

0x176e9:	mov	rsi, r14
0x176ec:	mov	rdi, r13
0x176ef:	call	0x174a0
		Instruction group(s): [2, 7, 145] 

0x176f4:	mov	edi, ebp
0x176f6:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0x176fb:	jmp	0x176e9
		Instruction group(s): [7, 1] 

0x176fd:	nop	dword ptr [rax]
0x17700:	push	r15
		Instruction group(s): [145] 

0x17702:	push	r14
		Instruction group(s): [145] 

0x17704:	mov	r14, rsi
0x17707:	push	r13
		Instruction group(s): [145] 

0x17709:	push	r12
		Instruction group(s): [145] 

0x1770b:	mov	rsi, rdx
0x1770e:	push	rbp
		Instruction group(s): [145] 

0x1770f:	push	rbx
		Instruction group(s): [145] 

0x17710:	mov	r15d, ecx
0x17713:	mov	rbx, rdx
0x17716:	sub	rsp, 0x18
0x1771a:	mov	r13d, dword ptr [rip + 0x221e4f]
0x17721:	mov	dword ptr [rip + 0x221e45], 0
0x1772b:	mov	qword ptr [rsp + 8], rdi
0x17730:	lea	rdi, [rip + 0x146e0]
0x17737:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x1773c:	lea	rdi, [rip + 0x146dd]
0x17743:	mov	rsi, rbx
0x17746:	mov	r12, rax
0x17749:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x1774e:	lea	rdi, [rip + 0x146da]
0x17755:	mov	rsi, rbx
0x17758:	mov	rbp, rax
0x1775b:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x17760:	mov	rdi, qword ptr [rsp + 8]
0x17765:	mov	r9d, r15d
0x17768:	mov	rcx, rbp
0x1776b:	mov	rdx, r12
0x1776e:	mov	rsi, r14
0x17771:	mov	r8, rax
0x17774:	mov	rbx, rax
0x17777:	mov	dword ptr [rip + 0x221df2], r13d
0x1777e:	call	0x16850
		Instruction group(s): [2, 7, 145] 

0x17783:	mov	rdi, r12
0x17786:	mov	r13, rax
0x17789:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1778e:	mov	rdi, rbp
0x17791:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x17796:	mov	rdi, rbx
0x17799:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1779e:	add	rsp, 0x18
0x177a2:	mov	rax, r13
0x177a5:	pop	rbx
		Instruction group(s): [145] 

0x177a6:	pop	rbp
		Instruction group(s): [145] 

0x177a7:	pop	r12
		Instruction group(s): [145] 

0x177a9:	pop	r13
		Instruction group(s): [145] 

0x177ab:	pop	r14
		Instruction group(s): [145] 

0x177ad:	pop	r15
		Instruction group(s): [145] 

0x177af:	ret	
		Instruction group(s): [3, 145] 

0x177b0:	push	r15
		Instruction group(s): [145] 

0x177b2:	push	r14
		Instruction group(s): [145] 

0x177b4:	push	r13
		Instruction group(s): [145] 

0x177b6:	push	r12
		Instruction group(s): [145] 

0x177b8:	push	rbp
		Instruction group(s): [145] 

0x177b9:	push	rbx
		Instruction group(s): [145] 

0x177ba:	mov	rbp, rdi
0x177bd:	sub	rsp, 0x38
0x177c1:	mov	rdi, qword ptr [rip + 0x21e658]
0x177c8:	mov	rax, qword ptr fs:[0x28]
0x177d1:	mov	qword ptr [rsp + 0x28], rax
0x177d6:	xor	eax, eax
0x177d8:	call	0x8a70
		Instruction group(s): [2, 7, 145] 

0x177dd:	mov	rdi, qword ptr [rip + 0x21e69c]
0x177e4:	mov	dword ptr [rsp + 8], eax
0x177e8:	call	0x8a70
		Instruction group(s): [2, 7, 145] 

0x177ed:	mov	rbx, qword ptr [rbp + 0x28]
0x177f1:	mov	dword ptr [rsp + 0xc], eax
0x177f5:	test	rbx, rbx
0x177f8:	je	0x17b72
		Instruction group(s): [7, 1] 

0x177fe:	mov	rax, qword ptr [rbp + 8]
0x17802:	mov	ecx, dword ptr [rbp + 0x30]
0x17805:	movzx	r15d, byte ptr [rbp + 0x44]
0x1780a:	mov	rdx, qword ptr [rax + 0x20]
0x1780e:	lea	r13d, [rcx - 1]
		Instruction group(s): [145] 

0x17812:	add	r13, qword ptr [rdx + 0x20]
0x17816:	mov	edx, r15d
0x17819:	and	edx, 0xfffffffd
0x1781c:	movsx	r9d, byte ptr [r13]
0x17821:	or	r9d, dword ptr [rax + 0x80]
0x17828:	mov	eax, r9d
0x1782b:	mov	r14d, r9d
0x1782e:	shr	eax, 2
0x17831:	and	eax, 1
0x17834:	add	eax, eax
0x17836:	or	edx, eax
0x17838:	mov	byte ptr [rbp + 0x44], dl
0x1783b:	movzx	r12d, byte ptr [rbx]
0x1783f:	mov	r15d, edx
0x17842:	test	r12b, r12b
0x17845:	jne	0x17880
		Instruction group(s): [7, 1] 

0x17847:	jmp	0x17897
		Instruction group(s): [7, 1] 

0x17849:	nop	dword ptr [rax]
0x17850:	cmp	r12b, 0x2b
0x17854:	je	0x17be8
		Instruction group(s): [7, 1] 

0x1785a:	cmp	r12b, 0x2d
0x1785e:	je	0x17bf8
		Instruction group(s): [7, 1] 

0x17864:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0x17869:	mov	rax, qword ptr [rax]
0x1786c:	test	byte ptr [rax + r12*2], 1
0x17871:	je	0x17897
		Instruction group(s): [7, 1] 

0x17873:	add	rbx, 1
0x17877:	movzx	r12d, byte ptr [rbx]
0x1787b:	test	r12b, r12b
0x1787e:	je	0x17897
		Instruction group(s): [7, 1] 

0x17880:	cmp	r12b, 0x40
0x17884:	jne	0x17850
		Instruction group(s): [7, 1] 

0x17886:	add	rbx, 1
0x1788a:	movzx	r12d, byte ptr [rbx]
0x1788e:	or	r14d, 2
0x17892:	test	r12b, r12b
0x17895:	jne	0x17880
		Instruction group(s): [7, 1] 

0x17897:	movzx	eax, byte ptr [rbp + 0x44]
0x1789b:	mov	r15d, r14d
0x1789e:	mov	rcx, rbx
0x178a1:	and	r15d, 1
0x178a5:	mov	edx, r15d
0x178a8:	shl	edx, 4
0x178ab:	and	eax, 0xffffffef
0x178ae:	or	eax, edx
0x178b0:	mov	byte ptr [rbp + 0x44], al
0x178b3:	or	byte ptr [r13], r15b
0x178b7:	mov	rax, qword ptr [rbp + 8]
0x178bb:	movzx	edx, byte ptr [rbx]
0x178be:	mov	rax, qword ptr [rax + 0x20]
0x178c2:	test	dl, dl
0x178c4:	movzx	edi, byte ptr [rax + 0x2a]
0x178c8:	je	0x17900
		Instruction group(s): [7, 1] 

0x178ca:	mov	rax, rbx
0x178cd:	jmp	0x178d7
		Instruction group(s): [7, 1] 

0x178cf:	nop	
0x178d0:	test	dl, dl
0x178d2:	mov	rax, rsi
0x178d5:	je	0x17900
		Instruction group(s): [7, 1] 

0x178d7:	add	rcx, 1
0x178db:	mov	byte ptr [rcx - 1], dl
0x178de:	cmp	byte ptr [rax], 0xa
0x178e1:	lea	rsi, [rax + 1]
0x178e5:	movzx	edx, byte ptr [rax + 1]
0x178e9:	jne	0x178d0
		Instruction group(s): [7, 1] 

0x178eb:	cmp	dl, dil
0x178ee:	jne	0x178d0
		Instruction group(s): [7, 1] 

0x178f0:	movzx	edx, byte ptr [rax + 2]
0x178f4:	lea	rsi, [rax + 2]
0x178f8:	mov	rax, rsi
0x178fb:	test	dl, dl
0x178fd:	jne	0x178d7
		Instruction group(s): [7, 1] 

0x178ff:	nop	
0x17900:	mov	byte ptr [rcx], 0
0x17903:	mov	rdx, qword ptr [rbp + 8]
0x17907:	lea	r13, [rsp + 0x18]
0x1790c:	mov	eax, dword ptr [rbp + 0x30]
0x1790f:	mov	qword ptr [rsp + 0x18], 0
0x17918:	lea	r8, [rbp + 0x18]
0x1791c:	mov	rsi, r13
0x1791f:	mov	rdi, rbx
0x17922:	mov	rcx, qword ptr [rdx + 0x20]
0x17926:	sub	eax, 1
0x17929:	mov	rcx, qword ptr [rcx + 0x20]
0x1792d:	movsx	ecx, byte ptr [rcx + rax]
0x17931:	call	0x17700
		Instruction group(s): [2, 7, 145] 

0x17936:	mov	r12, rax
0x17939:	mov	rax, qword ptr [rsp + 0x18]
0x1793e:	test	rax, rax
0x17941:	je	0x17c08
		Instruction group(s): [7, 1] 

0x17947:	lea	rdx, [rax + 1]
0x1794b:	test	r12, r12
0x1794e:	mov	qword ptr [rsp + 0x18], rdx
0x17953:	mov	byte ptr [rax], 0
0x17956:	mov	rax, qword ptr [rsp + 0x18]
0x1795b:	mov	qword ptr [rbp + 0x28], rax
0x1795f:	je	0x17c19
		Instruction group(s): [7, 1] 

0x17965:	mov	r11d, dword ptr [rip + 0x21ea70]
0x1796c:	test	r11d, r11d
0x1796f:	je	0x17c38
		Instruction group(s): [7, 1] 

0x17975:	test	r15d, r15d
0x17978:	je	0x17cb0
		Instruction group(s): [7, 1] 

0x1797e:	mov	ecx, dword ptr [rip + 0x21ea20]
0x17984:	xor	edx, edx
0x17986:	test	ecx, ecx
0x17988:	je	0x1799a
		Instruction group(s): [7, 1] 

0x1798a:	mov	eax, r14d
0x1798d:	not	eax
0x1798f:	and	eax, 1
0x17992:	cmp	ecx, 3
0x17995:	sete	dl
0x17998:	or	edx, eax
0x1799a:	movzx	eax, byte ptr [rbp + 0x3c]
0x1799e:	lea	rdi, [rbp + 0x34]
0x179a2:	and	eax, 0xfffffffe
0x179a5:	or	eax, edx
0x179a7:	test	al, 1
0x179a9:	mov	byte ptr [rbp + 0x3c], al
0x179ac:	jne	0x17c70
		Instruction group(s): [7, 1] 

0x179b2:	mov	qword ptr [rip + 0x21f0eb], 0
0x179bd:	call	0x1c3e0
		Instruction group(s): [2, 7, 145] 

0x179c2:	mov	r9d, dword ptr [rip + 0x221b67]
0x179c9:	test	r9d, r9d
0x179cc:	jne	0x17c87
		Instruction group(s): [7, 1] 

0x179d2:	mov	r8d, dword ptr [rip + 0x21e9c7]
0x179d9:	test	r8d, r8d
0x179dc:	jne	0x17c87
		Instruction group(s): [7, 1] 

0x179e2:	test	r14b, 2
0x179e6:	jne	0x17a00
		Instruction group(s): [7, 1] 

0x179e8:	mov	edi, dword ptr [rip + 0x221ad2]
0x179ee:	test	edi, edi
0x179f0:	je	0x17c87
		Instruction group(s): [7, 1] 

0x179f6:	nop	word ptr cs:[rax + rax]
0x17a00:	mov	r15, qword ptr [r12]
0x17a04:	add	dword ptr [rip + 0x22112d], 1
0x17a0b:	test	r15, r15
0x17a0e:	je	0x17a30
		Instruction group(s): [7, 1] 

0x17a10:	mov	rdi, r15
0x17a13:	call	0x16790
		Instruction group(s): [2, 7, 145] 

0x17a18:	test	eax, eax
0x17a1a:	je	0x17a30
		Instruction group(s): [7, 1] 

0x17a1c:	mov	rax, qword ptr [r12 + 8]
0x17a21:	test	rax, rax
0x17a24:	je	0x17a30
		Instruction group(s): [7, 1] 

0x17a26:	cmp	byte ptr [rax], 0x2d
0x17a29:	je	0x17d6f
		Instruction group(s): [7, 1] 

0x17a2f:	nop	
0x17a30:	mov	r9d, r14d
0x17a33:	mov	esi, dword ptr [rip + 0x221af7]
0x17a39:	not	r9d
0x17a3c:	mov	ebx, r9d
0x17a3f:	and	ebx, 1
0x17a42:	test	esi, esi
0x17a44:	je	0x17a4e
		Instruction group(s): [7, 1] 

0x17a46:	test	bl, bl
0x17a48:	jne	0x17dd0
		Instruction group(s): [7, 1] 

0x17a4e:	call	0x1c850
		Instruction group(s): [2, 7, 145] 

0x17a53:	mov	rdi, qword ptr [rip + 0x21e3c6]
0x17a5a:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x17a5f:	mov	rdi, qword ptr [rip + 0x21e41a]
0x17a66:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x17a6b:	cmp	dword ptr [rip + 0x21e22e], -1
0x17a72:	je	0x17de9
		Instruction group(s): [7, 1] 

0x17a78:	mov	ecx, dword ptr [rip + 0x21e6fa]
0x17a7e:	test	ecx, ecx
0x17a80:	sete	al
0x17a83:	lea	edx, [rax*4]
		Instruction group(s): [145] 

0x17a8a:	movzx	eax, byte ptr [rbp + 0x44]
0x17a8e:	and	eax, 0xfffffffb
0x17a91:	or	eax, edx
0x17a93:	test	al, 4
0x17a95:	mov	byte ptr [rbp + 0x44], al
0x17a98:	je	0x17aa4
		Instruction group(s): [7, 1] 

0x17a9a:	mov	dword ptr [rip + 0x21e6d4], 1
0x17aa4:	and	byte ptr [rbp + 0x44], 0xf7
0x17aa8:	cmp	qword ptr [rbp + 0x10], 0
0x17aad:	je	0x17e24
		Instruction group(s): [7, 1] 

0x17ab3:	movzx	eax, byte ptr [rbp + 0x44]
0x17ab7:	test	al, 1
0x17ab9:	je	0x17ce8
		Instruction group(s): [7, 1] 

0x17abf:	test	al, 4
0x17ac1:	mov	edx, 0
0x17ac6:	cmove	edx, dword ptr [rip + 0x21e1d3]
		Instruction group(s): [137] 

0x17acd:	mov	rsi, qword ptr [rbp + 0x10]
0x17ad1:	lea	rcx, [rsp + 0x10]
0x17ad6:	lea	r8, [rsp + 0x14]
0x17adb:	mov	r9, r13
0x17ade:	mov	rdi, r12
0x17ae1:	call	0x29c90
		Instruction group(s): [2, 7, 145] 

0x17ae6:	test	eax, eax
0x17ae8:	jne	0x17ce8
		Instruction group(s): [7, 1] 

0x17aee:	movzx	eax, byte ptr [rbp + 0x44]
0x17af2:	test	al, 4
0x17af4:	je	0x17b0e
		Instruction group(s): [7, 1] 

0x17af6:	mov	edx, dword ptr [rsp + 0x18]
0x17afa:	test	edx, edx
0x17afc:	jne	0x17b0e
		Instruction group(s): [7, 1] 

0x17afe:	and	eax, 0xfffffffb
0x17b01:	mov	dword ptr [rip + 0x21e66d], 0
0x17b0b:	mov	byte ptr [rbp + 0x44], al
0x17b0e:	movzx	eax, byte ptr [rbp + 0x44]
0x17b12:	movzx	edx, byte ptr [rsp + 0x10]
0x17b17:	and	eax, 0xfffffffe
0x17b1a:	and	edx, 1
0x17b1d:	or	eax, edx
0x17b1f:	mov	byte ptr [rbp + 0x44], al
0x17b22:	mov	eax, dword ptr [rsp + 0x14]
0x17b26:	mov	dword ptr [rbp + 0x40], eax
0x17b29:	mov	rdi, qword ptr [rbp + 8]
0x17b2d:	mov	esi, 2
0x17b32:	add	qword ptr [rip + 0x21e58e], 1
0x17b3a:	call	0x10260
		Instruction group(s): [2, 7, 145] 

0x17b3f:	mov	rdi, qword ptr [r12]
0x17b43:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x17b48:	mov	rdi, r12
0x17b4b:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x17b50:	mov	qword ptr [rip + 0x21ef4d], 0
0x17b5b:	jmp	0x17bc0
		Instruction group(s): [7, 1] 

0x17b5d:	nop	dword ptr [rax]
0x17b60:	mov	rdx, qword ptr [rbp + 0x20]
0x17b64:	lea	ecx, [rax + 1]
		Instruction group(s): [145] 

0x17b67:	mov	dword ptr [rbp + 0x30], ecx
0x17b6a:	mov	rbx, qword ptr [rdx + rax*8]
0x17b6e:	mov	qword ptr [rbp + 0x28], rbx
0x17b72:	test	rbx, rbx
0x17b75:	je	0x17b80
		Instruction group(s): [7, 1] 

0x17b77:	cmp	byte ptr [rbx], 0
0x17b7a:	jne	0x17c28
		Instruction group(s): [7, 1] 

0x17b80:	mov	rdi, qword ptr [rbp + 8]
0x17b84:	mov	eax, dword ptr [rbp + 0x30]
0x17b87:	mov	rdx, qword ptr [rdi + 0x20]
0x17b8b:	movzx	edx, word ptr [rdx + 0x28]
0x17b8f:	cmp	eax, edx
0x17b91:	jne	0x17b60
		Instruction group(s): [7, 1] 

0x17b93:	mov	qword ptr [rbp + 0x28], 0
0x17b9b:	mov	esi, 2
0x17ba0:	call	0x10260
		Instruction group(s): [2, 7, 145] 

0x17ba5:	mov	rdi, qword ptr [rbp + 8]
0x17ba9:	and	byte ptr [rdi + 0x84], 0xfc
0x17bb0:	call	0x22cb0
		Instruction group(s): [2, 7, 145] 

0x17bb5:	mov	qword ptr [rip + 0x21eee8], 0
0x17bc0:	mov	rax, qword ptr [rsp + 0x28]
0x17bc5:	xor	rax, qword ptr fs:[0x28]
0x17bce:	jne	0x17e45
		Instruction group(s): [7, 1] 

0x17bd4:	add	rsp, 0x38
0x17bd8:	pop	rbx
		Instruction group(s): [145] 

0x17bd9:	pop	rbp
		Instruction group(s): [145] 

0x17bda:	pop	r12
		Instruction group(s): [145] 

0x17bdc:	pop	r13
		Instruction group(s): [145] 

0x17bde:	pop	r14
		Instruction group(s): [145] 

0x17be0:	pop	r15
		Instruction group(s): [145] 

0x17be2:	ret	
		Instruction group(s): [3, 145] 

0x17be3:	nop	dword ptr [rax + rax]
0x17be8:	or	r14d, 1
0x17bec:	jmp	0x17873
		Instruction group(s): [7, 1] 

0x17bf1:	nop	dword ptr [rax]
0x17bf8:	or	r15d, 2
0x17bfc:	mov	byte ptr [rbp + 0x44], r15b
0x17c00:	jmp	0x17873
		Instruction group(s): [7, 1] 

0x17c05:	nop	dword ptr [rax]
0x17c08:	test	r12, r12
0x17c0b:	mov	qword ptr [rbp + 0x28], 0
0x17c13:	jne	0x17965
		Instruction group(s): [7, 1] 

0x17c19:	mov	rbx, qword ptr [rbp + 0x28]
0x17c1d:	jmp	0x17b72
		Instruction group(s): [7, 1] 

0x17c22:	nop	word ptr [rax + rax]
0x17c28:	mov	rdi, rbp
0x17c2b:	call	0x177b0
		Instruction group(s): [2, 7, 145] 

0x17c30:	jmp	0x17bb5
		Instruction group(s): [7, 1] 

0x17c32:	nop	word ptr [rax + rax]
0x17c38:	mov	r10d, dword ptr [rip + 0x2219c5]
0x17c3f:	test	r10d, r10d
0x17c42:	je	0x1797e
		Instruction group(s): [7, 1] 

0x17c48:	test	r15d, r15d
0x17c4b:	jne	0x1797e
		Instruction group(s): [7, 1] 

0x17c51:	mov	rdi, qword ptr [r12]
0x17c55:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x17c5a:	mov	rdi, r12
0x17c5d:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x17c62:	mov	rbx, qword ptr [rbp + 0x28]
0x17c66:	jmp	0x17b72
		Instruction group(s): [7, 1] 

0x17c6b:	nop	dword ptr [rax + rax]
0x17c70:	mov	r9d, dword ptr [rip + 0x2218b9]
0x17c77:	mov	qword ptr [rip + 0x21ee2a], rdi
0x17c7e:	test	r9d, r9d
0x17c81:	je	0x179d2
		Instruction group(s): [7, 1] 

0x17c87:	mov	rdi, rbx
0x17c8a:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x17c8f:	lea	rdx, [rip + 0x1349c]
0x17c96:	mov	rsi, rax
0x17c99:	mov	rcx, rbx
0x17c9c:	xor	edi, edi
0x17c9e:	xor	eax, eax
0x17ca0:	call	0x1ca50
		Instruction group(s): [2, 7, 145] 

0x17ca5:	jmp	0x17a00
		Instruction group(s): [7, 1] 

0x17caa:	nop	word ptr [rax + rax]
0x17cb0:	mov	rdi, qword ptr [r12]
0x17cb4:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x17cb9:	mov	rdi, r12
0x17cbc:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x17cc1:	mov	rdi, qword ptr [rbp + 8]
0x17cc5:	movzx	eax, byte ptr [rdi + 0x84]
0x17ccc:	and	eax, 0xfffffffc
0x17ccf:	or	eax, 2
0x17cd2:	mov	byte ptr [rdi + 0x84], al
0x17cd8:	call	0x22cb0
		Instruction group(s): [2, 7, 145] 

0x17cdd:	jmp	0x17bc0
		Instruction group(s): [7, 1] 

0x17ce2:	nop	word ptr [rax + rax]
0x17ce8:	lea	rsi, [rip + 0x221891]
0x17cef:	xor	edx, edx
0x17cf1:	xor	edi, edi
0x17cf3:	call	0x8630
		Instruction group(s): [2, 7, 145] 

0x17cf8:	and	byte ptr [rbp + 0x44], 0xfe
0x17cfc:	test	byte ptr [rbp + 0x3c], 1
0x17d00:	mov	r13, qword ptr [rip + 0x21e139]
0x17d07:	je	0x17d25
		Instruction group(s): [7, 1] 

0x17d09:	mov	eax, dword ptr [rbp + 0x34]
0x17d0c:	test	eax, eax
0x17d0e:	cmovs	eax, dword ptr [rsp + 8]
		Instruction group(s): [137] 

0x17d13:	mov	dword ptr [rsp + 8], eax
0x17d17:	mov	eax, dword ptr [rbp + 0x38]
0x17d1a:	test	eax, eax
0x17d1c:	cmovs	eax, dword ptr [rsp + 0xc]
		Instruction group(s): [137] 

0x17d21:	mov	dword ptr [rsp + 0xc], eax
0x17d25:	call	0x8d00
		Instruction group(s): [2, 7, 145] 

0x17d2a:	test	eax, eax
0x17d2c:	mov	dword ptr [rbp + 0x40], eax
0x17d2f:	mov	qword ptr [rip + 0x21e10a], r13
0x17d36:	je	0x17e4a
		Instruction group(s): [7, 1] 

0x17d3c:	jns	0x17b29
		Instruction group(s): [7, 1] 

0x17d42:	call	0x17440
		Instruction group(s): [2, 7, 145] 

0x17d47:	lea	rsi, [rip + 0x15c7f]
0x17d4e:	lea	rdi, [rip + 0x13a6a]
0x17d55:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0x17d5a:	mov	rdi, qword ptr [rbp + 8]
0x17d5e:	or	byte ptr [rdi + 0x84], 3
0x17d65:	call	0x22cb0
		Instruction group(s): [2, 7, 145] 

0x17d6a:	jmp	0x17bb5
		Instruction group(s): [7, 1] 

0x17d6f:	movzx	ecx, byte ptr [rax + 1]
0x17d73:	cmp	cl, 0x63
0x17d76:	je	0x17e36
		Instruction group(s): [7, 1] 

0x17d7c:	cmp	cl, 0x65
0x17d7f:	jne	0x17a30
		Instruction group(s): [7, 1] 

0x17d85:	cmp	byte ptr [rax + 2], 0x63
0x17d89:	jne	0x17a30
		Instruction group(s): [7, 1] 

0x17d8f:	cmp	byte ptr [rax + 3], 0
0x17d93:	jne	0x17a30
		Instruction group(s): [7, 1] 

0x17d99:	mov	rax, qword ptr [r12 + 0x10]
0x17d9e:	test	rax, rax
0x17da1:	je	0x17a30
		Instruction group(s): [7, 1] 

0x17da7:	cmp	byte ptr [rax], 0x3a
0x17daa:	jne	0x17a30
		Instruction group(s): [7, 1] 

0x17db0:	cmp	byte ptr [rax + 1], 0
0x17db4:	jne	0x17a30
		Instruction group(s): [7, 1] 

0x17dba:	cmp	qword ptr [r12 + 0x18], 0
0x17dc0:	jne	0x17a30
		Instruction group(s): [7, 1] 

0x17dc6:	nop	word ptr cs:[rax + rax]
0x17dd0:	mov	rdi, r15
0x17dd3:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x17dd8:	mov	rdi, r12
0x17ddb:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x17de0:	mov	rbx, qword ptr [rbp + 0x28]
0x17de4:	jmp	0x17b72
		Instruction group(s): [7, 1] 

0x17de9:	lea	rdi, [rsp + 0x20]
0x17dee:	call	0x8950
		Instruction group(s): [2, 7, 145] 

0x17df3:	test	eax, eax
0x17df5:	jne	0x17a78
		Instruction group(s): [7, 1] 

0x17dfb:	mov	edi, dword ptr [rsp + 0x24]
0x17dff:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0x17e04:	mov	edi, dword ptr [rsp + 0x20]
0x17e08:	mov	edx, 1
0x17e0d:	mov	esi, 2
0x17e12:	xor	eax, eax
0x17e14:	mov	dword ptr [rip + 0x21de86], edi
0x17e1a:	call	0x8750
		Instruction group(s): [2, 7, 145] 

0x17e1f:	jmp	0x17a78
		Instruction group(s): [7, 1] 

0x17e24:	mov	rdi, qword ptr [rbp + 8]
0x17e28:	call	0x279a0
		Instruction group(s): [2, 7, 145] 

0x17e2d:	mov	qword ptr [rbp + 0x10], rax
0x17e31:	jmp	0x17ab3
		Instruction group(s): [7, 1] 

0x17e36:	cmp	byte ptr [rax + 2], 0
0x17e3a:	je	0x17d99
		Instruction group(s): [7, 1] 

0x17e40:	jmp	0x17a30
		Instruction group(s): [7, 1] 

0x17e45:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x17e4a:	call	0x17440
		Instruction group(s): [2, 7, 145] 

0x17e4f:	test	bl, bl
0x17e51:	je	0x17e6d
		Instruction group(s): [7, 1] 

0x17e53:	mov	edi, dword ptr [rip + 0x21decf]
0x17e59:	test	edi, edi
0x17e5b:	js	0x17e6d
		Instruction group(s): [7, 1] 

0x17e5d:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0x17e62:	mov	edi, dword ptr [rip + 0x21dec4]
0x17e68:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0x17e6d:	mov	edi, dword ptr [rip + 0x21dead]
0x17e73:	test	edi, edi
0x17e75:	js	0x17e7c
		Instruction group(s): [7, 1] 

0x17e77:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0x17e7c:	cmp	qword ptr [rip + 0x22165c], 0
0x17e84:	je	0x17e97
		Instruction group(s): [7, 1] 

0x17e86:	lea	rsi, [rip + 0x221653]
0x17e8d:	mov	edi, 3
0x17e92:	call	0x8b50
		Instruction group(s): [2, 7, 145] 

0x17e97:	test	byte ptr [rbp + 0x44], 4
0x17e9b:	mov	rbx, qword ptr [rbp + 0x10]
0x17e9f:	jne	0x17ebc
		Instruction group(s): [7, 1] 

0x17ea1:	mov	eax, dword ptr [rip + 0x21ddf9]
0x17ea7:	mov	edx, dword ptr [rsp + 0xc]
0x17eab:	mov	esi, dword ptr [rsp + 8]
0x17eaf:	mov	r8, rbx
0x17eb2:	mov	rcx, r12
0x17eb5:	mov	edi, eax
0x17eb7:	call	0x17630
		Instruction group(s): [2, 7, 145] 

0x17ebc:	mov	rdi, qword ptr [rip + 0x21df6d]
0x17ec3:	call	0x8a70
		Instruction group(s): [2, 7, 145] 

0x17ec8:	jmp	0x17ea7
		Instruction group(s): [7, 1] 

0x17eca:	nop	word ptr [rax + rax]
0x17ed0:	push	r15
		Instruction group(s): [145] 

0x17ed2:	push	r14
		Instruction group(s): [145] 

0x17ed4:	push	r13
		Instruction group(s): [145] 

0x17ed6:	push	r12
		Instruction group(s): [145] 

0x17ed8:	mov	r13d, edi
0x17edb:	push	rbp
		Instruction group(s): [145] 

0x17edc:	push	rbx
		Instruction group(s): [145] 

0x17edd:	sub	rsp, 0x48
0x17ee1:	mov	rbp, qword ptr [rip + 0x21e1f0]
0x17ee8:	mov	rax, qword ptr fs:[0x28]
0x17ef1:	mov	qword ptr [rsp + 0x38], rax
0x17ef6:	xor	eax, eax
0x17ef8:	lea	rax, [rsp + 0x34]
0x17efd:	mov	dword ptr [rsp + 4], esi
0x17f01:	mov	dword ptr [rsp], 1
0x17f08:	mov	qword ptr [rsp + 8], rax
0x17f0d:	lea	rax, [rsp + 0x30]
0x17f12:	mov	qword ptr [rsp + 0x10], rax
0x17f17:	lea	rax, [rsp + 0x2c]
0x17f1c:	mov	qword ptr [rsp + 0x18], rax
0x17f21:	nop	dword ptr [rax]
0x17f28:	test	rbp, rbp
0x17f2b:	je	0x1841d
		Instruction group(s): [7, 1] 

0x17f31:	nop	dword ptr [rax]
0x17f38:	mov	eax, dword ptr [rsp]
0x17f3b:	or	eax, r13d
0x17f3e:	je	0x1842d
		Instruction group(s): [7, 1] 

0x17f44:	mov	eax, dword ptr [rsp + 4]
0x17f48:	test	eax, eax
0x17f4a:	je	0x17f7e
		Instruction group(s): [7, 1] 

0x17f4c:	test	r13d, r13d
0x17f4f:	je	0x17f7e
		Instruction group(s): [7, 1] 

0x17f51:	mov	rdi, qword ptr [rip + 0x21dec8]
0x17f58:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x17f5d:	mov	r15d, dword ptr [rip + 0x21e200]
0x17f64:	test	r15d, r15d
0x17f67:	je	0x186e0
		Instruction group(s): [7, 1] 

0x17f6d:	mov	rbp, qword ptr [rip + 0x21e164]
0x17f74:	mov	dword ptr [rip + 0x21e1e6], 1
0x17f7e:	mov	eax, dword ptr [rip + 0x21e1e4]
0x17f84:	test	eax, eax
0x17f86:	je	0x17f91
		Instruction group(s): [7, 1] 

0x17f88:	sub	eax, 1
0x17f8b:	mov	dword ptr [rip + 0x21e1d7], eax
0x17f91:	mov	r14d, dword ptr [rip + 0x21e0a8]
0x17f98:	xor	ebx, ebx
0x17f9a:	test	r14d, r14d
0x17f9d:	setne	bl
0x17fa0:	test	rbp, rbp
0x17fa3:	je	0x18079
		Instruction group(s): [7, 1] 

0x17fa9:	xor	r12d, r12d
0x17fac:	jmp	0x18021
		Instruction group(s): [7, 1] 

0x17fae:	nop	
0x17fb0:	movsxd	r8, dword ptr [rbp + 0x40]
		Instruction group(s): [145] 

0x17fb4:	lea	rcx, [rip + 0x13da9]
0x17fbb:	lea	rdi, [rip + 0x21e13e]
0x17fc2:	mov	edx, 0x64
0x17fc7:	mov	esi, 1
0x17fcc:	xor	eax, eax
0x17fce:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x17fd3:	mov	rax, qword ptr [rbp + 8]
0x17fd7:	lea	rsi, [rip + 0x13e62]
0x17fde:	mov	edx, 5
0x17fe3:	xor	edi, edi
0x17fe5:	mov	r15, qword ptr [rax]
0x17fe8:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x17fed:	lea	r8, [rip + 0x21e10c]
0x17ff4:	mov	rsi, rax
0x17ff7:	mov	edi, 1
0x17ffc:	mov	r9, r14
0x17fff:	mov	rcx, r15
0x18002:	mov	rdx, rbp
0x18005:	xor	eax, eax
0x18007:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x1800c:	mov	rdi, qword ptr [rip + 0x21de0d]
0x18013:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x18018:	mov	rbp, qword ptr [rbp]
0x1801c:	test	rbp, rbp
0x1801f:	je	0x18070
		Instruction group(s): [7, 1] 

0x18021:	movzx	eax, byte ptr [rbp + 0x44]
0x18025:	mov	edx, eax
0x18027:	not	eax
0x18029:	and	edx, 1
0x1802c:	and	eax, 1
0x1802f:	movzx	ecx, dl
0x18032:	or	ebx, eax
0x18034:	or	r12d, ecx
0x18037:	test	byte ptr [rip + 0x21e3ba], 4
0x1803e:	je	0x18018
		Instruction group(s): [7, 1] 

0x18040:	test	dl, dl
0x18042:	lea	r14, [rip + 0x15984]
0x18049:	je	0x17fb0
		Instruction group(s): [7, 1] 

0x1804f:	lea	rsi, [rip + 0x13de0]
0x18056:	mov	edx, 5
0x1805b:	xor	edi, edi
0x1805d:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x18062:	mov	r14, rax
0x18065:	jmp	0x17fb0
		Instruction group(s): [7, 1] 

0x1806a:	nop	word ptr [rax + rax]
0x18070:	test	r12d, r12d
0x18073:	jne	0x18508
		Instruction group(s): [7, 1] 

0x18079:	test	ebx, ebx
0x1807b:	je	0x1842d
		Instruction group(s): [7, 1] 

0x18081:	xor	r12d, r12d
0x18084:	test	r13d, r13d
0x18087:	lea	rbx, [rsp + 0x28]
0x1808c:	jne	0x18450
		Instruction group(s): [7, 1] 

0x18092:	mov	edx, 1
0x18097:	mov	rsi, rbx
0x1809a:	mov	edi, 0xffffffff
0x1809f:	call	0x8bf0
		Instruction group(s): [2, 7, 145] 

0x180a4:	test	eax, eax
0x180a6:	js	0x1846b
		Instruction group(s): [7, 1] 

0x180ac:	je	0x18535
		Instruction group(s): [7, 1] 

0x180b2:	mov	edx, dword ptr [rsp + 0x28]
0x180b6:	mov	esi, edx
0x180b8:	mov	ecx, edx
0x180ba:	movzx	edi, dh
0x180bd:	and	esi, 0x7f
0x180c0:	and	ecx, 0x7f
0x180c3:	mov	dword ptr [rsp + 0x2c], edi
0x180c7:	add	esi, 1
0x180ca:	cmp	sil, 1
0x180ce:	mov	esi, 0
0x180d3:	cmovle	ecx, esi
		Instruction group(s): [137] 

0x180d6:	and	edx, 0x80
0x180dc:	mov	dword ptr [rsp + 0x34], edx
0x180e0:	mov	rdx, qword ptr [rip + 0x21dfe1]
0x180e7:	mov	dword ptr [rsp + 0x30], ecx
0x180eb:	test	rdx, rdx
0x180ee:	je	0x180fb
		Instruction group(s): [7, 1] 

0x180f0:	sub	rdx, 1
0x180f4:	mov	qword ptr [rip + 0x21dfcd], rdx
0x180fb:	cmp	dword ptr [rip + 0x21df3f], eax
0x18101:	je	0x187ab
		Instruction group(s): [7, 1] 

0x18107:	xor	r12d, r12d
0x1810a:	mov	rbp, qword ptr [rip + 0x21dfc7]
0x18111:	test	rbp, rbp
0x18114:	je	0x1841d
		Instruction group(s): [7, 1] 

0x1811a:	mov	rbx, rbp
0x1811d:	xor	r14d, r14d
0x18120:	jmp	0x1813a
		Instruction group(s): [7, 1] 

0x18122:	nop	word ptr [rax + rax]
0x18128:	mov	rdx, qword ptr [rbx]
0x1812b:	mov	r14, rbx
0x1812e:	test	rdx, rdx
0x18131:	je	0x17f28
		Instruction group(s): [7, 1] 

0x18137:	mov	rbx, rdx
0x1813a:	movsxd	r8, dword ptr [rbx + 0x40]
		Instruction group(s): [145] 

0x1813e:	cmp	r8d, eax
0x18141:	jne	0x18128
		Instruction group(s): [7, 1] 

0x18143:	movzx	edx, byte ptr [rbx + 0x44]
0x18147:	mov	ecx, edx
0x18149:	and	ecx, 1
0x1814c:	cmp	ecx, r12d
0x1814f:	jne	0x18128
		Instruction group(s): [7, 1] 

0x18151:	mov	eax, dword ptr [rsp + 0x30]
0x18155:	test	eax, eax
0x18157:	jne	0x1816a
		Instruction group(s): [7, 1] 

0x18159:	mov	ebp, dword ptr [rsp + 0x2c]
0x1815d:	test	ebp, ebp
0x1815f:	je	0x1816f
		Instruction group(s): [7, 1] 

0x18161:	cmp	ebp, 1
0x18164:	je	0x18710
		Instruction group(s): [7, 1] 

0x1816a:	mov	ebp, 2
0x1816f:	test	byte ptr [rip + 0x21e282], 4
0x18176:	je	0x184f0
		Instruction group(s): [7, 1] 

0x1817c:	and	edx, 1
0x1817f:	lea	r12, [rip + 0x15847]
0x18186:	jne	0x18640
		Instruction group(s): [7, 1] 

0x1818c:	lea	rcx, [rip + 0x13bd1]
0x18193:	lea	rdi, [rip + 0x21df66]
0x1819a:	mov	edx, 0x64
0x1819f:	xor	eax, eax
0x181a1:	mov	esi, 1
0x181a6:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x181ab:	test	ebp, ebp
0x181ad:	mov	edx, 5
0x181b2:	je	0x185f0
		Instruction group(s): [7, 1] 

0x181b8:	lea	rsi, [rip + 0x13ea9]
0x181bf:	xor	edi, edi
0x181c1:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x181c6:	lea	rcx, [rip + 0x21df33]
0x181cd:	mov	r8, r12
0x181d0:	mov	rsi, rax
0x181d3:	mov	rdx, rbx
0x181d6:	mov	edi, 1
0x181db:	xor	eax, eax
0x181dd:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x181e2:	mov	rdi, qword ptr [rip + 0x21dc37]
0x181e9:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x181ee:	mov	r12, qword ptr [rbx + 0x18]
0x181f2:	test	r12, r12
0x181f5:	je	0x18270
		Instruction group(s): [7, 1] 

0x181f7:	test	byte ptr [rip + 0x21e1fa], 4
0x181fe:	je	0x18235
		Instruction group(s): [7, 1] 

0x18200:	lea	rsi, [rip + 0x13eb1]
0x18207:	mov	edx, 5
0x1820c:	xor	edi, edi
0x1820e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x18213:	mov	rdx, r12
0x18216:	mov	rsi, rax
0x18219:	mov	edi, 1
0x1821e:	xor	eax, eax
0x18220:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x18225:	mov	rdi, qword ptr [rip + 0x21dbf4]
0x1822c:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x18231:	mov	r12, qword ptr [rbx + 0x18]
0x18235:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x1823a:	mov	rdi, r12
0x1823d:	mov	dword ptr [rax], 0
0x18243:	mov	r15, rax
0x18246:	call	0x8690
		Instruction group(s): [2, 7, 145] 

0x1824b:	test	eax, eax
0x1824d:	mov	r12, qword ptr [rbx + 0x18]
0x18251:	je	0x18260
		Instruction group(s): [7, 1] 

0x18253:	test	byte ptr [rip + 0x21e19e], 4
0x1825a:	jne	0x18730
		Instruction group(s): [7, 1] 

0x18260:	mov	rdi, r12
0x18263:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x18268:	mov	qword ptr [rbx + 0x18], 0
0x18270:	movzx	edx, byte ptr [rbx + 0x44]
0x18274:	test	dl, 4
0x18277:	je	0x18283
		Instruction group(s): [7, 1] 

0x18279:	mov	dword ptr [rip + 0x21def5], 0
0x18283:	mov	eax, edx
0x18285:	shr	al, 5
0x18288:	and	eax, 1
0x1828b:	test	ebp, ebp
0x1828d:	je	0x1849a
		Instruction group(s): [7, 1] 

0x18293:	and	edx, 2
0x18296:	jne	0x18480
		Instruction group(s): [7, 1] 

0x1829c:	mov	r15d, dword ptr [rip + 0x21e141]
0x182a3:	test	r15d, r15d
0x182a6:	jne	0x18480
		Instruction group(s): [7, 1] 

0x182ac:	xor	eax, 1
0x182af:	cmp	ebp, 2
0x182b2:	mov	r12d, eax
0x182b5:	jne	0x18630
		Instruction group(s): [7, 1] 

0x182bb:	test	al, al
0x182bd:	je	0x18630
		Instruction group(s): [7, 1] 

0x182c3:	mov	ecx, dword ptr [rsp + 0x34]
0x182c7:	mov	edx, dword ptr [rsp + 0x30]
0x182cb:	xor	r8d, r8d
0x182ce:	mov	esi, dword ptr [rsp + 0x2c]
0x182d2:	mov	rdi, rbx
0x182d5:	call	0x162b0
		Instruction group(s): [2, 7, 145] 

0x182da:	mov	eax, 3
0x182df:	mov	rcx, qword ptr [rbx + 8]
0x182e3:	and	eax, 3
0x182e6:	mov	edx, eax
0x182e8:	movzx	eax, byte ptr [rcx + 0x84]
0x182ef:	and	eax, 0xfffffffc
0x182f2:	or	eax, edx
0x182f4:	cmp	dword ptr [rip + 0x21d9a9], -1
0x182fb:	mov	byte ptr [rcx + 0x84], al
0x18301:	je	0x18770
		Instruction group(s): [7, 1] 

0x18307:	mov	r10d, dword ptr [rsp + 4]
0x1830c:	mov	r11d, dword ptr [rsp + 0x30]
0x18311:	test	r10d, r10d
0x18314:	sete	al
0x18317:	and	r12d, eax
0x1831a:	test	r11d, r11d
0x1831d:	jne	0x1832b
		Instruction group(s): [7, 1] 

0x1831f:	mov	r9d, dword ptr [rip + 0x21d97e]
0x18326:	test	r9d, r9d
0x18329:	je	0x18333
		Instruction group(s): [7, 1] 

0x1832b:	mov	rdi, rbx
0x1832e:	call	0xcbe0
		Instruction group(s): [2, 7, 145] 

0x18333:	lea	rdi, [rbx + 0x34]
0x18337:	call	0x1c3e0
		Instruction group(s): [2, 7, 145] 

0x1833c:	mov	edi, dword ptr [rip + 0x21db4e]
0x18342:	test	edi, edi
0x18344:	je	0x18588
		Instruction group(s): [7, 1] 

0x1834a:	test	byte ptr [rip + 0x21e0a7], 4
0x18351:	je	0x183c2
		Instruction group(s): [7, 1] 

0x18353:	test	byte ptr [rbx + 0x44], 1
0x18357:	lea	r13, [rip + 0x1566f]
0x1835e:	jne	0x18660
		Instruction group(s): [7, 1] 

0x18364:	movsxd	r8, dword ptr [rbx + 0x40]
		Instruction group(s): [145] 

0x18368:	lea	rcx, [rip + 0x139f5]
0x1836f:	lea	rdi, [rip + 0x21dd8a]
0x18376:	mov	edx, 0x64
0x1837b:	mov	esi, 1
0x18380:	xor	eax, eax
0x18382:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x18387:	lea	rsi, [rip + 0x13d7a]
0x1838e:	mov	edx, 5
0x18393:	xor	edi, edi
0x18395:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1839a:	lea	rcx, [rip + 0x21dd5f]
0x183a1:	mov	rsi, rax
0x183a4:	mov	edi, 1
0x183a9:	mov	r8, r13
0x183ac:	mov	rdx, rbx
0x183af:	xor	eax, eax
0x183b1:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x183b6:	mov	rdi, qword ptr [rip + 0x21da63]
0x183bd:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x183c2:	lea	rsi, [rip + 0x2211b7]
0x183c9:	xor	edx, edx
0x183cb:	xor	edi, edi
0x183cd:	call	0x8630
		Instruction group(s): [2, 7, 145] 

0x183d2:	mov	eax, dword ptr [rip + 0x21dcf8]
0x183d8:	test	eax, eax
0x183da:	je	0x183e5
		Instruction group(s): [7, 1] 

0x183dc:	sub	eax, 1
0x183df:	mov	dword ptr [rip + 0x21dceb], eax
0x183e5:	test	r14, r14
0x183e8:	mov	rax, qword ptr [rbx]
0x183eb:	je	0x185e0
		Instruction group(s): [7, 1] 

0x183f1:	mov	qword ptr [r14], rax
0x183f4:	mov	rdi, rbx
0x183f7:	call	0x16590
		Instruction group(s): [2, 7, 145] 

0x183fc:	call	0x17440
		Instruction group(s): [2, 7, 145] 

0x18401:	test	r12b, r12b
0x18404:	jne	0x18608
		Instruction group(s): [7, 1] 

0x1840a:	mov	rbp, qword ptr [rip + 0x21dcc7]
0x18411:	xor	r13d, r13d
0x18414:	test	rbp, rbp
0x18417:	jne	0x17f38
		Instruction group(s): [7, 1] 

0x1841d:	mov	edx, dword ptr [rip + 0x21dc1d]
0x18423:	xor	ebp, ebp
0x18425:	test	edx, edx
0x18427:	jne	0x17f38
		Instruction group(s): [7, 1] 

0x1842d:	mov	rax, qword ptr [rsp + 0x38]
0x18432:	xor	rax, qword ptr fs:[0x28]
0x1843b:	jne	0x187de
		Instruction group(s): [7, 1] 

0x18441:	add	rsp, 0x48
0x18445:	pop	rbx
		Instruction group(s): [145] 

0x18446:	pop	rbp
		Instruction group(s): [145] 

0x18447:	pop	r12
		Instruction group(s): [145] 

0x18449:	pop	r13
		Instruction group(s): [145] 

0x1844b:	pop	r14
		Instruction group(s): [145] 

0x1844d:	pop	r15
		Instruction group(s): [145] 

0x1844f:	ret	
		Instruction group(s): [3, 145] 

0x18450:	mov	rdi, rbx
0x18453:	call	0x8ce0
		Instruction group(s): [2, 7, 145] 

0x18458:	cmp	eax, -1
0x1845b:	jne	0x180a4
		Instruction group(s): [7, 1] 

0x18461:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x18466:	cmp	dword ptr [rax], 4
0x18469:	je	0x18450
		Instruction group(s): [7, 1] 

0x1846b:	lea	rdi, [rip + 0x139fa]
0x18472:	call	0x1c790
		Instruction group(s): [2, 7, 145] 

0x18477:	nop	word ptr [rax + rax]
0x18480:	mov	ecx, dword ptr [rsp + 0x34]
0x18484:	mov	edx, dword ptr [rsp + 0x30]
0x18488:	mov	r8d, 1
0x1848e:	mov	esi, dword ptr [rsp + 0x2c]
0x18492:	mov	rdi, rbx
0x18495:	call	0x162b0
		Instruction group(s): [2, 7, 145] 

0x1849a:	mov	rax, qword ptr [rbx + 0x28]
0x1849e:	jmp	0x184b2
		Instruction group(s): [7, 1] 

0x184a0:	mov	rdx, qword ptr [rbx + 0x20]
0x184a4:	lea	ecx, [rax + 1]
		Instruction group(s): [145] 

0x184a7:	mov	dword ptr [rbx + 0x30], ecx
0x184aa:	mov	rax, qword ptr [rdx + rax*8]
0x184ae:	mov	qword ptr [rbx + 0x28], rax
0x184b2:	test	rax, rax
0x184b5:	je	0x184c0
		Instruction group(s): [7, 1] 

0x184b7:	cmp	byte ptr [rax], 0
0x184ba:	jne	0x185a0
		Instruction group(s): [7, 1] 

0x184c0:	mov	rdx, qword ptr [rbx + 8]
0x184c4:	mov	eax, dword ptr [rbx + 0x30]
0x184c7:	mov	rcx, qword ptr [rdx + 0x20]
0x184cb:	movzx	ecx, word ptr [rcx + 0x28]
0x184cf:	cmp	eax, ecx
0x184d1:	jne	0x184a0
		Instruction group(s): [7, 1] 

0x184d3:	mov	qword ptr [rbx + 0x28], 0
0x184db:	xor	r12d, r12d
0x184de:	and	byte ptr [rdx + 0x84], 0xfc
0x184e5:	xor	ebp, ebp
0x184e7:	jmp	0x18333
		Instruction group(s): [7, 1] 

0x184ec:	nop	dword ptr [rax]
0x184f0:	mov	r12, qword ptr [rbx + 0x18]
0x184f4:	test	r12, r12
0x184f7:	jne	0x18235
		Instruction group(s): [7, 1] 

0x184fd:	jmp	0x18274
		Instruction group(s): [7, 1] 

0x18502:	nop	word ptr [rax + rax]
0x18508:	mov	rdx, qword ptr [rsp + 8]
0x1850d:	mov	rsi, qword ptr [rsp + 0x10]
0x18512:	xor	ecx, ecx
0x18514:	mov	rdi, qword ptr [rsp + 0x18]
0x18519:	call	0x29ca0
		Instruction group(s): [2, 7, 145] 

0x1851e:	cmp	eax, 0
0x18521:	jg	0x1810a
		Instruction group(s): [7, 1] 

0x18527:	jne	0x187d2
		Instruction group(s): [7, 1] 

0x1852d:	test	ebx, ebx
0x1852f:	jne	0x187e3
		Instruction group(s): [7, 1] 

0x18535:	test	r13d, r13d
0x18538:	je	0x1842d
		Instruction group(s): [7, 1] 

0x1853e:	and	r12d, 1
0x18542:	je	0x1842d
		Instruction group(s): [7, 1] 

0x18548:	mov	rdx, qword ptr [rsp + 8]
0x1854d:	mov	rsi, qword ptr [rsp + 0x10]
0x18552:	mov	ecx, 1
0x18557:	mov	rdi, qword ptr [rsp + 0x18]
0x1855c:	call	0x29ca0
		Instruction group(s): [2, 7, 145] 

0x18561:	test	eax, eax
0x18563:	js	0x187d2
		Instruction group(s): [7, 1] 

0x18569:	je	0x1842d
		Instruction group(s): [7, 1] 

0x1856f:	mov	r12d, 1
0x18575:	mov	dword ptr [rsp], 0
0x1857c:	jmp	0x1810a
		Instruction group(s): [7, 1] 

0x18581:	nop	dword ptr [rax]
0x18588:	mov	rdi, qword ptr [rbx + 8]
0x1858c:	call	0x22cb0
		Instruction group(s): [2, 7, 145] 

0x18591:	jmp	0x1834a
		Instruction group(s): [7, 1] 

0x18596:	nop	word ptr cs:[rax + rax]
0x185a0:	mov	r8d, dword ptr [rip + 0x21d8e9]
0x185a7:	test	r8d, r8d
0x185aa:	je	0x18680
		Instruction group(s): [7, 1] 

0x185b0:	mov	rdx, qword ptr [rbx + 8]
0x185b4:	movzx	eax, byte ptr [rdx + 0x84]
0x185bb:	or	eax, 3
0x185be:	mov	byte ptr [rdx + 0x84], al
0x185c4:	xor	r12d, r12d
0x185c7:	xor	ebp, ebp
0x185c9:	test	al, 3
0x185cb:	je	0x18333
		Instruction group(s): [7, 1] 

0x185d1:	jmp	0x1832b
		Instruction group(s): [7, 1] 

0x185d6:	nop	word ptr cs:[rax + rax]
0x185e0:	mov	qword ptr [rip + 0x21daf1], rax
0x185e7:	jmp	0x183f4
		Instruction group(s): [7, 1] 

0x185ec:	nop	dword ptr [rax]
0x185f0:	lea	rsi, [rip + 0x13a99]
0x185f7:	xor	edi, edi
0x185f9:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x185fe:	jmp	0x181c6
		Instruction group(s): [7, 1] 

0x18603:	nop	dword ptr [rax + rax]
0x18608:	mov	esi, dword ptr [rip + 0x220f26]
0x1860e:	test	esi, esi
0x18610:	jne	0x1840a
		Instruction group(s): [7, 1] 

0x18616:	mov	ecx, dword ptr [rip + 0x21d874]
0x1861c:	test	ecx, ecx
0x1861e:	jne	0x1840a
		Instruction group(s): [7, 1] 

0x18624:	mov	edi, ebp
0x18626:	call	0x1aa70
		Instruction group(s): [2, 7, 145] 

0x1862b:	nop	dword ptr [rax + rax]
0x18630:	cmp	ebp, 2
0x18633:	sete	al
0x18636:	add	eax, 2
0x18639:	jmp	0x182df
		Instruction group(s): [7, 1] 

0x1863e:	nop	
0x18640:	lea	rsi, [rip + 0x137ef]
0x18647:	mov	edx, 5
0x1864c:	xor	edi, edi
0x1864e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x18653:	movsxd	r8, dword ptr [rbx + 0x40]
		Instruction group(s): [145] 

0x18657:	mov	r12, rax
0x1865a:	jmp	0x1818c
		Instruction group(s): [7, 1] 

0x1865f:	nop	
0x18660:	lea	rsi, [rip + 0x137cf]
0x18667:	mov	edx, 5
0x1866c:	xor	edi, edi
0x1866e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x18673:	mov	r13, rax
0x18676:	jmp	0x18364
		Instruction group(s): [7, 1] 

0x1867b:	nop	dword ptr [rax + rax]
0x18680:	cmp	dword ptr [rip + 0x21dd1d], 1
0x18687:	je	0x1879d
		Instruction group(s): [7, 1] 

0x1868d:	xor	edi, edi
0x1868f:	call	0x29c80
		Instruction group(s): [2, 7, 145] 

0x18694:	mov	edx, eax
0x18696:	movzx	eax, byte ptr [rbx + 0x44]
0x1869a:	mov	rdi, rbx
0x1869d:	and	edx, 1
0x186a0:	and	eax, 0xfffffffe
0x186a3:	or	eax, edx
0x186a5:	mov	byte ptr [rbx + 0x44], al
0x186a8:	call	0x177b0
		Instruction group(s): [2, 7, 145] 

0x186ad:	call	0x17440
		Instruction group(s): [2, 7, 145] 

0x186b2:	mov	rax, qword ptr [rbx + 8]
0x186b6:	mov	rbp, qword ptr [rip + 0x21da1b]
0x186bd:	movzx	eax, byte ptr [rax + 0x84]
0x186c4:	mov	edx, eax
0x186c6:	and	edx, 0xc
0x186c9:	cmp	dl, 8
0x186cc:	jne	0x185c4
		Instruction group(s): [7, 1] 

0x186d2:	jmp	0x17f28
		Instruction group(s): [7, 1] 

0x186d7:	nop	word ptr [rax + rax]
0x186e0:	lea	rsi, [rip + 0x13959]
0x186e7:	xor	edi, edi
0x186e9:	mov	edx, 5
0x186ee:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x186f3:	xor	esi, esi
0x186f5:	mov	rdx, rax
0x186f8:	xor	edi, edi
0x186fa:	xor	eax, eax
0x186fc:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x18701:	jmp	0x17f6d
		Instruction group(s): [7, 1] 

0x18706:	nop	word ptr cs:[rax + rax]
0x18710:	mov	r12d, dword ptr [rip + 0x21dcc5]
0x18717:	test	r12d, r12d
0x1871a:	je	0x1816a
		Instruction group(s): [7, 1] 

0x18720:	test	dl, 0x10
0x18723:	mov	eax, 2
0x18728:	cmove	ebp, eax
		Instruction group(s): [137] 

0x1872b:	jmp	0x1816f
		Instruction group(s): [7, 1] 

0x18730:	mov	r15d, dword ptr [r15]
0x18733:	lea	rsi, [rip + 0x1399e]
0x1873a:	mov	edx, 5
0x1873f:	xor	edi, edi
0x18741:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x18746:	mov	rdx, r12
0x18749:	mov	rsi, rax
0x1874c:	mov	ecx, r15d
0x1874f:	mov	edi, 1
0x18754:	xor	eax, eax
0x18756:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x1875b:	mov	rdi, qword ptr [rip + 0x21d6be]
0x18762:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x18767:	mov	r12, qword ptr [rbx + 0x18]
0x1876b:	jmp	0x18260
		Instruction group(s): [7, 1] 

0x18770:	lea	rdi, [rip + 0x136fa]
0x18777:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x1877c:	test	rax, rax
0x1877f:	je	0x18791
		Instruction group(s): [7, 1] 

0x18781:	movzx	r15d, byte ptr [rax + 0x85]
0x18789:	shr	r15b, 3
0x1878d:	and	r15d, 1
0x18791:	mov	dword ptr [rip + 0x21d50c], r15d
0x18798:	jmp	0x18307
		Instruction group(s): [7, 1] 

0x1879d:	lea	rdi, [rbx + 0x34]
0x187a1:	call	0x1c3e0
		Instruction group(s): [2, 7, 145] 

0x187a6:	jmp	0x1868d
		Instruction group(s): [7, 1] 

0x187ab:	test	ecx, ecx
0x187ad:	jne	0x187c3
		Instruction group(s): [7, 1] 

0x187af:	cmp	edi, 0x7f
0x187b2:	jne	0x187c3
		Instruction group(s): [7, 1] 

0x187b4:	mov	dword ptr [rip + 0x220cf2], 0xffffffff
0x187be:	jmp	0x1842d
		Instruction group(s): [7, 1] 

0x187c3:	mov	dword ptr [rip + 0x220ce3], 1
0x187cd:	jmp	0x1842d
		Instruction group(s): [7, 1] 

0x187d2:	lea	rdi, [rip + 0x13685]
0x187d9:	call	0x1c790
		Instruction group(s): [2, 7, 145] 

0x187de:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x187e3:	mov	r12d, ebx
0x187e6:	jmp	0x18084
		Instruction group(s): [7, 1] 

0x187eb:	nop	dword ptr [rax + rax]
0x187f0:	push	r13
		Instruction group(s): [145] 

0x187f2:	push	r12
		Instruction group(s): [145] 

0x187f4:	push	rbp
		Instruction group(s): [145] 

0x187f5:	push	rbx
		Instruction group(s): [145] 

0x187f6:	mov	rbx, rdi
0x187f9:	sub	rsp, 0x28
0x187fd:	mov	rbp, qword ptr [rdi + 8]
0x18801:	mov	edi, 1
0x18806:	mov	rax, qword ptr fs:[0x28]
0x1880f:	mov	qword ptr [rsp + 0x18], rax
0x18814:	xor	eax, eax
0x18816:	call	0x29c80
		Instruction group(s): [2, 7, 145] 

0x1881b:	mov	edx, eax
0x1881d:	movzx	eax, byte ptr [rbx + 0x44]
0x18821:	and	edx, 1
0x18824:	and	eax, 0xfffffffe
0x18827:	or	eax, edx
0x18829:	test	al, 1
0x1882b:	mov	byte ptr [rbx + 0x44], al
0x1882e:	jne	0x1883a
		Instruction group(s): [7, 1] 

0x18830:	mov	eax, dword ptr [rip + 0x21d89a]
0x18836:	test	eax, eax
0x18838:	jne	0x188a0
		Instruction group(s): [7, 1] 

0x1883a:	mov	rdi, rbx
0x1883d:	call	0x177b0
		Instruction group(s): [2, 7, 145] 

0x18842:	movzx	edx, byte ptr [rbp + 0x84]
0x18849:	mov	eax, edx
0x1884b:	shr	al, 2
0x1884e:	and	eax, 3
0x18851:	cmp	al, 2
0x18853:	je	0x18958
		Instruction group(s): [7, 1] 

0x18859:	ja	0x1886c
		Instruction group(s): [7, 1] 

0x1885b:	test	al, al
0x1885d:	jne	0x18948
		Instruction group(s): [7, 1] 

0x18863:	and	edx, 0xfffffffc
0x18866:	mov	byte ptr [rbp + 0x84], dl
0x1886c:	mov	rdi, rbp
0x1886f:	call	0x22cb0
		Instruction group(s): [2, 7, 145] 

0x18874:	mov	rdi, rbx
0x18877:	call	0x16590
		Instruction group(s): [2, 7, 145] 

0x1887c:	mov	eax, 1
0x18881:	mov	rcx, qword ptr [rsp + 0x18]
0x18886:	xor	rcx, qword ptr fs:[0x28]
0x1888f:	jne	0x18bcd
		Instruction group(s): [7, 1] 

0x18895:	add	rsp, 0x28
0x18899:	pop	rbx
		Instruction group(s): [145] 

0x1889a:	pop	rbp
		Instruction group(s): [145] 

0x1889b:	pop	r12
		Instruction group(s): [145] 

0x1889d:	pop	r13
		Instruction group(s): [145] 

0x1889f:	ret	
		Instruction group(s): [3, 145] 

0x188a0:	pxor	xmm4, xmm4
		Instruction group(s): [149] 

0x188a4:	ucomisd	xmm4, qword ptr [rip + 0x21d46c]
		Instruction group(s): [149] 

0x188ac:	ja	0x1883a
		Instruction group(s): [7, 1] 

0x188ae:	call	0x1bf50
		Instruction group(s): [2, 7, 145] 

0x188b3:	lea	rdi, [rsp + 0x10]
0x188b8:	mov	esi, 1
0x188bd:	call	0x87c0
		Instruction group(s): [2, 7, 145] 

0x188c2:	cmp	eax, 1
0x188c5:	je	0x188fa
		Instruction group(s): [7, 1] 

0x188c7:	mov	r13d, dword ptr [rip + 0x21d3ce]
0x188ce:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x188d3:	mov	r12, rax
0x188d6:	mov	eax, dword ptr [rax]
0x188d8:	cmp	r13d, -1
0x188dc:	je	0x18a08
		Instruction group(s): [7, 1] 

0x188e2:	cmp	r13d, eax
0x188e5:	jne	0x18a08
		Instruction group(s): [7, 1] 

0x188eb:	mov	dword ptr [rip + 0x21d3ab], eax
0x188f1:	mov	qword ptr [rsp + 0x10], 0
0x188fa:	call	0x1bf40
		Instruction group(s): [2, 7, 145] 

0x188ff:	xor	edi, edi
0x18901:	call	0x8a60
		Instruction group(s): [2, 7, 145] 

0x18906:	mov	rdx, qword ptr [rip + 0x21d7e3]
0x1890d:	cmp	rax, rdx
0x18910:	jg	0x18a40
		Instruction group(s): [7, 1] 

0x18916:	mov	rax, qword ptr [rip + 0x21d7ab]
0x1891d:	test	rax, rax
0x18920:	js	0x18af0
		Instruction group(s): [7, 1] 

0x18926:	pxor	xmm3, xmm3
		Instruction group(s): [149] 

0x1892a:	cvtsi2sd	xmm3, rax
		Instruction group(s): [149] 

0x1892f:	addsd	xmm3, qword ptr [rip + 0x21d7b1]
		Instruction group(s): [149] 

0x18937:	mulsd	xmm3, qword ptr [rip + 0x13969]
		Instruction group(s): [149] 

0x1893f:	jmp	0x18a6e
		Instruction group(s): [7, 1] 

0x18944:	nop	dword ptr [rax]
0x18948:	mov	eax, 1
0x1894d:	jmp	0x18881
		Instruction group(s): [7, 1] 

0x18952:	nop	word ptr [rax + rax]
0x18958:	test	byte ptr [rip + 0x21da99], 4
0x1895f:	mov	rax, qword ptr [rip + 0x21d772]
0x18966:	mov	qword ptr [rbx], rax
0x18969:	je	0x189e4
		Instruction group(s): [7, 1] 

0x1896b:	test	byte ptr [rbx + 0x44], 1
0x1896f:	lea	rbp, [rip + 0x15057]
0x18976:	jne	0x18b50
		Instruction group(s): [7, 1] 

0x1897c:	movsxd	r8, dword ptr [rbx + 0x40]
		Instruction group(s): [145] 

0x18980:	lea	rcx, [rip + 0x133dd]
0x18987:	lea	rdi, [rip + 0x21d772]
0x1898e:	mov	edx, 0x64
0x18993:	mov	esi, 1
0x18998:	xor	eax, eax
0x1899a:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x1899f:	mov	rax, qword ptr [rbx + 8]
0x189a3:	lea	rsi, [rip + 0x137fe]
0x189aa:	mov	edx, 5
0x189af:	xor	edi, edi
0x189b1:	mov	r12, qword ptr [rax]
0x189b4:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x189b9:	lea	r8, [rip + 0x21d740]
0x189c0:	mov	rsi, rax
0x189c3:	mov	edi, 1
0x189c8:	mov	r9, rbp
0x189cb:	mov	rcx, r12
0x189ce:	mov	rdx, rbx
0x189d1:	xor	eax, eax
0x189d3:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x189d8:	mov	rdi, qword ptr [rip + 0x21d441]
0x189df:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x189e4:	mov	qword ptr [rip + 0x21d6ed], rbx
0x189eb:	add	dword ptr [rip + 0x21d6de], 1
0x189f2:	call	0x17440
		Instruction group(s): [2, 7, 145] 

0x189f7:	mov	eax, 1
0x189fc:	jmp	0x18881
		Instruction group(s): [7, 1] 

0x18a01:	nop	dword ptr [rax]
0x18a08:	test	eax, eax
0x18a0a:	mov	edx, 5
0x18a0f:	jne	0x18ac0
		Instruction group(s): [7, 1] 

0x18a15:	lea	rsi, [rip + 0x13714]
0x18a1c:	xor	edi, edi
0x18a1e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x18a23:	xor	esi, esi
0x18a25:	mov	rdx, rax
0x18a28:	xor	edi, edi
0x18a2a:	xor	eax, eax
0x18a2c:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x18a31:	mov	eax, dword ptr [r12]
0x18a35:	jmp	0x188eb
		Instruction group(s): [7, 1] 

0x18a3a:	nop	word ptr [rax + rax]
0x18a40:	lea	rcx, [rax - 1]
0x18a44:	cmp	rdx, rcx
0x18a47:	je	0x18b10
		Instruction group(s): [7, 1] 

0x18a4d:	pxor	xmm3, xmm3
		Instruction group(s): [149] 

0x18a51:	mov	qword ptr [rip + 0x21d68c], 0
0x18a5c:	mov	qword ptr [rip + 0x21d661], 0
0x18a67:	mov	qword ptr [rip + 0x21d682], rax
0x18a6e:	test	byte ptr [rip + 0x21d983], 4
0x18a75:	movsd	xmm1, qword ptr [rsp + 0x10]
		Instruction group(s): [149] 

0x18a7b:	movsd	xmm2, qword ptr [rip + 0x21d295]
		Instruction group(s): [149] 

0x18a83:	addsd	xmm3, xmm1
		Instruction group(s): [149] 

0x18a87:	jne	0x18b70
		Instruction group(s): [7, 1] 

0x18a8d:	ucomisd	xmm3, xmm2
		Instruction group(s): [149] 

0x18a91:	jb	0x1883a
		Instruction group(s): [7, 1] 

0x18a97:	mov	esi, 2
0x18a9c:	mov	rdi, rbp
0x18a9f:	call	0x10260
		Instruction group(s): [2, 7, 145] 

0x18aa4:	mov	rax, qword ptr [rip + 0x21d6c5]
0x18aab:	mov	qword ptr [rip + 0x21d6be], rbx
0x18ab2:	mov	qword ptr [rbx], rax
0x18ab5:	xor	eax, eax
0x18ab7:	jmp	0x18881
		Instruction group(s): [7, 1] 

0x18abc:	nop	dword ptr [rax]
0x18ac0:	lea	rsi, [rip + 0x133bb]
0x18ac7:	xor	edi, edi
0x18ac9:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x18ace:	lea	rsi, [rip + 0x133c9]
0x18ad5:	mov	rdi, rax
0x18ad8:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0x18add:	mov	eax, dword ptr [r12]
0x18ae1:	jmp	0x188eb
		Instruction group(s): [7, 1] 

0x18ae6:	nop	word ptr cs:[rax + rax]
0x18af0:	mov	rdx, rax
0x18af3:	pxor	xmm3, xmm3
		Instruction group(s): [149] 

0x18af7:	shr	rdx, 1
0x18afa:	and	eax, 1
0x18afd:	or	rdx, rax
0x18b00:	cvtsi2sd	xmm3, rdx
		Instruction group(s): [149] 

0x18b05:	addsd	xmm3, xmm3
		Instruction group(s): [149] 

0x18b09:	jmp	0x1892f
		Instruction group(s): [7, 1] 

0x18b0e:	nop	
0x18b10:	mov	rcx, qword ptr [rip + 0x21d5b1]
0x18b17:	test	rcx, rcx
0x18b1a:	js	0x18baf
		Instruction group(s): [7, 1] 

0x18b20:	pxor	xmm3, xmm3
		Instruction group(s): [149] 

0x18b24:	cvtsi2sd	xmm3, rcx
		Instruction group(s): [149] 

0x18b29:	movsd	xmm0, qword ptr [rip + 0x13777]
		Instruction group(s): [149] 

0x18b31:	pxor	xmm5, xmm5
		Instruction group(s): [149] 

0x18b35:	mulsd	xmm3, xmm0
		Instruction group(s): [149] 

0x18b39:	movsd	qword ptr [rip + 0x21d5a7], xmm3
		Instruction group(s): [149] 

0x18b41:	addsd	xmm3, xmm5
		Instruction group(s): [149] 

0x18b45:	mulsd	xmm3, xmm0
		Instruction group(s): [149] 

0x18b49:	jmp	0x18a5c
		Instruction group(s): [7, 1] 

0x18b4e:	nop	
0x18b50:	lea	rsi, [rip + 0x132df]
0x18b57:	mov	edx, 5
0x18b5c:	xor	edi, edi
0x18b5e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x18b63:	mov	rbp, rax
0x18b66:	jmp	0x1897c
		Instruction group(s): [7, 1] 

0x18b6b:	nop	dword ptr [rax + rax]
0x18b70:	movapd	xmm0, xmm3
		Instruction group(s): [149] 

0x18b74:	lea	rsi, [rip + 0x135ed]
0x18b7b:	mov	edi, 1
0x18b80:	mov	eax, 3
0x18b85:	movsd	qword ptr [rsp + 8], xmm3
		Instruction group(s): [149] 

0x18b8b:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x18b90:	mov	rdi, qword ptr [rip + 0x21d289]
0x18b97:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x18b9c:	movsd	xmm2, qword ptr [rip + 0x21d174]
		Instruction group(s): [149] 

0x18ba4:	movsd	xmm3, qword ptr [rsp + 8]
		Instruction group(s): [149] 

0x18baa:	jmp	0x18a8d
		Instruction group(s): [7, 1] 

0x18baf:	mov	rdx, rcx
0x18bb2:	pxor	xmm3, xmm3
		Instruction group(s): [149] 

0x18bb6:	shr	rdx, 1
0x18bb9:	and	ecx, 1
0x18bbc:	or	rdx, rcx
0x18bbf:	cvtsi2sd	xmm3, rdx
		Instruction group(s): [149] 

0x18bc4:	addsd	xmm3, xmm3
		Instruction group(s): [149] 

0x18bc8:	jmp	0x18b29
		Instruction group(s): [7, 1] 

0x18bcd:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x18bd2:	nop	dword ptr [rax]
0x18bd6:	nop	word ptr cs:[rax + rax]
0x18be0:	sub	rsp, 8
0x18be4:	jmp	0x18bfa
		Instruction group(s): [7, 1] 

0x18be6:	nop	word ptr cs:[rax + rax]
0x18bf0:	cmp	qword ptr [rip + 0x21d578], 0
0x18bf8:	je	0x18c1d
		Instruction group(s): [7, 1] 

0x18bfa:	xor	esi, esi
0x18bfc:	xor	edi, edi
0x18bfe:	call	0x17ed0
		Instruction group(s): [2, 7, 145] 

0x18c03:	mov	rdi, qword ptr [rip + 0x21d566]
0x18c0a:	mov	rax, qword ptr [rdi]
0x18c0d:	mov	qword ptr [rip + 0x21d55c], rax
0x18c14:	call	0x187f0
		Instruction group(s): [2, 7, 145] 

0x18c19:	test	eax, eax
0x18c1b:	jne	0x18bf0
		Instruction group(s): [7, 1] 

0x18c1d:	add	rsp, 8
0x18c21:	ret	
		Instruction group(s): [3, 145] 

0x18c22:	nop	dword ptr [rax]
0x18c26:	nop	word ptr cs:[rax + rax]
0x18c30:	cmp	qword ptr [rip + 0x21d538], 0
0x18c38:	je	0x18c3c
		Instruction group(s): [7, 1] 

0x18c3a:	jmp	0x18be0
		Instruction group(s): [7, 1] 

0x18c3c:	ret	
		Instruction group(s): [3, 145] 

0x18c3d:	nop	dword ptr [rax]
0x18c40:	push	rbp
		Instruction group(s): [145] 

0x18c41:	mov	rbp, rsp
0x18c44:	push	r15
		Instruction group(s): [145] 

0x18c46:	push	r14
		Instruction group(s): [145] 

0x18c48:	push	r13
		Instruction group(s): [145] 

0x18c4a:	push	r12
		Instruction group(s): [145] 

0x18c4c:	push	rbx
		Instruction group(s): [145] 

0x18c4d:	sub	rsp, 0xf8
0x18c54:	mov	rax, qword ptr [rdi + 0x20]
0x18c58:	mov	qword ptr [rbp - 0x100], rdi
0x18c5f:	mov	rcx, qword ptr fs:[0x28]
0x18c68:	mov	qword ptr [rbp - 0x38], rcx
0x18c6c:	xor	ecx, ecx
0x18c6e:	cmp	qword ptr [rip + 0x21d4fa], 0
0x18c76:	mov	qword ptr [rbp - 0xf8], rax
0x18c7d:	je	0x18c84
		Instruction group(s): [7, 1] 

0x18c7f:	call	0x18be0
		Instruction group(s): [2, 7, 145] 

0x18c84:	xor	esi, esi
0x18c86:	xor	edi, edi
0x18c88:	call	0x17ed0
		Instruction group(s): [2, 7, 145] 

0x18c8d:	mov	r15, qword ptr [rbp - 0xf8]
0x18c94:	mov	rdi, r15
0x18c97:	call	0xc6e0
		Instruction group(s): [2, 7, 145] 

0x18c9c:	mov	edi, 0x48
0x18ca1:	call	0x1b8c0
		Instruction group(s): [2, 7, 145] 

0x18ca6:	lea	rbx, [rax + 0x34]
0x18caa:	mov	r14, rax
0x18cad:	mov	qword ptr [rbp - 0x110], rax
0x18cb4:	mov	rdi, rbx
0x18cb7:	call	0x1c690
		Instruction group(s): [2, 7, 145] 

0x18cbc:	mov	rax, qword ptr [rbp - 0x100]
0x18cc3:	movzx	edi, word ptr [r15 + 0x28]
0x18cc8:	mov	qword ptr [r14 + 0x18], 0
0x18cd0:	mov	qword ptr [r14 + 8], rax
0x18cd4:	movzx	eax, byte ptr [rax + 0x86]
0x18cdb:	and	eax, 1
0x18cde:	shl	eax, 5
0x18ce1:	mov	edx, eax
0x18ce3:	movzx	eax, byte ptr [r14 + 0x44]
0x18ce8:	mov	byte ptr [rbp - 0xe8], al
0x18cee:	and	eax, 0xffffffdf
0x18cf1:	or	eax, edx
0x18cf3:	test	byte ptr [r14 + 0x3c], 1
0x18cf8:	mov	byte ptr [r14 + 0x44], al
0x18cfc:	mov	eax, 0
0x18d01:	cmove	rbx, rax
		Instruction group(s): [137] 

0x18d05:	shl	edi, 3
0x18d08:	mov	qword ptr [rip + 0x21dd99], rbx
0x18d0f:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x18d14:	cmp	word ptr [r15 + 0x28], 0
0x18d1a:	mov	qword ptr [rbp - 0x108], rax
0x18d21:	je	0x18e24
		Instruction group(s): [7, 1] 

0x18d27:	mov	qword ptr [rbp - 0xf0], 0
0x18d32:	mov	dword ptr [rbp - 0xe8], 0
0x18d3c:	nop	dword ptr [rax]
0x18d40:	mov	rax, qword ptr [rbp - 0xf8]
0x18d47:	mov	rcx, qword ptr [rbp - 0xf0]
0x18d4e:	mov	rax, qword ptr [rax + 0x18]
0x18d52:	mov	rbx, qword ptr [rax + rcx]
0x18d56:	mov	r15, rbx
0x18d59:	jmp	0x18d9e
		Instruction group(s): [7, 1] 

0x18d5b:	nop	dword ptr [rax + rax]
0x18d60:	lea	r14, [r12 + 1]
0x18d65:	mov	r13, r14
0x18d68:	sub	r13, rbx
0x18d6b:	cmp	rbx, r15
0x18d6e:	je	0x18d7e
		Instruction group(s): [7, 1] 

0x18d70:	mov	rdx, r13
0x18d73:	mov	rsi, rbx
0x18d76:	mov	rdi, r15
0x18d79:	call	0x8be0
		Instruction group(s): [2, 7, 145] 

0x18d7e:	add	r15, r13
0x18d81:	movzx	r13d, byte ptr [r12 + 1]
0x18d87:	mov	rbx, r14
0x18d8a:	cmp	r13b, 0x28
0x18d8e:	je	0x18f60
		Instruction group(s): [7, 1] 

0x18d94:	cmp	r13b, 0x7b
0x18d98:	je	0x18f60
		Instruction group(s): [7, 1] 

0x18d9e:	mov	esi, 0x24
0x18da3:	mov	rdi, rbx
0x18da6:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x18dab:	test	rax, rax
0x18dae:	mov	r12, rax
0x18db1:	jne	0x18d60
		Instruction group(s): [7, 1] 

0x18db3:	cmp	rbx, r15
0x18db6:	je	0x18dcf
		Instruction group(s): [7, 1] 

0x18db8:	mov	rdi, rbx
0x18dbb:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x18dc0:	lea	rdx, [rax + 1]
0x18dc4:	mov	rsi, rbx
0x18dc7:	mov	rdi, r15
0x18dca:	call	0x8be0
		Instruction group(s): [2, 7, 145] 

0x18dcf:	mov	r14, qword ptr [rbp - 0xf8]
0x18dd6:	mov	rbx, qword ptr [rbp - 0xf0]
0x18ddd:	mov	rsi, qword ptr [rbp - 0x100]
0x18de4:	mov	rax, qword ptr [r14 + 0x18]
0x18de8:	mov	rdi, qword ptr [rax + rbx]
0x18dec:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x18df1:	mov	rdi, qword ptr [rbp - 0x108]
0x18df8:	add	dword ptr [rbp - 0xe8], 1
0x18dff:	mov	rcx, rbx
0x18e02:	add	rcx, 8
0x18e06:	mov	qword ptr [rbp - 0xf0], rcx
0x18e0d:	mov	qword ptr [rdi + rbx], rax
0x18e11:	movzx	eax, word ptr [r14 + 0x28]
0x18e16:	mov	edi, dword ptr [rbp - 0xe8]
0x18e1c:	cmp	eax, edi
0x18e1e:	ja	0x18d40
		Instruction group(s): [7, 1] 

0x18e24:	mov	rdx, qword ptr [rbp - 0x110]
0x18e2b:	mov	rsi, qword ptr [rbp - 0x108]
0x18e32:	mov	rax, qword ptr [rdx + 0x28]
0x18e36:	mov	qword ptr [rdx + 0x20], rsi
0x18e3a:	jmp	0x18e4e
		Instruction group(s): [7, 1] 

0x18e3c:	nop	dword ptr [rax]
0x18e40:	lea	ecx, [rax + 1]
		Instruction group(s): [145] 

0x18e43:	mov	rax, qword ptr [rsi + rax*8]
0x18e47:	mov	dword ptr [rdx + 0x30], ecx
0x18e4a:	mov	qword ptr [rdx + 0x28], rax
0x18e4e:	test	rax, rax
0x18e51:	je	0x18e58
		Instruction group(s): [7, 1] 

0x18e53:	cmp	byte ptr [rax], 0
0x18e56:	jne	0x18e7a
		Instruction group(s): [7, 1] 

0x18e58:	mov	rcx, qword ptr [rdx + 8]
0x18e5c:	mov	eax, dword ptr [rdx + 0x30]
0x18e5f:	mov	rcx, qword ptr [rcx + 0x20]
0x18e63:	movzx	ecx, word ptr [rcx + 0x28]
0x18e67:	cmp	eax, ecx
0x18e69:	jne	0x18e40
		Instruction group(s): [7, 1] 

0x18e6b:	mov	rax, qword ptr [rbp - 0x110]
0x18e72:	mov	qword ptr [rax + 0x28], 0
0x18e7a:	mov	eax, dword ptr [rip + 0x21ceb4]
0x18e80:	test	eax, eax
0x18e82:	je	0x19077
		Instruction group(s): [7, 1] 

0x18e88:	cmp	eax, dword ptr [rip + 0x21d242]
0x18e8e:	jne	0x18eaa
		Instruction group(s): [7, 1] 

0x18e90:	xor	esi, esi
0x18e92:	mov	edi, 1
0x18e97:	call	0x17ed0
		Instruction group(s): [2, 7, 145] 

0x18e9c:	mov	eax, dword ptr [rip + 0x21ce92]
0x18ea2:	cmp	dword ptr [rip + 0x21d228], eax
0x18ea8:	je	0x18e90
		Instruction group(s): [7, 1] 

0x18eaa:	mov	eax, dword ptr [rip + 0x21d210]
0x18eb0:	mov	edx, dword ptr [rip + 0x21d4ea]
0x18eb6:	add	eax, 1
0x18eb9:	mov	dword ptr [rip + 0x21d201], eax
0x18ebf:	test	edx, edx
0x18ec1:	jne	0x192c1
		Instruction group(s): [7, 1] 

0x18ec7:	mov	rdi, qword ptr [rbp - 0x110]
0x18ece:	call	0x187f0
		Instruction group(s): [2, 7, 145] 

0x18ed3:	cmp	dword ptr [rip + 0x21ce5a], 1
0x18eda:	je	0x18ee6
		Instruction group(s): [7, 1] 

0x18edc:	mov	eax, dword ptr [rip + 0x220672]
0x18ee2:	test	eax, eax
0x18ee4:	je	0x18f2a
		Instruction group(s): [7, 1] 

0x18ee6:	mov	rax, qword ptr [rbp - 0x100]
0x18eed:	mov	rbx, qword ptr [rbp - 0x100]
0x18ef4:	movzx	eax, byte ptr [rax + 0x84]
0x18efb:	mov	byte ptr [rbp - 0xe8], al
0x18f01:	and	eax, 0xc
0x18f04:	cmp	al, 8
0x18f06:	jne	0x18f2a
		Instruction group(s): [7, 1] 

0x18f08:	nop	dword ptr [rax + rax]
0x18f10:	xor	esi, esi
0x18f12:	mov	edi, 1
0x18f17:	call	0x17ed0
		Instruction group(s): [2, 7, 145] 

0x18f1c:	movzx	eax, byte ptr [rbx + 0x84]
0x18f23:	and	eax, 0xc
0x18f26:	cmp	al, 8
0x18f28:	je	0x18f10
		Instruction group(s): [7, 1] 

0x18f2a:	mov	rax, qword ptr [rbp - 0x38]
0x18f2e:	xor	rax, qword ptr fs:[0x28]
0x18f37:	mov	qword ptr [rip + 0x21db66], 0
0x18f42:	jne	0x194a7
		Instruction group(s): [7, 1] 

0x18f48:	lea	rsp, [rbp - 0x28]
0x18f4c:	pop	rbx
		Instruction group(s): [145] 

0x18f4d:	pop	r12
		Instruction group(s): [145] 

0x18f4f:	pop	r13
		Instruction group(s): [145] 

0x18f51:	pop	r14
		Instruction group(s): [145] 

0x18f53:	pop	r15
		Instruction group(s): [145] 

0x18f55:	pop	rbp
		Instruction group(s): [145] 

0x18f56:	ret	
		Instruction group(s): [3, 145] 

0x18f57:	nop	word ptr [rax + rax]
0x18f60:	lea	r8, [r15 + 1]
0x18f64:	cmp	r13b, 0x28
0x18f68:	mov	ecx, 0x7d
0x18f6d:	mov	eax, 0x29
0x18f72:	lea	rbx, [r12 + 2]
0x18f77:	mov	byte ptr [r15], r13b
0x18f7a:	cmove	ecx, eax
		Instruction group(s): [137] 

0x18f7d:	mov	r15, r8
0x18f80:	xor	r12d, r12d
0x18f83:	jmp	0x18fa2
		Instruction group(s): [7, 1] 

0x18f85:	nop	dword ptr [rax]
0x18f88:	cmp	al, 0x5c
0x18f8a:	je	0x18fc3
		Instruction group(s): [7, 1] 

0x18f8c:	xor	edx, edx
0x18f8e:	cmp	al, r13b
0x18f91:	mov	byte ptr [r15], al
0x18f94:	sete	dl
0x18f97:	add	rbx, 1
0x18f9b:	add	r15, 1
0x18f9f:	add	r12d, edx
0x18fa2:	movzx	eax, byte ptr [rbx]
0x18fa5:	test	al, al
0x18fa7:	je	0x18d9e
		Instruction group(s): [7, 1] 

0x18fad:	cmp	al, cl
0x18faf:	jne	0x18f88
		Instruction group(s): [7, 1] 

0x18fb1:	sub	r12d, 1
0x18fb5:	cmp	r12d, -1
0x18fb9:	je	0x18d9e
		Instruction group(s): [7, 1] 

0x18fbf:	cmp	al, 0x5c
0x18fc1:	jne	0x18f8c
		Instruction group(s): [7, 1] 

0x18fc3:	cmp	byte ptr [rbx + 1], 0xa
0x18fc7:	jne	0x18f8c
		Instruction group(s): [7, 1] 

0x18fc9:	lea	rax, [rbx - 1]
0x18fcd:	cmp	r14, rax
0x18fd0:	jae	0x19008
		Instruction group(s): [7, 1] 

0x18fd2:	cmp	byte ptr [rbx - 1], 0x5c
0x18fd6:	jne	0x19008
		Instruction group(s): [7, 1] 

0x18fd8:	xor	edx, edx
0x18fda:	jmp	0x18fe7
		Instruction group(s): [7, 1] 

0x18fdc:	nop	dword ptr [rax]
0x18fe0:	cmp	byte ptr [rax], 0x5c
0x18fe3:	jne	0x18ff5
		Instruction group(s): [7, 1] 

0x18fe5:	mov	edx, esi
0x18fe7:	mov	esi, edx
0x18fe9:	sub	rax, 1
0x18fed:	xor	esi, 1
0x18ff0:	cmp	r14, rax
0x18ff3:	jne	0x18fe0
		Instruction group(s): [7, 1] 

0x18ff5:	cmp	edx, 1
0x18ff8:	je	0x19008
		Instruction group(s): [7, 1] 

0x18ffa:	mov	byte ptr [r15], 0x5c
0x18ffe:	add	rbx, 1
0x19002:	add	r15, 1
0x19006:	jmp	0x18fa2
		Instruction group(s): [7, 1] 

0x19008:	lea	rdi, [rbx + 2]
0x1900c:	mov	qword ptr [rbp - 0x120], r8
0x19013:	mov	byte ptr [rbp - 0x111], cl
0x19019:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1901e:	mov	r8, qword ptr [rbp - 0x120]
0x19025:	mov	rbx, rax
0x19028:	movzx	ecx, byte ptr [rbp - 0x111]
0x1902f:	cmp	r15, r8
0x19032:	jbe	0x19472
		Instruction group(s): [7, 1] 

0x19038:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0x1903d:	movzx	ecx, byte ptr [rbp - 0x111]
0x19044:	mov	rsi, qword ptr [rax]
0x19047:	mov	rax, r15
0x1904a:	mov	r8, qword ptr [rbp - 0x120]
0x19051:	jmp	0x19061
		Instruction group(s): [7, 1] 

0x19053:	nop	dword ptr [rax + rax]
0x19058:	sub	rax, 1
0x1905c:	cmp	r8, rax
0x1905f:	je	0x1906b
		Instruction group(s): [7, 1] 

0x19061:	movzx	edx, byte ptr [rax - 1]
0x19065:	test	byte ptr [rsi + rdx*2], 1
0x19069:	jne	0x19058
		Instruction group(s): [7, 1] 

0x1906b:	lea	r15, [rax + 1]
0x1906f:	mov	byte ptr [rax], 0x20
0x19072:	jmp	0x18fa2
		Instruction group(s): [7, 1] 

0x19077:	mov	esi, dword ptr [rip + 0x21ccab]
0x1907d:	test	esi, esi
0x1907f:	js	0x18eaa
		Instruction group(s): [7, 1] 

0x19085:	lea	r12, [rbp - 0xd0]
0x1908c:	mov	eax, dword ptr [rip + 0x21d366]
0x19092:	lea	r13, [r12 + 8]
0x19097:	nop	word ptr [rax + rax]
0x190a0:	test	al, 4
0x190a2:	je	0x190dd
		Instruction group(s): [7, 1] 

0x190a4:	cmp	qword ptr [rip + 0x21d02c], 0
0x190ac:	lea	rax, [rip + 0x12df6]
0x190b3:	lea	rdx, [rip + 0x14913]
0x190ba:	lea	rsi, [rip + 0x13117]
0x190c1:	mov	edi, 1
0x190c6:	cmove	rdx, rax
		Instruction group(s): [137] 

0x190ca:	xor	eax, eax
0x190cc:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x190d1:	mov	rdi, qword ptr [rip + 0x21cd48]
0x190d8:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x190dd:	mov	eax, dword ptr [rip + 0x21cfdd]
0x190e3:	test	eax, eax
0x190e5:	je	0x18eb0
		Instruction group(s): [7, 1] 

0x190eb:	mov	ecx, dword ptr [rip + 0x21cc2f]
0x190f1:	test	ecx, ecx
0x190f3:	js	0x19288
		Instruction group(s): [7, 1] 

0x190f9:	xor	esi, esi
0x190fb:	xor	edi, edi
0x190fd:	call	0x17ed0
		Instruction group(s): [2, 7, 145] 

0x19102:	cmp	qword ptr [rip + 0x21d066], 0
0x1910a:	je	0x19111
		Instruction group(s): [7, 1] 

0x1910c:	call	0x18be0
		Instruction group(s): [2, 7, 145] 

0x19111:	mov	eax, dword ptr [rip + 0x21cfa9]
0x19117:	test	eax, eax
0x19119:	je	0x18eb0
		Instruction group(s): [7, 1] 

0x1911f:	cmp	qword ptr [rip + 0x21cfb1], 0
0x19127:	je	0x19495
		Instruction group(s): [7, 1] 

0x1912d:	xor	eax, eax
0x1912f:	mov	ecx, 0x12
0x19134:	mov	rdi, r13
0x19137:	rep stosq	qword ptr [rdi], rax
0x1913a:	mov	r14, qword ptr [rip + 0x21d02f]
0x19141:	lea	rbx, [rip - 0x2ed8]
0x19148:	xor	edx, edx
0x1914a:	mov	rsi, r12
0x1914d:	mov	edi, 0x11
0x19152:	mov	qword ptr [rbp - 0xd0], rbx
0x19159:	call	0x8710
		Instruction group(s): [2, 7, 145] 

0x1915e:	test	r14, r14
0x19161:	je	0x19191
		Instruction group(s): [7, 1] 

0x19163:	lea	rax, [rip - 0x2f0a]
0x1916a:	mov	edi, 0xe
0x1916f:	xor	edx, edx
0x19171:	mov	rsi, r12
0x19174:	mov	dword ptr [rbp - 0x48], 0
0x1917b:	mov	qword ptr [rbp - 0xd0], rax
0x19182:	call	0x8710
		Instruction group(s): [2, 7, 145] 

0x19187:	mov	edi, 1
0x1918c:	call	0x8920
		Instruction group(s): [2, 7, 145] 

0x19191:	mov	edi, dword ptr [rip + 0x21cb89]
0x19197:	lea	rsi, [rbp - 0xd1]
0x1919e:	mov	edx, 1
0x191a3:	call	0x8980
		Instruction group(s): [2, 7, 145] 

0x191a8:	mov	qword ptr [rbp - 0xe8], rax
0x191af:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x191b4:	mov	ecx, 0x12
0x191b9:	mov	r15d, dword ptr [rax]
0x191bc:	mov	r14, rax
0x191bf:	mov	rdi, r13
0x191c2:	xor	eax, eax
0x191c4:	mov	r9, qword ptr [rip + 0x21cfa5]
0x191cb:	rep stosq	qword ptr [rdi], rax
0x191ce:	xor	edx, edx
0x191d0:	mov	rsi, r12
0x191d3:	mov	edi, 0x11
0x191d8:	mov	qword ptr [rbp - 0xf0], r9
0x191df:	mov	qword ptr [rbp - 0xd0], rbx
0x191e6:	mov	dword ptr [rbp - 0x48], 0x10000000
0x191ed:	call	0x8710
		Instruction group(s): [2, 7, 145] 

0x191f2:	mov	r9, qword ptr [rbp - 0xf0]
0x191f9:	test	r9, r9
0x191fc:	je	0x19226
		Instruction group(s): [7, 1] 

0x191fe:	xor	edi, edi
0x19200:	call	0x8920
		Instruction group(s): [2, 7, 145] 

0x19205:	xor	edx, edx
0x19207:	mov	rsi, r12
0x1920a:	mov	edi, 0xe
0x1920f:	mov	qword ptr [rbp - 0xd0], 0
0x1921a:	mov	dword ptr [rbp - 0x48], 0
0x19221:	call	0x8710
		Instruction group(s): [2, 7, 145] 

0x19226:	cmp	dword ptr [rbp - 0xe8], 1
0x1922d:	je	0x19403
		Instruction group(s): [7, 1] 

0x19233:	cmp	r15d, 4
0x19237:	mov	dword ptr [r14], r15d
0x1923a:	je	0x19246
		Instruction group(s): [7, 1] 

0x1923c:	cmp	r15d, 9
0x19240:	jne	0x1947a
		Instruction group(s): [7, 1] 

0x19246:	cmp	r15d, 9
0x1924a:	mov	eax, dword ptr [rip + 0x21d1a8]
0x19250:	jne	0x190a0
		Instruction group(s): [7, 1] 

0x19256:	test	al, 4
0x19258:	je	0x190a0
		Instruction group(s): [7, 1] 

0x1925e:	lea	rdi, [rip + 0x12c6f]
0x19265:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x1926a:	mov	rdi, qword ptr [rip + 0x21cbaf]
0x19271:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x19276:	mov	eax, dword ptr [rip + 0x21d17c]
0x1927c:	jmp	0x190a0
		Instruction group(s): [7, 1] 

0x19281:	nop	dword ptr [rax]
0x19288:	test	byte ptr [rip + 0x21d169], 4
0x1928f:	jne	0x192a7
		Instruction group(s): [7, 1] 

0x19291:	mov	edi, dword ptr [rip + 0x21ca91]
0x19297:	call	0x88b0
		Instruction group(s): [2, 7, 145] 

0x1929c:	mov	dword ptr [rip + 0x21ca7e], eax
0x192a2:	jmp	0x190f9
		Instruction group(s): [7, 1] 

0x192a7:	lea	rdi, [rip + 0x12c02]
0x192ae:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x192b3:	mov	rdi, qword ptr [rip + 0x21cb66]
0x192ba:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x192bf:	jmp	0x19291
		Instruction group(s): [7, 1] 

0x192c1:	mov	rax, qword ptr [rbp - 0x110]
0x192c8:	lea	rdi, [rip + 0x12c1a]
0x192cf:	mov	rsi, qword ptr [rax + 8]
0x192d3:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x192d8:	mov	r12, rax
0x192db:	mov	rax, qword ptr [rbp - 0xf8]
0x192e2:	mov	r13, qword ptr [rax]
0x192e5:	test	r13, r13
0x192e8:	je	0x19457
		Instruction group(s): [7, 1] 

0x192ee:	mov	rdi, r13
0x192f1:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x192f6:	add	rax, 0x2b
0x192fa:	lea	rcx, [rip + 0x12a60]
0x19301:	mov	r8, r13
0x19304:	and	rax, 0xfffffffffffffff0
0x19308:	mov	rdx, -1
0x1930f:	mov	esi, 1
0x19314:	sub	rsp, rax
0x19317:	mov	rax, qword ptr [rbp - 0xf8]
0x1931e:	lea	rbx, [rsp + 0xf]
0x19323:	mov	r9, qword ptr [rax + 8]
0x19327:	and	rbx, 0xfffffffffffffff0
0x1932b:	xor	eax, eax
0x1932d:	mov	rdi, rbx
0x19330:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x19335:	mov	rax, qword ptr [rbp - 0x110]
0x1933c:	cmp	byte ptr [r12], 0
0x19341:	mov	edx, 5
0x19346:	mov	rax, qword ptr [rax + 8]
0x1934a:	mov	r15, qword ptr [rax]
0x1934d:	je	0x193bb
		Instruction group(s): [7, 1] 

0x1934f:	lea	rsi, [rip + 0x12f2a]
0x19356:	xor	edi, edi
0x19358:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1935d:	mov	rdi, rbx
0x19360:	mov	qword ptr [rbp - 0xe8], rax
0x19367:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1936c:	mov	r13, rax
0x1936f:	mov	rax, qword ptr [rbp - 0x110]
0x19376:	mov	rax, qword ptr [rax + 8]
0x1937a:	mov	rdi, qword ptr [rax]
0x1937d:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x19382:	mov	rdi, r12
0x19385:	mov	r14, rax
0x19388:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1938d:	lea	rsi, [r13 + r14]
0x19392:	mov	rdx, qword ptr [rbp - 0xe8]
0x19399:	mov	r9, r12
0x1939c:	mov	r8, r15
0x1939f:	mov	rcx, rbx
0x193a2:	xor	edi, edi
0x193a4:	add	rsi, rax
0x193a7:	xor	eax, eax
0x193a9:	call	0x1ca50
		Instruction group(s): [2, 7, 145] 

0x193ae:	mov	rdi, r12
0x193b1:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x193b6:	jmp	0x18ec7
		Instruction group(s): [7, 1] 

0x193bb:	lea	rsi, [rip + 0x12e9e]
0x193c2:	xor	edi, edi
0x193c4:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x193c9:	mov	rdi, rbx
0x193cc:	mov	r14, rax
0x193cf:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x193d4:	mov	r13, rax
0x193d7:	mov	rax, qword ptr [rbp - 0x110]
0x193de:	mov	rax, qword ptr [rax + 8]
0x193e2:	mov	rdi, qword ptr [rax]
0x193e5:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x193ea:	lea	rsi, [r13 + rax]
0x193ef:	mov	r8, r15
0x193f2:	mov	rcx, rbx
0x193f5:	mov	rdx, r14
0x193f8:	xor	edi, edi
0x193fa:	xor	eax, eax
0x193fc:	call	0x1ca50
		Instruction group(s): [2, 7, 145] 

0x19401:	jmp	0x193ae
		Instruction group(s): [7, 1] 

0x19403:	test	byte ptr [rip + 0x21cfee], 4
0x1940a:	je	0x18eaa
		Instruction group(s): [7, 1] 

0x19410:	mov	r14, qword ptr [rbp - 0x110]
0x19417:	lea	rsi, [rip + 0x12e1a]
0x1941e:	xor	edi, edi
0x19420:	mov	edx, 5
0x19425:	mov	rax, qword ptr [r14 + 8]
0x19429:	mov	rbx, qword ptr [rax]
0x1942c:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x19431:	mov	rdx, r14
0x19434:	mov	rsi, rax
0x19437:	mov	edi, 1
0x1943c:	mov	rcx, rbx
0x1943f:	xor	eax, eax
0x19441:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x19446:	mov	rdi, qword ptr [rip + 0x21c9d3]
0x1944d:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x19452:	jmp	0x18eaa
		Instruction group(s): [7, 1] 

0x19457:	lea	rsi, [rip + 0x128f9]
0x1945e:	mov	edx, 5
0x19463:	xor	edi, edi
0x19465:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1946a:	mov	rbx, rax
0x1946d:	jmp	0x19335
		Instruction group(s): [7, 1] 

0x19472:	mov	rax, r15
0x19475:	jmp	0x1906b
		Instruction group(s): [7, 1] 

0x1947a:	lea	rsi, [rip + 0x12a44]
0x19481:	xor	edi, edi
0x19483:	mov	edx, 5
0x19488:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1948d:	mov	rdi, rax
0x19490:	call	0x1c790
		Instruction group(s): [2, 7, 145] 

0x19495:	lea	rdx, [rip + 0x12d64]
0x1949c:	xor	esi, esi
0x1949e:	xor	edi, edi
0x194a0:	xor	eax, eax
0x194a2:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x194a7:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x194ac:	nop	dword ptr [rax]
0x194b0:	push	rbp
		Instruction group(s): [145] 

0x194b1:	mov	rbp, rsp
0x194b4:	push	r15
		Instruction group(s): [145] 

0x194b6:	push	r14
		Instruction group(s): [145] 

0x194b8:	push	r13
		Instruction group(s): [145] 

0x194ba:	push	r12
		Instruction group(s): [145] 

0x194bc:	mov	r15, rdi
0x194bf:	push	rbx
		Instruction group(s): [145] 

0x194c0:	mov	rbx, rsi
0x194c3:	sub	rsp, 0x38
0x194c7:	mov	r13, qword ptr [rsi]
0x194ca:	mov	dword ptr [rbp - 0x54], edx
0x194cd:	mov	rax, qword ptr fs:[0x28]
0x194d6:	mov	qword ptr [rbp - 0x38], rax
0x194da:	xor	eax, eax
0x194dc:	mov	rdi, r13
0x194df:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x194e4:	mov	dword ptr [rbp - 0x48], eax
0x194e7:	cdqe	
0x194e9:	mov	esi, 0x28
0x194ee:	add	rax, 0x29
0x194f2:	mov	rdi, r13
0x194f5:	and	rax, 0xfffffffffffffff0
0x194f9:	sub	rsp, rax
0x194fc:	lea	r12, [rsp + 0xf]
0x19501:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x19506:	and	r12, 0xfffffffffffffff0
0x1950a:	test	rax, rax
0x1950d:	je	0x195d8
		Instruction group(s): [7, 1] 

0x19513:	lea	r14, [rax + 1]
0x19517:	mov	esi, 0x29
0x1951c:	mov	qword ptr [rbp - 0x50], rax
0x19520:	mov	rdi, r14
0x19523:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x19528:	test	rax, rax
0x1952b:	je	0x195d8
		Instruction group(s): [7, 1] 

0x19531:	cmp	byte ptr [rax + 1], 0
0x19535:	jne	0x195d8
		Instruction group(s): [7, 1] 

0x1953b:	mov	rcx, qword ptr [rbp - 0x50]
0x1953f:	sub	rcx, r13
0x19542:	cmp	r14, rax
0x19545:	mov	dword ptr [rbp - 0x48], ecx
0x19548:	je	0x19948
		Instruction group(s): [7, 1] 

0x1954e:	movsxd	rcx, ecx
		Instruction group(s): [145] 

0x19551:	mov	rsi, r13
0x19554:	mov	rdi, r12
0x19557:	mov	rdx, rcx
0x1955a:	mov	qword ptr [rbp - 0x50], rcx
0x1955e:	mov	qword ptr [rbp - 0x60], rax
0x19562:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x19567:	mov	rcx, qword ptr [rbp - 0x50]
0x1956b:	mov	r8, qword ptr [rbp - 0x60]
0x1956f:	mov	rsi, r14
0x19572:	mov	qword ptr [rbx], r12
0x19575:	lea	r13, [r12 + rcx + 1]
0x1957a:	sub	r8, r14
0x1957d:	mov	byte ptr [r12 + rcx], 0
0x19582:	mov	rdx, r8
0x19585:	mov	qword ptr [rbp - 0x50], r8
0x19589:	mov	rdi, r13
0x1958c:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x19591:	mov	r8, qword ptr [rbp - 0x50]
0x19595:	mov	rdi, r12
0x19598:	mov	byte ptr [r13 + r8], 0
0x1959e:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x195a3:	lea	rdi, [rip + 0x12dab]
0x195aa:	xor	esi, esi
0x195ac:	mov	qword ptr [rbx], rax
0x195af:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x195b4:	mov	rsi, qword ptr [rbx]
0x195b7:	mov	rdi, rax
0x195ba:	mov	r14, rax
0x195bd:	call	0x8d10
		Instruction group(s): [2, 7, 145] 

0x195c2:	test	rax, rax
0x195c5:	jne	0x1960b
		Instruction group(s): [7, 1] 

0x195c7:	mov	rdi, r14
0x195ca:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x195cf:	jmp	0x1962f
		Instruction group(s): [7, 1] 

0x195d1:	nop	dword ptr [rax]
0x195d8:	mov	rdi, r13
0x195db:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x195e0:	lea	rdi, [rip + 0x12d6e]
0x195e7:	xor	esi, esi
0x195e9:	mov	qword ptr [rbx], rax
0x195ec:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x195f1:	mov	rsi, qword ptr [rbx]
0x195f4:	mov	rdi, rax
0x195f7:	mov	r14, rax
0x195fa:	call	0x8d10
		Instruction group(s): [2, 7, 145] 

0x195ff:	test	rax, rax
0x19602:	je	0x19818
		Instruction group(s): [7, 1] 

0x19608:	xor	r13d, r13d
0x1960b:	cmp	r14, rax
0x1960e:	je	0x196b0
		Instruction group(s): [7, 1] 

0x19614:	cmp	byte ptr [rax - 1], 0x20
0x19618:	je	0x196b0
		Instruction group(s): [7, 1] 

0x1961e:	mov	rdi, r14
0x19621:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x19626:	test	r13, r13
0x19629:	je	0x19820
		Instruction group(s): [7, 1] 

0x1962f:	mov	r14, qword ptr [rbx]
0x19632:	test	byte ptr [rip + 0x21cdbf], 2
0x19639:	jne	0x19770
		Instruction group(s): [7, 1] 

0x1963f:	mov	rdi, qword ptr [rip + 0x21cb3a]
0x19646:	test	rdi, rdi
0x19649:	je	0x197b7
		Instruction group(s): [7, 1] 

0x1964f:	mov	rsi, r13
0x19652:	call	0x8cd0
		Instruction group(s): [2, 7, 145] 

0x19657:	test	rax, rax
0x1965a:	mov	rdx, rax
0x1965d:	je	0x196d0
		Instruction group(s): [7, 1] 

0x1965f:	mov	rdi, r15
0x19662:	call	rdx
		Instruction group(s): [2, 145] 

0x19664:	test	eax, eax
0x19666:	mov	r12d, eax
0x19669:	jle	0x19688
		Instruction group(s): [7, 1] 

0x1966b:	mov	rdx, qword ptr [rbx]
0x1966e:	lea	rsi, [rip + 0x12d1f]
0x19675:	xor	r9d, r9d
0x19678:	mov	r8d, 3
0x1967e:	xor	ecx, ecx
0x19680:	mov	rdi, r15
0x19683:	call	0x27e20
		Instruction group(s): [2, 7, 145] 

0x19688:	mov	rbx, qword ptr [rbp - 0x38]
0x1968c:	xor	rbx, qword ptr fs:[0x28]
0x19695:	mov	eax, r12d
0x19698:	jne	0x19943
		Instruction group(s): [7, 1] 

0x1969e:	lea	rsp, [rbp - 0x28]
0x196a2:	pop	rbx
		Instruction group(s): [145] 

0x196a3:	pop	r12
		Instruction group(s): [145] 

0x196a5:	pop	r13
		Instruction group(s): [145] 

0x196a7:	pop	r14
		Instruction group(s): [145] 

0x196a9:	pop	r15
		Instruction group(s): [145] 

0x196ab:	pop	rbp
		Instruction group(s): [145] 

0x196ac:	ret	
		Instruction group(s): [3, 145] 

0x196ad:	nop	dword ptr [rax]
0x196b0:	movsxd	rdx, dword ptr [rbp - 0x48]
		Instruction group(s): [145] 

0x196b4:	test	byte ptr [rax + rdx], 0xdf
0x196b8:	jne	0x1961e
		Instruction group(s): [7, 1] 

0x196be:	mov	rdi, r14
0x196c1:	mov	r12d, 1
0x196c7:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x196cc:	jmp	0x19688
		Instruction group(s): [7, 1] 

0x196ce:	nop	
0x196d0:	mov	esi, 0x2f
0x196d5:	mov	rdi, r14
0x196d8:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x196dd:	test	rax, rax
0x196e0:	je	0x198e0
		Instruction group(s): [7, 1] 

0x196e6:	mov	esi, 0x101
0x196eb:	mov	rdi, r14
0x196ee:	call	0x8ab0
		Instruction group(s): [2, 7, 145] 

0x196f3:	test	rax, rax
0x196f6:	mov	r12, rax
0x196f9:	je	0x19890
		Instruction group(s): [7, 1] 

0x196ff:	lea	rsi, [rip + 0x12c75]
0x19706:	mov	rdi, r12
0x19709:	call	0x8cd0
		Instruction group(s): [2, 7, 145] 

0x1970e:	test	rax, rax
0x19711:	je	0x19980
		Instruction group(s): [7, 1] 

0x19717:	mov	rsi, r13
0x1971a:	mov	rdi, r12
0x1971d:	call	0x8cd0
		Instruction group(s): [2, 7, 145] 

0x19722:	test	rax, rax
0x19725:	je	0x199b8
		Instruction group(s): [7, 1] 

0x1972b:	mov	edi, 0x18
0x19730:	mov	qword ptr [rbp - 0x48], rax
0x19734:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x19739:	mov	rdi, r14
0x1973c:	mov	r13, rax
0x1973f:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0x19744:	mov	qword ptr [r13 + 8], rax
0x19748:	mov	rax, qword ptr [rip + 0x21ca39]
0x1974f:	mov	qword ptr [r13 + 0x10], r12
0x19753:	mov	qword ptr [rip + 0x21ca2e], r13
0x1975a:	mov	rdx, qword ptr [rbp - 0x48]
0x1975e:	mov	qword ptr [r13], rax
0x19762:	jmp	0x1965f
		Instruction group(s): [7, 1] 

0x19767:	nop	word ptr [rax + rax]
0x19770:	lea	rsi, [rip + 0x12be9]
0x19777:	xor	edi, edi
0x19779:	mov	edx, 5
0x1977e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x19783:	mov	rcx, r14
0x19786:	mov	rsi, rax
0x19789:	mov	rdx, r13
0x1978c:	mov	edi, 1
0x19791:	xor	eax, eax
0x19793:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x19798:	mov	rdi, qword ptr [rip + 0x21c681]
0x1979f:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x197a4:	mov	rdi, qword ptr [rip + 0x21c9d5]
0x197ab:	mov	r14, qword ptr [rbx]
0x197ae:	test	rdi, rdi
0x197b1:	jne	0x1964f
		Instruction group(s): [7, 1] 

0x197b7:	mov	esi, 0x102
0x197bc:	call	0x8ab0
		Instruction group(s): [2, 7, 145] 

0x197c1:	test	rax, rax
0x197c4:	mov	rdi, rax
0x197c7:	mov	qword ptr [rip + 0x21c9b2], rax
0x197ce:	jne	0x1964f
		Instruction group(s): [7, 1] 

0x197d4:	call	0x8d30
		Instruction group(s): [2, 7, 145] 

0x197d9:	lea	rsi, [rip + 0x12af0]
0x197e0:	mov	rbx, rax
0x197e3:	mov	edx, 5
0x197e8:	xor	edi, edi
0x197ea:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x197ef:	mov	rdi, rbx
0x197f2:	mov	rdx, rax
0x197f5:	or	rcx, 0xffffffffffffffff
0x197f9:	xor	eax, eax
0x197fb:	repne scasb	al, byte ptr [rdi]
0x197fd:	mov	rdi, r15
0x19800:	mov	rax, rcx
0x19803:	mov	rcx, rbx
0x19806:	not	rax
0x19809:	lea	rsi, [rax - 1]
0x1980d:	xor	eax, eax
0x1980f:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x19814:	nop	dword ptr [rax]
0x19818:	mov	rdi, r14
0x1981b:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x19820:	mov	r14, qword ptr [rbx]
0x19823:	mov	esi, 0x2f
0x19828:	mov	rdi, r14
0x1982b:	call	0x8890
		Instruction group(s): [2, 7, 145] 

0x19830:	lea	r13, [rax + 1]
0x19834:	test	rax, rax
0x19837:	cmove	r13, r14
		Instruction group(s): [137] 

0x1983b:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0x19840:	mov	rdx, r12
0x19843:	mov	rsi, qword ptr [rax]
0x19846:	jmp	0x1985b
		Instruction group(s): [7, 1] 

0x19848:	nop	dword ptr [rax + rax]
0x19850:	add	rdx, 1
0x19854:	add	r13, 1
0x19858:	mov	byte ptr [rdx - 1], al
0x1985b:	movsx	rcx, byte ptr [r13]
0x19860:	test	byte ptr [rsi + rcx*2], 8
0x19864:	mov	rax, rcx
0x19867:	jne	0x19850
		Instruction group(s): [7, 1] 

0x19869:	cmp	cl, 0x5f
0x1986c:	je	0x19850
		Instruction group(s): [7, 1] 

0x1986e:	movabs	rax, 0x7465735f6b6d675f
0x19878:	mov	ecx, 0x7075
0x1987d:	mov	byte ptr [rdx + 0xa], 0
0x19881:	mov	qword ptr [rdx], rax
0x19884:	mov	word ptr [rdx + 8], cx
0x19888:	mov	r13, r12
0x1988b:	jmp	0x19632
		Instruction group(s): [7, 1] 

0x19890:	call	0x8d30
		Instruction group(s): [2, 7, 145] 

0x19895:	mov	rdx, rax
0x19898:	mov	eax, dword ptr [rbp - 0x54]
0x1989b:	test	eax, eax
0x1989d:	je	0x19914
		Instruction group(s): [7, 1] 

0x1989f:	mov	r12d, dword ptr [rip + 0x21cb52]
0x198a6:	and	r12d, 1
0x198aa:	je	0x19688
		Instruction group(s): [7, 1] 

0x198b0:	lea	rsi, [rip + 0x1187b]
0x198b7:	mov	edi, 1
0x198bc:	xor	eax, eax
0x198be:	xor	r12d, r12d
0x198c1:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x198c6:	mov	rdi, qword ptr [rip + 0x21c553]
0x198cd:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x198d2:	jmp	0x19688
		Instruction group(s): [7, 1] 

0x198d7:	nop	word ptr [rax + rax]
0x198e0:	lea	rsi, [rip + 0x1185f]
0x198e7:	mov	rdx, r14
0x198ea:	mov	edi, 2
0x198ef:	xor	eax, eax
0x198f1:	call	0x1b950
		Instruction group(s): [2, 7, 145] 

0x198f6:	mov	esi, 0x101
0x198fb:	mov	rdi, rax
0x198fe:	call	0x8ab0
		Instruction group(s): [2, 7, 145] 

0x19903:	test	rax, rax
0x19906:	mov	r12, rax
0x19909:	jne	0x196ff
		Instruction group(s): [7, 1] 

0x1990f:	jmp	0x196e6
		Instruction group(s): [7, 1] 

0x19914:	mov	rdi, rdx
0x19917:	mov	qword ptr [rbp - 0x48], rdx
0x1991b:	xor	r12d, r12d
0x1991e:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x19923:	mov	rdx, qword ptr [rbp - 0x48]
0x19927:	mov	rsi, rax
0x1992a:	mov	rdi, r15
0x1992d:	xor	eax, eax
0x1992f:	mov	rcx, rdx
0x19932:	lea	rdx, [rip + 0x117f9]
0x19939:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x1993e:	jmp	0x19688
		Instruction group(s): [7, 1] 

0x19943:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x19948:	lea	rsi, [rip + 0x12961]
0x1994f:	mov	edx, 5
0x19954:	xor	edi, edi
0x19956:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1995b:	mov	rdi, qword ptr [rbx]
0x1995e:	mov	rdx, rax
0x19961:	or	rcx, 0xffffffffffffffff
0x19965:	xor	eax, eax
0x19967:	repne scasb	al, byte ptr [rdi]
0x19969:	mov	rdi, r15
0x1996c:	mov	rax, rcx
0x1996f:	mov	rcx, r13
0x19972:	not	rax
0x19975:	lea	rsi, [rax - 1]
0x19979:	xor	eax, eax
0x1997b:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x19980:	lea	rsi, [rip + 0x12971]
0x19987:	mov	edx, 5
0x1998c:	xor	edi, edi
0x1998e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x19993:	mov	rdi, r14
0x19996:	mov	rdx, rax
0x19999:	or	rcx, 0xffffffffffffffff
0x1999d:	xor	eax, eax
0x1999f:	repne scasb	al, byte ptr [rdi]
0x199a1:	mov	rdi, r15
0x199a4:	mov	rax, rcx
0x199a7:	mov	rcx, r14
0x199aa:	not	rax
0x199ad:	lea	rsi, [rax - 1]
0x199b1:	xor	eax, eax
0x199b3:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x199b8:	call	0x8d30
		Instruction group(s): [2, 7, 145] 

0x199bd:	lea	rsi, [rip + 0x1296c]
0x199c4:	mov	edx, 5
0x199c9:	xor	edi, edi
0x199cb:	mov	rbx, rax
0x199ce:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x199d3:	or	r8, 0xffffffffffffffff
0x199d7:	mov	rdi, r13
0x199da:	mov	rdx, rax
0x199dd:	mov	rcx, r8
0x199e0:	xor	eax, eax
0x199e2:	repne scasb	al, byte ptr [rdi]
0x199e4:	mov	rdi, r14
0x199e7:	mov	rsi, rcx
0x199ea:	mov	rcx, r8
0x199ed:	repne scasb	al, byte ptr [rdi]
0x199ef:	mov	rdi, rbx
0x199f2:	not	rsi
0x199f5:	mov	r9, rcx
0x199f8:	mov	rcx, r8
0x199fb:	mov	r8, r14
0x199fe:	repne scasb	al, byte ptr [rdi]
0x19a00:	sub	rsi, r9
0x19a03:	mov	rdi, r15
0x19a06:	mov	r9, rbx
0x19a09:	mov	rax, rcx
0x19a0c:	mov	rcx, r13
0x19a0f:	not	rax
0x19a12:	lea	rsi, [rsi + rax - 4]
0x19a17:	xor	eax, eax
0x19a19:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x19a1e:	nop	
0x19a20:	push	r12
		Instruction group(s): [145] 

0x19a22:	push	rbp
		Instruction group(s): [145] 

0x19a23:	push	rbx
		Instruction group(s): [145] 

0x19a24:	mov	rbx, qword ptr [rip + 0x21c75d]
0x19a2b:	test	rbx, rbx
0x19a2e:	je	0x19a73
		Instruction group(s): [7, 1] 

0x19a30:	mov	rbp, rdi
0x19a33:	lea	r12, [rdi + 1]
0x19a37:	jmp	0x19a50
		Instruction group(s): [7, 1] 

0x19a39:	nop	dword ptr [rax]
0x19a40:	movzx	edx, byte ptr [rax]
0x19a43:	cmp	dl, byte ptr [rbp]
0x19a46:	je	0x19a80
		Instruction group(s): [7, 1] 

0x19a48:	mov	rbx, qword ptr [rbx]
0x19a4b:	test	rbx, rbx
0x19a4e:	je	0x19a73
		Instruction group(s): [7, 1] 

0x19a50:	mov	rax, qword ptr [rbx + 8]
0x19a54:	cmp	rax, rbp
0x19a57:	jne	0x19a40
		Instruction group(s): [7, 1] 

0x19a59:	mov	rdi, qword ptr [rbx + 0x10]
0x19a5d:	test	rdi, rdi
0x19a60:	je	0x19a48
		Instruction group(s): [7, 1] 

0x19a62:	call	0x8b30
		Instruction group(s): [2, 7, 145] 

0x19a67:	test	eax, eax
0x19a69:	jne	0x19aa0
		Instruction group(s): [7, 1] 

0x19a6b:	mov	qword ptr [rbx + 0x10], 0
0x19a73:	pop	rbx
		Instruction group(s): [145] 

0x19a74:	pop	rbp
		Instruction group(s): [145] 

0x19a75:	pop	r12
		Instruction group(s): [145] 

0x19a77:	ret	
		Instruction group(s): [3, 145] 

0x19a78:	nop	dword ptr [rax + rax]
0x19a80:	test	dl, dl
0x19a82:	je	0x19a59
		Instruction group(s): [7, 1] 

0x19a84:	lea	rdi, [rax + 1]
0x19a88:	mov	rsi, r12
0x19a8b:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x19a90:	test	eax, eax
0x19a92:	jne	0x19a48
		Instruction group(s): [7, 1] 

0x19a94:	mov	rdi, qword ptr [rbx + 0x10]
0x19a98:	test	rdi, rdi
0x19a9b:	je	0x19a48
		Instruction group(s): [7, 1] 

0x19a9d:	jmp	0x19a62
		Instruction group(s): [7, 1] 

0x19a9f:	nop	
0x19aa0:	mov	rsi, qword ptr [rbx + 8]
0x19aa4:	lea	rdi, [rip + 0x128f1]
0x19aab:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0x19ab0:	mov	qword ptr [rbx + 0x10], 0
0x19ab8:	jmp	0x19a73
		Instruction group(s): [7, 1] 

0x19aba:	nop	word ptr [rax + rax]
0x19ac0:	jmp	0x1b890
		Instruction group(s): [7, 1] 

0x19ac5:	nop	
0x19ac6:	nop	word ptr cs:[rax + rax]
0x19ad0:	jmp	0x8d70
		Instruction group(s): [7, 1] 

0x19ad5:	nop	
0x19ad6:	nop	word ptr cs:[rax + rax]
0x19ae0:	push	rbp
		Instruction group(s): [145] 

0x19ae1:	push	rbx
		Instruction group(s): [145] 

0x19ae2:	mov	rbp, rsi
0x19ae5:	mov	rbx, rdi
0x19ae8:	sub	rsp, 0x28
0x19aec:	lea	rsi, [rsp + 0xc]
0x19af1:	lea	rdi, [rsp + 0x10]
0x19af6:	mov	rax, qword ptr fs:[0x28]
0x19aff:	mov	qword ptr [rsp + 0x18], rax
0x19b04:	xor	eax, eax
0x19b06:	call	0xecf0
		Instruction group(s): [2, 7, 145] 

0x19b0b:	mov	rdi, rbx
0x19b0e:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0x19b13:	mov	rsi, rbp
0x19b16:	mov	rbx, rax
0x19b19:	mov	rdi, rax
0x19b1c:	call	0x21df0
		Instruction group(s): [2, 7, 145] 

0x19b21:	mov	rdi, rbx
0x19b24:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x19b29:	mov	esi, dword ptr [rsp + 0xc]
0x19b2d:	mov	rdi, qword ptr [rsp + 0x10]
0x19b32:	call	0xed20
		Instruction group(s): [2, 7, 145] 

0x19b37:	mov	rax, qword ptr [rsp + 0x18]
0x19b3c:	xor	rax, qword ptr fs:[0x28]
0x19b45:	jne	0x19b4e
		Instruction group(s): [7, 1] 

0x19b47:	add	rsp, 0x28
0x19b4b:	pop	rbx
		Instruction group(s): [145] 

0x19b4c:	pop	rbp
		Instruction group(s): [145] 

0x19b4d:	ret	
		Instruction group(s): [3, 145] 

0x19b4e:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x19b53:	nop	dword ptr [rax]
0x19b56:	nop	word ptr cs:[rax + rax]
0x19b60:	xor	esi, esi
0x19b62:	jmp	0xecb0
		Instruction group(s): [7, 1] 

0x19b67:	nop	word ptr [rax + rax]
0x19b70:	mov	r9, rsi
0x19b73:	mov	rsi, rdi
0x19b76:	mov	rdi, qword ptr [rip + 0x21ef73]
0x19b7d:	jmp	0x14560
		Instruction group(s): [7, 1] 

0x19b82:	nop	word ptr cs:[rax + rax]
0x19b8c:	nop	dword ptr [rax]
0x19b90:	mov	edx, dword ptr [rip + 0x21c862]
0x19b96:	xor	eax, eax
0x19b98:	test	edx, edx
0x19b9a:	sete	al
0x19b9d:	mov	dword ptr [rip + 0x21c855], eax
0x19ba3:	ret	
		Instruction group(s): [3, 145] 

0x19ba4:	nop	
0x19ba6:	nop	word ptr cs:[rax + rax]
0x19bb0:	push	r13
		Instruction group(s): [145] 

0x19bb2:	push	r12
		Instruction group(s): [145] 

0x19bb4:	mov	r12, rdi
0x19bb7:	push	rbp
		Instruction group(s): [145] 

0x19bb8:	push	rbx
		Instruction group(s): [145] 

0x19bb9:	sub	rsp, 8
0x19bbd:	movzx	ebx, byte ptr [rsi]
0x19bc0:	test	bl, bl
0x19bc2:	je	0x19c30
		Instruction group(s): [7, 1] 

0x19bc4:	mov	rbp, rsi
0x19bc7:	jmp	0x19c03
		Instruction group(s): [7, 1] 

0x19bc9:	nop	dword ptr [rax]
0x19bd0:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0x19bd5:	mov	rcx, qword ptr [rax]
0x19bd8:	movzx	edx, bl
0x19bdb:	test	byte ptr [rcx + rdx*2], 1
0x19bdf:	jne	0x19c20
		Instruction group(s): [7, 1] 

0x19be1:	cmp	bl, 0x5c
0x19be4:	je	0x19c20
		Instruction group(s): [7, 1] 

0x19be6:	mov	rax, r13
0x19be9:	mov	r13, r12
0x19bec:	mov	r12, rax
0x19bef:	add	rbp, 1
0x19bf3:	movzx	eax, byte ptr [rbp - 1]
0x19bf7:	mov	byte ptr [r13], al
0x19bfb:	movzx	ebx, byte ptr [rbp]
0x19bff:	test	bl, bl
0x19c01:	je	0x19c30
		Instruction group(s): [7, 1] 

0x19c03:	cmp	bl, 0x24
0x19c06:	lea	r13, [r12 + 1]
0x19c0b:	jne	0x19bd0
		Instruction group(s): [7, 1] 

0x19c0d:	mov	byte ptr [r12], 0x24
0x19c12:	add	r12, 2
0x19c16:	jmp	0x19bef
		Instruction group(s): [7, 1] 

0x19c18:	nop	dword ptr [rax + rax]
0x19c20:	mov	byte ptr [r12], 0x5c
0x19c25:	add	r12, 2
0x19c29:	jmp	0x19bef
		Instruction group(s): [7, 1] 

0x19c2b:	nop	dword ptr [rax + rax]
0x19c30:	add	rsp, 8
0x19c34:	mov	rax, r12
0x19c37:	pop	rbx
		Instruction group(s): [145] 

0x19c38:	pop	rbp
		Instruction group(s): [145] 

0x19c39:	pop	r12
		Instruction group(s): [145] 

0x19c3b:	pop	r13
		Instruction group(s): [145] 

0x19c3d:	ret	
		Instruction group(s): [3, 145] 

0x19c3e:	nop	
0x19c40:	push	r12
		Instruction group(s): [145] 

0x19c42:	push	rbp
		Instruction group(s): [145] 

0x19c43:	push	rbx
		Instruction group(s): [145] 

0x19c44:	mov	ebx, edi
0x19c46:	sub	rsp, 0x140
0x19c4d:	mov	rbp, rsp
0x19c50:	mov	qword ptr [rsp], rsi
0x19c54:	mov	dword ptr [rsp + 0x88], 0x10000000
0x19c5f:	lea	r12, [rbp + 8]
0x19c63:	mov	rax, qword ptr fs:[0x28]
0x19c6c:	mov	qword ptr [rsp + 0x138], rax
0x19c74:	xor	eax, eax
0x19c76:	mov	rdi, r12
0x19c79:	call	0x8a10
		Instruction group(s): [2, 7, 145] 

0x19c7e:	mov	esi, ebx
0x19c80:	mov	rdi, r12
0x19c83:	call	0x8cf0
		Instruction group(s): [2, 7, 145] 

0x19c88:	lea	rdx, [rsp + 0xa0]
0x19c90:	mov	rsi, rbp
0x19c93:	mov	edi, ebx
0x19c95:	call	0x8710
		Instruction group(s): [2, 7, 145] 

0x19c9a:	or	rdx, 0xffffffffffffffff
0x19c9e:	test	eax, eax
0x19ca0:	jne	0x19caa
		Instruction group(s): [7, 1] 

0x19ca2:	mov	rdx, qword ptr [rsp + 0xa0]
0x19caa:	mov	rcx, qword ptr [rsp + 0x138]
0x19cb2:	xor	rcx, qword ptr fs:[0x28]
0x19cbb:	mov	rax, rdx
0x19cbe:	jne	0x19ccc
		Instruction group(s): [7, 1] 

0x19cc0:	add	rsp, 0x140
0x19cc7:	pop	rbx
		Instruction group(s): [145] 

0x19cc8:	pop	rbp
		Instruction group(s): [145] 

0x19cc9:	pop	r12
		Instruction group(s): [145] 

0x19ccb:	ret	
		Instruction group(s): [3, 145] 

0x19ccc:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x19cd1:	nop	dword ptr [rax + rax]
0x19cd6:	nop	word ptr cs:[rax + rax]
0x19ce0:	push	r12
		Instruction group(s): [145] 

0x19ce2:	push	rbp
		Instruction group(s): [145] 

0x19ce3:	push	rbx
		Instruction group(s): [145] 

0x19ce4:	sub	rsp, 0x10
0x19ce8:	mov	rax, qword ptr fs:[0x28]
0x19cf1:	mov	qword ptr [rsp + 8], rax
0x19cf6:	xor	eax, eax
0x19cf8:	cmp	dword ptr [rip + 0x21c029], -1
0x19cff:	mov	byte ptr [rsp + 7], 0x2b
0x19d04:	je	0x19d10
		Instruction group(s): [7, 1] 

0x19d06:	mov	ecx, dword ptr [rip + 0x21c3b4]
0x19d0c:	test	ecx, ecx
0x19d0e:	jne	0x19d37
		Instruction group(s): [7, 1] 

0x19d10:	mov	eax, dword ptr [rip + 0x21cd46]
0x19d16:	test	eax, eax
0x19d18:	jne	0x19d97
		Instruction group(s): [7, 1] 

0x19d1a:	mov	rax, qword ptr [rsp + 8]
0x19d1f:	xor	rax, qword ptr fs:[0x28]
0x19d28:	jne	0x19e5b
		Instruction group(s): [7, 1] 

0x19d2e:	add	rsp, 0x10
0x19d32:	pop	rbx
		Instruction group(s): [145] 

0x19d33:	pop	rbp
		Instruction group(s): [145] 

0x19d34:	pop	r12
		Instruction group(s): [145] 

0x19d36:	ret	
		Instruction group(s): [3, 145] 

0x19d37:	cmp	edi, 2
0x19d3a:	lea	rbx, [rsp + 7]
0x19d3f:	jne	0x19e29
		Instruction group(s): [7, 1] 

0x19d45:	nop	dword ptr [rax]
0x19d48:	sub	ecx, 1
0x19d4b:	test	ecx, ecx
0x19d4d:	mov	dword ptr [rip + 0x21c36d], ecx
0x19d53:	jne	0x19d6e
		Instruction group(s): [7, 1] 

0x19d55:	jmp	0x19d10
		Instruction group(s): [7, 1] 

0x19d57:	nop	word ptr [rax + rax]
0x19d60:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x19d65:	cmp	dword ptr [rax], 4
0x19d68:	jne	0x19e43
		Instruction group(s): [7, 1] 

0x19d6e:	mov	edi, dword ptr [rip + 0x21bfb8]
0x19d74:	mov	edx, 1
0x19d79:	mov	rsi, rbx
0x19d7c:	call	0x8770
		Instruction group(s): [2, 7, 145] 

0x19d81:	cmp	eax, -1
0x19d84:	je	0x19d60
		Instruction group(s): [7, 1] 

0x19d86:	cmp	eax, 1
0x19d89:	jne	0x19e43
		Instruction group(s): [7, 1] 

0x19d8f:	mov	ecx, dword ptr [rip + 0x21c32b]
0x19d95:	jmp	0x19d48
		Instruction group(s): [7, 1] 

0x19d97:	mov	edi, dword ptr [rip + 0x21bf8f]
0x19d9d:	mov	ebx, 1
0x19da2:	lea	r12, [rsp + 7]
0x19da7:	lea	rbp, [rip + 0x21bf7a]
0x19dae:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0x19db3:	jmp	0x19dbb
		Instruction group(s): [7, 1] 

0x19db5:	nop	dword ptr [rax]
0x19db8:	add	ebx, 1
0x19dbb:	mov	edi, dword ptr [rbp]
0x19dbe:	mov	edx, 1
0x19dc3:	mov	rsi, r12
0x19dc6:	call	0x8980
		Instruction group(s): [2, 7, 145] 

0x19dcb:	cmp	rax, 1
0x19dcf:	je	0x19db8
		Instruction group(s): [7, 1] 

0x19dd1:	mov	r8d, dword ptr [rip + 0x21cc84]
0x19dd8:	cmp	r8d, ebx
0x19ddb:	jne	0x19e10
		Instruction group(s): [7, 1] 

0x19ddd:	mov	edi, dword ptr [rip + 0x21bf45]
0x19de3:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0x19de8:	mov	eax, dword ptr [rip + 0x21bf42]
0x19dee:	mov	rdi, qword ptr [rip + 0x21c5c3]
0x19df5:	mov	dword ptr [rip + 0x21bf39], eax
0x19dfb:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x19e00:	mov	qword ptr [rip + 0x21c5ad], 0
0x19e0b:	jmp	0x19d1a
		Instruction group(s): [7, 1] 

0x19e10:	lea	rdx, [rip + 0x125d1]
0x19e17:	mov	ecx, ebx
0x19e19:	mov	esi, 0x28
0x19e1e:	xor	edi, edi
0x19e20:	xor	eax, eax
0x19e22:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x19e27:	jmp	0x19ddd
		Instruction group(s): [7, 1] 

0x19e29:	lea	rdx, [rip + 0x12578]
0x19e30:	mov	esi, 0x14
0x19e35:	xor	edi, edi
0x19e37:	xor	eax, eax
0x19e39:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x19e3e:	jmp	0x19d10
		Instruction group(s): [7, 1] 

0x19e43:	lea	rsi, [rip + 0x13b83]
0x19e4a:	lea	rdi, [rip + 0x1359d]
0x19e51:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0x19e56:	jmp	0x19d8f
		Instruction group(s): [7, 1] 

0x19e5b:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x19e60:	push	rbp
		Instruction group(s): [145] 

0x19e61:	xor	r10d, r10d
0x19e64:	lea	r9, [rip + 0x13a2d]
0x19e6b:	mov	r11, r10
0x19e6e:	mov	rbp, rsp
0x19e71:	push	r15
		Instruction group(s): [145] 

0x19e73:	push	r14
		Instruction group(s): [145] 

0x19e75:	push	r13
		Instruction group(s): [145] 

0x19e77:	push	r12
		Instruction group(s): [145] 

0x19e79:	mov	r13d, 0x62
0x19e7f:	push	rbx
		Instruction group(s): [145] 

0x19e80:	mov	r15d, edi
0x19e83:	lea	r12, [rip + 0x21a3d6]
0x19e8a:	mov	edi, 0x292d
0x19e8f:	mov	edx, r13d
0x19e92:	xor	r14d, r14d
0x19e95:	sub	rsp, 0x88
0x19e9c:	xor	ebx, ebx
0x19e9e:	mov	word ptr [rbp - 0x48], di
0x19ea2:	movdqa	xmm0, xmmword ptr [rip + 0x13aa6]
		Instruction group(s): [149] 

0x19eaa:	mov	r13d, esi
0x19ead:	mov	rax, qword ptr fs:[0x28]
0x19eb6:	mov	qword ptr [rbp - 0x38], rax
0x19eba:	xor	eax, eax
0x19ebc:	movaps	xmmword ptr [rbp - 0x60], xmm0
		Instruction group(s): [148] 

0x19ec0:	movabs	rax, 0x2a2d73656c626169
0x19eca:	mov	byte ptr [rbp - 0x46], 0
0x19ece:	mov	dword ptr [rbp - 0x70], 0x292d2a
0x19ed5:	movdqa	xmm0, xmmword ptr [rip + 0x13a83]
		Instruction group(s): [149] 

0x19edd:	mov	qword ptr [rbp - 0x50], rax
0x19ee1:	movaps	xmmword ptr [rbp - 0x80], xmm0
		Instruction group(s): [148] 

0x19ee5:	nop	dword ptr [rax]
0x19ee8:	movzx	eax, byte ptr [r12 + 0x10]
0x19eee:	test	al, 2
0x19ef0:	je	0x19f80
		Instruction group(s): [7, 1] 

0x19ef6:	test	r13d, r13d
0x19ef9:	je	0x19f03
		Instruction group(s): [7, 1] 

0x19efb:	test	al, 4
0x19efd:	jne	0x19f80
		Instruction group(s): [7, 1] 

0x19f03:	mov	ecx, dword ptr [r12 + 4]
0x19f08:	cmp	ecx, 7
0x19f0b:	ja	0x1a5a2
		Instruction group(s): [7, 1] 

0x19f11:	mov	eax, ecx
0x19f13:	movsxd	rax, dword ptr [r9 + rax*4]
		Instruction group(s): [145] 

0x19f17:	add	rax, r9
0x19f1a:	jmp	rax
		Instruction group(s): [145, 1] 

0x19f1c:	nop	dword ptr [rax]
0x19f20:	mov	rax, qword ptr [r12 + 8]
0x19f25:	mov	eax, dword ptr [rax]
0x19f27:	test	eax, eax
0x19f29:	setne	sil
0x19f2d:	and	ecx, 1
0x19f30:	cmp	sil, cl
0x19f33:	je	0x19f80
		Instruction group(s): [7, 1] 

0x19f35:	mov	rcx, qword ptr [r12 + 0x20]
0x19f3a:	test	rcx, rcx
0x19f3d:	je	0x19f43
		Instruction group(s): [7, 1] 

0x19f3f:	cmp	eax, dword ptr [rcx]
0x19f41:	je	0x19f80
		Instruction group(s): [7, 1] 

0x19f43:	sub	rsp, 0x30
0x19f47:	lea	rsi, [rsp + 0xf]
0x19f4c:	and	rsi, 0xfffffffffffffff0
0x19f50:	test	rbx, rbx
0x19f53:	mov	qword ptr [rsi + 8], r12
0x19f57:	mov	qword ptr [rsi + 0x10], 0
0x19f5f:	mov	qword ptr [rsi], 0
0x19f66:	je	0x1a555
		Instruction group(s): [7, 1] 

0x19f6c:	mov	qword ptr [r11], rsi
0x19f6f:	cmp	edx, 0x7f
0x19f72:	jg	0x1a4f6
		Instruction group(s): [7, 1] 

0x19f78:	add	r14d, 3
0x19f7c:	mov	r11, rsi
0x19f7f:	nop	
0x19f80:	add	r12, 0x30
0x19f84:	mov	edx, dword ptr [r12]
0x19f88:	test	edx, edx
0x19f8a:	jne	0x19ee8
		Instruction group(s): [7, 1] 

0x19f90:	lea	edx, [r14 + 0x35]
		Instruction group(s): [145] 

0x19f94:	xor	esi, esi
0x19f96:	lea	rax, [rdx + 0x1e]
0x19f9a:	shr	rax, 4
0x19f9e:	shl	rax, 4
0x19fa2:	sub	rsp, rax
0x19fa5:	lea	r13, [rsp + 0xf]
0x19faa:	and	r13, 0xfffffffffffffff0
0x19fae:	mov	rdi, r13
0x19fb1:	lea	r14, [r13 + 1]
0x19fb5:	call	0x8900
		Instruction group(s): [2, 7, 145] 

0x19fba:	test	rbx, rbx
0x19fbd:	mov	byte ptr [r13], 0x2d
0x19fc2:	je	0x1a4dc
		Instruction group(s): [7, 1] 

0x19fc8:	cmp	qword ptr [rbx + 0x10], 0
0x19fcd:	jne	0x1a592
		Instruction group(s): [7, 1] 

0x19fd3:	mov	rax, qword ptr [rbx + 8]
0x19fd7:	mov	r12, r14
0x19fda:	mov	eax, dword ptr [rax]
0x19fdc:	cmp	eax, 0x7f
0x19fdf:	jle	0x1a00a
		Instruction group(s): [7, 1] 

0x19fe1:	jmp	0x1a452
		Instruction group(s): [7, 1] 

0x19fe6:	nop	word ptr cs:[rax + rax]
0x19ff0:	cmp	qword ptr [rbx + 0x10], 0
0x19ff5:	jne	0x1a452
		Instruction group(s): [7, 1] 

0x19ffb:	mov	rax, qword ptr [rbx + 8]
0x19fff:	mov	eax, dword ptr [rax]
0x1a001:	cmp	eax, 0x7f
0x1a004:	jg	0x1a452
		Instruction group(s): [7, 1] 

0x1a00a:	add	r12, 1
0x1a00e:	mov	byte ptr [r12 - 1], al
0x1a013:	mov	rbx, qword ptr [rbx]
0x1a016:	test	rbx, rbx
0x1a019:	jne	0x19ff0
		Instruction group(s): [7, 1] 

0x1a01b:	cmp	r12, r14
0x1a01e:	je	0x1a4dc
		Instruction group(s): [7, 1] 

0x1a024:	xor	edx, edx
0x1a026:	cmp	byte ptr [r13], 0x2d
0x1a02b:	mov	rax, qword ptr [rip + 0x21bd9e]
0x1a032:	mov	r9, qword ptr [rax + 8]
0x1a036:	je	0x1a4ca
		Instruction group(s): [7, 1] 

0x1a03c:	sub	rsp, 8
0x1a040:	lea	rdi, [rip + 0x133b0]
0x1a047:	add	rdx, r13
0x1a04a:	push	0
		Instruction group(s): [145] 

0x1a04c:	mov	ecx, 1
0x1a051:	mov	r8d, 1
0x1a057:	mov	esi, 6
0x1a05c:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x1a061:	cmp	qword ptr [rip + 0x21c9c7], 0
0x1a069:	pop	rdx
		Instruction group(s): [145] 

0x1a06a:	pop	rcx
		Instruction group(s): [145] 

0x1a06b:	je	0x1a089
		Instruction group(s): [7, 1] 

0x1a06d:	lea	rax, [r12 + 1]
0x1a072:	mov	byte ptr [r12], 0x20
0x1a077:	lea	rsi, [rbp - 0x80]
0x1a07b:	mov	ecx, 0x13
0x1a080:	add	r12, 0x14
0x1a084:	mov	rdi, rax
0x1a087:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x1a089:	test	r15d, r15d
0x1a08c:	je	0x1a0c8
		Instruction group(s): [7, 1] 

0x1a08e:	cmp	qword ptr [rip + 0x21c97a], 0
0x1a096:	je	0x1a0c8
		Instruction group(s): [7, 1] 

0x1a098:	mov	dword ptr [r12], 0x202d2d20
0x1a0a0:	cmp	dword ptr [rip + 0x21f491], 0
0x1a0a7:	mov	byte ptr [r12 + 4], 0
0x1a0ad:	je	0x1a516
		Instruction group(s): [7, 1] 

0x1a0b3:	add	r12, 4
0x1a0b7:	lea	rsi, [rbp - 0x60]
0x1a0bb:	mov	ecx, 0x1a
0x1a0c0:	mov	rdi, r12
0x1a0c3:	rep movsb	byte ptr [rdi], byte ptr [rsi]
0x1a0c5:	nop	dword ptr [rax]
0x1a0c8:	cmp	byte ptr [r13], 0x2d
0x1a0cd:	mov	eax, dword ptr [rip + 0x21c315]
0x1a0d3:	lea	rdi, [rip + 0x101c0]
0x1a0da:	mov	r8d, 1
0x1a0e0:	mov	esi, 9
0x1a0e5:	cmovne	r14, r13
		Instruction group(s): [137] 

0x1a0e9:	xor	ecx, ecx
0x1a0eb:	test	eax, eax
0x1a0ed:	mov	rax, qword ptr [rip + 0x21bcdc]
0x1a0f4:	setne	cl
0x1a0f7:	sub	rsp, 8
0x1a0fb:	push	0
		Instruction group(s): [145] 

0x1a0fd:	add	ecx, 2
0x1a100:	mov	rdx, r14
0x1a103:	mov	r9, qword ptr [rax + 8]
0x1a107:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x1a10c:	mov	rdi, qword ptr [rbp - 0x38]
0x1a110:	xor	rdi, qword ptr fs:[0x28]
0x1a119:	jne	0x1a5a7
		Instruction group(s): [7, 1] 

0x1a11f:	lea	rsp, [rbp - 0x28]
0x1a123:	pop	rbx
		Instruction group(s): [145] 

0x1a124:	pop	r12
		Instruction group(s): [145] 

0x1a126:	pop	r13
		Instruction group(s): [145] 

0x1a128:	pop	r14
		Instruction group(s): [145] 

0x1a12a:	pop	r15
		Instruction group(s): [145] 

0x1a12c:	pop	rbp
		Instruction group(s): [145] 

0x1a12d:	ret	
		Instruction group(s): [3, 145] 

0x1a12e:	nop	
0x1a130:	test	r15d, r15d
0x1a133:	je	0x19f80
		Instruction group(s): [7, 1] 

0x1a139:	mov	rax, qword ptr [r12 + 0x20]
0x1a13e:	mov	rcx, qword ptr [r12 + 8]
0x1a143:	test	rax, rax
0x1a146:	movsd	xmm0, qword ptr [rcx]
		Instruction group(s): [149] 

0x1a14a:	je	0x1a158
		Instruction group(s): [7, 1] 

0x1a14c:	ucomisd	xmm0, qword ptr [rax]
		Instruction group(s): [149] 

0x1a150:	jp	0x1a158
		Instruction group(s): [7, 1] 

0x1a152:	je	0x19f80
		Instruction group(s): [7, 1] 

0x1a158:	mov	rax, qword ptr [r12 + 0x18]
0x1a15d:	test	rax, rax
0x1a160:	je	0x1a16e
		Instruction group(s): [7, 1] 

0x1a162:	ucomisd	xmm0, qword ptr [rax]
		Instruction group(s): [149] 

0x1a166:	jp	0x1a16e
		Instruction group(s): [7, 1] 

0x1a168:	je	0x1a529
		Instruction group(s): [7, 1] 

0x1a16e:	add	rsp, -0x80
0x1a172:	lea	rcx, [rip + 0x1327b]
0x1a179:	mov	esi, 1
0x1a17e:	lea	r8, [rsp + 0xf]
0x1a183:	mov	edx, 0x64
0x1a188:	mov	eax, 1
0x1a18d:	mov	qword ptr [rbp - 0x90], r9
0x1a194:	mov	qword ptr [rbp - 0x98], r11
0x1a19b:	and	r8, 0xfffffffffffffff0
0x1a19f:	mov	rdi, r8
0x1a1a2:	mov	qword ptr [rbp - 0x88], r8
0x1a1a9:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x1a1ae:	sub	rsp, 0x30
0x1a1b2:	mov	r8, qword ptr [rbp - 0x88]
0x1a1b9:	mov	r9, qword ptr [rbp - 0x90]
0x1a1c0:	lea	rsi, [rsp + 0xf]
0x1a1c5:	and	rsi, 0xfffffffffffffff0
0x1a1c9:	test	rbx, rbx
0x1a1cc:	mov	qword ptr [rsi + 8], r12
0x1a1d0:	mov	qword ptr [rsi + 0x10], r8
0x1a1d4:	mov	qword ptr [rsi], 0
0x1a1db:	je	0x1a59a
		Instruction group(s): [7, 1] 

0x1a1e1:	mov	r11, qword ptr [rbp - 0x98]
0x1a1e8:	mov	qword ptr [r11], rsi
0x1a1eb:	xor	eax, eax
0x1a1ed:	or	rcx, 0xffffffffffffffff
0x1a1f1:	mov	rdi, r8
0x1a1f4:	jmp	0x1a2ba
		Instruction group(s): [7, 1] 

0x1a1f9:	nop	dword ptr [rax]
0x1a200:	test	r15d, r15d
0x1a203:	je	0x19f80
		Instruction group(s): [7, 1] 

0x1a209:	mov	rax, qword ptr [r12 + 0x20]
0x1a20e:	mov	rcx, qword ptr [r12 + 8]
0x1a213:	test	rax, rax
0x1a216:	mov	r8d, dword ptr [rcx]
0x1a219:	je	0x1a224
		Instruction group(s): [7, 1] 

0x1a21b:	cmp	dword ptr [rax], r8d
0x1a21e:	je	0x19f80
		Instruction group(s): [7, 1] 

0x1a224:	mov	rax, qword ptr [r12 + 0x18]
0x1a229:	test	rax, rax
0x1a22c:	je	0x1a237
		Instruction group(s): [7, 1] 

0x1a22e:	cmp	dword ptr [rax], r8d
0x1a231:	je	0x1a529
		Instruction group(s): [7, 1] 

0x1a237:	sub	rsp, 0x30
0x1a23b:	lea	rcx, [rip + 0x147da]
0x1a242:	mov	esi, 1
0x1a247:	lea	r10, [rsp + 0xf]
0x1a24c:	xor	eax, eax
0x1a24e:	mov	edx, 0x1e
0x1a253:	mov	qword ptr [rbp - 0x90], r9
0x1a25a:	mov	qword ptr [rbp - 0x98], r11
0x1a261:	and	r10, 0xfffffffffffffff0
0x1a265:	mov	rdi, r10
0x1a268:	mov	qword ptr [rbp - 0x88], r10
0x1a26f:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x1a274:	sub	rsp, 0x30
0x1a278:	mov	r10, qword ptr [rbp - 0x88]
0x1a27f:	mov	r9, qword ptr [rbp - 0x90]
0x1a286:	lea	rsi, [rsp + 0xf]
0x1a28b:	and	rsi, 0xfffffffffffffff0
0x1a28f:	test	rbx, rbx
0x1a292:	mov	qword ptr [rsi + 8], r12
0x1a296:	mov	qword ptr [rsi + 0x10], r10
0x1a29a:	mov	qword ptr [rsi], 0
0x1a2a1:	je	0x1a565
		Instruction group(s): [7, 1] 

0x1a2a7:	mov	r11, qword ptr [rbp - 0x98]
0x1a2ae:	mov	qword ptr [r11], rsi
0x1a2b1:	xor	eax, eax
0x1a2b3:	or	rcx, 0xffffffffffffffff
0x1a2b7:	mov	rdi, r10
0x1a2ba:	repne scasb	al, byte ptr [rdi]
0x1a2bc:	mov	r11, rsi
0x1a2bf:	not	rcx
0x1a2c2:	lea	edx, [rcx + rcx*2]
		Instruction group(s): [145] 

0x1a2c5:	add	r14d, edx
0x1a2c8:	cmp	dword ptr [r12], 0x7f
0x1a2cd:	jle	0x19f80
		Instruction group(s): [7, 1] 

0x1a2d3:	jmp	0x1a43f
		Instruction group(s): [7, 1] 

0x1a2d8:	nop	dword ptr [rax + rax]
0x1a2e0:	test	r15d, r15d
0x1a2e3:	je	0x19f80
		Instruction group(s): [7, 1] 

0x1a2e9:	mov	rax, qword ptr [r12 + 8]
0x1a2ee:	mov	rax, qword ptr [rax]
0x1a2f1:	test	rax, rax
0x1a2f4:	je	0x19f80
		Instruction group(s): [7, 1] 

0x1a2fa:	mov	esi, dword ptr [rax + 8]
0x1a2fd:	test	esi, esi
0x1a2ff:	je	0x19f80
		Instruction group(s): [7, 1] 

0x1a305:	mov	rcx, qword ptr [rax]
0x1a308:	lea	eax, [rsi - 1]
		Instruction group(s): [145] 

0x1a30b:	mov	dword ptr [rbp - 0xa0], r15d
0x1a312:	mov	rdi, r11
0x1a315:	mov	r15d, r14d
0x1a318:	mov	dword ptr [rbp - 0x9c], edx
0x1a31e:	mov	r14, rbx
0x1a321:	mov	dword ptr [rbp - 0xa4], r13d
0x1a328:	lea	r8, [rcx + 8]
0x1a32c:	lea	rax, [r8 + rax*8]
0x1a330:	mov	rbx, r8
0x1a333:	mov	qword ptr [rbp - 0x98], rax
0x1a33a:	jmp	0x1a3a7
		Instruction group(s): [7, 1] 

0x1a33c:	nop	dword ptr [rax]
0x1a340:	mov	qword ptr [rdi], rdx
0x1a343:	test	rax, rax
0x1a346:	je	0x1a56d
		Instruction group(s): [7, 1] 

0x1a34c:	mov	rdi, qword ptr [rcx]
0x1a34f:	mov	qword ptr [rbp - 0x90], r9
0x1a356:	mov	qword ptr [rbp - 0x88], rdx
0x1a35d:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1a362:	mov	r9, qword ptr [rbp - 0x90]
0x1a369:	lea	eax, [rax + rax*2 + 3]
		Instruction group(s): [145] 

0x1a36d:	mov	rdx, qword ptr [rbp - 0x88]
0x1a374:	add	r15d, eax
0x1a377:	cmp	dword ptr [rbp - 0x9c], 0x7f
0x1a37e:	jle	0x1a390
		Instruction group(s): [7, 1] 

0x1a380:	mov	rdi, qword ptr [r12 + 0x28]
0x1a385:	or	rcx, 0xffffffffffffffff
0x1a389:	xor	eax, eax
0x1a38b:	repne scasb	al, byte ptr [rdi]
0x1a38d:	sub	r15d, ecx
0x1a390:	cmp	qword ptr [rbp - 0x98], rbx
0x1a397:	mov	rcx, rbx
0x1a39a:	mov	rdi, rdx
0x1a39d:	je	0x1a576
		Instruction group(s): [7, 1] 

0x1a3a3:	add	rbx, 8
0x1a3a7:	sub	rsp, 0x30
0x1a3ab:	mov	rax, qword ptr [rcx]
0x1a3ae:	lea	rdx, [rsp + 0xf]
0x1a3b3:	and	rdx, 0xfffffffffffffff0
0x1a3b7:	test	r14, r14
0x1a3ba:	mov	r13, rdx
0x1a3bd:	mov	qword ptr [rdx + 8], r12
0x1a3c1:	mov	qword ptr [rdx + 0x10], rax
0x1a3c5:	mov	qword ptr [rdx], 0
0x1a3cc:	jne	0x1a340
		Instruction group(s): [7, 1] 

0x1a3d2:	mov	r14, rdx
0x1a3d5:	jmp	0x1a343
		Instruction group(s): [7, 1] 

0x1a3da:	nop	word ptr [rax + rax]
0x1a3e0:	test	r15d, r15d
0x1a3e3:	je	0x19f80
		Instruction group(s): [7, 1] 

0x1a3e9:	mov	rax, qword ptr [r12 + 8]
0x1a3ee:	mov	rdi, qword ptr [rax]
0x1a3f1:	test	rdi, rdi
0x1a3f4:	je	0x19f80
		Instruction group(s): [7, 1] 

0x1a3fa:	sub	rsp, 0x30
0x1a3fe:	lea	rsi, [rsp + 0xf]
0x1a403:	and	rsi, 0xfffffffffffffff0
0x1a407:	test	rbx, rbx
0x1a40a:	mov	qword ptr [rsi + 8], r12
0x1a40e:	mov	qword ptr [rsi + 0x10], rdi
0x1a412:	mov	qword ptr [rsi], 0
0x1a419:	je	0x1a55d
		Instruction group(s): [7, 1] 

0x1a41f:	mov	qword ptr [r11], rsi
0x1a422:	xor	eax, eax
0x1a424:	or	rcx, 0xffffffffffffffff
0x1a428:	mov	r11, rsi
0x1a42b:	repne scasb	al, byte ptr [rdi]
0x1a42d:	not	rcx
0x1a430:	lea	ecx, [rcx + rcx*2]
		Instruction group(s): [145] 

0x1a433:	add	r14d, ecx
0x1a436:	cmp	edx, 0x7f
0x1a439:	jle	0x19f80
		Instruction group(s): [7, 1] 

0x1a43f:	mov	rdi, qword ptr [r12 + 0x28]
0x1a444:	or	rcx, 0xffffffffffffffff
0x1a448:	repne scasb	al, byte ptr [rdi]
0x1a44a:	sub	r14d, ecx
0x1a44d:	jmp	0x19f80
		Instruction group(s): [7, 1] 

0x1a452:	mov	rax, r12
0x1a455:	jmp	0x1a498
		Instruction group(s): [7, 1] 

0x1a457:	nop	word ptr [rax + rax]
0x1a460:	mov	byte ptr [rax + 2], dl
0x1a463:	mov	rax, rdi
0x1a466:	mov	rsi, qword ptr [rbx + 0x10]
0x1a46a:	test	rsi, rsi
0x1a46d:	je	0x1a490
		Instruction group(s): [7, 1] 

0x1a46f:	cmp	byte ptr [rsi], 0
0x1a472:	je	0x1a490
		Instruction group(s): [7, 1] 

0x1a474:	mov	rdx, qword ptr [rbx + 8]
0x1a478:	cmp	dword ptr [rdx], 0x7f
0x1a47b:	jle	0x1a488
		Instruction group(s): [7, 1] 

0x1a47d:	mov	byte ptr [rax], 0x3d
0x1a480:	mov	rsi, qword ptr [rbx + 0x10]
0x1a484:	add	rax, 1
0x1a488:	mov	rdi, rax
0x1a48b:	call	0x19bb0
		Instruction group(s): [2, 7, 145] 

0x1a490:	mov	rbx, qword ptr [rbx]
0x1a493:	test	rbx, rbx
0x1a496:	je	0x1a4c2
		Instruction group(s): [7, 1] 

0x1a498:	mov	esi, 0x2d20
0x1a49d:	lea	rdi, [rax + 3]
0x1a4a1:	mov	word ptr [rax], si
0x1a4a4:	mov	rdx, qword ptr [rbx + 8]
0x1a4a8:	mov	edx, dword ptr [rdx]
0x1a4aa:	cmp	edx, 0x7f
0x1a4ad:	jle	0x1a460
		Instruction group(s): [7, 1] 

0x1a4af:	mov	byte ptr [rax + 2], 0x2d
0x1a4b3:	mov	rax, qword ptr [rbx + 8]
0x1a4b7:	mov	rsi, qword ptr [rax + 0x28]
0x1a4bb:	call	0x87f0
		Instruction group(s): [2, 7, 145] 

0x1a4c0:	jmp	0x1a466
		Instruction group(s): [7, 1] 

0x1a4c2:	mov	r12, rax
0x1a4c5:	jmp	0x1a01b
		Instruction group(s): [7, 1] 

0x1a4ca:	xor	edx, edx
0x1a4cc:	cmp	byte ptr [r13 + 1], 0x20
0x1a4d1:	sete	dl
0x1a4d4:	add	rdx, rdx
0x1a4d7:	jmp	0x1a03c
		Instruction group(s): [7, 1] 

0x1a4dc:	mov	rax, qword ptr [rip + 0x21b8ed]
0x1a4e3:	mov	byte ptr [r13], 0
0x1a4e8:	mov	r12, r13
0x1a4eb:	xor	edx, edx
0x1a4ed:	mov	r9, qword ptr [rax + 8]
0x1a4f1:	jmp	0x1a03c
		Instruction group(s): [7, 1] 

0x1a4f6:	mov	rdi, qword ptr [r12 + 0x28]
0x1a4fb:	xor	eax, eax
0x1a4fd:	or	rcx, 0xffffffffffffffff
0x1a501:	mov	r11, rsi
0x1a504:	repne scasb	al, byte ptr [rdi]
0x1a506:	mov	rax, rcx
0x1a509:	not	rax
0x1a50c:	lea	r14d, [r14 + rax + 4]
		Instruction group(s): [145] 

0x1a511:	jmp	0x19f80
		Instruction group(s): [7, 1] 

0x1a516:	movdqa	xmm0, xmmword ptr [rip + 0x13452]
		Instruction group(s): [149] 

0x1a51e:	movups	xmmword ptr [r12 + 4], xmm0
		Instruction group(s): [148] 

0x1a524:	jmp	0x1a0c8
		Instruction group(s): [7, 1] 

0x1a529:	sub	rsp, 0x30
0x1a52d:	lea	rax, [rip + 0x13499]
0x1a534:	lea	rsi, [rsp + 0xf]
0x1a539:	and	rsi, 0xfffffffffffffff0
0x1a53d:	test	rbx, rbx
0x1a540:	mov	qword ptr [rsi + 8], r12
0x1a544:	mov	qword ptr [rsi + 0x10], rax
0x1a548:	mov	qword ptr [rsi], 0
0x1a54f:	jne	0x19f6c
		Instruction group(s): [7, 1] 

0x1a555:	mov	rbx, rsi
0x1a558:	jmp	0x19f6f
		Instruction group(s): [7, 1] 

0x1a55d:	mov	rbx, rsi
0x1a560:	jmp	0x1a422
		Instruction group(s): [7, 1] 

0x1a565:	mov	rbx, rsi
0x1a568:	jmp	0x1a2b1
		Instruction group(s): [7, 1] 

0x1a56d:	add	r15d, 3
0x1a571:	jmp	0x1a377
		Instruction group(s): [7, 1] 

0x1a576:	mov	rbx, r14
0x1a579:	mov	r11, r13
0x1a57c:	mov	r14d, r15d
0x1a57f:	mov	r13d, dword ptr [rbp - 0xa4]
0x1a586:	mov	r15d, dword ptr [rbp - 0xa0]
0x1a58d:	jmp	0x19f80
		Instruction group(s): [7, 1] 

0x1a592:	mov	rax, r14
0x1a595:	jmp	0x1a498
		Instruction group(s): [7, 1] 

0x1a59a:	mov	rbx, rsi
0x1a59d:	jmp	0x1a1eb
		Instruction group(s): [7, 1] 

0x1a5a2:	call	0x8650
		Instruction group(s): [2, 7, 145] 

0x1a5a7:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x1a5ac:	nop	dword ptr [rax]
0x1a5b0:	mov	eax, dword ptr [rip + 0x21be2a]
0x1a5b6:	mov	edx, dword ptr [rip + 0x21be44]
0x1a5bc:	push	r12
		Instruction group(s): [145] 

0x1a5be:	push	rbp
		Instruction group(s): [145] 

0x1a5bf:	push	rbx
		Instruction group(s): [145] 

0x1a5c0:	lea	rbx, [rip + 0x13406]
0x1a5c7:	test	eax, eax
0x1a5c9:	lea	rax, [rip + 0x144cd]
0x1a5d0:	cmovne	rbx, rax
		Instruction group(s): [137] 

0x1a5d4:	test	edx, edx
0x1a5d6:	je	0x1a5dd
		Instruction group(s): [7, 1] 

0x1a5d8:	pop	rbx
		Instruction group(s): [145] 

0x1a5d9:	pop	rbp
		Instruction group(s): [145] 

0x1a5da:	pop	r12
		Instruction group(s): [145] 

0x1a5dc:	ret	
		Instruction group(s): [3, 145] 

0x1a5dd:	mov	rcx, qword ptr [rip + 0x21b81c]
0x1a5e4:	lea	rsi, [rip + 0x12e13]
0x1a5eb:	xor	eax, eax
0x1a5ed:	mov	rdx, rbx
0x1a5f0:	mov	edi, 1
0x1a5f5:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x1a5fa:	mov	rbp, qword ptr [rip + 0x21ee9f]
0x1a601:	test	rbp, rbp
0x1a604:	je	0x1a610
		Instruction group(s): [7, 1] 

0x1a606:	cmp	byte ptr [rbp], 0
0x1a60a:	jne	0x1a69a
		Instruction group(s): [7, 1] 

0x1a610:	mov	rbp, qword ptr [rip + 0x21b7e1]
0x1a617:	lea	rsi, [rip + 0x12def]
0x1a61e:	mov	edx, 5
0x1a623:	xor	edi, edi
0x1a625:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1a62a:	mov	rcx, rbp
0x1a62d:	mov	rsi, rax
0x1a630:	mov	rdx, rbx
0x1a633:	mov	edi, 1
0x1a638:	xor	eax, eax
0x1a63a:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x1a63f:	lea	rsi, [rip + 0x11dea]
0x1a646:	mov	rdx, rbx
0x1a649:	mov	edi, 1
0x1a64e:	xor	eax, eax
0x1a650:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x1a655:	lea	rsi, [rip + 0x11e14]
0x1a65c:	mov	edx, 5
0x1a661:	xor	edi, edi
0x1a663:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1a668:	mov	r8, rbx
0x1a66b:	mov	rcx, rbx
0x1a66e:	mov	rdx, rbx
0x1a671:	mov	rsi, rax
0x1a674:	mov	edi, 1
0x1a679:	xor	eax, eax
0x1a67b:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x1a680:	pop	rbx
		Instruction group(s): [145] 

0x1a681:	pop	rbp
		Instruction group(s): [145] 

0x1a682:	pop	r12
		Instruction group(s): [145] 

0x1a684:	mov	rdi, qword ptr [rip + 0x21b795]
0x1a68b:	mov	dword ptr [rip + 0x21bd6b], 1
0x1a695:	jmp	0x8ad0
		Instruction group(s): [7, 1] 

0x1a69a:	mov	r12, qword ptr [rip + 0x21b757]
0x1a6a1:	lea	rsi, [rip + 0x12d75]
0x1a6a8:	xor	edi, edi
0x1a6aa:	mov	edx, 5
0x1a6af:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1a6b4:	mov	r8, rbp
0x1a6b7:	mov	rsi, rax
0x1a6ba:	mov	rcx, r12
0x1a6bd:	mov	rdx, rbx
0x1a6c0:	mov	edi, 1
0x1a6c5:	xor	eax, eax
0x1a6c7:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x1a6cc:	jmp	0x1a63f
		Instruction group(s): [7, 1] 

0x1a6d1:	nop	dword ptr [rax + rax]
0x1a6d6:	nop	word ptr cs:[rax + rax]
0x1a6e0:	push	rbp
		Instruction group(s): [145] 

0x1a6e1:	push	rbx
		Instruction group(s): [145] 

0x1a6e2:	xor	edi, edi
0x1a6e4:	sub	rsp, 0x18
0x1a6e8:	mov	rbx, rsp
0x1a6eb:	mov	rax, qword ptr fs:[0x28]
0x1a6f4:	mov	qword ptr [rsp + 8], rax
0x1a6f9:	xor	eax, eax
0x1a6fb:	call	0x8a60
		Instruction group(s): [2, 7, 145] 

0x1a700:	mov	qword ptr [rsp], rax
0x1a704:	call	0x1a5b0
		Instruction group(s): [2, 7, 145] 

0x1a709:	mov	rdi, rbx
0x1a70c:	call	0x87d0
		Instruction group(s): [2, 7, 145] 

0x1a711:	lea	rsi, [rip + 0x11e28]
0x1a718:	xor	edi, edi
0x1a71a:	mov	rbp, rax
0x1a71d:	mov	edx, 5
0x1a722:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1a727:	mov	rdx, rbp
0x1a72a:	mov	rsi, rax
0x1a72d:	mov	edi, 1
0x1a732:	xor	eax, eax
0x1a734:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x1a739:	call	0x287c0
		Instruction group(s): [2, 7, 145] 

0x1a73e:	call	0xda50
		Instruction group(s): [2, 7, 145] 

0x1a743:	call	0x25b20
		Instruction group(s): [2, 7, 145] 

0x1a748:	call	0x10cb0
		Instruction group(s): [2, 7, 145] 

0x1a74d:	call	0x29280
		Instruction group(s): [2, 7, 145] 

0x1a752:	lea	rdi, [rip + 0x12cd9]
0x1a759:	call	0x26120
		Instruction group(s): [2, 7, 145] 

0x1a75e:	xor	edi, edi
0x1a760:	call	0x8a60
		Instruction group(s): [2, 7, 145] 

0x1a765:	mov	rdi, rbx
0x1a768:	mov	qword ptr [rsp], rax
0x1a76c:	call	0x87d0
		Instruction group(s): [2, 7, 145] 

0x1a771:	lea	rsi, [rip + 0x11df0]
0x1a778:	xor	edi, edi
0x1a77a:	mov	rbx, rax
0x1a77d:	mov	edx, 5
0x1a782:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1a787:	mov	rdx, rbx
0x1a78a:	mov	rsi, rax
0x1a78d:	mov	edi, 1
0x1a792:	xor	eax, eax
0x1a794:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x1a799:	mov	rax, qword ptr [rsp + 8]
0x1a79e:	xor	rax, qword ptr fs:[0x28]
0x1a7a7:	jne	0x1a7b0
		Instruction group(s): [7, 1] 

0x1a7a9:	add	rsp, 0x18
0x1a7ad:	pop	rbx
		Instruction group(s): [145] 

0x1a7ae:	pop	rbp
		Instruction group(s): [145] 

0x1a7af:	ret	
		Instruction group(s): [3, 145] 

0x1a7b0:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x1a7b5:	nop	
0x1a7b6:	nop	word ptr cs:[rax + rax]
0x1a7c0:	push	rbp
		Instruction group(s): [145] 

0x1a7c1:	push	rbx
		Instruction group(s): [145] 

0x1a7c2:	sub	rsp, 8
0x1a7c6:	movzx	edx, byte ptr [rdi]
0x1a7c9:	test	dl, dl
0x1a7cb:	je	0x1a854
		Instruction group(s): [7, 1] 

0x1a7d1:	xor	ebp, ebp
0x1a7d3:	cmp	dl, 0x7e
0x1a7d6:	mov	rbx, rdi
0x1a7d9:	je	0x1a836
		Instruction group(s): [7, 1] 

0x1a7db:	cmp	dl, 0x2e
0x1a7de:	jne	0x1a80c
		Instruction group(s): [7, 1] 

0x1a7e0:	cmp	byte ptr [rbx + 1], 0x2f
0x1a7e4:	jne	0x1a819
		Instruction group(s): [7, 1] 

0x1a7e6:	movzx	edx, byte ptr [rbx + 2]
0x1a7ea:	lea	rax, [rbx + 2]
0x1a7ee:	cmp	dl, 0x2f
0x1a7f1:	jne	0x1a804
		Instruction group(s): [7, 1] 

0x1a7f3:	nop	dword ptr [rax + rax]
0x1a7f8:	add	rax, 1
0x1a7fc:	movzx	edx, byte ptr [rax]
0x1a7ff:	cmp	dl, 0x2f
0x1a802:	je	0x1a7f8
		Instruction group(s): [7, 1] 

0x1a804:	cmp	dl, 0x2e
0x1a807:	mov	rbx, rax
0x1a80a:	je	0x1a7e0
		Instruction group(s): [7, 1] 

0x1a80c:	lea	rax, [rip + 0x10933]
0x1a813:	test	dl, dl
0x1a815:	cmove	rbx, rax
		Instruction group(s): [137] 

0x1a819:	mov	rdi, rbx
0x1a81c:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x1a821:	mov	rdi, rbp
0x1a824:	mov	rbx, rax
0x1a827:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1a82c:	add	rsp, 8
0x1a830:	mov	rax, rbx
0x1a833:	pop	rbx
		Instruction group(s): [145] 

0x1a834:	pop	rbp
		Instruction group(s): [145] 

0x1a835:	ret	
		Instruction group(s): [3, 145] 

0x1a836:	call	0x1eea0
		Instruction group(s): [2, 7, 145] 

0x1a83b:	test	rax, rax
0x1a83e:	mov	rbp, rax
0x1a841:	je	0x1a84f
		Instruction group(s): [7, 1] 

0x1a843:	movzx	edx, byte ptr [rax]
0x1a846:	test	dl, dl
0x1a848:	je	0x1a84f
		Instruction group(s): [7, 1] 

0x1a84a:	mov	rbx, rax
0x1a84d:	jmp	0x1a7db
		Instruction group(s): [7, 1] 

0x1a84f:	movzx	edx, byte ptr [rbx]
0x1a852:	jmp	0x1a7db
		Instruction group(s): [7, 1] 

0x1a854:	lea	rsi, [rip + 0x11d35]
0x1a85b:	mov	edx, 5
0x1a860:	xor	edi, edi
0x1a862:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1a867:	xor	esi, esi
0x1a869:	mov	rdx, rax
0x1a86c:	xor	edi, edi
0x1a86e:	xor	eax, eax
0x1a870:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x1a875:	nop	
0x1a876:	nop	word ptr cs:[rax + rax]
0x1a880:	push	rbp
		Instruction group(s): [145] 

0x1a881:	mov	rbp, rsp
0x1a884:	push	r15
		Instruction group(s): [145] 

0x1a886:	push	r14
		Instruction group(s): [145] 

0x1a888:	push	r13
		Instruction group(s): [145] 

0x1a88a:	push	r12
		Instruction group(s): [145] 

0x1a88c:	mov	r13d, esi
0x1a88f:	push	rbx
		Instruction group(s): [145] 

0x1a890:	mov	r12, rdi
0x1a893:	sub	rsp, 0x28
0x1a897:	mov	rax, qword ptr fs:[0x28]
0x1a8a0:	mov	qword ptr [rbp - 0x38], rax
0x1a8a4:	xor	eax, eax
0x1a8a6:	cmp	byte ptr [rdi], 0x2d
0x1a8a9:	jne	0x1a8b1
		Instruction group(s): [7, 1] 

0x1a8ab:	cmp	byte ptr [rdi + 1], 0
0x1a8af:	je	0x1a90d
		Instruction group(s): [7, 1] 

0x1a8b1:	xor	ecx, ecx
0x1a8b3:	xor	edi, edi
0x1a8b5:	mov	edx, 4
0x1a8ba:	mov	rsi, r12
0x1a8bd:	call	0x28720
		Instruction group(s): [2, 7, 145] 

0x1a8c2:	test	rax, rax
0x1a8c5:	mov	rbx, rax
0x1a8c8:	je	0x1a930
		Instruction group(s): [7, 1] 

0x1a8ca:	mov	rax, qword ptr [rip + 0x21c13f]
0x1a8d1:	test	rax, rax
0x1a8d4:	je	0x1a8ee
		Instruction group(s): [7, 1] 

0x1a8d6:	cmp	rbx, qword ptr [rax + 8]
0x1a8da:	jne	0x1a8e6
		Instruction group(s): [7, 1] 

0x1a8dc:	jmp	0x1a90d
		Instruction group(s): [7, 1] 

0x1a8de:	nop	
0x1a8e0:	cmp	qword ptr [rax + 8], rbx
0x1a8e4:	je	0x1a90d
		Instruction group(s): [7, 1] 

0x1a8e6:	mov	rax, qword ptr [rax]
0x1a8e9:	test	rax, rax
0x1a8ec:	jne	0x1a8e0
		Instruction group(s): [7, 1] 

0x1a8ee:	mov	edi, 0x10
0x1a8f3:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x1a8f8:	mov	rdx, qword ptr [rip + 0x21c111]
0x1a8ff:	mov	qword ptr [rax + 8], rbx
0x1a903:	mov	qword ptr [rip + 0x21c106], rax
0x1a90a:	mov	qword ptr [rax], rdx
0x1a90d:	mov	rax, qword ptr [rbp - 0x38]
0x1a911:	xor	rax, qword ptr fs:[0x28]
0x1a91a:	jne	0x1aa62
		Instruction group(s): [7, 1] 

0x1a920:	lea	rsp, [rbp - 0x28]
0x1a924:	pop	rbx
		Instruction group(s): [145] 

0x1a925:	pop	r12
		Instruction group(s): [145] 

0x1a927:	pop	r13
		Instruction group(s): [145] 

0x1a929:	pop	r14
		Instruction group(s): [145] 

0x1a92b:	pop	r15
		Instruction group(s): [145] 

0x1a92d:	pop	rbp
		Instruction group(s): [145] 

0x1a92e:	ret	
		Instruction group(s): [3, 145] 

0x1a92f:	nop	
0x1a930:	test	r13d, r13d
0x1a933:	jne	0x1a90d
		Instruction group(s): [7, 1] 

0x1a935:	mov	rdi, r12
0x1a938:	call	0x1a7c0
		Instruction group(s): [2, 7, 145] 

0x1a93d:	mov	rdi, rax
0x1a940:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x1a945:	mov	rdi, rax
0x1a948:	call	0xf1a0
		Instruction group(s): [2, 7, 145] 

0x1a94d:	or	byte ptr [rax + 0x85], 0x10
0x1a954:	mov	rbx, rax
0x1a957:	cmp	qword ptr [rip + 0x21c0c1], 0
0x1a95f:	je	0x1aa45
		Instruction group(s): [7, 1] 

0x1a965:	mov	r12, qword ptr [rip + 0x21c0ac]
0x1a96c:	mov	edi, 0x28
0x1a971:	call	0x1b8c0
		Instruction group(s): [2, 7, 145] 

0x1a976:	mov	qword ptr [r12], rax
0x1a97a:	mov	rax, qword ptr [rip + 0x21c097]
0x1a981:	mov	rax, qword ptr [rax]
0x1a984:	mov	qword ptr [rip + 0x21c08d], rax
0x1a98b:	lea	rdi, [rip + 0x12aa2]
0x1a992:	mov	qword ptr [rax + 0x18], rbx
0x1a996:	mov	esi, 0xc
0x1a99b:	call	0x27020
		Instruction group(s): [2, 7, 145] 

0x1a9a0:	test	rax, rax
0x1a9a3:	je	0x1aa40
		Instruction group(s): [7, 1] 

0x1a9a9:	mov	rsi, qword ptr [rax + 8]
0x1a9ad:	mov	rdi, rsi
0x1a9b0:	mov	qword ptr [rbp - 0x48], rsi
0x1a9b4:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1a9b9:	mov	rdi, qword ptr [rbx]
0x1a9bc:	mov	r13, rax
0x1a9bf:	mov	r15d, r13d
0x1a9c2:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1a9c7:	mov	r14, rax
0x1a9ca:	lea	eax, [rax + r13 + 2]
		Instruction group(s): [145] 

0x1a9cf:	mov	rsi, qword ptr [rbp - 0x48]
0x1a9d3:	mov	rdx, r15
0x1a9d6:	add	rax, 0x1e
0x1a9da:	shr	rax, 4
0x1a9de:	shl	rax, 4
0x1a9e2:	sub	rsp, rax
0x1a9e5:	lea	r12, [rsp + 0xf]
0x1a9ea:	and	r12, 0xfffffffffffffff0
0x1a9ee:	mov	rdi, r12
0x1a9f1:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x1a9f6:	mov	byte ptr [r12 + r15], 0x20
0x1a9fb:	lea	edi, [r13 + 1]
		Instruction group(s): [145] 

0x1a9ff:	mov	rsi, qword ptr [rbx]
0x1aa02:	lea	edx, [r14 + 1]
		Instruction group(s): [145] 

0x1aa06:	add	rdi, r12
0x1aa09:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x1aa0e:	mov	rax, qword ptr [rip + 0x21b3bb]
0x1aa15:	sub	rsp, 8
0x1aa19:	lea	rdi, [rip + 0x12a14]
0x1aa20:	push	0
		Instruction group(s): [145] 

0x1aa22:	mov	rdx, r12
0x1aa25:	xor	r8d, r8d
0x1aa28:	xor	ecx, ecx
0x1aa2a:	mov	esi, 0xc
0x1aa2f:	mov	r9, qword ptr [rax + 8]
0x1aa33:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x1aa38:	pop	rax
		Instruction group(s): [145] 

0x1aa39:	pop	rdx
		Instruction group(s): [145] 

0x1aa3a:	jmp	0x1a90d
		Instruction group(s): [7, 1] 

0x1aa3f:	nop	
0x1aa40:	mov	r12, qword ptr [rbx]
0x1aa43:	jmp	0x1aa0e
		Instruction group(s): [7, 1] 

0x1aa45:	mov	edi, 0x28
0x1aa4a:	call	0x1b8c0
		Instruction group(s): [2, 7, 145] 

0x1aa4f:	mov	qword ptr [rip + 0x21bfca], rax
0x1aa56:	mov	qword ptr [rip + 0x21bfbb], rax
0x1aa5d:	jmp	0x1a98b
		Instruction group(s): [7, 1] 

0x1aa62:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x1aa67:	nop	word ptr [rax + rax]
0x1aa70:	push	rbp
		Instruction group(s): [145] 

0x1aa71:	push	rbx
		Instruction group(s): [145] 

0x1aa72:	mov	ebp, edi
0x1aa74:	sub	rsp, 8
0x1aa78:	cmp	byte ptr [rip + 0x21b97d], 0
0x1aa7f:	jne	0x1ab34
		Instruction group(s): [7, 1] 

0x1aa85:	cmp	dword ptr [rip + 0x21b934], 0
0x1aa8c:	mov	byte ptr [rip + 0x21b969], 1
0x1aa93:	jne	0x1ab42
		Instruction group(s): [7, 1] 

0x1aa99:	xor	ebx, ebx
0x1aa9b:	test	ebp, ebp
0x1aa9d:	setne	bl
0x1aaa0:	cmp	dword ptr [rip + 0x21b629], 0
0x1aaa7:	je	0x1aac6
		Instruction group(s): [7, 1] 

0x1aaa9:	nop	dword ptr [rax]
0x1aab0:	mov	esi, ebx
0x1aab2:	mov	edi, 1
0x1aab7:	call	0x17ed0
		Instruction group(s): [2, 7, 145] 

0x1aabc:	mov	eax, dword ptr [rip + 0x21b60e]
0x1aac2:	test	eax, eax
0x1aac4:	jne	0x1aab0
		Instruction group(s): [7, 1] 

0x1aac6:	call	0x29c70
		Instruction group(s): [2, 7, 145] 

0x1aacb:	xor	edi, edi
0x1aacd:	call	0xf740
		Instruction group(s): [2, 7, 145] 

0x1aad2:	cmp	dword ptr [rip + 0x21b907], 0
0x1aad9:	jne	0x1ab4c
		Instruction group(s): [7, 1] 

0x1aadb:	cmp	dword ptr [rip + 0x21e9ee], 0
0x1aae2:	jne	0x1ab3b
		Instruction group(s): [7, 1] 

0x1aae4:	mov	edi, ebp
0x1aae6:	call	0x19ce0
		Instruction group(s): [2, 7, 145] 

0x1aaeb:	mov	rdi, qword ptr [rip + 0x21bfb6]
0x1aaf2:	test	rdi, rdi
0x1aaf5:	je	0x1ab1c
		Instruction group(s): [7, 1] 

0x1aaf7:	call	0x1c710
		Instruction group(s): [2, 7, 145] 

0x1aafc:	lea	rdi, [rip + 0x21ea5d]
0x1ab03:	cmp	qword ptr [rip + 0x21bf9e], rdi
0x1ab0a:	je	0x1ab11
		Instruction group(s): [7, 1] 

0x1ab0c:	call	0x1c710
		Instruction group(s): [2, 7, 145] 

0x1ab11:	mov	qword ptr [rip + 0x21bf8c], 0
0x1ab1c:	xor	edi, edi
0x1ab1e:	call	0x1c710
		Instruction group(s): [2, 7, 145] 

0x1ab23:	mov	rdi, qword ptr [rip + 0x21e99e]
0x1ab2a:	test	rdi, rdi
0x1ab2d:	je	0x1ab34
		Instruction group(s): [7, 1] 

0x1ab2f:	call	0x8830
		Instruction group(s): [2, 7, 145] 

0x1ab34:	mov	edi, ebp
0x1ab36:	call	0x8c70
		Instruction group(s): [2, 7, 145] 

0x1ab3b:	call	0x10d20
		Instruction group(s): [2, 7, 145] 

0x1ab40:	jmp	0x1aae4
		Instruction group(s): [7, 1] 

0x1ab42:	call	0x1a5b0
		Instruction group(s): [2, 7, 145] 

0x1ab47:	jmp	0x1aa99
		Instruction group(s): [7, 1] 

0x1ab4c:	call	0x1a6e0
		Instruction group(s): [2, 7, 145] 

0x1ab51:	jmp	0x1aadb
		Instruction group(s): [7, 1] 

0x1ab53:	nop	dword ptr [rax]
0x1ab56:	nop	word ptr cs:[rax + rax]
0x1ab60:	push	r15
		Instruction group(s): [145] 

0x1ab62:	push	r14
		Instruction group(s): [145] 

0x1ab64:	push	r13
		Instruction group(s): [145] 

0x1ab66:	push	r12
		Instruction group(s): [145] 

0x1ab68:	mov	r12d, edx
0x1ab6b:	push	rbp
		Instruction group(s): [145] 

0x1ab6c:	push	rbx
		Instruction group(s): [145] 

0x1ab6d:	mov	rbp, rsi
0x1ab70:	mov	ebx, edi
0x1ab72:	sub	rsp, 0x28
0x1ab76:	mov	rax, qword ptr fs:[0x28]
0x1ab7f:	mov	qword ptr [rsp + 0x18], rax
0x1ab84:	xor	eax, eax
0x1ab86:	cmp	byte ptr [rip + 0x21be13], 0
0x1ab8d:	jne	0x1ac6e
		Instruction group(s): [7, 1] 

0x1ab93:	lea	rdi, [rip + 0x21b886]
0x1ab9a:	lea	rdx, [rip + 0x2196c3]
0x1aba1:	lea	r9, [rip + 0x21bdf9]
0x1aba8:	lea	r10, [rip + 0x12e1e]
0x1abaf:	mov	byte ptr [rip + 0x21bdea], 0x2d
0x1abb6:	mov	esi, 0x62
0x1abbb:	mov	rax, rdi
0x1abbe:	xor	r8d, r8d
0x1abc1:	mov	r11d, 1
0x1abc7:	mov	rcx, qword ptr [rdx + 0x24]
0x1abcb:	mov	qword ptr [rax + 0x10], 0
0x1abd3:	mov	dword ptr [rax + 0x18], esi
0x1abd6:	test	rcx, rcx
0x1abd9:	cmove	rcx, r10
		Instruction group(s): [137] 

0x1abdd:	cmp	esi, 0x7f
0x1abe0:	mov	qword ptr [rax], rcx
0x1abe3:	jg	0x1abec
		Instruction group(s): [7, 1] 

0x1abe5:	mov	byte ptr [r9], sil
0x1abe8:	add	r9, 1
0x1abec:	mov	ecx, dword ptr [rdx]
0x1abee:	cmp	ecx, 7
0x1abf1:	ja	0x1ac0f
		Instruction group(s): [7, 1] 

0x1abf3:	mov	r15, r11
0x1abf6:	shl	r15, cl
0x1abf9:	test	r15b, 0x83
0x1abfd:	mov	rcx, r15
0x1ac00:	jne	0x1af1b
		Instruction group(s): [7, 1] 

0x1ac06:	and	ecx, 0x7c
0x1ac09:	jne	0x1af8e
		Instruction group(s): [7, 1] 

0x1ac0f:	mov	esi, dword ptr [rdx + 0x2c]
0x1ac12:	add	rax, 0x20
0x1ac16:	add	rdx, 0x30
0x1ac1a:	lea	ecx, [r8 + 1]
		Instruction group(s): [145] 

0x1ac1e:	test	esi, esi
0x1ac20:	je	0x1ac27
		Instruction group(s): [7, 1] 

0x1ac22:	mov	r8d, ecx
0x1ac25:	jmp	0x1abc7
		Instruction group(s): [7, 1] 

0x1ac27:	lea	rdx, [rip + 0x219512]
0x1ac2e:	mov	byte ptr [r9], 0
0x1ac32:	lea	rsi, [rdx + 0x120]
0x1ac39:	mov	eax, ecx
0x1ac3b:	movdqa	xmm0, xmmword ptr [rdx]
		Instruction group(s): [149] 

0x1ac3f:	shl	rax, 5
0x1ac43:	add	rdx, 0x20
0x1ac47:	add	ecx, 1
0x1ac4a:	add	rax, rdi
0x1ac4d:	movaps	xmmword ptr [rax], xmm0
		Instruction group(s): [148] 

0x1ac50:	movdqa	xmm0, xmmword ptr [rdx - 0x10]
		Instruction group(s): [149] 

0x1ac55:	cmp	rsi, rdx
0x1ac58:	movaps	xmmword ptr [rax + 0x10], xmm0
		Instruction group(s): [148] 

0x1ac5c:	jne	0x1ac39
		Instruction group(s): [7, 1] 

0x1ac5e:	lea	eax, [r8 + 0xa]
		Instruction group(s): [145] 

0x1ac62:	shl	rax, 5
0x1ac66:	mov	qword ptr [rdi + rax], 0
0x1ac6e:	mov	eax, r12d
0x1ac71:	mov	dword ptr [rip + 0x21b1bd], 0
0x1ac7b:	xor	r13d, r13d
0x1ac7e:	xor	eax, 1
0x1ac81:	mov	dword ptr [rip + 0x21b1d9], eax
0x1ac87:	xor	eax, eax
0x1ac89:	cmp	ebx, eax
0x1ac8b:	jle	0x1acfe
		Instruction group(s): [7, 1] 

0x1ac8d:	lea	rcx, [rip + 0x21b78c]
0x1ac94:	lea	rdx, [rip + 0x21bd05]
0x1ac9b:	xor	r8d, r8d
0x1ac9e:	mov	rsi, rbp
0x1aca1:	mov	edi, ebx
0x1aca3:	call	0x8850
		Instruction group(s): [2, 7, 145] 

0x1aca8:	cmp	eax, -1
0x1acab:	mov	r15, qword ptr [rip + 0x21b196]
0x1acb2:	je	0x1af59
		Instruction group(s): [7, 1] 

0x1acb8:	cmp	eax, 1
0x1acbb:	je	0x1ad99
		Instruction group(s): [7, 1] 

0x1acc1:	cmp	eax, 0x3f
0x1acc4:	je	0x1ad88
		Instruction group(s): [7, 1] 

0x1acca:	cmp	eax, 0x62
0x1accd:	mov	edx, 0x42
0x1acd2:	lea	r14, [rip + 0x219587]
0x1acd9:	jne	0x1acec
		Instruction group(s): [7, 1] 

0x1acdb:	jmp	0x1acf4
		Instruction group(s): [7, 1] 

0x1acdd:	nop	dword ptr [rax]
0x1ace0:	cmp	eax, edx
0x1ace2:	je	0x1adaf
		Instruction group(s): [7, 1] 

0x1ace8:	mov	edx, dword ptr [r14 + 0x30]
0x1acec:	add	r14, 0x30
0x1acf0:	test	edx, edx
0x1acf2:	jne	0x1ace0
		Instruction group(s): [7, 1] 

0x1acf4:	mov	eax, dword ptr [rip + 0x21b13e]
0x1acfa:	cmp	ebx, eax
0x1acfc:	jg	0x1ac8d
		Instruction group(s): [7, 1] 

0x1acfe:	test	r12d, r12d
0x1ad01:	jne	0x1ad1a
		Instruction group(s): [7, 1] 

0x1ad03:	test	r13d, r13d
0x1ad06:	jne	0x1b5b1
		Instruction group(s): [7, 1] 

0x1ad0c:	mov	ecx, dword ptr [rip + 0x21bd1a]
0x1ad12:	test	ecx, ecx
0x1ad14:	jne	0x1b4c2
		Instruction group(s): [7, 1] 

0x1ad1a:	mov	edx, dword ptr [rip + 0x21bd48]
0x1ad20:	mov	rax, qword ptr [rip + 0x21bd49]
0x1ad27:	test	edx, edx
0x1ad29:	je	0x1af27
		Instruction group(s): [7, 1] 

0x1ad2f:	test	rax, rax
0x1ad32:	mov	dword ptr [rip + 0x21b6bc], 0xfff
0x1ad3c:	je	0x1adde
		Instruction group(s): [7, 1] 

0x1ad42:	mov	rbp, qword ptr [rax]
0x1ad45:	mov	rbx, qword ptr [rbp]
0x1ad49:	test	rbx, rbx
0x1ad4c:	je	0x1adde
		Instruction group(s): [7, 1] 

0x1ad52:	call	0x8d40
		Instruction group(s): [2, 7, 145] 

0x1ad57:	mov	rsi, qword ptr [rax]
0x1ad5a:	lea	rcx, [rip + 0x12b57]
0x1ad61:	nop	dword ptr [rax]
0x1ad68:	movsx	rax, byte ptr [rbx]
0x1ad6c:	nop	dword ptr [rax]
0x1ad70:	mov	eax, dword ptr [rsi + rax*4]
0x1ad73:	sub	eax, 0x61
0x1ad76:	cmp	eax, 0x15
0x1ad79:	ja	0x1b2b9
		Instruction group(s): [7, 1] 

0x1ad7f:	movsxd	rax, dword ptr [rcx + rax*4]
		Instruction group(s): [145] 

0x1ad83:	add	rax, rcx
0x1ad86:	jmp	rax
		Instruction group(s): [145, 1] 

0x1ad88:	mov	r13d, 1
0x1ad8e:	mov	eax, dword ptr [rip + 0x21b0a4]
0x1ad94:	jmp	0x1acfa
		Instruction group(s): [7, 1] 

0x1ad99:	mov	esi, r12d
0x1ad9c:	mov	rdi, r15
0x1ad9f:	call	0x1a880
		Instruction group(s): [2, 7, 145] 

0x1ada4:	mov	eax, dword ptr [rip + 0x21b08e]
0x1adaa:	jmp	0x1ac89
		Instruction group(s): [7, 1] 

0x1adaf:	test	r12d, r12d
0x1adb2:	je	0x1adbf
		Instruction group(s): [7, 1] 

0x1adb4:	test	byte ptr [r14 + 0x10], 1
0x1adb9:	je	0x1afbd
		Instruction group(s): [7, 1] 

0x1adbf:	mov	eax, dword ptr [r14 + 4]
0x1adc3:	cmp	eax, 7
0x1adc6:	ja	0x1b4bd
		Instruction group(s): [7, 1] 

0x1adcc:	lea	rdi, [rip + 0x12b3d]
0x1add3:	mov	esi, eax
0x1add5:	movsxd	rsi, dword ptr [rdi + rsi*4]
		Instruction group(s): [145] 

0x1add9:	add	rsi, rdi
0x1addc:	jmp	rsi
		Instruction group(s): [145, 1] 

0x1adde:	mov	dword ptr [rip + 0x21e6e8], 1
0x1ade8:	mov	rbx, qword ptr [rip + 0x21b601]
0x1adef:	test	rbx, rbx
0x1adf2:	je	0x1aef8
		Instruction group(s): [7, 1] 

0x1adf8:	lea	rax, [rip + 0x1266b]
0x1adff:	cmp	rbx, rax
0x1ae02:	je	0x1b197
		Instruction group(s): [7, 1] 

0x1ae08:	movzx	ebp, byte ptr [rbx]
0x1ae0b:	cmp	bpl, 0x6e
0x1ae0f:	je	0x1ae96
		Instruction group(s): [7, 1] 

0x1ae15:	lea	rax, [rip + 0x10971]
0x1ae1c:	cmp	rbx, rax
0x1ae1f:	je	0x1b1de
		Instruction group(s): [7, 1] 

0x1ae25:	cmp	bpl, 0x6c
0x1ae29:	je	0x1b312
		Instruction group(s): [7, 1] 

0x1ae2f:	lea	rax, [rip + 0x12639]
0x1ae36:	cmp	rbx, rax
0x1ae39:	je	0x1b337
		Instruction group(s): [7, 1] 

0x1ae3f:	cmp	bpl, 0x74
0x1ae43:	jne	0x1aecb
		Instruction group(s): [7, 1] 

0x1ae49:	lea	rdi, [rbx + 1]
0x1ae4d:	lea	rsi, [rax + 1]
0x1ae51:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x1ae56:	test	eax, eax
0x1ae58:	je	0x1b337
		Instruction group(s): [7, 1] 

0x1ae5e:	lea	rax, [rip + 0x12611]
0x1ae65:	cmp	rbx, rax
0x1ae68:	je	0x1aeee
		Instruction group(s): [7, 1] 

0x1ae6e:	lea	rsi, [rip + 0x12609]
0x1ae75:	mov	edx, 5
0x1ae7a:	xor	edi, edi
0x1ae7c:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1ae81:	mov	rdi, qword ptr [rip + 0x21b568]
0x1ae88:	mov	rdx, rax
0x1ae8b:	or	rcx, 0xffffffffffffffff
0x1ae8f:	xor	eax, eax
0x1ae91:	jmp	0x1b2d8
		Instruction group(s): [7, 1] 

0x1ae96:	lea	rdi, [rbx + 1]
0x1ae9a:	lea	rsi, [rax + 1]
0x1ae9e:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x1aea3:	test	eax, eax
0x1aea5:	je	0x1b197
		Instruction group(s): [7, 1] 

0x1aeab:	lea	rax, [rip + 0x108db]
0x1aeb2:	cmp	rbx, rax
0x1aeb5:	je	0x1b1de
		Instruction group(s): [7, 1] 

0x1aebb:	lea	rax, [rip + 0x125ad]
0x1aec2:	cmp	rbx, rax
0x1aec5:	je	0x1b337
		Instruction group(s): [7, 1] 

0x1aecb:	lea	rax, [rip + 0x125a4]
0x1aed2:	cmp	rbx, rax
0x1aed5:	je	0x1aeee
		Instruction group(s): [7, 1] 

0x1aed7:	cmp	bpl, 0x72
0x1aedb:	jne	0x1ae6e
		Instruction group(s): [7, 1] 

0x1aedd:	lea	rdi, [rbx + 1]
0x1aee1:	lea	rsi, [rax + 1]
0x1aee5:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x1aeea:	test	eax, eax
0x1aeec:	jne	0x1ae6e
		Instruction group(s): [7, 1] 

0x1aeee:	mov	dword ptr [rip + 0x21b4ac], 3
0x1aef8:	mov	rax, qword ptr [rsp + 0x18]
0x1aefd:	xor	rax, qword ptr fs:[0x28]
0x1af06:	jne	0x1b4b8
		Instruction group(s): [7, 1] 

0x1af0c:	add	rsp, 0x28
0x1af10:	pop	rbx
		Instruction group(s): [145] 

0x1af11:	pop	rbp
		Instruction group(s): [145] 

0x1af12:	pop	r12
		Instruction group(s): [145] 

0x1af14:	pop	r13
		Instruction group(s): [145] 

0x1af16:	pop	r14
		Instruction group(s): [145] 

0x1af18:	pop	r15
		Instruction group(s): [145] 

0x1af1a:	ret	
		Instruction group(s): [3, 145] 

0x1af1b:	mov	dword ptr [rax + 8], 0
0x1af22:	jmp	0x1ac0f
		Instruction group(s): [7, 1] 

0x1af27:	test	rax, rax
0x1af2a:	je	0x1af3c
		Instruction group(s): [7, 1] 

0x1af2c:	mov	rbp, qword ptr [rax]
0x1af2f:	mov	rbx, qword ptr [rbp]
0x1af33:	test	rbx, rbx
0x1af36:	jne	0x1ad52
		Instruction group(s): [7, 1] 

0x1af3c:	mov	eax, dword ptr [rip + 0x21b4b6]
0x1af42:	test	eax, eax
0x1af44:	jne	0x1adde
		Instruction group(s): [7, 1] 

0x1af4a:	mov	dword ptr [rip + 0x21bb14], 0
0x1af54:	jmp	0x1ade8
		Instruction group(s): [7, 1] 

0x1af59:	movsxd	rax, dword ptr [rip + 0x21aed8]
		Instruction group(s): [145] 

0x1af60:	cmp	ebx, eax
0x1af62:	jle	0x1acfe
		Instruction group(s): [7, 1] 

0x1af68:	mov	rdi, qword ptr [rbp + rax*8]
0x1af6d:	lea	edx, [rax + 1]
		Instruction group(s): [145] 

0x1af70:	mov	esi, r12d
0x1af73:	mov	dword ptr [rip + 0x21aebf], edx
0x1af79:	call	0x1a880
		Instruction group(s): [2, 7, 145] 

0x1af7e:	movsxd	rax, dword ptr [rip + 0x21aeb3]
		Instruction group(s): [145] 

0x1af85:	cmp	eax, ebx
0x1af87:	jl	0x1af68
		Instruction group(s): [7, 1] 

0x1af89:	jmp	0x1acfe
		Instruction group(s): [7, 1] 

0x1af8e:	cmp	esi, 0x7f
0x1af91:	mov	rcx, qword ptr [rdx + 0x14]
0x1af95:	jg	0x1b1c9
		Instruction group(s): [7, 1] 

0x1af9b:	test	rcx, rcx
0x1af9e:	mov	byte ptr [r9], 0x3a
0x1afa2:	je	0x1b258
		Instruction group(s): [7, 1] 

0x1afa8:	mov	byte ptr [r9 + 1], 0x3a
0x1afad:	add	r9, 2
0x1afb1:	mov	dword ptr [rax + 8], 2
0x1afb8:	jmp	0x1ac0f
		Instruction group(s): [7, 1] 

0x1afbd:	cmp	dword ptr [r14 + 4], 7
0x1afc2:	ja	0x1b4bd
		Instruction group(s): [7, 1] 

0x1afc8:	mov	eax, dword ptr [r14 + 4]
0x1afcc:	lea	rdx, [rip + 0x1295d]
0x1afd3:	movsxd	rax, dword ptr [rdx + rax*4]
		Instruction group(s): [145] 

0x1afd7:	add	rax, rdx
0x1afda:	jmp	rax
		Instruction group(s): [145, 1] 

0x1afdc:	nop	dword ptr [rax]
0x1afe0:	or	dword ptr [rip + 0x21b411], 3
0x1afe7:	jmp	0x1b003
		Instruction group(s): [7, 1] 

0x1afe9:	nop	dword ptr [rax]
0x1aff0:	cmp	al, 0x2c
0x1aff2:	je	0x1b1b0
		Instruction group(s): [7, 1] 

0x1aff8:	cmp	al, 0x20
0x1affa:	je	0x1b1b0
		Instruction group(s): [7, 1] 

0x1b000:	mov	rbx, rdx
0x1b003:	movzx	eax, byte ptr [rbx + 1]
0x1b007:	lea	rdx, [rbx + 1]
0x1b00b:	test	al, al
0x1b00d:	jne	0x1aff0
		Instruction group(s): [7, 1] 

0x1b00f:	add	rbp, 8
0x1b013:	mov	rbx, qword ptr [rbp]
0x1b017:	test	rbx, rbx
0x1b01a:	jne	0x1ad68
		Instruction group(s): [7, 1] 

0x1b020:	jmp	0x1af3c
		Instruction group(s): [7, 1] 

0x1b025:	nop	dword ptr [rax]
0x1b028:	mov	dword ptr [rip + 0x21b3c6], 0
0x1b032:	jmp	0x1b003
		Instruction group(s): [7, 1] 

0x1b034:	nop	dword ptr [rax]
0x1b038:	or	dword ptr [rip + 0x21b3b6], 0x101
0x1b042:	jmp	0x1b003
		Instruction group(s): [7, 1] 

0x1b044:	nop	dword ptr [rax]
0x1b048:	or	dword ptr [rip + 0x21b3a9], 4
0x1b04f:	jmp	0x1b003
		Instruction group(s): [7, 1] 

0x1b051:	nop	dword ptr [rax]
0x1b058:	or	dword ptr [rip + 0x21b399], 9
0x1b05f:	jmp	0x1b003
		Instruction group(s): [7, 1] 

0x1b061:	nop	dword ptr [rax]
0x1b068:	or	dword ptr [rip + 0x21b389], 1
0x1b06f:	jmp	0x1b003
		Instruction group(s): [7, 1] 

0x1b071:	nop	dword ptr [rax]
0x1b078:	or	dword ptr [rip + 0x21b376], 0xfff
0x1b082:	jmp	0x1b003
		Instruction group(s): [7, 1] 

0x1b087:	mov	edx, 1
0x1b08c:	test	r15, r15
0x1b08f:	je	0x1b26f
		Instruction group(s): [7, 1] 

0x1b095:	test	edx, edx
0x1b097:	je	0x1acf4
		Instruction group(s): [7, 1] 

0x1b09d:	xor	esi, esi
0x1b09f:	mov	rdi, r15
0x1b0a2:	call	0x8730
		Instruction group(s): [2, 7, 145] 

0x1b0a7:	mov	eax, dword ptr [rip + 0x21ad8b]
0x1b0ad:	jmp	0x1b2ac
		Instruction group(s): [7, 1] 

0x1b0b2:	mov	edx, 1
0x1b0b7:	test	r15, r15
0x1b0ba:	mov	eax, dword ptr [rip + 0x21ad78]
0x1b0c0:	je	0x1b346
		Instruction group(s): [7, 1] 

0x1b0c6:	test	edx, edx
0x1b0c8:	je	0x1ac89
		Instruction group(s): [7, 1] 

0x1b0ce:	mov	edx, 0xa
0x1b0d3:	xor	esi, esi
0x1b0d5:	mov	rdi, r15
0x1b0d8:	call	0x8a30
		Instruction group(s): [2, 7, 145] 

0x1b0dd:	movsx	edx, byte ptr [r15]
0x1b0e1:	mov	esi, edx
0x1b0e3:	sub	edx, 0x30
0x1b0e6:	cmp	edx, 9
0x1b0e9:	ja	0x1b2f0
		Instruction group(s): [7, 1] 

0x1b0ef:	add	r15, 1
0x1b0f3:	jmp	0x1b0dd
		Instruction group(s): [7, 1] 

0x1b0f5:	test	r15, r15
0x1b0f8:	je	0x1b36d
		Instruction group(s): [7, 1] 

0x1b0fe:	cmp	byte ptr [r15], 0
0x1b102:	je	0x1b1ed
		Instruction group(s): [7, 1] 

0x1b108:	cmp	dword ptr [r14 + 4], 2
0x1b10d:	mov	rcx, qword ptr [r14 + 8]
0x1b111:	mov	rdx, qword ptr [rcx]
0x1b114:	je	0x1b405
		Instruction group(s): [7, 1] 

0x1b11a:	test	rdx, rdx
0x1b11d:	je	0x1b3c9
		Instruction group(s): [7, 1] 

0x1b123:	mov	eax, dword ptr [rdx + 0xc]
0x1b126:	lea	esi, [rax - 1]
		Instruction group(s): [145] 

0x1b129:	cmp	dword ptr [rdx + 8], esi
0x1b12c:	je	0x1b3a4
		Instruction group(s): [7, 1] 

0x1b132:	mov	eax, dword ptr [rdx + 8]
0x1b135:	mov	rdi, qword ptr [rdx]
0x1b138:	cmp	dword ptr [r14 + 4], 4
0x1b13d:	mov	qword ptr [rsp + 8], rdx
0x1b142:	lea	esi, [rax + 1]
		Instruction group(s): [145] 

0x1b145:	lea	rax, [rdi + rax*8]
0x1b149:	mov	rdi, r15
0x1b14c:	mov	qword ptr [rsp], rax
0x1b150:	mov	dword ptr [rdx + 8], esi
0x1b153:	je	0x1b38e
		Instruction group(s): [7, 1] 

0x1b159:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0x1b15e:	mov	rdi, qword ptr [rsp]
0x1b162:	mov	rdx, qword ptr [rsp + 8]
0x1b167:	mov	qword ptr [rdi], rax
0x1b16a:	mov	ecx, dword ptr [rdx + 8]
0x1b16d:	mov	rax, qword ptr [rdx]
0x1b170:	mov	qword ptr [rax + rcx*8], 0
0x1b178:	mov	eax, dword ptr [rip + 0x21acba]
0x1b17e:	jmp	0x1ac89
		Instruction group(s): [7, 1] 

0x1b183:	mov	rdx, qword ptr [r14 + 8]
0x1b187:	xor	eax, 1
0x1b18a:	mov	dword ptr [rdx], eax
0x1b18c:	mov	eax, dword ptr [rip + 0x21aca6]
0x1b192:	jmp	0x1ac89
		Instruction group(s): [7, 1] 

0x1b197:	mov	dword ptr [rip + 0x21b203], 0
0x1b1a1:	jmp	0x1aef8
		Instruction group(s): [7, 1] 

0x1b1a6:	nop	word ptr cs:[rax + rax]
0x1b1b0:	movsx	rax, byte ptr [rbx + 2]
0x1b1b5:	lea	rdx, [rbx + 2]
0x1b1b9:	test	al, al
0x1b1bb:	je	0x1b00f
		Instruction group(s): [7, 1] 

0x1b1c1:	mov	rbx, rdx
0x1b1c4:	jmp	0x1ad70
		Instruction group(s): [7, 1] 

0x1b1c9:	test	rcx, rcx
0x1b1cc:	jne	0x1afb1
		Instruction group(s): [7, 1] 

0x1b1d2:	mov	dword ptr [rax + 8], 1
0x1b1d9:	jmp	0x1ac0f
		Instruction group(s): [7, 1] 

0x1b1de:	mov	dword ptr [rip + 0x21b1bc], 1
0x1b1e8:	jmp	0x1aef8
		Instruction group(s): [7, 1] 

0x1b1ed:	cmp	edx, 0x7f
0x1b1f0:	mov	word ptr [rsp + 0x16], 0x63
0x1b1f7:	jg	0x1b37e
		Instruction group(s): [7, 1] 

0x1b1fd:	lea	r15, [rsp + 0x16]
0x1b202:	lea	r13, [rip + 0x12381]
0x1b209:	mov	byte ptr [rsp + 0x16], dl
0x1b20d:	lea	rsi, [rip + 0x113a4]
0x1b214:	mov	edx, 5
0x1b219:	xor	edi, edi
0x1b21b:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1b220:	mov	rdi, r15
0x1b223:	mov	rdx, rax
0x1b226:	or	rcx, 0xffffffffffffffff
0x1b22a:	xor	eax, eax
0x1b22c:	mov	r8, r15
0x1b22f:	repne scasb	al, byte ptr [rdi]
0x1b231:	xor	edi, edi
0x1b233:	mov	rax, rcx
0x1b236:	mov	rcx, r13
0x1b239:	mov	r13d, 1
0x1b23f:	not	rax
0x1b242:	lea	rsi, [rax - 1]
0x1b246:	xor	eax, eax
0x1b248:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x1b24d:	mov	eax, dword ptr [rip + 0x21abe5]
0x1b253:	jmp	0x1ac89
		Instruction group(s): [7, 1] 

0x1b258:	add	r9, 1
0x1b25c:	jmp	0x1b1d2
		Instruction group(s): [7, 1] 

0x1b261:	xor	edx, edx
0x1b263:	jmp	0x1b08c
		Instruction group(s): [7, 1] 

0x1b268:	xor	edx, edx
0x1b26a:	jmp	0x1b0b7
		Instruction group(s): [7, 1] 

0x1b26f:	mov	eax, dword ptr [rip + 0x21abc3]
0x1b275:	cmp	eax, ebx
0x1b277:	jge	0x1b29c
		Instruction group(s): [7, 1] 

0x1b279:	movsxd	rsi, eax
		Instruction group(s): [145] 

0x1b27c:	mov	r15, qword ptr [rbp + rsi*8]
0x1b281:	movzx	esi, byte ptr [r15]
0x1b285:	lea	edi, [rsi - 0x30]
		Instruction group(s): [145] 

0x1b288:	cmp	dil, 9
0x1b28c:	jbe	0x1b4aa
		Instruction group(s): [7, 1] 

0x1b292:	cmp	sil, 0x2e
0x1b296:	je	0x1b4aa
		Instruction group(s): [7, 1] 

0x1b29c:	test	edx, edx
0x1b29e:	je	0x1ac89
		Instruction group(s): [7, 1] 

0x1b2a4:	mov	rdx, qword ptr [r14 + 0x18]
0x1b2a8:	movsd	xmm0, qword ptr [rdx]
		Instruction group(s): [149] 

0x1b2ac:	mov	rdx, qword ptr [r14 + 8]
0x1b2b0:	movsd	qword ptr [rdx], xmm0
		Instruction group(s): [149] 

0x1b2b4:	jmp	0x1ac89
		Instruction group(s): [7, 1] 

0x1b2b9:	lea	rsi, [rip + 0x113e0]
0x1b2c0:	mov	edx, 5
0x1b2c5:	xor	edi, edi
0x1b2c7:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1b2cc:	or	rcx, 0xffffffffffffffff
0x1b2d0:	mov	rdx, rax
0x1b2d3:	mov	rdi, rbx
0x1b2d6:	xor	eax, eax
0x1b2d8:	repne scasb	al, byte ptr [rdi]
0x1b2da:	xor	edi, edi
0x1b2dc:	mov	rax, rcx
0x1b2df:	mov	rcx, rbx
0x1b2e2:	not	rax
0x1b2e5:	lea	rsi, [rax - 1]
0x1b2e9:	xor	eax, eax
0x1b2eb:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x1b2f0:	test	eax, eax
0x1b2f2:	jle	0x1b44a
		Instruction group(s): [7, 1] 

0x1b2f8:	test	sil, sil
0x1b2fb:	jne	0x1b44a
		Instruction group(s): [7, 1] 

0x1b301:	mov	rdx, qword ptr [r14 + 8]
0x1b305:	mov	dword ptr [rdx], eax
0x1b307:	mov	eax, dword ptr [rip + 0x21ab2b]
0x1b30d:	jmp	0x1ac89
		Instruction group(s): [7, 1] 

0x1b312:	lea	rdi, [rbx + 1]
0x1b316:	lea	rsi, [rax + 1]
0x1b31a:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x1b31f:	test	eax, eax
0x1b321:	je	0x1b1de
		Instruction group(s): [7, 1] 

0x1b327:	lea	rax, [rip + 0x12141]
0x1b32e:	cmp	rbx, rax
0x1b331:	jne	0x1ae5e
		Instruction group(s): [7, 1] 

0x1b337:	mov	dword ptr [rip + 0x21b063], 2
0x1b341:	jmp	0x1aef8
		Instruction group(s): [7, 1] 

0x1b346:	cmp	eax, ebx
0x1b348:	jl	0x1b42b
		Instruction group(s): [7, 1] 

0x1b34e:	test	edx, edx
0x1b350:	je	0x1ac89
		Instruction group(s): [7, 1] 

0x1b356:	mov	rax, qword ptr [r14 + 0x18]
0x1b35a:	mov	edx, dword ptr [rax]
0x1b35c:	mov	rax, qword ptr [r14 + 8]
0x1b360:	mov	dword ptr [rax], edx
0x1b362:	mov	eax, dword ptr [rip + 0x21aad0]
0x1b368:	jmp	0x1ac89
		Instruction group(s): [7, 1] 

0x1b36d:	mov	rdi, qword ptr [r14 + 0x18]
0x1b371:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0x1b376:	mov	r15, rax
0x1b379:	jmp	0x1b108
		Instruction group(s): [7, 1] 

0x1b37e:	mov	r15, qword ptr [r14 + 0x28]
0x1b382:	lea	r13, [rip + 0x120b8]
0x1b389:	jmp	0x1b20d
		Instruction group(s): [7, 1] 

0x1b38e:	call	0x1a7c0
		Instruction group(s): [2, 7, 145] 

0x1b393:	mov	rdi, qword ptr [rsp]
0x1b397:	mov	rdx, qword ptr [rsp + 8]
0x1b39c:	mov	qword ptr [rdi], rax
0x1b39f:	jmp	0x1b16a
		Instruction group(s): [7, 1] 

0x1b3a4:	add	eax, 5
0x1b3a7:	mov	rdi, qword ptr [rdx]
0x1b3aa:	mov	qword ptr [rsp], rdx
0x1b3ae:	lea	esi, [rax*8]
		Instruction group(s): [145] 

0x1b3b5:	mov	dword ptr [rdx + 0xc], eax
0x1b3b8:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x1b3bd:	mov	rdx, qword ptr [rsp]
0x1b3c1:	mov	qword ptr [rdx], rax
0x1b3c4:	jmp	0x1b132
		Instruction group(s): [7, 1] 

0x1b3c9:	mov	edi, 0x10
0x1b3ce:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x1b3d3:	mov	rdx, rax
0x1b3d6:	movabs	rax, 0x500000000
0x1b3e0:	mov	edi, 0x28
0x1b3e5:	mov	qword ptr [rdx + 8], rax
0x1b3e9:	mov	qword ptr [rsp], rdx
0x1b3ed:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x1b3f2:	mov	rdx, qword ptr [rsp]
0x1b3f6:	mov	qword ptr [rdx], rax
0x1b3f9:	mov	rax, qword ptr [r14 + 8]
0x1b3fd:	mov	qword ptr [rax], rdx
0x1b400:	jmp	0x1b132
		Instruction group(s): [7, 1] 

0x1b405:	mov	rdi, rdx
0x1b408:	mov	qword ptr [rsp], rcx
0x1b40c:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1b411:	mov	rdi, r15
0x1b414:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0x1b419:	mov	rcx, qword ptr [rsp]
0x1b41d:	mov	qword ptr [rcx], rax
0x1b420:	mov	eax, dword ptr [rip + 0x21aa12]
0x1b426:	jmp	0x1ac89
		Instruction group(s): [7, 1] 

0x1b42b:	movsxd	rsi, eax
		Instruction group(s): [145] 

0x1b42e:	mov	r15, qword ptr [rbp + rsi*8]
0x1b433:	mov	rsi, r15
0x1b436:	movsx	edi, byte ptr [rsi]
0x1b439:	mov	r9d, edi
0x1b43c:	sub	edi, 0x30
0x1b43f:	cmp	edi, 9
0x1b442:	ja	0x1b482
		Instruction group(s): [7, 1] 

0x1b444:	add	rsi, 1
0x1b448:	jmp	0x1b436
		Instruction group(s): [7, 1] 

0x1b44a:	mov	r13d, dword ptr [r14]
0x1b44d:	lea	rsi, [rip + 0x1119c]
0x1b454:	mov	edx, 5
0x1b459:	xor	edi, edi
0x1b45b:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1b460:	mov	ecx, r13d
0x1b463:	mov	rdx, rax
0x1b466:	xor	esi, esi
0x1b468:	xor	eax, eax
0x1b46a:	xor	edi, edi
0x1b46c:	mov	r13d, 1
0x1b472:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x1b477:	mov	eax, dword ptr [rip + 0x21a9bb]
0x1b47d:	jmp	0x1ac89
		Instruction group(s): [7, 1] 

0x1b482:	test	r9b, r9b
0x1b485:	jne	0x1b34e
		Instruction group(s): [7, 1] 

0x1b48b:	add	eax, 1
0x1b48e:	test	edx, edx
0x1b490:	mov	dword ptr [rip + 0x21a9a2], eax
0x1b496:	je	0x1ac89
		Instruction group(s): [7, 1] 

0x1b49c:	test	r15, r15
0x1b49f:	je	0x1b356
		Instruction group(s): [7, 1] 

0x1b4a5:	jmp	0x1b0ce
		Instruction group(s): [7, 1] 

0x1b4aa:	add	eax, 1
0x1b4ad:	mov	dword ptr [rip + 0x21a985], eax
0x1b4b3:	jmp	0x1b095
		Instruction group(s): [7, 1] 

0x1b4b8:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x1b4bd:	call	0x8650
		Instruction group(s): [2, 7, 145] 

0x1b4c2:	cmp	dword ptr [rip + 0x21aef7], 0
0x1b4c9:	je	0x1b4d0
		Instruction group(s): [7, 1] 

0x1b4cb:	call	0x1a5b0
		Instruction group(s): [2, 7, 145] 

0x1b4d0:	mov	rbx, qword ptr [rip + 0x21a949]
0x1b4d7:	mov	rbp, qword ptr [rip + 0x21e062]
0x1b4de:	lea	rsi, [rip + 0x11143]
0x1b4e5:	mov	edx, 5
0x1b4ea:	xor	edi, edi
0x1b4ec:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1b4f1:	mov	rcx, rbp
0x1b4f4:	mov	rdx, rax
0x1b4f7:	mov	esi, 1
0x1b4fc:	mov	rdi, rbx
0x1b4ff:	xor	eax, eax
0x1b501:	lea	rbp, [rip + 0x2193f8]
0x1b508:	call	0x8c90
		Instruction group(s): [2, 7, 145] 

0x1b50d:	lea	rsi, [rip + 0x11f30]
0x1b514:	xor	edi, edi
0x1b516:	mov	edx, 5
0x1b51b:	add	rbp, 8
0x1b51f:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1b524:	mov	rsi, rbx
0x1b527:	mov	rdi, rax
0x1b52a:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0x1b52f:	mov	rsi, qword ptr [rbp]
0x1b533:	test	rsi, rsi
0x1b536:	jne	0x1b514
		Instruction group(s): [7, 1] 

0x1b538:	mov	rbp, qword ptr [rip + 0x21df61]
0x1b53f:	mov	r12, qword ptr [rip + 0x21a8b2]
0x1b546:	mov	edx, 5
0x1b54b:	test	rbp, rbp
0x1b54e:	je	0x1b556
		Instruction group(s): [7, 1] 

0x1b550:	cmp	byte ptr [rbp], 0
0x1b554:	jne	0x1b5cb
		Instruction group(s): [7, 1] 

0x1b556:	lea	rsi, [rip + 0x11ef1]
0x1b55d:	xor	edi, edi
0x1b55f:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1b564:	mov	rcx, r12
0x1b567:	mov	rdx, rax
0x1b56a:	mov	esi, 1
0x1b56f:	mov	rdi, rbx
0x1b572:	xor	eax, eax
0x1b574:	call	0x8c90
		Instruction group(s): [2, 7, 145] 

0x1b579:	lea	rsi, [rip + 0x110f8]
0x1b580:	xor	edi, edi
0x1b582:	mov	edx, 5
0x1b587:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1b58c:	mov	esi, 1
0x1b591:	mov	rdx, rax
0x1b594:	mov	rdi, rbx
0x1b597:	xor	eax, eax
0x1b599:	call	0x8c90
		Instruction group(s): [2, 7, 145] 

0x1b59e:	test	r13d, r13d
0x1b5a1:	je	0x1b5a9
		Instruction group(s): [7, 1] 

0x1b5a3:	mov	r13d, 2
0x1b5a9:	mov	edi, r13d
0x1b5ac:	call	0x1aa70
		Instruction group(s): [2, 7, 145] 

0x1b5b1:	cmp	dword ptr [rip + 0x21ae08], 0
0x1b5b8:	je	0x1b5bf
		Instruction group(s): [7, 1] 

0x1b5ba:	call	0x1a5b0
		Instruction group(s): [2, 7, 145] 

0x1b5bf:	mov	rbx, qword ptr [rip + 0x21a8ba]
0x1b5c6:	jmp	0x1b4d7
		Instruction group(s): [7, 1] 

0x1b5cb:	lea	rsi, [rip + 0x1107e]
0x1b5d2:	xor	edi, edi
0x1b5d4:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1b5d9:	mov	r8, rbp
0x1b5dc:	mov	rdx, rax
0x1b5df:	mov	rcx, r12
0x1b5e2:	mov	esi, 1
0x1b5e7:	mov	rdi, rbx
0x1b5ea:	xor	eax, eax
0x1b5ec:	call	0x8c90
		Instruction group(s): [2, 7, 145] 

0x1b5f1:	jmp	0x1b579
		Instruction group(s): [7, 1] 

0x1b5f3:	nop	dword ptr [rax]
0x1b5f6:	nop	word ptr cs:[rax + rax]
0x1b600:	push	rbp
		Instruction group(s): [145] 

0x1b601:	mov	rbp, rsp
0x1b604:	push	r15
		Instruction group(s): [145] 

0x1b606:	push	r14
		Instruction group(s): [145] 

0x1b608:	push	r13
		Instruction group(s): [145] 

0x1b60a:	push	r12
		Instruction group(s): [145] 

0x1b60c:	push	rbx
		Instruction group(s): [145] 

0x1b60d:	sub	rsp, 0x38
0x1b611:	mov	rax, qword ptr fs:[0x28]
0x1b61a:	mov	qword ptr [rbp - 0x38], rax
0x1b61e:	xor	eax, eax
0x1b620:	lea	eax, [rsi + 4]
		Instruction group(s): [145] 

0x1b623:	add	rax, 0x1e
0x1b627:	shr	rax, 4
0x1b62b:	shl	rax, 4
0x1b62f:	sub	rsp, rax
0x1b632:	mov	eax, 0x2824
0x1b637:	lea	rdx, [rsp + 0xf]
0x1b63c:	and	rdx, 0xfffffffffffffff0
0x1b640:	mov	word ptr [rdx], ax
0x1b643:	mov	rcx, qword ptr [rdi]
0x1b646:	lea	rax, [rdx + 2]
0x1b64a:	mov	qword ptr [rdx + 2], rcx
0x1b64e:	mov	ecx, esi
0x1b650:	mov	r8, qword ptr [rdi + rcx - 8]
0x1b655:	mov	qword ptr [rdx + rcx - 6], r8
0x1b65a:	lea	r8, [rdx + 8]
0x1b65e:	sub	rax, r8
0x1b661:	sub	rdi, rax
0x1b664:	add	eax, esi
0x1b666:	and	eax, 0xfffffff8
0x1b669:	cmp	eax, 8
0x1b66c:	jb	0x1b685
		Instruction group(s): [7, 1] 

0x1b66e:	and	eax, 0xfffffff8
0x1b671:	xor	ecx, ecx
0x1b673:	mov	r9d, ecx
0x1b676:	add	ecx, 8
0x1b679:	mov	r10, qword ptr [rdi + r9]
0x1b67d:	cmp	ecx, eax
0x1b67f:	mov	qword ptr [r8 + r9], r10
0x1b683:	jb	0x1b673
		Instruction group(s): [7, 1] 

0x1b685:	lea	eax, [rsi + 2]
		Instruction group(s): [145] 

0x1b688:	mov	rdi, rdx
0x1b68b:	mov	byte ptr [rdx + rax], 0x29
0x1b68f:	lea	eax, [rsi + 3]
		Instruction group(s): [145] 

0x1b692:	mov	byte ptr [rdx + rax], 0
0x1b696:	call	0xe9f0
		Instruction group(s): [2, 7, 145] 

0x1b69b:	mov	rdi, rax
0x1b69e:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1b6a3:	mov	rdi, rax
0x1b6a6:	mov	qword ptr [rbp - 0x50], rax
0x1b6aa:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1b6af:	test	eax, eax
0x1b6b1:	je	0x1b78c
		Instruction group(s): [7, 1] 

0x1b6b7:	add	eax, 2
0x1b6ba:	mov	rdx, qword ptr [rbp - 0x50]
0x1b6be:	mov	dword ptr [rbp - 0x44], 2
0x1b6c5:	lea	rcx, [rax*8 + 0x1e]
0x1b6cd:	add	rax, 0x1e
0x1b6d1:	shr	rax, 4
0x1b6d5:	shr	rcx, 4
0x1b6d9:	shl	rax, 4
0x1b6dd:	shl	rcx, 4
0x1b6e1:	sub	rsp, rcx
0x1b6e4:	lea	r8, [rsp + 0xf]
0x1b6e9:	sub	rsp, rax
0x1b6ec:	lea	rax, [rsp + 0xf]
0x1b6f1:	and	r8, 0xfffffffffffffff0
0x1b6f5:	and	rax, 0xfffffffffffffff0
0x1b6f9:	mov	r15, r8
0x1b6fc:	mov	qword ptr [r8], 0
0x1b703:	lea	r14, [rax + 1]
0x1b707:	mov	qword ptr [rbp - 0x58], rax
0x1b70b:	mov	byte ptr [rax], 0x2d
0x1b70e:	mov	qword ptr [r8 + 8], r14
0x1b712:	nop	word ptr [rax + rax]
0x1b718:	movsxd	rax, dword ptr [rbp - 0x44]
		Instruction group(s): [145] 

0x1b71c:	movzx	r12d, byte ptr [rdx]
0x1b720:	lea	rax, [r15 + rax*8]
0x1b724:	test	r12b, r12b
0x1b727:	mov	qword ptr [rbp - 0x50], rax
0x1b72b:	je	0x1b759
		Instruction group(s): [7, 1] 

0x1b72d:	lea	rbx, [rdx + 1]
0x1b731:	add	r14, 1
0x1b735:	cmp	r12b, 0x5c
0x1b739:	mov	r13, rbx
0x1b73c:	je	0x1b7b0
		Instruction group(s): [7, 1] 

0x1b73e:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0x1b743:	mov	rax, qword ptr [rax]
0x1b746:	movzx	edx, r12b
0x1b74a:	test	byte ptr [rax + rdx*2], 1
0x1b74e:	jne	0x1b7c1
		Instruction group(s): [7, 1] 

0x1b750:	mov	byte ptr [r14 - 1], r12b
0x1b754:	mov	rdx, r13
0x1b757:	jmp	0x1b718
		Instruction group(s): [7, 1] 

0x1b759:	mov	qword ptr [rax], 0
0x1b760:	mov	rdi, qword ptr [r15 + 8]
0x1b764:	mov	byte ptr [r14], 0
0x1b768:	cmp	byte ptr [rdi], 0x2d
0x1b76b:	je	0x1b77c
		Instruction group(s): [7, 1] 

0x1b76d:	mov	esi, 0x3d
0x1b772:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x1b777:	test	rax, rax
0x1b77a:	je	0x1b7ee
		Instruction group(s): [7, 1] 

0x1b77c:	mov	edi, dword ptr [rbp - 0x44]
0x1b77f:	mov	edx, 1
0x1b784:	mov	rsi, r15
0x1b787:	call	0x1ab60
		Instruction group(s): [2, 7, 145] 

0x1b78c:	mov	rax, qword ptr [rbp - 0x38]
0x1b790:	xor	rax, qword ptr fs:[0x28]
0x1b799:	jne	0x1b7fb
		Instruction group(s): [7, 1] 

0x1b79b:	lea	rsp, [rbp - 0x28]
0x1b79f:	pop	rbx
		Instruction group(s): [145] 

0x1b7a0:	pop	r12
		Instruction group(s): [145] 

0x1b7a2:	pop	r13
		Instruction group(s): [145] 

0x1b7a4:	pop	r14
		Instruction group(s): [145] 

0x1b7a6:	pop	r15
		Instruction group(s): [145] 

0x1b7a8:	pop	rbp
		Instruction group(s): [145] 

0x1b7a9:	ret	
		Instruction group(s): [3, 145] 

0x1b7aa:	nop	word ptr [rax + rax]
0x1b7b0:	movzx	eax, byte ptr [rdx + 1]
0x1b7b4:	test	al, al
0x1b7b6:	je	0x1b73e
		Instruction group(s): [7, 1] 

0x1b7b8:	lea	r13, [rdx + 2]
0x1b7bc:	mov	r12d, eax
0x1b7bf:	jmp	0x1b750
		Instruction group(s): [7, 1] 

0x1b7c1:	mov	rdi, qword ptr [rbp - 0x50]
0x1b7c5:	mov	byte ptr [r14 - 1], 0
0x1b7ca:	mov	qword ptr [rdi], r14
0x1b7cd:	jmp	0x1b7d4
		Instruction group(s): [7, 1] 

0x1b7cf:	nop	
0x1b7d0:	add	rbx, 1
0x1b7d4:	movzx	esi, byte ptr [rbx]
0x1b7d7:	mov	rdx, rbx
0x1b7da:	test	byte ptr [rax + rsi*2], 1
0x1b7de:	jne	0x1b7d0
		Instruction group(s): [7, 1] 

0x1b7e0:	mov	eax, dword ptr [rbp - 0x44]
0x1b7e3:	add	eax, 1
0x1b7e6:	mov	dword ptr [rbp - 0x44], eax
0x1b7e9:	jmp	0x1b718
		Instruction group(s): [7, 1] 

0x1b7ee:	mov	rax, qword ptr [rbp - 0x58]
0x1b7f2:	mov	qword ptr [r15 + 8], rax
0x1b7f6:	jmp	0x1b77c
		Instruction group(s): [7, 1] 

0x1b7fb:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x1b800:	lea	rsi, [rip + 0x12179]
0x1b807:	mov	edx, 5
0x1b80c:	xor	edi, edi
0x1b80e:	sub	rsp, 8
0x1b812:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1b817:	xor	esi, esi
0x1b819:	mov	rdx, rax
0x1b81c:	xor	edi, edi
0x1b81e:	xor	eax, eax
0x1b820:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x1b825:	nop	
0x1b826:	nop	word ptr cs:[rax + rax]
0x1b830:	mov	rdi, qword ptr [rdi]
0x1b833:	mov	rsi, qword ptr [rsi]
0x1b836:	movsx	eax, byte ptr [rdi]
0x1b839:	movsx	edx, byte ptr [rsi]
0x1b83c:	cmp	al, dl
0x1b83e:	je	0x1b848
		Instruction group(s): [7, 1] 

0x1b840:	sub	eax, edx
0x1b842:	ret	
		Instruction group(s): [3, 145] 

0x1b843:	nop	dword ptr [rax + rax]
0x1b848:	jmp	0x89e0
		Instruction group(s): [7, 1] 

0x1b84d:	nop	dword ptr [rax]
0x1b850:	test	edi, edi
0x1b852:	je	0x1b880
		Instruction group(s): [7, 1] 

0x1b854:	push	rbx
		Instruction group(s): [145] 

0x1b855:	lea	ebx, [rdi - 1]
		Instruction group(s): [145] 

0x1b858:	nop	dword ptr [rax + rax]
0x1b860:	mov	rsi, qword ptr [rip + 0x21a5b9]
0x1b867:	mov	edi, 0x20
0x1b86c:	sub	ebx, 1
0x1b86f:	call	0x8880
		Instruction group(s): [2, 7, 145] 

0x1b874:	cmp	ebx, -1
0x1b877:	jne	0x1b860
		Instruction group(s): [7, 1] 

0x1b879:	pop	rbx
		Instruction group(s): [145] 

0x1b87a:	ret	
		Instruction group(s): [3, 145] 

0x1b87b:	nop	dword ptr [rax + rax]
0x1b880:	ret	
		Instruction group(s): [3, 145] 

0x1b882:	nop	dword ptr [rax]
0x1b886:	nop	word ptr cs:[rax + rax]
0x1b890:	sub	rsp, 8
0x1b894:	mov	eax, 1
0x1b899:	test	edi, edi
0x1b89b:	cmove	edi, eax
		Instruction group(s): [137] 

0x1b89e:	mov	edi, edi
0x1b8a0:	call	0x8ac0
		Instruction group(s): [2, 7, 145] 

0x1b8a5:	test	rax, rax
0x1b8a8:	je	0x1b8af
		Instruction group(s): [7, 1] 

0x1b8aa:	add	rsp, 8
0x1b8ae:	ret	
		Instruction group(s): [3, 145] 

0x1b8af:	call	0x1b800
		Instruction group(s): [2, 7, 145] 

0x1b8b4:	nop	
0x1b8b6:	nop	word ptr cs:[rax + rax]
0x1b8c0:	sub	rsp, 8
0x1b8c4:	mov	eax, 1
0x1b8c9:	test	edi, edi
0x1b8cb:	cmove	edi, eax
		Instruction group(s): [137] 

0x1b8ce:	mov	esi, 1
0x1b8d3:	mov	edi, edi
0x1b8d5:	call	0x89b0
		Instruction group(s): [2, 7, 145] 

0x1b8da:	test	rax, rax
0x1b8dd:	je	0x1b8e4
		Instruction group(s): [7, 1] 

0x1b8df:	add	rsp, 8
0x1b8e3:	ret	
		Instruction group(s): [3, 145] 

0x1b8e4:	lea	rsi, [rip + 0x12095]
0x1b8eb:	mov	edx, 5
0x1b8f0:	xor	edi, edi
0x1b8f2:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1b8f7:	xor	esi, esi
0x1b8f9:	mov	rdx, rax
0x1b8fc:	xor	edi, edi
0x1b8fe:	xor	eax, eax
0x1b900:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x1b905:	nop	
0x1b906:	nop	word ptr cs:[rax + rax]
0x1b910:	sub	rsp, 8
0x1b914:	mov	eax, 1
0x1b919:	test	esi, esi
0x1b91b:	cmove	esi, eax
		Instruction group(s): [137] 

0x1b91e:	test	rdi, rdi
0x1b921:	mov	esi, esi
0x1b923:	je	0x1b938
		Instruction group(s): [7, 1] 

0x1b925:	call	0x8b80
		Instruction group(s): [2, 7, 145] 

0x1b92a:	test	rax, rax
0x1b92d:	je	0x1b942
		Instruction group(s): [7, 1] 

0x1b92f:	add	rsp, 8
0x1b933:	ret	
		Instruction group(s): [3, 145] 

0x1b934:	nop	dword ptr [rax]
0x1b938:	mov	rdi, rsi
0x1b93b:	call	0x8ac0
		Instruction group(s): [2, 7, 145] 

0x1b940:	jmp	0x1b92a
		Instruction group(s): [7, 1] 

0x1b942:	call	0x1b800
		Instruction group(s): [2, 7, 145] 

0x1b947:	nop	word ptr [rax + rax]
0x1b950:	push	r15
		Instruction group(s): [145] 

0x1b952:	push	r14
		Instruction group(s): [145] 

0x1b954:	push	r13
		Instruction group(s): [145] 

0x1b956:	push	r12
		Instruction group(s): [145] 

0x1b958:	push	rbp
		Instruction group(s): [145] 

0x1b959:	push	rbx
		Instruction group(s): [145] 

0x1b95a:	mov	ebp, edi
0x1b95c:	xor	ebx, ebx
0x1b95e:	sub	rsp, 0x68
0x1b962:	mov	r13, qword ptr [rip + 0x21b10f]
0x1b969:	mov	r12d, dword ptr [rip + 0x21b110]
0x1b970:	mov	rax, qword ptr fs:[0x28]
0x1b979:	mov	qword ptr [rsp + 0x28], rax
0x1b97e:	xor	eax, eax
0x1b980:	lea	rax, [rsp + 0xa0]
0x1b988:	mov	qword ptr [rsp + 0x38], rsi
0x1b98d:	mov	qword ptr [rsp + 0x40], rdx
0x1b992:	mov	qword ptr [rsp + 0x48], rcx
0x1b997:	mov	qword ptr [rsp + 0x50], r8
0x1b99c:	mov	qword ptr [rsp + 0x18], rax
0x1b9a1:	lea	rax, [rsp + 0x30]
0x1b9a6:	mov	qword ptr [rsp + 0x58], r9
0x1b9ab:	mov	dword ptr [rsp + 0x10], 8
0x1b9b3:	mov	qword ptr [rsp + 0x20], rax
0x1b9b8:	sub	ebp, 1
0x1b9bb:	cmp	ebp, -1
0x1b9be:	je	0x1ba55
		Instruction group(s): [7, 1] 

0x1b9c4:	mov	edx, dword ptr [rsp + 0x10]
0x1b9c8:	cmp	edx, 0x2f
0x1b9cb:	ja	0x1baac
		Instruction group(s): [7, 1] 

0x1b9d1:	mov	eax, edx
0x1b9d3:	add	rax, qword ptr [rsp + 0x20]
0x1b9d8:	add	edx, 8
0x1b9db:	mov	dword ptr [rsp + 0x10], edx
0x1b9df:	mov	r15, qword ptr [rax]
0x1b9e2:	test	r15, r15
0x1b9e5:	je	0x1b9b8
		Instruction group(s): [7, 1] 

0x1b9e7:	mov	rdi, r15
0x1b9ea:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1b9ef:	test	eax, eax
0x1b9f1:	mov	rdx, rax
0x1b9f4:	je	0x1b9b8
		Instruction group(s): [7, 1] 

0x1b9f6:	lea	r14d, [rbx + rax]
		Instruction group(s): [145] 

0x1b9fa:	cmp	r14d, r12d
0x1b9fd:	jbe	0x1ba37
		Instruction group(s): [7, 1] 

0x1b9ff:	test	r12d, r12d
0x1ba02:	mov	eax, 0x3c
0x1ba07:	mov	rdi, r13
0x1ba0a:	cmove	r12d, eax
		Instruction group(s): [137] 

0x1ba0e:	mov	qword ptr [rsp + 8], rdx
0x1ba13:	add	r12d, edx
0x1ba16:	add	r12d, r12d
0x1ba19:	mov	esi, r12d
0x1ba1c:	mov	dword ptr [rip + 0x21b05d], r12d
0x1ba23:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x1ba28:	mov	rdx, qword ptr [rsp + 8]
0x1ba2d:	mov	r13, rax
0x1ba30:	mov	qword ptr [rip + 0x21b041], rax
0x1ba37:	mov	edi, ebx
0x1ba39:	mov	edx, edx
0x1ba3b:	mov	rsi, r15
0x1ba3e:	add	rdi, r13
0x1ba41:	sub	ebp, 1
0x1ba44:	mov	ebx, r14d
0x1ba47:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x1ba4c:	cmp	ebp, -1
0x1ba4f:	jne	0x1b9c4
		Instruction group(s): [7, 1] 

0x1ba55:	cmp	ebx, r12d
0x1ba58:	jne	0x1ba7f
		Instruction group(s): [7, 1] 

0x1ba5a:	lea	esi, [rbx + rbx]
		Instruction group(s): [145] 

0x1ba5d:	test	ebx, ebx
0x1ba5f:	mov	eax, 0x78
0x1ba64:	mov	rdi, r13
0x1ba67:	cmove	esi, eax
		Instruction group(s): [137] 

0x1ba6a:	mov	dword ptr [rip + 0x21b010], esi
0x1ba70:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x1ba75:	mov	r13, rax
0x1ba78:	mov	qword ptr [rip + 0x21aff9], rax
0x1ba7f:	mov	rcx, qword ptr [rsp + 0x28]
0x1ba84:	xor	rcx, qword ptr fs:[0x28]
0x1ba8d:	mov	byte ptr [r13 + rbx], 0
0x1ba93:	mov	rax, r13
0x1ba96:	jne	0x1baa7
		Instruction group(s): [7, 1] 

0x1ba98:	add	rsp, 0x68
0x1ba9c:	pop	rbx
		Instruction group(s): [145] 

0x1ba9d:	pop	rbp
		Instruction group(s): [145] 

0x1ba9e:	pop	r12
		Instruction group(s): [145] 

0x1baa0:	pop	r13
		Instruction group(s): [145] 

0x1baa2:	pop	r14
		Instruction group(s): [145] 

0x1baa4:	pop	r15
		Instruction group(s): [145] 

0x1baa6:	ret	
		Instruction group(s): [3, 145] 

0x1baa7:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x1baac:	mov	rax, qword ptr [rsp + 0x18]
0x1bab1:	lea	rdx, [rax + 8]
0x1bab5:	mov	qword ptr [rsp + 0x18], rdx
0x1baba:	jmp	0x1b9df
		Instruction group(s): [7, 1] 

0x1babf:	nop	
0x1bac0:	sub	rsp, 8
0x1bac4:	call	0x8cb0
		Instruction group(s): [2, 7, 145] 

0x1bac9:	test	rax, rax
0x1bacc:	je	0x1bad3
		Instruction group(s): [7, 1] 

0x1bace:	add	rsp, 8
0x1bad2:	ret	
		Instruction group(s): [3, 145] 

0x1bad3:	call	0x1b800
		Instruction group(s): [2, 7, 145] 

0x1bad8:	nop	dword ptr [rax + rax]
0x1bae0:	sub	rsp, 8
0x1bae4:	mov	esi, esi
0x1bae6:	call	0x8990
		Instruction group(s): [2, 7, 145] 

0x1baeb:	test	rax, rax
0x1baee:	je	0x1baf5
		Instruction group(s): [7, 1] 

0x1baf0:	add	rsp, 8
0x1baf4:	ret	
		Instruction group(s): [3, 145] 

0x1baf5:	lea	rsi, [rip + 0x11e84]
0x1bafc:	mov	edx, 5
0x1bb01:	xor	edi, edi
0x1bb03:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1bb08:	xor	esi, esi
0x1bb0a:	mov	rdx, rax
0x1bb0d:	xor	edi, edi
0x1bb0f:	xor	eax, eax
0x1bb11:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x1bb16:	nop	word ptr cs:[rax + rax]
0x1bb20:	cmp	rdi, rsi
0x1bb23:	jae	0x1bb4b
		Instruction group(s): [7, 1] 

0x1bb25:	movsx	ecx, byte ptr [rdi]
0x1bb28:	lea	rax, [rdi + 1]
0x1bb2c:	cmp	edx, ecx
0x1bb2e:	jne	0x1bb46
		Instruction group(s): [7, 1] 

0x1bb30:	jmp	0x1bb50
		Instruction group(s): [7, 1] 

0x1bb32:	nop	word ptr [rax + rax]
0x1bb38:	movsx	edi, byte ptr [rax]
0x1bb3b:	lea	rcx, [rax + 1]
0x1bb3f:	cmp	edi, edx
0x1bb41:	je	0x1bb53
		Instruction group(s): [7, 1] 

0x1bb43:	mov	rax, rcx
0x1bb46:	cmp	rsi, rax
0x1bb49:	jne	0x1bb38
		Instruction group(s): [7, 1] 

0x1bb4b:	xor	eax, eax
0x1bb4d:	ret	
		Instruction group(s): [3, 145] 

0x1bb4e:	nop	
0x1bb50:	mov	rax, rdi
0x1bb53:	ret	
		Instruction group(s): [3, 145] 

0x1bb55:	nop	
0x1bb56:	nop	word ptr cs:[rax + rax]
0x1bb60:	movzx	edx, byte ptr [rdi]
0x1bb63:	lea	rcx, [rip + 0x21a636]
0x1bb6a:	mov	rax, rdi
0x1bb6d:	test	byte ptr [rcx + rdx*2], 3
0x1bb71:	jne	0x1bb85
		Instruction group(s): [7, 1] 

0x1bb73:	nop	dword ptr [rax + rax]
0x1bb78:	add	rax, 1
0x1bb7c:	movzx	edx, byte ptr [rax]
0x1bb7f:	test	byte ptr [rcx + rdx*2], 3
0x1bb83:	je	0x1bb78
		Instruction group(s): [7, 1] 

0x1bb85:	ret	
		Instruction group(s): [3, 145] 

0x1bb87:	nop	word ptr [rax + rax]
0x1bb90:	push	rbx
		Instruction group(s): [145] 

0x1bb91:	mov	rbx, rdi
0x1bb94:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0x1bb99:	mov	rdx, qword ptr [rax]
0x1bb9c:	jmp	0x1bba4
		Instruction group(s): [7, 1] 

0x1bb9e:	nop	
0x1bba0:	add	rbx, 1
0x1bba4:	movzx	eax, byte ptr [rbx]
0x1bba7:	test	byte ptr [rdx + rax*2], 1
0x1bbab:	jne	0x1bba0
		Instruction group(s): [7, 1] 

0x1bbad:	mov	rax, rbx
0x1bbb0:	pop	rbx
		Instruction group(s): [145] 

0x1bbb1:	ret	
		Instruction group(s): [3, 145] 

0x1bbb2:	nop	dword ptr [rax]
0x1bbb6:	nop	word ptr cs:[rax + rax]
0x1bbc0:	push	r13
		Instruction group(s): [145] 

0x1bbc2:	push	r12
		Instruction group(s): [145] 

0x1bbc4:	mov	esi, 0xa
0x1bbc9:	push	rbp
		Instruction group(s): [145] 

0x1bbca:	push	rbx
		Instruction group(s): [145] 

0x1bbcb:	mov	r12, rdi
0x1bbce:	sub	rsp, 0x18
0x1bbd2:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x1bbd7:	test	rax, rax
0x1bbda:	je	0x1bcbf
		Instruction group(s): [7, 1] 

0x1bbe0:	cmp	r12, rax
0x1bbe3:	mov	rbx, rax
0x1bbe6:	jae	0x1bbff
		Instruction group(s): [7, 1] 

0x1bbe8:	cmp	byte ptr [rax - 1], 0x5c
0x1bbec:	je	0x1bbf6
		Instruction group(s): [7, 1] 

0x1bbee:	jmp	0x1bbff
		Instruction group(s): [7, 1] 

0x1bbf0:	cmp	byte ptr [rbx - 1], 0x5c
0x1bbf4:	jne	0x1bbff
		Instruction group(s): [7, 1] 

0x1bbf6:	sub	rbx, 1
0x1bbfa:	cmp	r12, rbx
0x1bbfd:	jne	0x1bbf0
		Instruction group(s): [7, 1] 

0x1bbff:	movzx	edx, byte ptr [rax]
0x1bc02:	lea	rbp, [r12 - 1]
0x1bc07:	mov	r13d, 1
0x1bc0d:	test	dl, dl
0x1bc0f:	je	0x1bda6
		Instruction group(s): [7, 1] 

0x1bc15:	lea	rdx, [rax - 1]
0x1bc19:	cmp	r12, rdx
0x1bc1c:	ja	0x1bd9d
		Instruction group(s): [7, 1] 

0x1bc22:	cmp	byte ptr [rax - 1], 0x5c
0x1bc26:	jne	0x1bd9d
		Instruction group(s): [7, 1] 

0x1bc2c:	lea	r8, [rbx - 1]
0x1bc30:	xor	ecx, ecx
0x1bc32:	xor	esi, esi
0x1bc34:	jmp	0x1bc52
		Instruction group(s): [7, 1] 

0x1bc36:	nop	word ptr cs:[rax + rax]
0x1bc40:	cmp	byte ptr [rdx], 0x5c
0x1bc43:	jne	0x1bc69
		Instruction group(s): [7, 1] 

0x1bc45:	cmp	ecx, 1
0x1bc48:	setne	cl
0x1bc4b:	movzx	ecx, cl
0x1bc4e:	add	esi, ecx
0x1bc50:	mov	ecx, edi
0x1bc52:	mov	edi, ecx
0x1bc54:	xor	edi, 1
0x1bc57:	cmp	rax, r8
0x1bc5a:	je	0x1bdae
		Instruction group(s): [7, 1] 

0x1bc60:	sub	rdx, 1
0x1bc64:	cmp	rdx, rbp
0x1bc67:	jne	0x1bc40
		Instruction group(s): [7, 1] 

0x1bc69:	lea	edx, [rsi - 1]
		Instruction group(s): [145] 

0x1bc6c:	test	esi, esi
0x1bc6e:	lea	rdx, [rbx + rdx + 1]
0x1bc73:	je	0x1bc85
		Instruction group(s): [7, 1] 

0x1bc75:	nop	dword ptr [rax]
0x1bc78:	add	rbx, 1
0x1bc7c:	mov	byte ptr [rbx - 1], 0x5c
0x1bc80:	cmp	rbx, rdx
0x1bc83:	jne	0x1bc78
		Instruction group(s): [7, 1] 

0x1bc85:	cmp	ecx, 1
0x1bc88:	lea	rdi, [rax + 1]
0x1bc8c:	jne	0x1bd40
		Instruction group(s): [7, 1] 

0x1bc92:	lea	r8, [rbx + 1]
0x1bc96:	mov	byte ptr [rbx], 0xa
0x1bc99:	movzx	edx, byte ptr [rdi]
0x1bc9c:	test	dl, dl
0x1bc9e:	je	0x1bcbb
		Instruction group(s): [7, 1] 

0x1bca0:	cmp	dl, 0x5c
0x1bca3:	lea	r9, [rdi + 1]
0x1bca7:	je	0x1bcd0
		Instruction group(s): [7, 1] 

0x1bca9:	mov	byte ptr [r8], dl
0x1bcac:	movzx	edx, byte ptr [rdi + 1]
0x1bcb0:	add	r8, 1
0x1bcb4:	mov	rdi, r9
0x1bcb7:	test	dl, dl
0x1bcb9:	jne	0x1bca0
		Instruction group(s): [7, 1] 

0x1bcbb:	mov	byte ptr [r8], 0
0x1bcbf:	add	rsp, 0x18
0x1bcc3:	pop	rbx
		Instruction group(s): [145] 

0x1bcc4:	pop	rbp
		Instruction group(s): [145] 

0x1bcc5:	pop	r12
		Instruction group(s): [145] 

0x1bcc7:	pop	r13
		Instruction group(s): [145] 

0x1bcc9:	ret	
		Instruction group(s): [3, 145] 

0x1bcca:	nop	word ptr [rax + rax]
0x1bcd0:	movzx	esi, byte ptr [rdi + 1]
0x1bcd4:	cmp	sil, 0x5c
0x1bcd8:	mov	ecx, esi
0x1bcda:	mov	rax, r9
0x1bcdd:	jne	0x1bcec
		Instruction group(s): [7, 1] 

0x1bcdf:	nop	
0x1bce0:	add	rax, 1
0x1bce4:	movzx	ecx, byte ptr [rax]
0x1bce7:	cmp	cl, 0x5c
0x1bcea:	je	0x1bce0
		Instruction group(s): [7, 1] 

0x1bcec:	cmp	cl, 0xa
0x1bcef:	je	0x1bd60
		Instruction group(s): [7, 1] 

0x1bcf1:	cmp	rax, rdi
0x1bcf4:	jbe	0x1bcd4
		Instruction group(s): [7, 1] 

0x1bcf6:	mov	r10, rax
0x1bcf9:	mov	rcx, r8
0x1bcfc:	mov	rsi, rdi
0x1bcff:	sub	r10, rdi
0x1bd02:	add	r10, r8
0x1bd05:	jmp	0x1bd13
		Instruction group(s): [7, 1] 

0x1bd07:	nop	word ptr [rax + rax]
0x1bd10:	movzx	edx, byte ptr [rsi]
0x1bd13:	add	rcx, 1
0x1bd17:	add	rsi, 1
0x1bd1b:	mov	byte ptr [rcx - 1], dl
0x1bd1e:	cmp	rcx, r10
0x1bd21:	jne	0x1bd10
		Instruction group(s): [7, 1] 

0x1bd23:	mov	rcx, r13
0x1bd26:	sub	rcx, r9
0x1bd29:	add	rcx, rax
0x1bd2c:	sub	rax, r9
0x1bd2f:	movzx	edx, byte ptr [rdi + rax + 1]
0x1bd34:	add	r8, rcx
0x1bd37:	add	rdi, rcx
0x1bd3a:	jmp	0x1bc9c
		Instruction group(s): [7, 1] 

0x1bd3f:	nop	
0x1bd40:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1bd45:	mov	rdi, rax
0x1bd48:	mov	eax, dword ptr [rip + 0x21d7ea]
0x1bd4e:	test	eax, eax
0x1bd50:	je	0x1bd6b
		Instruction group(s): [7, 1] 

0x1bd52:	lea	r8, [rbx + 1]
0x1bd56:	mov	byte ptr [rbx], 0x20
0x1bd59:	jmp	0x1bc99
		Instruction group(s): [7, 1] 

0x1bd5e:	nop	
0x1bd60:	movzx	edx, byte ptr [rax]
0x1bd63:	mov	rbx, r8
0x1bd66:	jmp	0x1bc0d
		Instruction group(s): [7, 1] 

0x1bd6b:	cmp	r12, rbx
0x1bd6e:	jae	0x1bd52
		Instruction group(s): [7, 1] 

0x1bd70:	mov	qword ptr [rsp + 8], rdi
0x1bd75:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0x1bd7a:	mov	rdi, qword ptr [rsp + 8]
0x1bd7f:	mov	rdx, qword ptr [rax]
0x1bd82:	jmp	0x1bd91
		Instruction group(s): [7, 1] 

0x1bd84:	nop	dword ptr [rax]
0x1bd88:	sub	rbx, 1
0x1bd8c:	cmp	r12, rbx
0x1bd8f:	je	0x1bd52
		Instruction group(s): [7, 1] 

0x1bd91:	movzx	eax, byte ptr [rbx - 1]
0x1bd95:	test	byte ptr [rdx + rax*2], 1
0x1bd99:	jne	0x1bd88
		Instruction group(s): [7, 1] 

0x1bd9b:	jmp	0x1bd52
		Instruction group(s): [7, 1] 

0x1bd9d:	lea	rdi, [rax + 1]
0x1bda1:	jmp	0x1bc92
		Instruction group(s): [7, 1] 

0x1bda6:	mov	r8, rbx
0x1bda9:	jmp	0x1bcbb
		Instruction group(s): [7, 1] 

0x1bdae:	call	0x8650
		Instruction group(s): [2, 7, 145] 

0x1bdb3:	nop	dword ptr [rax]
0x1bdb6:	nop	word ptr cs:[rax + rax]
0x1bdc0:	push	rbp
		Instruction group(s): [145] 

0x1bdc1:	push	rbx
		Instruction group(s): [145] 

0x1bdc2:	mov	rbx, rdi
0x1bdc5:	mov	rbp, rsi
0x1bdc8:	sub	rsp, 8
0x1bdcc:	mov	rdi, qword ptr [rdi]
0x1bdcf:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1bdd4:	movzx	edx, byte ptr [rax]
0x1bdd7:	test	dl, dl
0x1bdd9:	je	0x1be18
		Instruction group(s): [7, 1] 

0x1bddb:	lea	rdi, [rip + 0x21a3be]
0x1bde2:	test	byte ptr [rdi + rdx*2], 3
0x1bde6:	mov	rdx, rax
0x1bde9:	jne	0x1bdfd
		Instruction group(s): [7, 1] 

0x1bdeb:	nop	dword ptr [rax + rax]
0x1bdf0:	add	rdx, 1
0x1bdf4:	movzx	ecx, byte ptr [rdx]
0x1bdf7:	test	byte ptr [rdi + rcx*2], 3
0x1bdfb:	je	0x1bdf0
		Instruction group(s): [7, 1] 

0x1bdfd:	test	rbp, rbp
0x1be00:	mov	qword ptr [rbx], rdx
0x1be03:	je	0x1be0b
		Instruction group(s): [7, 1] 

0x1be05:	sub	rdx, rax
0x1be08:	mov	dword ptr [rbp], edx
0x1be0b:	add	rsp, 8
0x1be0f:	pop	rbx
		Instruction group(s): [145] 

0x1be10:	pop	rbp
		Instruction group(s): [145] 

0x1be11:	ret	
		Instruction group(s): [3, 145] 

0x1be12:	nop	word ptr [rax + rax]
0x1be18:	xor	eax, eax
0x1be1a:	jmp	0x1be0b
		Instruction group(s): [7, 1] 

0x1be1c:	nop	dword ptr [rax]
0x1be20:	push	r13
		Instruction group(s): [145] 

0x1be22:	push	r12
		Instruction group(s): [145] 

0x1be24:	push	rbp
		Instruction group(s): [145] 

0x1be25:	push	rbx
		Instruction group(s): [145] 

0x1be26:	sub	rsp, 8
0x1be2a:	test	rdi, rdi
0x1be2d:	je	0x1bec7
		Instruction group(s): [7, 1] 

0x1be33:	mov	rbp, rdi
0x1be36:	xor	r12d, r12d
0x1be39:	xor	r13d, r13d
0x1be3c:	jmp	0x1be5c
		Instruction group(s): [7, 1] 

0x1be3e:	nop	
0x1be40:	test	r13, r13
0x1be43:	mov	qword ptr [rbx], 0
0x1be4a:	je	0x1beaa
		Instruction group(s): [7, 1] 

0x1be4c:	mov	qword ptr [r12], rbx
0x1be50:	mov	rbp, qword ptr [rbp]
0x1be54:	mov	r12, rbx
0x1be57:	test	rbp, rbp
0x1be5a:	je	0x1beb9
		Instruction group(s): [7, 1] 

0x1be5c:	mov	edi, 0x28
0x1be61:	call	0x8ac0
		Instruction group(s): [2, 7, 145] 

0x1be66:	test	rax, rax
0x1be69:	mov	rbx, rax
0x1be6c:	je	0x1becc
		Instruction group(s): [7, 1] 

0x1be6e:	movdqu	xmm0, xmmword ptr [rbp]
		Instruction group(s): [149] 

0x1be73:	movups	xmmword ptr [rax], xmm0
		Instruction group(s): [148] 

0x1be76:	movdqu	xmm0, xmmword ptr [rbp + 0x10]
		Instruction group(s): [149] 

0x1be7b:	movups	xmmword ptr [rax + 0x10], xmm0
		Instruction group(s): [148] 

0x1be7f:	mov	rax, qword ptr [rbp + 0x20]
0x1be83:	test	ah, 4
0x1be86:	mov	qword ptr [rbx + 0x20], rax
0x1be8a:	je	0x1be40
		Instruction group(s): [7, 1] 

0x1be8c:	mov	rdi, qword ptr [rbx + 8]
0x1be90:	call	0x8cb0
		Instruction group(s): [2, 7, 145] 

0x1be95:	test	rax, rax
0x1be98:	je	0x1bed1
		Instruction group(s): [7, 1] 

0x1be9a:	test	r13, r13
0x1be9d:	mov	qword ptr [rbx + 8], rax
0x1bea1:	mov	qword ptr [rbx], 0
0x1bea8:	jne	0x1be4c
		Instruction group(s): [7, 1] 

0x1beaa:	mov	rbp, qword ptr [rbp]
0x1beae:	mov	r13, rbx
0x1beb1:	mov	r12, rbx
0x1beb4:	test	rbp, rbp
0x1beb7:	jne	0x1be5c
		Instruction group(s): [7, 1] 

0x1beb9:	add	rsp, 8
0x1bebd:	mov	rax, r13
0x1bec0:	pop	rbx
		Instruction group(s): [145] 

0x1bec1:	pop	rbp
		Instruction group(s): [145] 

0x1bec2:	pop	r12
		Instruction group(s): [145] 

0x1bec4:	pop	r13
		Instruction group(s): [145] 

0x1bec6:	ret	
		Instruction group(s): [3, 145] 

0x1bec7:	xor	r13d, r13d
0x1beca:	jmp	0x1beb9
		Instruction group(s): [7, 1] 

0x1becc:	call	0x1b800
		Instruction group(s): [2, 7, 145] 

0x1bed1:	call	0x1b800
		Instruction group(s): [2, 7, 145] 

0x1bed6:	nop	word ptr cs:[rax + rax]
0x1bee0:	test	rdi, rdi
0x1bee3:	je	0x1bf08
		Instruction group(s): [7, 1] 

0x1bee5:	push	rbx
		Instruction group(s): [145] 

0x1bee6:	nop	word ptr cs:[rax + rax]
0x1bef0:	mov	rbx, qword ptr [rdi]
0x1bef3:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1bef8:	test	rbx, rbx
0x1befb:	mov	rdi, rbx
0x1befe:	jne	0x1bef0
		Instruction group(s): [7, 1] 

0x1bf00:	pop	rbx
		Instruction group(s): [145] 

0x1bf01:	ret	
		Instruction group(s): [3, 145] 

0x1bf02:	nop	word ptr [rax + rax]
0x1bf08:	ret	
		Instruction group(s): [3, 145] 

0x1bf0a:	nop	word ptr [rax + rax]
0x1bf10:	test	rdi, rdi
0x1bf13:	je	0x1bf38
		Instruction group(s): [7, 1] 

0x1bf15:	push	rbx
		Instruction group(s): [145] 

0x1bf16:	nop	word ptr cs:[rax + rax]
0x1bf20:	mov	rbx, qword ptr [rdi]
0x1bf23:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1bf28:	test	rbx, rbx
0x1bf2b:	mov	rdi, rbx
0x1bf2e:	jne	0x1bf20
		Instruction group(s): [7, 1] 

0x1bf30:	pop	rbx
		Instruction group(s): [145] 

0x1bf31:	ret	
		Instruction group(s): [3, 145] 

0x1bf32:	nop	word ptr [rax + rax]
0x1bf38:	ret	
		Instruction group(s): [3, 145] 

0x1bf3a:	nop	word ptr [rax + rax]
0x1bf40:	ret	
		Instruction group(s): [3, 145] 

0x1bf42:	nop	dword ptr [rax]
0x1bf46:	nop	word ptr cs:[rax + rax]
0x1bf50:	ret	
		Instruction group(s): [3, 145] 

0x1bf52:	nop	dword ptr [rax]
0x1bf56:	nop	word ptr cs:[rax + rax]
0x1bf60:	ret	
		Instruction group(s): [3, 145] 

0x1bf62:	nop	word ptr cs:[rax + rax]
0x1bf6c:	nop	dword ptr [rax]
0x1bf70:	push	rbx
		Instruction group(s): [145] 

0x1bf71:	xor	edx, edx
0x1bf73:	xor	eax, eax
0x1bf75:	mov	esi, 3
0x1bf7a:	mov	ebx, edi
0x1bf7c:	call	0x8750
		Instruction group(s): [2, 7, 145] 

0x1bf81:	test	eax, eax
0x1bf83:	js	0x1bfa0
		Instruction group(s): [7, 1] 

0x1bf85:	mov	edi, ebx
0x1bf87:	or	ah, 4
0x1bf8a:	mov	esi, 4
0x1bf8f:	pop	rbx
		Instruction group(s): [145] 

0x1bf90:	mov	edx, eax
0x1bf92:	xor	eax, eax
0x1bf94:	jmp	0x8750
		Instruction group(s): [7, 1] 

0x1bf99:	nop	dword ptr [rax]
0x1bfa0:	pop	rbx
		Instruction group(s): [145] 

0x1bfa1:	ret	
		Instruction group(s): [3, 145] 

0x1bfa2:	nop	dword ptr [rax]
0x1bfa6:	nop	word ptr cs:[rax + rax]
0x1bfb0:	push	r12
		Instruction group(s): [145] 

0x1bfb2:	push	rbp
		Instruction group(s): [145] 

0x1bfb3:	xor	edx, edx
0x1bfb5:	push	rbx
		Instruction group(s): [145] 

0x1bfb6:	mov	rbp, rsi
0x1bfb9:	xor	esi, esi
0x1bfbb:	mov	r12d, edi
0x1bfbe:	call	0x88c0
		Instruction group(s): [2, 7, 145] 

0x1bfc3:	cmp	rax, -1
0x1bfc7:	je	0x1c040
		Instruction group(s): [7, 1] 

0x1bfc9:	lea	rbx, [rip + 0x21aaf0]
0x1bfd0:	mov	edx, 0x2000
0x1bfd5:	mov	rsi, rbx
0x1bfd8:	mov	edi, r12d
0x1bfdb:	call	0x8980
		Instruction group(s): [2, 7, 145] 

0x1bfe0:	cmp	eax, -1
0x1bfe3:	je	0x1c010
		Instruction group(s): [7, 1] 

0x1bfe5:	test	eax, eax
0x1bfe7:	js	0x1c01a
		Instruction group(s): [7, 1] 

0x1bfe9:	je	0x1c051
		Instruction group(s): [7, 1] 

0x1bfeb:	movsxd	rsi, eax
		Instruction group(s): [145] 

0x1bfee:	mov	rcx, rbp
0x1bff1:	mov	edx, 1
0x1bff6:	mov	rdi, rbx
0x1bff9:	call	0x8c80
		Instruction group(s): [2, 7, 145] 

0x1bffe:	test	rax, rax
0x1c001:	je	0x1c030
		Instruction group(s): [7, 1] 

0x1c003:	mov	rdi, rbp
0x1c006:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x1c00b:	jmp	0x1bfd0
		Instruction group(s): [7, 1] 

0x1c00d:	nop	dword ptr [rax]
0x1c010:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x1c015:	cmp	dword ptr [rax], 4
0x1c018:	je	0x1bfd0
		Instruction group(s): [7, 1] 

0x1c01a:	pop	rbx
		Instruction group(s): [145] 

0x1c01b:	pop	rbp
		Instruction group(s): [145] 

0x1c01c:	pop	r12
		Instruction group(s): [145] 

0x1c01e:	lea	rdi, [rip + 0x1197c]
0x1c025:	jmp	0x8c20
		Instruction group(s): [7, 1] 

0x1c02a:	nop	word ptr [rax + rax]
0x1c030:	pop	rbx
		Instruction group(s): [145] 

0x1c031:	pop	rbp
		Instruction group(s): [145] 

0x1c032:	pop	r12
		Instruction group(s): [145] 

0x1c034:	lea	rdi, [rip + 0x1196d]
0x1c03b:	jmp	0x8c20
		Instruction group(s): [7, 1] 

0x1c040:	lea	rdi, [rip + 0x11952]
0x1c047:	call	0x8c20
		Instruction group(s): [2, 7, 145] 

0x1c04c:	jmp	0x1bfc9
		Instruction group(s): [7, 1] 

0x1c051:	pop	rbx
		Instruction group(s): [145] 

0x1c052:	pop	rbp
		Instruction group(s): [145] 

0x1c053:	pop	r12
		Instruction group(s): [145] 

0x1c055:	ret	
		Instruction group(s): [3, 145] 

0x1c056:	nop	word ptr cs:[rax + rax]
0x1c060:	mov	rdx, qword ptr [rip + 0x21ca81]
0x1c067:	push	rbx
		Instruction group(s): [145] 

0x1c068:	mov	rbx, rdi
0x1c06b:	mov	rax, qword ptr [rip + 0x21ca6e]
0x1c072:	cmp	rdx, rdi
0x1c075:	jae	0x1c091
		Instruction group(s): [7, 1] 

0x1c077:	lea	rsi, [rdx + rdi*2]
0x1c07b:	mov	rdi, rax
0x1c07e:	mov	qword ptr [rip + 0x21ca63], rsi
0x1c085:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x1c08a:	mov	qword ptr [rip + 0x21ca4f], rax
0x1c091:	mov	byte ptr [rax + rbx - 1], 0
0x1c096:	pop	rbx
		Instruction group(s): [145] 

0x1c097:	ret	
		Instruction group(s): [3, 145] 

0x1c098:	nop	dword ptr [rax + rax]
0x1c0a0:	push	r12
		Instruction group(s): [145] 

0x1c0a2:	push	rbp
		Instruction group(s): [145] 

0x1c0a3:	mov	ebp, edi
0x1c0a5:	mov	rdi, qword ptr [rip + 0x21d494]
0x1c0ac:	push	rbx
		Instruction group(s): [145] 

0x1c0ad:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1c0b2:	mov	rdi, qword ptr [rip + 0x21d46f]
0x1c0b9:	lea	ebx, [rax + 0x17]
		Instruction group(s): [145] 

0x1c0bc:	mov	r12d, dword ptr [rip + 0x21d48d]
0x1c0c3:	test	rdi, rdi
0x1c0c6:	je	0x1c1c0
		Instruction group(s): [7, 1] 

0x1c0cc:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1c0d1:	add	ebx, eax
0x1c0d3:	test	r12d, r12d
0x1c0d6:	jne	0x1c1a0
		Instruction group(s): [7, 1] 

0x1c0dc:	test	ebp, ebp
0x1c0de:	mov	edx, 5
0x1c0e3:	jne	0x1c1f0
		Instruction group(s): [7, 1] 

0x1c0e9:	lea	rsi, [rip + 0x118de]
0x1c0f0:	xor	edi, edi
0x1c0f2:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1c0f7:	mov	rbp, rax
0x1c0fa:	nop	word ptr [rax + rax]
0x1c100:	mov	rdi, rbp
0x1c103:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1c108:	add	ebx, eax
0x1c10a:	cmp	dword ptr [rip + 0x21a9a8], ebx
0x1c110:	mov	rdi, qword ptr [rip + 0x21a999]
0x1c117:	jb	0x1c280
		Instruction group(s): [7, 1] 

0x1c11d:	mov	esi, dword ptr [rip + 0x21a2bd]
0x1c123:	test	esi, esi
0x1c125:	je	0x1c134
		Instruction group(s): [7, 1] 

0x1c127:	mov	ecx, 0x2023
0x1c12c:	add	rdi, 2
0x1c130:	mov	word ptr [rdi - 2], cx
0x1c134:	mov	r9d, dword ptr [rip + 0x21d415]
0x1c13b:	mov	rax, qword ptr [rip + 0x21d3e6]
0x1c142:	mov	r8, qword ptr [rip + 0x21d3f7]
0x1c149:	test	r9d, r9d
0x1c14c:	jne	0x1c258
		Instruction group(s): [7, 1] 

0x1c152:	test	rax, rax
0x1c155:	je	0x1c2a0
		Instruction group(s): [7, 1] 

0x1c15b:	mov	r9, rax
0x1c15e:	mov	rcx, rbp
0x1c161:	mov	rdx, -1
0x1c168:	mov	esi, 1
0x1c16d:	xor	eax, eax
0x1c16f:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x1c174:	mov	rbx, qword ptr [rip + 0x219ca5]
0x1c17b:	mov	rdi, qword ptr [rip + 0x21a92e]
0x1c182:	mov	rsi, rbx
0x1c185:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0x1c18a:	mov	rdi, rbx
0x1c18d:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x1c192:	pop	rbx
		Instruction group(s): [145] 

0x1c193:	mov	eax, 1
0x1c198:	pop	rbp
		Instruction group(s): [145] 

0x1c199:	pop	r12
		Instruction group(s): [145] 

0x1c19b:	ret	
		Instruction group(s): [3, 145] 

0x1c19c:	nop	dword ptr [rax]
0x1c1a0:	test	ebp, ebp
0x1c1a2:	mov	edx, 5
0x1c1a7:	je	0x1c210
		Instruction group(s): [7, 1] 

0x1c1a9:	lea	rsi, [rip + 0x11948]
0x1c1b0:	xor	edi, edi
0x1c1b2:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1c1b7:	mov	rbp, rax
0x1c1ba:	jmp	0x1c100
		Instruction group(s): [7, 1] 

0x1c1bf:	nop	
0x1c1c0:	test	r12d, r12d
0x1c1c3:	jne	0x1c230
		Instruction group(s): [7, 1] 

0x1c1c5:	test	ebp, ebp
0x1c1c7:	mov	edx, 5
0x1c1cc:	je	0x1c2e0
		Instruction group(s): [7, 1] 

0x1c1d2:	lea	rsi, [rip + 0x1187f]
0x1c1d9:	xor	edi, edi
0x1c1db:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1c1e0:	mov	rbp, rax
0x1c1e3:	jmp	0x1c100
		Instruction group(s): [7, 1] 

0x1c1e8:	nop	dword ptr [rax + rax]
0x1c1f0:	lea	rsi, [rip + 0x117ba]
0x1c1f7:	xor	edi, edi
0x1c1f9:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1c1fe:	mov	rbp, rax
0x1c201:	jmp	0x1c100
		Instruction group(s): [7, 1] 

0x1c206:	nop	word ptr cs:[rax + rax]
0x1c210:	lea	rsi, [rip + 0x11909]
0x1c217:	xor	edi, edi
0x1c219:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1c21e:	mov	rbp, rax
0x1c221:	jmp	0x1c100
		Instruction group(s): [7, 1] 

0x1c226:	nop	word ptr cs:[rax + rax]
0x1c230:	test	ebp, ebp
0x1c232:	mov	edx, 5
0x1c237:	je	0x1c300
		Instruction group(s): [7, 1] 

0x1c23d:	lea	rsi, [rip + 0x11864]
0x1c244:	xor	edi, edi
0x1c246:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1c24b:	mov	rbp, rax
0x1c24e:	jmp	0x1c100
		Instruction group(s): [7, 1] 

0x1c253:	nop	dword ptr [rax + rax]
0x1c258:	test	rax, rax
0x1c25b:	je	0x1c2c0
		Instruction group(s): [7, 1] 

0x1c25d:	sub	rsp, 8
0x1c261:	mov	rdx, -1
0x1c268:	mov	rcx, rbp
0x1c26b:	push	rax
		Instruction group(s): [145] 

0x1c26c:	mov	esi, 1
0x1c271:	xor	eax, eax
0x1c273:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x1c278:	pop	rax
		Instruction group(s): [145] 

0x1c279:	pop	rdx
		Instruction group(s): [145] 

0x1c27a:	jmp	0x1c174
		Instruction group(s): [7, 1] 

0x1c27f:	nop	
0x1c280:	mov	esi, ebx
0x1c282:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x1c287:	mov	dword ptr [rip + 0x21a82b], ebx
0x1c28d:	mov	rdi, rax
0x1c290:	mov	qword ptr [rip + 0x21a819], rax
0x1c297:	jmp	0x1c11d
		Instruction group(s): [7, 1] 

0x1c29c:	nop	dword ptr [rax]
0x1c2a0:	mov	rcx, rbp
0x1c2a3:	mov	rdx, -1
0x1c2aa:	mov	esi, 1
0x1c2af:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x1c2b4:	jmp	0x1c174
		Instruction group(s): [7, 1] 

0x1c2b9:	nop	dword ptr [rax]
0x1c2c0:	mov	rcx, rbp
0x1c2c3:	mov	rdx, -1
0x1c2ca:	mov	esi, 1
0x1c2cf:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x1c2d4:	jmp	0x1c174
		Instruction group(s): [7, 1] 

0x1c2d9:	nop	dword ptr [rax]
0x1c2e0:	lea	rsi, [rip + 0x11799]
0x1c2e7:	xor	edi, edi
0x1c2e9:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1c2ee:	mov	rbp, rax
0x1c2f1:	jmp	0x1c100
		Instruction group(s): [7, 1] 

0x1c2f6:	nop	word ptr cs:[rax + rax]
0x1c300:	lea	rsi, [rip + 0x117c9]
0x1c307:	xor	edi, edi
0x1c309:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1c30e:	mov	rbp, rax
0x1c311:	jmp	0x1c100
		Instruction group(s): [7, 1] 

0x1c316:	nop	word ptr cs:[rax + rax]
0x1c320:	sub	rsp, 0x138
0x1c327:	mov	rdi, qword ptr [rip + 0x219af2]
0x1c32e:	mov	rax, qword ptr fs:[0x28]
0x1c337:	mov	qword ptr [rsp + 0x128], rax
0x1c33f:	xor	eax, eax
0x1c341:	call	0x8a70
		Instruction group(s): [2, 7, 145] 

0x1c346:	mov	rdi, qword ptr [rip + 0x219ad3]
0x1c34d:	mov	dword ptr [rip + 0x2199e9], eax
0x1c353:	call	0x8a70
		Instruction group(s): [2, 7, 145] 

0x1c358:	mov	rdx, rsp
0x1c35b:	mov	esi, eax
0x1c35d:	mov	edi, 1
0x1c362:	call	0x8ae0
		Instruction group(s): [2, 7, 145] 

0x1c367:	test	eax, eax
0x1c369:	je	0x1c390
		Instruction group(s): [7, 1] 

0x1c36b:	xor	eax, eax
0x1c36d:	mov	rcx, qword ptr [rsp + 0x128]
0x1c375:	xor	rcx, qword ptr fs:[0x28]
0x1c37e:	jne	0x1c3d7
		Instruction group(s): [7, 1] 

0x1c380:	add	rsp, 0x138
0x1c387:	ret	
		Instruction group(s): [3, 145] 

0x1c388:	nop	dword ptr [rax + rax]
0x1c390:	mov	rdi, qword ptr [rip + 0x219ae9]
0x1c397:	call	0x8a70
		Instruction group(s): [2, 7, 145] 

0x1c39c:	lea	rdx, [rsp + 0x90]
0x1c3a4:	mov	esi, eax
0x1c3a6:	mov	edi, 1
0x1c3ab:	call	0x8ae0
		Instruction group(s): [2, 7, 145] 

0x1c3b0:	test	eax, eax
0x1c3b2:	jne	0x1c36b
		Instruction group(s): [7, 1] 

0x1c3b4:	mov	rax, qword ptr [rsp + 0x90]
0x1c3bc:	cmp	qword ptr [rsp], rax
0x1c3c0:	jne	0x1c36b
		Instruction group(s): [7, 1] 

0x1c3c2:	mov	rax, qword ptr [rsp + 0x98]
0x1c3ca:	cmp	qword ptr [rsp + 8], rax
0x1c3cf:	sete	al
0x1c3d2:	movzx	eax, al
0x1c3d5:	jmp	0x1c36d
		Instruction group(s): [7, 1] 

0x1c3d7:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x1c3dc:	nop	dword ptr [rax]
0x1c3e0:	push	r14
		Instruction group(s): [145] 

0x1c3e2:	push	r13
		Instruction group(s): [145] 

0x1c3e4:	push	r12
		Instruction group(s): [145] 

0x1c3e6:	push	rbp
		Instruction group(s): [145] 

0x1c3e7:	push	rbx
		Instruction group(s): [145] 

0x1c3e8:	mov	rbx, rdi
0x1c3eb:	mov	edi, dword ptr [rdi]
0x1c3ed:	cmp	edi, -1
0x1c3f0:	jne	0x1c410
		Instruction group(s): [7, 1] 

0x1c3f2:	mov	edi, dword ptr [rbx + 4]
0x1c3f5:	cmp	edi, -1
0x1c3f8:	jne	0x1c5a0
		Instruction group(s): [7, 1] 

0x1c3fe:	pop	rbx
		Instruction group(s): [145] 

0x1c3ff:	pop	rbp
		Instruction group(s): [145] 

0x1c400:	pop	r12
		Instruction group(s): [145] 

0x1c402:	pop	r13
		Instruction group(s): [145] 

0x1c404:	pop	r14
		Instruction group(s): [145] 

0x1c406:	ret	
		Instruction group(s): [3, 145] 

0x1c407:	nop	word ptr [rax + rax]
0x1c410:	xor	esi, esi
0x1c412:	mov	edx, 2
0x1c417:	call	0x88c0
		Instruction group(s): [2, 7, 145] 

0x1c41c:	test	rax, rax
0x1c41f:	jle	0x1c3f2
		Instruction group(s): [7, 1] 

0x1c421:	mov	edi, dword ptr [rbx + 4]
0x1c424:	cmp	edi, -1
0x1c427:	je	0x1c615
		Instruction group(s): [7, 1] 

0x1c42d:	xor	esi, esi
0x1c42f:	mov	edx, 2
0x1c434:	xor	r14d, r14d
0x1c437:	call	0x88c0
		Instruction group(s): [2, 7, 145] 

0x1c43c:	test	rax, rax
0x1c43f:	mov	r13d, 1
0x1c445:	setg	r14b
0x1c449:	mov	edi, dword ptr [rip + 0x2198ed]
0x1c44f:	lea	rdx, [rip + 0x21c66a]
0x1c456:	xor	eax, eax
0x1c458:	mov	esi, 7
0x1c45d:	mov	dword ptr [rip + 0x21c659], 1
0x1c467:	mov	qword ptr [rip + 0x21c656], 0
0x1c472:	mov	qword ptr [rip + 0x21c653], 1
0x1c47d:	lea	r12, [rip + 0x21c63c]
0x1c484:	call	0x8750
		Instruction group(s): [2, 7, 145] 

0x1c489:	cmp	eax, -1
0x1c48c:	je	0x1c601
		Instruction group(s): [7, 1] 

0x1c492:	mov	ebp, dword ptr [rip + 0x219f30]
0x1c498:	test	ebp, ebp
0x1c49a:	je	0x1c4b3
		Instruction group(s): [7, 1] 

0x1c49c:	xor	ebp, ebp
0x1c49e:	cmp	dword ptr [rip + 0x219eff], 3
0x1c4a5:	je	0x1c4b3
		Instruction group(s): [7, 1] 

0x1c4a7:	mov	edi, 1
0x1c4ac:	call	0x1c0a0
		Instruction group(s): [2, 7, 145] 

0x1c4b1:	mov	ebp, eax
0x1c4b3:	test	r13d, r13d
0x1c4b6:	jne	0x1c5d8
		Instruction group(s): [7, 1] 

0x1c4bc:	test	r14d, r14d
0x1c4bf:	je	0x1c4d4
		Instruction group(s): [7, 1] 

0x1c4c1:	mov	edi, dword ptr [rbx + 4]
0x1c4c4:	cmp	edi, dword ptr [rbx]
0x1c4c6:	je	0x1c4d4
		Instruction group(s): [7, 1] 

0x1c4c8:	mov	rsi, qword ptr [rip + 0x2199b1]
0x1c4cf:	call	0x1bfb0
		Instruction group(s): [2, 7, 145] 

0x1c4d4:	test	ebp, ebp
0x1c4d6:	jne	0x1c5c8
		Instruction group(s): [7, 1] 

0x1c4dc:	test	r12, r12
0x1c4df:	je	0x1c509
		Instruction group(s): [7, 1] 

0x1c4e1:	mov	edi, dword ptr [rip + 0x219855]
0x1c4e7:	mov	eax, 2
0x1c4ec:	mov	rdx, r12
0x1c4ef:	mov	word ptr [r12], ax
0x1c4f4:	mov	esi, 7
0x1c4f9:	xor	eax, eax
0x1c4fb:	call	0x8750
		Instruction group(s): [2, 7, 145] 

0x1c500:	cmp	eax, -1
0x1c503:	je	0x1c5f0
		Instruction group(s): [7, 1] 

0x1c509:	mov	edi, dword ptr [rbx]
0x1c50b:	cmp	edi, -1
0x1c50e:	jne	0x1c558
		Instruction group(s): [7, 1] 

0x1c510:	mov	edi, dword ptr [rbx + 4]
0x1c513:	cmp	edi, -1
0x1c516:	je	0x1c3fe
		Instruction group(s): [7, 1] 

0x1c51c:	xor	edx, edx
0x1c51e:	xor	esi, esi
0x1c520:	call	0x88c0
		Instruction group(s): [2, 7, 145] 

0x1c525:	jmp	0x1c53e
		Instruction group(s): [7, 1] 

0x1c527:	nop	word ptr [rax + rax]
0x1c530:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x1c535:	cmp	dword ptr [rax], 4
0x1c538:	jne	0x1c3fe
		Instruction group(s): [7, 1] 

0x1c53e:	mov	edi, dword ptr [rbx + 4]
0x1c541:	xor	esi, esi
0x1c543:	call	0x88a0
		Instruction group(s): [2, 7, 145] 

0x1c548:	cmp	eax, -1
0x1c54b:	je	0x1c530
		Instruction group(s): [7, 1] 

0x1c54d:	jmp	0x1c3fe
		Instruction group(s): [7, 1] 

0x1c552:	nop	word ptr [rax + rax]
0x1c558:	xor	edx, edx
0x1c55a:	xor	esi, esi
0x1c55c:	call	0x88c0
		Instruction group(s): [2, 7, 145] 

0x1c561:	jmp	0x1c572
		Instruction group(s): [7, 1] 

0x1c563:	nop	dword ptr [rax + rax]
0x1c568:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x1c56d:	cmp	dword ptr [rax], 4
0x1c570:	jne	0x1c580
		Instruction group(s): [7, 1] 

0x1c572:	mov	edi, dword ptr [rbx]
0x1c574:	xor	esi, esi
0x1c576:	call	0x88a0
		Instruction group(s): [2, 7, 145] 

0x1c57b:	cmp	eax, -1
0x1c57e:	je	0x1c568
		Instruction group(s): [7, 1] 

0x1c580:	mov	edi, dword ptr [rbx + 4]
0x1c583:	cmp	edi, -1
0x1c586:	je	0x1c3fe
		Instruction group(s): [7, 1] 

0x1c58c:	cmp	edi, dword ptr [rbx]
0x1c58e:	jne	0x1c51c
		Instruction group(s): [7, 1] 

0x1c590:	pop	rbx
		Instruction group(s): [145] 

0x1c591:	pop	rbp
		Instruction group(s): [145] 

0x1c592:	pop	r12
		Instruction group(s): [145] 

0x1c594:	pop	r13
		Instruction group(s): [145] 

0x1c596:	pop	r14
		Instruction group(s): [145] 

0x1c598:	ret	
		Instruction group(s): [3, 145] 

0x1c599:	nop	dword ptr [rax]
0x1c5a0:	xor	esi, esi
0x1c5a2:	mov	edx, 2
0x1c5a7:	xor	r13d, r13d
0x1c5aa:	call	0x88c0
		Instruction group(s): [2, 7, 145] 

0x1c5af:	test	rax, rax
0x1c5b2:	mov	r14d, 1
0x1c5b8:	jg	0x1c449
		Instruction group(s): [7, 1] 

0x1c5be:	jmp	0x1c3fe
		Instruction group(s): [7, 1] 

0x1c5c3:	nop	dword ptr [rax + rax]
0x1c5c8:	xor	edi, edi
0x1c5ca:	call	0x1c0a0
		Instruction group(s): [2, 7, 145] 

0x1c5cf:	jmp	0x1c4dc
		Instruction group(s): [7, 1] 

0x1c5d4:	nop	dword ptr [rax]
0x1c5d8:	mov	rsi, qword ptr [rip + 0x219841]
0x1c5df:	mov	edi, dword ptr [rbx]
0x1c5e1:	call	0x1bfb0
		Instruction group(s): [2, 7, 145] 

0x1c5e6:	jmp	0x1c4bc
		Instruction group(s): [7, 1] 

0x1c5eb:	nop	dword ptr [rax + rax]
0x1c5f0:	lea	rdi, [rip + 0x113f3]
0x1c5f7:	call	0x8c20
		Instruction group(s): [2, 7, 145] 

0x1c5fc:	jmp	0x1c509
		Instruction group(s): [7, 1] 

0x1c601:	lea	rdi, [rip + 0x113e2]
0x1c608:	xor	r12d, r12d
0x1c60b:	call	0x8c20
		Instruction group(s): [2, 7, 145] 

0x1c610:	jmp	0x1c492
		Instruction group(s): [7, 1] 

0x1c615:	xor	r14d, r14d
0x1c618:	mov	r13d, 1
0x1c61e:	jmp	0x1c449
		Instruction group(s): [7, 1] 

0x1c623:	nop	dword ptr [rax]
0x1c626:	nop	word ptr cs:[rax + rax]
0x1c630:	push	rbp
		Instruction group(s): [145] 

0x1c631:	push	rbx
		Instruction group(s): [145] 

0x1c632:	mov	rbx, rdi
0x1c635:	mov	rdi, rsi
0x1c638:	mov	rbp, rsi
0x1c63b:	sub	rsp, 8
0x1c63f:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1c644:	lea	edi, [rax + 1]
		Instruction group(s): [145] 

0x1c647:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x1c64c:	mov	rsi, rbp
0x1c64f:	mov	rdi, rax
0x1c652:	mov	qword ptr [rbx], rax
0x1c655:	call	0x86c0
		Instruction group(s): [2, 7, 145] 

0x1c65a:	mov	rdi, qword ptr [rbx]
0x1c65d:	call	0x8b10
		Instruction group(s): [2, 7, 145] 

0x1c662:	cmp	eax, -1
0x1c665:	je	0x1c680
		Instruction group(s): [7, 1] 

0x1c667:	add	rsp, 8
0x1c66b:	lea	rsi, [rip + 0x110b7]
0x1c672:	mov	edi, eax
0x1c674:	pop	rbx
		Instruction group(s): [145] 

0x1c675:	pop	rbp
		Instruction group(s): [145] 

0x1c676:	jmp	0x8ba0
		Instruction group(s): [7, 1] 

0x1c67b:	nop	dword ptr [rax + rax]
0x1c680:	add	rsp, 8
0x1c684:	xor	eax, eax
0x1c686:	pop	rbx
		Instruction group(s): [145] 

0x1c687:	pop	rbp
		Instruction group(s): [145] 

0x1c688:	ret	
		Instruction group(s): [3, 145] 

0x1c689:	nop	dword ptr [rax]
0x1c690:	test	rdi, rdi
0x1c693:	je	0x1c6b8
		Instruction group(s): [7, 1] 

0x1c695:	mov	qword ptr [rdi], -1
0x1c69c:	mov	eax, dword ptr [rip + 0x219d02]
0x1c6a2:	test	eax, eax
0x1c6a4:	movzx	eax, byte ptr [rdi + 8]
0x1c6a8:	setne	dl
0x1c6ab:	and	eax, 0xfffffffe
0x1c6ae:	or	eax, edx
0x1c6b0:	mov	byte ptr [rdi + 8], al
0x1c6b3:	ret	
		Instruction group(s): [3, 145] 

0x1c6b4:	nop	dword ptr [rax]
0x1c6b8:	sub	rsp, 8
0x1c6bc:	mov	rdi, qword ptr [rip + 0x21975d]
0x1c6c3:	mov	ecx, 0x2000
0x1c6c8:	mov	edx, 1
0x1c6cd:	xor	esi, esi
0x1c6cf:	call	0x8bd0
		Instruction group(s): [2, 7, 145] 

0x1c6d4:	mov	rdi, qword ptr [rip + 0x219745]
0x1c6db:	call	0x8a70
		Instruction group(s): [2, 7, 145] 

0x1c6e0:	mov	edi, eax
0x1c6e2:	call	0x1bf70
		Instruction group(s): [2, 7, 145] 

0x1c6e7:	mov	rdi, qword ptr [rip + 0x219792]
0x1c6ee:	call	0x8a70
		Instruction group(s): [2, 7, 145] 

0x1c6f3:	mov	edi, eax
0x1c6f5:	call	0x1bf70
		Instruction group(s): [2, 7, 145] 

0x1c6fa:	lea	rdi, [rip + 0x76f]
0x1c701:	add	rsp, 8
0x1c705:	jmp	0x29d70
		Instruction group(s): [7, 1] 

0x1c70a:	nop	word ptr [rax + rax]
0x1c710:	test	rdi, rdi
0x1c713:	je	0x1c760
		Instruction group(s): [7, 1] 

0x1c715:	push	rbx
		Instruction group(s): [145] 

0x1c716:	mov	rbx, rdi
0x1c719:	call	0x1c3e0
		Instruction group(s): [2, 7, 145] 

0x1c71e:	mov	edi, dword ptr [rbx]
0x1c720:	test	edi, edi
0x1c722:	jns	0x1c750
		Instruction group(s): [7, 1] 

0x1c724:	mov	edi, dword ptr [rbx + 4]
0x1c727:	test	edi, edi
0x1c729:	js	0x1c72f
		Instruction group(s): [7, 1] 

0x1c72b:	cmp	edi, dword ptr [rbx]
0x1c72d:	jne	0x1c770
		Instruction group(s): [7, 1] 

0x1c72f:	mov	qword ptr [rbx], -1
0x1c736:	mov	eax, dword ptr [rip + 0x219c68]
0x1c73c:	test	eax, eax
0x1c73e:	movzx	eax, byte ptr [rbx + 8]
0x1c742:	setne	dl
0x1c745:	and	eax, 0xfffffffe
0x1c748:	or	eax, edx
0x1c74a:	mov	byte ptr [rbx + 8], al
0x1c74d:	pop	rbx
		Instruction group(s): [145] 

0x1c74e:	ret	
		Instruction group(s): [3, 145] 

0x1c74f:	nop	
0x1c750:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0x1c755:	mov	edi, dword ptr [rbx + 4]
0x1c758:	test	edi, edi
0x1c75a:	jns	0x1c72b
		Instruction group(s): [7, 1] 

0x1c75c:	jmp	0x1c72f
		Instruction group(s): [7, 1] 

0x1c75e:	nop	
0x1c760:	mov	edx, dword ptr [rip + 0x21a33a]
0x1c766:	test	edx, edx
0x1c768:	jne	0x1c780
		Instruction group(s): [7, 1] 

0x1c76a:	ret	
		Instruction group(s): [3, 145] 

0x1c76c:	nop	dword ptr [rax]
0x1c770:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0x1c775:	jmp	0x1c72f
		Instruction group(s): [7, 1] 

0x1c777:	nop	word ptr [rax + rax]
0x1c780:	jmp	0x1c0a0
		Instruction group(s): [7, 1] 

0x1c785:	nop	
0x1c786:	nop	word ptr cs:[rax + rax]
0x1c790:	push	r13
		Instruction group(s): [145] 

0x1c792:	push	r12
		Instruction group(s): [145] 

0x1c794:	push	rbp
		Instruction group(s): [145] 

0x1c795:	push	rbx
		Instruction group(s): [145] 

0x1c796:	mov	rbp, rdi
0x1c799:	sub	rsp, 8
0x1c79d:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x1c7a2:	mov	edi, dword ptr [rax]
0x1c7a4:	call	0x8cc0
		Instruction group(s): [2, 7, 145] 

0x1c7a9:	lea	rsi, [rip + 0xef80]
0x1c7b0:	mov	edx, 5
0x1c7b5:	xor	edi, edi
0x1c7b7:	mov	r12, rax
0x1c7ba:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1c7bf:	mov	rdi, rbp
0x1c7c2:	mov	r13, rax
0x1c7c5:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1c7ca:	mov	rdi, r12
0x1c7cd:	mov	rbx, rax
0x1c7d0:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1c7d5:	lea	rsi, [rbx + rax]
0x1c7d9:	mov	r8, r12
0x1c7dc:	mov	rcx, rbp
0x1c7df:	mov	rdx, r13
0x1c7e2:	xor	edi, edi
0x1c7e4:	xor	eax, eax
0x1c7e6:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x1c7eb:	nop	dword ptr [rax + rax]
0x1c7f0:	push	rbp
		Instruction group(s): [145] 

0x1c7f1:	push	rbx
		Instruction group(s): [145] 

0x1c7f2:	sub	rsp, 8
0x1c7f6:	call	0x89d0
		Instruction group(s): [2, 7, 145] 

0x1c7fb:	test	rax, rax
0x1c7fe:	je	0x1c830
		Instruction group(s): [7, 1] 

0x1c800:	mov	rdi, rax
0x1c803:	mov	rbx, rax
0x1c806:	call	0x8a70
		Instruction group(s): [2, 7, 145] 

0x1c80b:	mov	edi, eax
0x1c80d:	call	0x88b0
		Instruction group(s): [2, 7, 145] 

0x1c812:	test	eax, eax
0x1c814:	mov	ebp, eax
0x1c816:	js	0x1c83c
		Instruction group(s): [7, 1] 

0x1c818:	mov	rdi, rbx
0x1c81b:	call	0x87a0
		Instruction group(s): [2, 7, 145] 

0x1c820:	mov	edi, ebp
0x1c822:	call	0x1bf70
		Instruction group(s): [2, 7, 145] 

0x1c827:	add	rsp, 8
0x1c82b:	mov	eax, ebp
0x1c82d:	pop	rbx
		Instruction group(s): [145] 

0x1c82e:	pop	rbp
		Instruction group(s): [145] 

0x1c82f:	ret	
		Instruction group(s): [3, 145] 

0x1c830:	lea	rdi, [rip + 0x111bb]
0x1c837:	call	0x1c790
		Instruction group(s): [2, 7, 145] 

0x1c83c:	lea	rdi, [rip + 0x111b7]
0x1c843:	call	0x1c790
		Instruction group(s): [2, 7, 145] 

0x1c848:	nop	dword ptr [rax + rax]
0x1c850:	push	rbp
		Instruction group(s): [145] 

0x1c851:	push	rbx
		Instruction group(s): [145] 

0x1c852:	sub	rsp, 8
0x1c856:	mov	rbx, qword ptr [rip + 0x21a24b]
0x1c85d:	test	rbx, rbx
0x1c860:	je	0x1c868
		Instruction group(s): [7, 1] 

0x1c862:	test	byte ptr [rbx + 8], 1
0x1c866:	jne	0x1c8c8
		Instruction group(s): [7, 1] 

0x1c868:	mov	eax, dword ptr [rip + 0x219b36]
0x1c86e:	test	eax, eax
0x1c870:	je	0x1c898
		Instruction group(s): [7, 1] 

0x1c872:	cmp	eax, 3
0x1c875:	je	0x1c898
		Instruction group(s): [7, 1] 

0x1c877:	add	rsp, 8
0x1c87b:	pop	rbx
		Instruction group(s): [145] 

0x1c87c:	pop	rbp
		Instruction group(s): [145] 

0x1c87d:	ret	
		Instruction group(s): [3, 145] 

0x1c87e:	nop	
0x1c880:	mov	rdi, rbx
0x1c883:	call	0x1c710
		Instruction group(s): [2, 7, 145] 

0x1c888:	mov	dword ptr [rip + 0x219b12], 0
0x1c892:	nop	word ptr [rax + rax]
0x1c898:	mov	edx, dword ptr [rip + 0x21a202]
0x1c89e:	test	edx, edx
0x1c8a0:	jne	0x1c877
		Instruction group(s): [7, 1] 

0x1c8a2:	mov	eax, dword ptr [rip + 0x219b20]
0x1c8a8:	test	eax, eax
0x1c8aa:	je	0x1c877
		Instruction group(s): [7, 1] 

0x1c8ac:	mov	edi, 1
0x1c8b1:	call	0x1c0a0
		Instruction group(s): [2, 7, 145] 

0x1c8b6:	mov	dword ptr [rip + 0x21a1e4], eax
0x1c8bc:	add	rsp, 8
0x1c8c0:	pop	rbx
		Instruction group(s): [145] 

0x1c8c1:	pop	rbp
		Instruction group(s): [145] 

0x1c8c2:	ret	
		Instruction group(s): [3, 145] 

0x1c8c3:	nop	dword ptr [rax + rax]
0x1c8c8:	mov	r8d, dword ptr [rbx]
0x1c8cb:	test	r8d, r8d
0x1c8ce:	jns	0x1c868
		Instruction group(s): [7, 1] 

0x1c8d0:	mov	edi, dword ptr [rbx + 4]
0x1c8d3:	test	edi, edi
0x1c8d5:	jns	0x1c868
		Instruction group(s): [7, 1] 

0x1c8d7:	mov	esi, dword ptr [rip + 0x21945b]
0x1c8dd:	test	esi, esi
0x1c8df:	js	0x1c937
		Instruction group(s): [7, 1] 

0x1c8e1:	call	0x1c7f0
		Instruction group(s): [2, 7, 145] 

0x1c8e6:	test	eax, eax
0x1c8e8:	mov	ebp, eax
0x1c8ea:	js	0x1c880
		Instruction group(s): [7, 1] 

0x1c8ec:	mov	edi, eax
0x1c8ee:	mov	edx, 1
0x1c8f3:	xor	eax, eax
0x1c8f5:	mov	esi, 2
0x1c8fa:	call	0x8750
		Instruction group(s): [2, 7, 145] 

0x1c8ff:	mov	ecx, dword ptr [rip + 0x219433]
0x1c905:	mov	dword ptr [rbx], ebp
0x1c907:	test	ecx, ecx
0x1c909:	je	0x1c913
		Instruction group(s): [7, 1] 

0x1c90b:	mov	dword ptr [rbx + 4], ebp
0x1c90e:	jmp	0x1c868
		Instruction group(s): [7, 1] 

0x1c913:	call	0x1c7f0
		Instruction group(s): [2, 7, 145] 

0x1c918:	test	eax, eax
0x1c91a:	mov	ebp, eax
0x1c91c:	js	0x1c880
		Instruction group(s): [7, 1] 

0x1c922:	mov	edi, eax
0x1c924:	mov	edx, 1
0x1c929:	mov	esi, 2
0x1c92e:	xor	eax, eax
0x1c930:	call	0x8750
		Instruction group(s): [2, 7, 145] 

0x1c935:	jmp	0x1c90b
		Instruction group(s): [7, 1] 

0x1c937:	xor	eax, eax
0x1c939:	call	0x1c320
		Instruction group(s): [2, 7, 145] 

0x1c93e:	mov	dword ptr [rip + 0x2193f4], eax
0x1c944:	jmp	0x1c8e1
		Instruction group(s): [7, 1] 

0x1c946:	nop	word ptr cs:[rax + rax]
0x1c950:	push	r13
		Instruction group(s): [145] 

0x1c952:	push	r12
		Instruction group(s): [145] 

0x1c954:	push	rbp
		Instruction group(s): [145] 

0x1c955:	push	rbx
		Instruction group(s): [145] 

0x1c956:	mov	rbp, rsi
0x1c959:	mov	ebx, edi
0x1c95b:	sub	rsp, 8
0x1c95f:	call	0x1c850
		Instruction group(s): [2, 7, 145] 

0x1c964:	mov	rax, qword ptr [rip + 0x21a13d]
0x1c96b:	test	rax, rax
0x1c96e:	je	0x1c9e0
		Instruction group(s): [7, 1] 

0x1c970:	test	byte ptr [rax + 8], 1
0x1c974:	je	0x1c9e0
		Instruction group(s): [7, 1] 

0x1c976:	mov	rdi, rbp
0x1c979:	test	ebx, ebx
0x1c97b:	mov	r12d, dword ptr [rax + 4]
0x1c97f:	cmove	r12d, dword ptr [rax]
		Instruction group(s): [137] 

0x1c983:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1c988:	mov	ebx, eax
0x1c98a:	jmp	0x1c99a
		Instruction group(s): [7, 1] 

0x1c98c:	nop	dword ptr [rax]
0x1c990:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x1c995:	cmp	dword ptr [rax], 4
0x1c998:	jne	0x1c9ae
		Instruction group(s): [7, 1] 

0x1c99a:	xor	esi, esi
0x1c99c:	mov	edx, 2
0x1c9a1:	mov	edi, r12d
0x1c9a4:	call	0x88c0
		Instruction group(s): [2, 7, 145] 

0x1c9a9:	cmp	eax, -1
0x1c9ac:	je	0x1c990
		Instruction group(s): [7, 1] 

0x1c9ae:	movsxd	r13, ebx
		Instruction group(s): [145] 

0x1c9b1:	nop	dword ptr [rax]
0x1c9b8:	mov	rdx, r13
0x1c9bb:	mov	rsi, rbp
0x1c9be:	mov	edi, r12d
0x1c9c1:	call	0x8770
		Instruction group(s): [2, 7, 145] 

0x1c9c6:	cmp	eax, -1
0x1c9c9:	je	0x1ca10
		Instruction group(s): [7, 1] 

0x1c9cb:	cmp	ebx, eax
0x1c9cd:	je	0x1ca1a
		Instruction group(s): [7, 1] 

0x1c9cf:	test	eax, eax
0x1c9d1:	jle	0x1ca1a
		Instruction group(s): [7, 1] 

0x1c9d3:	sub	ebx, eax
0x1c9d5:	cdqe	
0x1c9d7:	add	rbp, rax
0x1c9da:	movsxd	r13, ebx
		Instruction group(s): [145] 

0x1c9dd:	jmp	0x1c9b8
		Instruction group(s): [7, 1] 

0x1c9df:	nop	
0x1c9e0:	test	ebx, ebx
0x1c9e2:	mov	rbx, qword ptr [rip + 0x219497]
0x1c9e9:	cmove	rbx, qword ptr [rip + 0x21942f]
		Instruction group(s): [137] 

0x1c9f1:	mov	rdi, rbp
0x1c9f4:	mov	rsi, rbx
0x1c9f7:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0x1c9fc:	add	rsp, 8
0x1ca00:	mov	rdi, rbx
0x1ca03:	pop	rbx
		Instruction group(s): [145] 

0x1ca04:	pop	rbp
		Instruction group(s): [145] 

0x1ca05:	pop	r12
		Instruction group(s): [145] 

0x1ca07:	pop	r13
		Instruction group(s): [145] 

0x1ca09:	jmp	0x8ad0
		Instruction group(s): [7, 1] 

0x1ca0e:	nop	
0x1ca10:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x1ca15:	cmp	dword ptr [rax], 4
0x1ca18:	je	0x1c9b8
		Instruction group(s): [7, 1] 

0x1ca1a:	add	rsp, 8
0x1ca1e:	pop	rbx
		Instruction group(s): [145] 

0x1ca1f:	pop	rbp
		Instruction group(s): [145] 

0x1ca20:	pop	r12
		Instruction group(s): [145] 

0x1ca22:	pop	r13
		Instruction group(s): [145] 

0x1ca24:	ret	
		Instruction group(s): [3, 145] 

0x1ca25:	nop	
0x1ca26:	nop	word ptr cs:[rax + rax]
0x1ca30:	test	rsi, rsi
0x1ca33:	je	0x1ca3a
		Instruction group(s): [7, 1] 

0x1ca35:	cmp	byte ptr [rsi], 0
0x1ca38:	jne	0x1ca40
		Instruction group(s): [7, 1] 

0x1ca3a:	ret	
		Instruction group(s): [3, 145] 

0x1ca3c:	nop	dword ptr [rax]
0x1ca40:	jmp	0x1c950
		Instruction group(s): [7, 1] 

0x1ca45:	nop	
0x1ca46:	nop	word ptr cs:[rax + rax]
0x1ca50:	push	r13
		Instruction group(s): [145] 

0x1ca52:	push	r12
		Instruction group(s): [145] 

0x1ca54:	mov	r13, rsi
0x1ca57:	push	rbp
		Instruction group(s): [145] 

0x1ca58:	push	rbx
		Instruction group(s): [145] 

0x1ca59:	mov	r12d, edi
0x1ca5c:	mov	rbp, rdx
0x1ca5f:	sub	rsp, 0xd8
0x1ca66:	test	al, al
0x1ca68:	mov	qword ptr [rsp + 0x38], rcx
0x1ca6d:	mov	qword ptr [rsp + 0x40], r8
0x1ca72:	mov	qword ptr [rsp + 0x48], r9
0x1ca77:	je	0x1cab0
		Instruction group(s): [7, 1] 

0x1ca79:	movaps	xmmword ptr [rsp + 0x50], xmm0
		Instruction group(s): [148] 

0x1ca7e:	movaps	xmmword ptr [rsp + 0x60], xmm1
		Instruction group(s): [148] 

0x1ca83:	movaps	xmmword ptr [rsp + 0x70], xmm2
		Instruction group(s): [148] 

0x1ca88:	movaps	xmmword ptr [rsp + 0x80], xmm3
		Instruction group(s): [148] 

0x1ca90:	movaps	xmmword ptr [rsp + 0x90], xmm4
		Instruction group(s): [148] 

0x1ca98:	movaps	xmmword ptr [rsp + 0xa0], xmm5
		Instruction group(s): [148] 

0x1caa0:	movaps	xmmword ptr [rsp + 0xb0], xmm6
		Instruction group(s): [148] 

0x1caa8:	movaps	xmmword ptr [rsp + 0xc0], xmm7
		Instruction group(s): [148] 

0x1cab0:	mov	rdi, rbp
0x1cab3:	mov	rax, qword ptr fs:[0x28]
0x1cabc:	mov	qword ptr [rsp + 0x18], rax
0x1cac1:	xor	eax, eax
0x1cac3:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1cac8:	mov	rdi, qword ptr [rip + 0x21ca71]
0x1cacf:	mov	rbx, rax
0x1cad2:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1cad7:	lea	rdi, [r13 + rbx + 0x1a]
0x1cadc:	add	rdi, rax
0x1cadf:	call	0x1c060
		Instruction group(s): [2, 7, 145] 

0x1cae4:	test	r12d, r12d
0x1cae7:	mov	rbx, rax
0x1caea:	je	0x1cb2b
		Instruction group(s): [7, 1] 

0x1caec:	mov	r9d, dword ptr [rip + 0x21ca5d]
0x1caf3:	mov	r8, qword ptr [rip + 0x21ca46]
0x1cafa:	test	r9d, r9d
0x1cafd:	je	0x1cbc0
		Instruction group(s): [7, 1] 

0x1cb03:	lea	rcx, [rip + 0x10ef9]
0x1cb0a:	mov	rdi, rax
0x1cb0d:	mov	rdx, -1
0x1cb14:	mov	esi, 1
0x1cb19:	xor	eax, eax
0x1cb1b:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x1cb20:	mov	rdi, rbx
0x1cb23:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1cb28:	add	rbx, rax
0x1cb2b:	lea	rax, [rsp + 0x100]
0x1cb33:	mov	rdx, -1
0x1cb3a:	mov	esi, 1
0x1cb3f:	mov	r8, rsp
0x1cb42:	mov	rcx, rbp
0x1cb45:	mov	rdi, rbx
0x1cb48:	mov	qword ptr [rsp + 8], rax
0x1cb4d:	lea	rax, [rsp + 0x20]
0x1cb52:	mov	dword ptr [rsp], 0x18
0x1cb59:	mov	dword ptr [rsp + 4], 0x30
0x1cb61:	mov	qword ptr [rsp + 0x10], rax
0x1cb66:	call	0x8d20
		Instruction group(s): [2, 7, 145] 

0x1cb6b:	mov	rdi, rbx
0x1cb6e:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1cb73:	mov	rsi, qword ptr [rip + 0x21bf66]
0x1cb7a:	mov	edx, 0xa
0x1cb7f:	mov	word ptr [rbx + rax], dx
0x1cb83:	test	rsi, rsi
0x1cb86:	je	0x1cb8d
		Instruction group(s): [7, 1] 

0x1cb88:	cmp	byte ptr [rsi], 0
0x1cb8b:	jne	0x1cbb0
		Instruction group(s): [7, 1] 

0x1cb8d:	mov	rax, qword ptr [rsp + 0x18]
0x1cb92:	xor	rax, qword ptr fs:[0x28]
0x1cb9b:	jne	0x1cbe2
		Instruction group(s): [7, 1] 

0x1cb9d:	add	rsp, 0xd8
0x1cba4:	pop	rbx
		Instruction group(s): [145] 

0x1cba5:	pop	rbp
		Instruction group(s): [145] 

0x1cba6:	pop	r12
		Instruction group(s): [145] 

0x1cba8:	pop	r13
		Instruction group(s): [145] 

0x1cbaa:	ret	
		Instruction group(s): [3, 145] 

0x1cbab:	nop	dword ptr [rax + rax]
0x1cbb0:	xor	edi, edi
0x1cbb2:	call	0x1c950
		Instruction group(s): [2, 7, 145] 

0x1cbb7:	jmp	0x1cb8d
		Instruction group(s): [7, 1] 

0x1cbb9:	nop	dword ptr [rax]
0x1cbc0:	lea	rcx, [rip + 0x10e37]
0x1cbc7:	mov	rdi, rax
0x1cbca:	mov	rdx, -1
0x1cbd1:	mov	esi, 1
0x1cbd6:	xor	eax, eax
0x1cbd8:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x1cbdd:	jmp	0x1cb20
		Instruction group(s): [7, 1] 

0x1cbe2:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x1cbe7:	nop	word ptr [rax + rax]
0x1cbf0:	push	r13
		Instruction group(s): [145] 

0x1cbf2:	push	r12
		Instruction group(s): [145] 

0x1cbf4:	mov	r13, rsi
0x1cbf7:	push	rbp
		Instruction group(s): [145] 

0x1cbf8:	push	rbx
		Instruction group(s): [145] 

0x1cbf9:	mov	r12, rdi
0x1cbfc:	mov	rbp, rdx
0x1cbff:	sub	rsp, 0xd8
0x1cc06:	test	al, al
0x1cc08:	mov	qword ptr [rsp + 0x38], rcx
0x1cc0d:	mov	qword ptr [rsp + 0x40], r8
0x1cc12:	mov	qword ptr [rsp + 0x48], r9
0x1cc17:	je	0x1cc50
		Instruction group(s): [7, 1] 

0x1cc19:	movaps	xmmword ptr [rsp + 0x50], xmm0
		Instruction group(s): [148] 

0x1cc1e:	movaps	xmmword ptr [rsp + 0x60], xmm1
		Instruction group(s): [148] 

0x1cc23:	movaps	xmmword ptr [rsp + 0x70], xmm2
		Instruction group(s): [148] 

0x1cc28:	movaps	xmmword ptr [rsp + 0x80], xmm3
		Instruction group(s): [148] 

0x1cc30:	movaps	xmmword ptr [rsp + 0x90], xmm4
		Instruction group(s): [148] 

0x1cc38:	movaps	xmmword ptr [rsp + 0xa0], xmm5
		Instruction group(s): [148] 

0x1cc40:	movaps	xmmword ptr [rsp + 0xb0], xmm6
		Instruction group(s): [148] 

0x1cc48:	movaps	xmmword ptr [rsp + 0xc0], xmm7
		Instruction group(s): [148] 

0x1cc50:	mov	rdi, rbp
0x1cc53:	mov	rax, qword ptr fs:[0x28]
0x1cc5c:	mov	qword ptr [rsp + 0x18], rax
0x1cc61:	xor	eax, eax
0x1cc63:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1cc68:	mov	rdi, qword ptr [rip + 0x21c8d1]
0x1cc6f:	mov	rbx, rax
0x1cc72:	lea	rbx, [r13 + rbx + 0x1a]
0x1cc77:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1cc7c:	add	rbx, rax
0x1cc7f:	test	r12, r12
0x1cc82:	je	0x1cd70
		Instruction group(s): [7, 1] 

0x1cc88:	mov	rdi, qword ptr [r12]
0x1cc8c:	test	rdi, rdi
0x1cc8f:	je	0x1cc99
		Instruction group(s): [7, 1] 

0x1cc91:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1cc96:	add	rbx, rax
0x1cc99:	mov	rdi, rbx
0x1cc9c:	call	0x1c060
		Instruction group(s): [2, 7, 145] 

0x1cca1:	mov	r8, qword ptr [r12]
0x1cca5:	mov	rbx, rax
0x1cca8:	test	r8, r8
0x1ccab:	je	0x1cd7b
		Instruction group(s): [7, 1] 

0x1ccb1:	mov	r9, qword ptr [r12 + 8]
0x1ccb6:	lea	rcx, [rip + 0xeaf9]
0x1ccbd:	mov	rdx, -1
0x1ccc4:	mov	esi, 1
0x1ccc9:	mov	rdi, rbx
0x1cccc:	xor	eax, eax
0x1ccce:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x1ccd3:	mov	rdi, rbx
0x1ccd6:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1ccdb:	add	rbx, rax
0x1ccde:	lea	rax, [rsp + 0x100]
0x1cce6:	mov	rdx, -1
0x1cced:	mov	esi, 1
0x1ccf2:	mov	r8, rsp
0x1ccf5:	mov	rcx, rbp
0x1ccf8:	mov	qword ptr [rsp + 8], rax
0x1ccfd:	lea	rax, [rsp + 0x20]
0x1cd02:	mov	rdi, rbx
0x1cd05:	mov	dword ptr [rsp], 0x18
0x1cd0c:	mov	dword ptr [rsp + 4], 0x30
0x1cd14:	mov	qword ptr [rsp + 0x10], rax
0x1cd19:	call	0x8d20
		Instruction group(s): [2, 7, 145] 

0x1cd1e:	mov	rdi, rbx
0x1cd21:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1cd26:	mov	rsi, qword ptr [rip + 0x21bdb3]
0x1cd2d:	mov	edx, 0xa
0x1cd32:	mov	word ptr [rbx + rax], dx
0x1cd36:	test	rsi, rsi
0x1cd39:	je	0x1cd4a
		Instruction group(s): [7, 1] 

0x1cd3b:	cmp	byte ptr [rsi], 0
0x1cd3e:	je	0x1cd4a
		Instruction group(s): [7, 1] 

0x1cd40:	mov	edi, 1
0x1cd45:	call	0x1c950
		Instruction group(s): [2, 7, 145] 

0x1cd4a:	mov	rax, qword ptr [rsp + 0x18]
0x1cd4f:	xor	rax, qword ptr fs:[0x28]
0x1cd58:	jne	0x1cdd2
		Instruction group(s): [7, 1] 

0x1cd5a:	add	rsp, 0xd8
0x1cd61:	pop	rbx
		Instruction group(s): [145] 

0x1cd62:	pop	rbp
		Instruction group(s): [145] 

0x1cd63:	pop	r12
		Instruction group(s): [145] 

0x1cd65:	pop	r13
		Instruction group(s): [145] 

0x1cd67:	ret	
		Instruction group(s): [3, 145] 

0x1cd68:	nop	dword ptr [rax + rax]
0x1cd70:	mov	rdi, rbx
0x1cd73:	call	0x1c060
		Instruction group(s): [2, 7, 145] 

0x1cd78:	mov	rbx, rax
0x1cd7b:	mov	r9d, dword ptr [rip + 0x21c7ce]
0x1cd82:	mov	r8, qword ptr [rip + 0x21c7b7]
0x1cd89:	test	r9d, r9d
0x1cd8c:	jne	0x1cdb0
		Instruction group(s): [7, 1] 

0x1cd8e:	lea	rcx, [rip + 0x10c69]
0x1cd95:	mov	rdx, -1
0x1cd9c:	mov	esi, 1
0x1cda1:	mov	rdi, rbx
0x1cda4:	xor	eax, eax
0x1cda6:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x1cdab:	jmp	0x1ccd3
		Instruction group(s): [7, 1] 

0x1cdb0:	lea	rcx, [rip + 0x10c4c]
0x1cdb7:	mov	rdx, -1
0x1cdbe:	mov	esi, 1
0x1cdc3:	mov	rdi, rbx
0x1cdc6:	xor	eax, eax
0x1cdc8:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x1cdcd:	jmp	0x1ccd3
		Instruction group(s): [7, 1] 

0x1cdd2:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x1cdd7:	nop	word ptr [rax + rax]
0x1cde0:	push	r15
		Instruction group(s): [145] 

0x1cde2:	push	r14
		Instruction group(s): [145] 

0x1cde4:	push	r13
		Instruction group(s): [145] 

0x1cde6:	push	r12
		Instruction group(s): [145] 

0x1cde8:	mov	r12, rsi
0x1cdeb:	push	rbp
		Instruction group(s): [145] 

0x1cdec:	push	rbx
		Instruction group(s): [145] 

0x1cded:	mov	rbp, rdi
0x1cdf0:	sub	rsp, 8
0x1cdf4:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x1cdf9:	mov	edi, dword ptr [rax]
0x1cdfb:	call	0x8cc0
		Instruction group(s): [2, 7, 145] 

0x1ce00:	lea	rsi, [rip + 0x10c05]
0x1ce07:	mov	edx, 5
0x1ce0c:	xor	edi, edi
0x1ce0e:	mov	r13, rax
0x1ce11:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1ce16:	mov	rdi, rbp
0x1ce19:	mov	r14, rax
0x1ce1c:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1ce21:	mov	rdi, r12
0x1ce24:	mov	rbx, rax
0x1ce27:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1ce2c:	mov	rdi, r13
0x1ce2f:	mov	r15, rax
0x1ce32:	add	rbx, r15
0x1ce35:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1ce3a:	add	rsp, 8
0x1ce3e:	lea	rsi, [rbx + rax]
0x1ce42:	mov	r9, r13
0x1ce45:	pop	rbx
		Instruction group(s): [145] 

0x1ce46:	mov	r8, r12
0x1ce49:	mov	rcx, rbp
0x1ce4c:	mov	rdx, r14
0x1ce4f:	pop	rbp
		Instruction group(s): [145] 

0x1ce50:	pop	r12
		Instruction group(s): [145] 

0x1ce52:	pop	r13
		Instruction group(s): [145] 

0x1ce54:	pop	r14
		Instruction group(s): [145] 

0x1ce56:	pop	r15
		Instruction group(s): [145] 

0x1ce58:	xor	edi, edi
0x1ce5a:	xor	eax, eax
0x1ce5c:	jmp	0x1cbf0
		Instruction group(s): [7, 1] 

0x1ce61:	nop	dword ptr [rax + rax]
0x1ce66:	nop	word ptr cs:[rax + rax]
0x1ce70:	mov	rdi, qword ptr [rip + 0x218fa9]
0x1ce77:	push	rbx
		Instruction group(s): [145] 

0x1ce78:	call	0x86e0
		Instruction group(s): [2, 7, 145] 

0x1ce7d:	mov	rdi, qword ptr [rip + 0x218f9c]
0x1ce84:	mov	ebx, eax
0x1ce86:	call	0x87a0
		Instruction group(s): [2, 7, 145] 

0x1ce8b:	or	ebx, eax
0x1ce8d:	jne	0x1ce91
		Instruction group(s): [7, 1] 

0x1ce8f:	pop	rbx
		Instruction group(s): [145] 

0x1ce90:	ret	
		Instruction group(s): [3, 145] 

0x1ce91:	xor	edi, edi
0x1ce93:	test	eax, eax
0x1ce95:	mov	edx, 5
0x1ce9a:	lea	rsi, [rip + 0x10b74]
0x1cea1:	je	0x1cec1
		Instruction group(s): [7, 1] 

0x1cea3:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1cea8:	lea	rsi, [rip + 0x10b1e]
0x1ceaf:	mov	rdi, rax
0x1ceb2:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0x1ceb7:	mov	edi, 1
0x1cebc:	call	0x8c70
		Instruction group(s): [2, 7, 145] 

0x1cec1:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1cec6:	xor	esi, esi
0x1cec8:	mov	rdx, rax
0x1cecb:	xor	edi, edi
0x1cecd:	xor	eax, eax
0x1cecf:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x1ced4:	jmp	0x1ceb7
		Instruction group(s): [7, 1] 

0x1ced6:	nop	word ptr cs:[rax + rax]
0x1cee0:	push	r15
		Instruction group(s): [145] 

0x1cee2:	push	r14
		Instruction group(s): [145] 

0x1cee4:	mov	r14, rsi
0x1cee7:	push	r13
		Instruction group(s): [145] 

0x1cee9:	push	r12
		Instruction group(s): [145] 

0x1ceeb:	mov	r13, rdi
0x1ceee:	push	rbp
		Instruction group(s): [145] 

0x1ceef:	push	rbx
		Instruction group(s): [145] 

0x1cef0:	mov	r12, rdx
0x1cef3:	sub	rsp, 0xd8
0x1cefa:	test	al, al
0x1cefc:	mov	qword ptr [rsp + 0x38], rcx
0x1cf01:	mov	qword ptr [rsp + 0x40], r8
0x1cf06:	mov	qword ptr [rsp + 0x48], r9
0x1cf0b:	je	0x1cf44
		Instruction group(s): [7, 1] 

0x1cf0d:	movaps	xmmword ptr [rsp + 0x50], xmm0
		Instruction group(s): [148] 

0x1cf12:	movaps	xmmword ptr [rsp + 0x60], xmm1
		Instruction group(s): [148] 

0x1cf17:	movaps	xmmword ptr [rsp + 0x70], xmm2
		Instruction group(s): [148] 

0x1cf1c:	movaps	xmmword ptr [rsp + 0x80], xmm3
		Instruction group(s): [148] 

0x1cf24:	movaps	xmmword ptr [rsp + 0x90], xmm4
		Instruction group(s): [148] 

0x1cf2c:	movaps	xmmword ptr [rsp + 0xa0], xmm5
		Instruction group(s): [148] 

0x1cf34:	movaps	xmmword ptr [rsp + 0xb0], xmm6
		Instruction group(s): [148] 

0x1cf3c:	movaps	xmmword ptr [rsp + 0xc0], xmm7
		Instruction group(s): [148] 

0x1cf44:	lea	rsi, [rip + 0x10ade]
0x1cf4b:	mov	edx, 5
0x1cf50:	xor	edi, edi
0x1cf52:	mov	rax, qword ptr fs:[0x28]
0x1cf5b:	mov	qword ptr [rsp + 0x18], rax
0x1cf60:	xor	eax, eax
0x1cf62:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1cf67:	mov	rdi, r12
0x1cf6a:	mov	rbp, rax
0x1cf6d:	add	r14, 0x1d
0x1cf71:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1cf76:	mov	rdi, qword ptr [rip + 0x21c5c3]
0x1cf7d:	mov	r15, rax
0x1cf80:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1cf85:	add	r15, rax
0x1cf88:	test	r13, r13
0x1cf8b:	je	0x1d064
		Instruction group(s): [7, 1] 

0x1cf91:	mov	rdi, qword ptr [r13]
0x1cf95:	xor	ebx, ebx
0x1cf97:	test	rdi, rdi
0x1cf9a:	je	0x1cfae
		Instruction group(s): [7, 1] 

0x1cf9c:	or	rcx, 0xffffffffffffffff
0x1cfa0:	xor	eax, eax
0x1cfa2:	repne scasb	al, byte ptr [rdi]
0x1cfa4:	mov	rdx, rcx
0x1cfa7:	not	rdx
0x1cfaa:	lea	rbx, [rdx - 1]
0x1cfae:	mov	rdi, rbp
0x1cfb1:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1cfb6:	lea	rdi, [r15 + r14]
0x1cfba:	add	rdi, rbx
0x1cfbd:	add	rdi, rax
0x1cfc0:	call	0x1c060
		Instruction group(s): [2, 7, 145] 

0x1cfc5:	mov	r8, qword ptr [r13]
0x1cfc9:	mov	rbx, rax
0x1cfcc:	test	r8, r8
0x1cfcf:	je	0x1d086
		Instruction group(s): [7, 1] 

0x1cfd5:	mov	r9, qword ptr [r13 + 8]
0x1cfd9:	lea	rcx, [rip + 0x10a53]
0x1cfe0:	or	rdx, 0xffffffffffffffff
0x1cfe4:	mov	esi, 1
0x1cfe9:	mov	rdi, rbx
0x1cfec:	xor	eax, eax
0x1cfee:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x1cff3:	mov	rdi, rbx
0x1cff6:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1cffb:	add	rbx, rax
0x1cffe:	lea	rax, [rsp + 0x110]
0x1d006:	mov	r8, rsp
0x1d009:	mov	rcx, r12
0x1d00c:	mov	rdx, -1
0x1d013:	mov	esi, 1
0x1d018:	mov	qword ptr [rsp + 8], rax
0x1d01d:	lea	rax, [rsp + 0x20]
0x1d022:	mov	rdi, rbx
0x1d025:	mov	dword ptr [rsp], 0x18
0x1d02c:	mov	dword ptr [rsp + 4], 0x30
0x1d034:	mov	qword ptr [rsp + 0x10], rax
0x1d039:	call	0x8d20
		Instruction group(s): [2, 7, 145] 

0x1d03e:	mov	rsi, rbp
0x1d041:	mov	rdi, rbx
0x1d044:	call	0x8c50
		Instruction group(s): [2, 7, 145] 

0x1d049:	mov	rsi, qword ptr [rip + 0x21ba90]
0x1d050:	test	rsi, rsi
0x1d053:	je	0x1d05a
		Instruction group(s): [7, 1] 

0x1d055:	cmp	byte ptr [rsi], 0
0x1d058:	jne	0x1d0d7
		Instruction group(s): [7, 1] 

0x1d05a:	mov	edi, 2
0x1d05f:	call	0x1aa70
		Instruction group(s): [2, 7, 145] 

0x1d064:	xor	eax, eax
0x1d066:	mov	rdi, rbp
0x1d069:	or	rcx, 0xffffffffffffffff
0x1d06d:	repne scasb	al, byte ptr [rdi]
0x1d06f:	lea	rdi, [r15 + r14]
0x1d073:	mov	rdx, rcx
0x1d076:	not	rdx
0x1d079:	lea	rdi, [rdx + rdi - 1]
0x1d07e:	call	0x1c060
		Instruction group(s): [2, 7, 145] 

0x1d083:	mov	rbx, rax
0x1d086:	mov	r9d, dword ptr [rip + 0x21c4c3]
0x1d08d:	mov	r8, qword ptr [rip + 0x21c4ac]
0x1d094:	test	r9d, r9d
0x1d097:	jne	0x1d0b8
		Instruction group(s): [7, 1] 

0x1d099:	lea	rcx, [rip + 0x109a0]
0x1d0a0:	or	rdx, 0xffffffffffffffff
0x1d0a4:	mov	esi, 1
0x1d0a9:	mov	rdi, rbx
0x1d0ac:	xor	eax, eax
0x1d0ae:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x1d0b3:	jmp	0x1cff3
		Instruction group(s): [7, 1] 

0x1d0b8:	lea	rcx, [rip + 0x1098a]
0x1d0bf:	or	rdx, 0xffffffffffffffff
0x1d0c3:	mov	esi, 1
0x1d0c8:	mov	rdi, rbx
0x1d0cb:	xor	eax, eax
0x1d0cd:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x1d0d2:	jmp	0x1cff3
		Instruction group(s): [7, 1] 

0x1d0d7:	mov	edi, 1
0x1d0dc:	call	0x1c950
		Instruction group(s): [2, 7, 145] 

0x1d0e1:	jmp	0x1d05a
		Instruction group(s): [7, 1] 

0x1d0e6:	nop	word ptr cs:[rax + rax]
0x1d0f0:	push	rbp
		Instruction group(s): [145] 

0x1d0f1:	push	rbx
		Instruction group(s): [145] 

0x1d0f2:	mov	rbp, rdi
0x1d0f5:	sub	rsp, 8
0x1d0f9:	mov	rbx, qword ptr [rip + 0x218c88]
0x1d100:	mov	rdi, qword ptr [rbx + 8]
0x1d104:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1d109:	mov	rdi, qword ptr [rbx + 0x10]
0x1d10d:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1d112:	mov	qword ptr [rip + 0x218c6f], rbp
0x1d119:	add	rsp, 8
0x1d11d:	pop	rbx
		Instruction group(s): [145] 

0x1d11e:	pop	rbp
		Instruction group(s): [145] 

0x1d11f:	ret	
		Instruction group(s): [3, 145] 

0x1d120:	push	r15
		Instruction group(s): [145] 

0x1d122:	push	r14
		Instruction group(s): [145] 

0x1d124:	lea	rax, [rdi - 1]
0x1d128:	push	r13
		Instruction group(s): [145] 

0x1d12a:	push	r12
		Instruction group(s): [145] 

0x1d12c:	or	esi, 1
0x1d12f:	push	rbp
		Instruction group(s): [145] 

0x1d130:	push	rbx
		Instruction group(s): [145] 

0x1d131:	lea	r15, [rip + 0x219068]
0x1d138:	mov	r12, rdi
0x1d13b:	mov	r14d, esi
0x1d13e:	mov	rbx, rdi
0x1d141:	sub	rsp, 0x28
0x1d145:	movzx	edx, byte ptr [rdi]
0x1d148:	xor	r9d, r9d
0x1d14b:	mov	qword ptr [rsp + 0x10], rax
0x1d150:	movzx	eax, dl
0x1d153:	movzx	ecx, word ptr [r15 + rax*2]
0x1d158:	test	ecx, r14d
0x1d15b:	je	0x1d1f0
		Instruction group(s): [7, 1] 

0x1d161:	test	dl, dl
0x1d163:	je	0x1d320
		Instruction group(s): [7, 1] 

0x1d169:	test	ch, 0x40
0x1d16c:	je	0x1d200
		Instruction group(s): [7, 1] 

0x1d172:	movzx	eax, byte ptr [rbx + 1]
0x1d176:	lea	rcx, [rbx + 2]
0x1d17a:	movzx	edx, byte ptr [rbx + 2]
0x1d17e:	cmp	al, 0x28
0x1d180:	je	0x1d189
		Instruction group(s): [7, 1] 

0x1d182:	cmp	al, 0x7b
0x1d184:	mov	rbx, rcx
0x1d187:	jne	0x1d150
		Instruction group(s): [7, 1] 

0x1d189:	cmp	al, 0x28
0x1d18b:	mov	esi, 0x7d
0x1d190:	mov	edi, 0x29
0x1d195:	cmovne	edi, esi
		Instruction group(s): [137] 

0x1d198:	test	dl, dl
0x1d19a:	mov	esi, 1
0x1d19f:	jne	0x1d1c4
		Instruction group(s): [7, 1] 

0x1d1a1:	jmp	0x1d324
		Instruction group(s): [7, 1] 

0x1d1a6:	nop	word ptr cs:[rax + rax]
0x1d1b0:	cmp	dil, dl
0x1d1b3:	je	0x1d2d0
		Instruction group(s): [7, 1] 

0x1d1b9:	add	rcx, 1
0x1d1bd:	movzx	edx, byte ptr [rcx]
0x1d1c0:	test	dl, dl
0x1d1c2:	je	0x1d1d6
		Instruction group(s): [7, 1] 

0x1d1c4:	cmp	al, dl
0x1d1c6:	jne	0x1d1b0
		Instruction group(s): [7, 1] 

0x1d1c8:	add	rcx, 1
0x1d1cc:	movzx	edx, byte ptr [rcx]
0x1d1cf:	add	esi, 1
0x1d1d2:	test	dl, dl
0x1d1d4:	jne	0x1d1c4
		Instruction group(s): [7, 1] 

0x1d1d6:	movzx	eax, dl
0x1d1d9:	mov	rbx, rcx
0x1d1dc:	movzx	ecx, word ptr [r15 + rax*2]
0x1d1e1:	test	ecx, r14d
0x1d1e4:	jne	0x1d161
		Instruction group(s): [7, 1] 

0x1d1ea:	nop	word ptr [rax + rax]
0x1d1f0:	movzx	edx, byte ptr [rbx + 1]
0x1d1f4:	add	rbx, 1
0x1d1f8:	jmp	0x1d150
		Instruction group(s): [7, 1] 

0x1d1fd:	nop	dword ptr [rax]
0x1d200:	cmp	rbx, r12
0x1d203:	jbe	0x1d2e9
		Instruction group(s): [7, 1] 

0x1d209:	cmp	byte ptr [rbx - 1], 0x5c
0x1d20d:	jne	0x1d2e9
		Instruction group(s): [7, 1] 

0x1d213:	lea	rax, [rbx - 2]
0x1d217:	cmp	r12, rax
0x1d21a:	ja	0x1d300
		Instruction group(s): [7, 1] 

0x1d220:	cmp	byte ptr [rbx - 2], 0x5c
0x1d224:	jne	0x1d300
		Instruction group(s): [7, 1] 

0x1d22a:	mov	rax, qword ptr [rsp + 0x10]
0x1d22f:	mov	rdx, -3
0x1d236:	sub	rax, rbx
0x1d239:	jmp	0x1d24b
		Instruction group(s): [7, 1] 

0x1d23b:	nop	dword ptr [rax + rax]
0x1d240:	sub	rdx, 1
0x1d244:	cmp	byte ptr [rbx + rdx + 1], 0x5c
0x1d249:	jne	0x1d252
		Instruction group(s): [7, 1] 

0x1d24b:	cmp	rax, rdx
0x1d24e:	mov	ebp, edx
0x1d250:	jne	0x1d240
		Instruction group(s): [7, 1] 

0x1d252:	add	ebp, 1
0x1d255:	mov	r10d, ebp
0x1d258:	movsxd	rsi, ebp
		Instruction group(s): [145] 

0x1d25b:	shr	r10d, 0x1f
0x1d25f:	add	r10d, ebp
0x1d262:	and	ebp, 1
0x1d265:	sar	r10d, 1
0x1d268:	movsxd	r10, r10d
		Instruction group(s): [145] 

0x1d26b:	lea	r13, [rbx + r10]
0x1d26f:	test	r9d, r9d
0x1d272:	jne	0x1d293
		Instruction group(s): [7, 1] 

0x1d274:	mov	rdi, r12
0x1d277:	mov	qword ptr [rsp + 0x18], rsi
0x1d27c:	mov	qword ptr [rsp + 8], r10
0x1d281:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1d286:	mov	rsi, qword ptr [rsp + 0x18]
0x1d28b:	mov	r10, qword ptr [rsp + 8]
0x1d290:	mov	r9d, eax
0x1d293:	mov	rax, rbx
0x1d296:	mov	edx, r9d
0x1d299:	lea	rdi, [rbx + rsi]
0x1d29d:	sub	rax, r12
0x1d2a0:	mov	rsi, r13
0x1d2a3:	mov	dword ptr [rsp + 8], r9d
0x1d2a8:	sub	rdx, rax
0x1d2ab:	sub	rdx, r10
0x1d2ae:	add	rdx, 1
0x1d2b2:	call	0x8be0
		Instruction group(s): [2, 7, 145] 

0x1d2b7:	test	ebp, ebp
0x1d2b9:	je	0x1d2e6
		Instruction group(s): [7, 1] 

0x1d2bb:	movzx	edx, byte ptr [r13]
0x1d2c0:	mov	rbx, r13
0x1d2c3:	mov	r9d, dword ptr [rsp + 8]
0x1d2c8:	jmp	0x1d150
		Instruction group(s): [7, 1] 

0x1d2cd:	nop	dword ptr [rax]
0x1d2d0:	sub	esi, 1
0x1d2d3:	jne	0x1d1b9
		Instruction group(s): [7, 1] 

0x1d2d9:	lea	rbx, [rcx + 1]
0x1d2dd:	movzx	edx, byte ptr [rcx + 1]
0x1d2e1:	jmp	0x1d150
		Instruction group(s): [7, 1] 

0x1d2e6:	mov	rbx, r13
0x1d2e9:	add	rsp, 0x28
0x1d2ed:	mov	rax, rbx
0x1d2f0:	pop	rbx
		Instruction group(s): [145] 

0x1d2f1:	pop	rbp
		Instruction group(s): [145] 

0x1d2f2:	pop	r12
		Instruction group(s): [145] 

0x1d2f4:	pop	r13
		Instruction group(s): [145] 

0x1d2f6:	pop	r14
		Instruction group(s): [145] 

0x1d2f8:	pop	r15
		Instruction group(s): [145] 

0x1d2fa:	ret	
		Instruction group(s): [3, 145] 

0x1d2fb:	nop	dword ptr [rax + rax]
0x1d300:	mov	r13, rbx
0x1d303:	mov	ebp, 1
0x1d308:	mov	rsi, -1
0x1d30f:	xor	r10d, r10d
0x1d312:	jmp	0x1d26f
		Instruction group(s): [7, 1] 

0x1d317:	nop	word ptr [rax + rax]
0x1d320:	xor	ebx, ebx
0x1d322:	jmp	0x1d2e9
		Instruction group(s): [7, 1] 

0x1d324:	movzx	eax, word ptr [r15]
0x1d328:	test	eax, r14d
0x1d32b:	jne	0x1d320
		Instruction group(s): [7, 1] 

0x1d32d:	mov	rbx, rcx
0x1d330:	jmp	0x1d1f0
		Instruction group(s): [7, 1] 

0x1d335:	nop	
0x1d336:	nop	word ptr cs:[rax + rax]
0x1d340:	push	r15
		Instruction group(s): [145] 

0x1d342:	push	r14
		Instruction group(s): [145] 

0x1d344:	mov	r14, rdi
0x1d347:	push	r13
		Instruction group(s): [145] 

0x1d349:	push	r12
		Instruction group(s): [145] 

0x1d34b:	push	rbp
		Instruction group(s): [145] 

0x1d34c:	push	rbx
		Instruction group(s): [145] 

0x1d34d:	sub	rsp, 0x18
0x1d351:	mov	r15d, dword ptr [rdi + 0x18]
0x1d355:	cmp	qword ptr [rdi + 0x20], 0
0x1d35a:	mov	rbx, qword ptr [rdi + 0x10]
0x1d35e:	lea	r12, [rbx + r15]
0x1d362:	je	0x1d520
		Instruction group(s): [7, 1] 

0x1d368:	lea	rax, [rdi + 0x28]
0x1d36c:	mov	byte ptr [rbx], 0
0x1d36f:	mov	rbp, rbx
0x1d372:	xor	r13d, r13d
0x1d375:	mov	qword ptr [rsp + 8], rax
0x1d37a:	jmp	0x1d3ab
		Instruction group(s): [7, 1] 

0x1d37c:	nop	dword ptr [rax]
0x1d380:	mov	eax, dword ptr [r14 + 0x18]
0x1d384:	mov	rdi, rbp
0x1d387:	lea	esi, [rax + rax]
		Instruction group(s): [145] 

0x1d38a:	mov	dword ptr [r14 + 0x18], esi
0x1d38e:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x1d393:	mov	r12d, dword ptr [r14 + 0x18]
0x1d397:	lea	rbx, [rax + r15]
0x1d39b:	mov	qword ptr [r14 + 0x10], rax
0x1d39f:	mov	qword ptr [r14], rax
0x1d3a2:	mov	rbp, rax
0x1d3a5:	mov	byte ptr [rbx], 0
0x1d3a8:	add	r12, rax
0x1d3ab:	mov	rdx, qword ptr [r14 + 0x20]
0x1d3af:	mov	rsi, r12
0x1d3b2:	mov	rdi, rbx
0x1d3b5:	sub	rsi, rbx
0x1d3b8:	call	0x89a0
		Instruction group(s): [2, 7, 145] 

0x1d3bd:	test	rax, rax
0x1d3c0:	je	0x1d498
		Instruction group(s): [7, 1] 

0x1d3c6:	mov	rdi, rbx
0x1d3c9:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1d3ce:	test	rax, rax
0x1d3d1:	je	0x1d460
		Instruction group(s): [7, 1] 

0x1d3d7:	add	rbx, rax
0x1d3da:	mov	r15, rbx
0x1d3dd:	sub	r15, rbp
0x1d3e0:	cmp	byte ptr [rbx - 1], 0xa
0x1d3e4:	jne	0x1d380
		Instruction group(s): [7, 1] 

0x1d3e6:	add	r13, 1
0x1d3ea:	cmp	r15, 1
0x1d3ee:	jle	0x1d3fa
		Instruction group(s): [7, 1] 

0x1d3f0:	cmp	byte ptr [rbx - 2], 0xd
0x1d3f4:	je	0x1d4d0
		Instruction group(s): [7, 1] 

0x1d3fa:	lea	rax, [rbx - 2]
0x1d3fe:	cmp	rbp, rax
0x1d401:	ja	0x1d500
		Instruction group(s): [7, 1] 

0x1d407:	cmp	byte ptr [rbx - 2], 0x5c
0x1d40b:	jne	0x1d500
		Instruction group(s): [7, 1] 

0x1d411:	lea	rdi, [rbp - 1]
0x1d415:	xor	edx, edx
0x1d417:	jmp	0x1d427
		Instruction group(s): [7, 1] 

0x1d419:	nop	dword ptr [rax]
0x1d420:	cmp	byte ptr [rax], 0x5c
0x1d423:	jne	0x1d435
		Instruction group(s): [7, 1] 

0x1d425:	mov	edx, esi
0x1d427:	mov	esi, edx
0x1d429:	sub	rax, 1
0x1d42d:	xor	esi, 1
0x1d430:	cmp	rax, rdi
0x1d433:	jne	0x1d420
		Instruction group(s): [7, 1] 

0x1d435:	cmp	edx, 1
0x1d438:	je	0x1d500
		Instruction group(s): [7, 1] 

0x1d43e:	mov	rax, r12
0x1d441:	sub	rax, rbx
0x1d444:	cmp	rax, 0x4f
0x1d448:	jg	0x1d3ab
		Instruction group(s): [7, 1] 

0x1d44e:	sub	rbx, rbp
0x1d451:	mov	r15, rbx
0x1d454:	jmp	0x1d380
		Instruction group(s): [7, 1] 

0x1d459:	nop	dword ptr [rax]
0x1d460:	lea	rsi, [rip + 0x106d9]
0x1d467:	mov	edx, 5
0x1d46c:	xor	edi, edi
0x1d46e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1d473:	mov	rdi, qword ptr [rsp + 8]
0x1d478:	mov	rdx, rax
0x1d47b:	xor	esi, esi
0x1d47d:	xor	eax, eax
0x1d47f:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x1d484:	mov	byte ptr [rbx], 0xa
0x1d487:	mov	eax, 1
0x1d48c:	jmp	0x1d3d7
		Instruction group(s): [7, 1] 

0x1d491:	nop	dword ptr [rax]
0x1d498:	mov	rdi, qword ptr [r14 + 0x20]
0x1d49c:	call	0x86e0
		Instruction group(s): [2, 7, 145] 

0x1d4a1:	test	eax, eax
0x1d4a3:	jne	0x1d511
		Instruction group(s): [7, 1] 

0x1d4a5:	test	r13, r13
0x1d4a8:	jne	0x1d4ba
		Instruction group(s): [7, 1] 

0x1d4aa:	xor	r13d, r13d
0x1d4ad:	cmp	qword ptr [r14 + 0x10], rbx
0x1d4b1:	setne	r13b
0x1d4b5:	lea	r13, [r13 + r13 - 1]
0x1d4ba:	add	rsp, 0x18
0x1d4be:	mov	rax, r13
0x1d4c1:	pop	rbx
		Instruction group(s): [145] 

0x1d4c2:	pop	rbp
		Instruction group(s): [145] 

0x1d4c3:	pop	r12
		Instruction group(s): [145] 

0x1d4c5:	pop	r13
		Instruction group(s): [145] 

0x1d4c7:	pop	r14
		Instruction group(s): [145] 

0x1d4c9:	pop	r15
		Instruction group(s): [145] 

0x1d4cb:	ret	
		Instruction group(s): [3, 145] 

0x1d4cc:	nop	dword ptr [rax]
0x1d4d0:	lea	r15, [rbx - 1]
0x1d4d4:	mov	rdi, r15
0x1d4d7:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1d4dc:	lea	rdi, [rbx - 2]
0x1d4e0:	lea	rdx, [rax + 1]
0x1d4e4:	mov	rsi, r15
0x1d4e7:	mov	rbx, r15
0x1d4ea:	call	0x8be0
		Instruction group(s): [2, 7, 145] 

0x1d4ef:	lea	rax, [rbx - 2]
0x1d4f3:	cmp	rbp, rax
0x1d4f6:	jbe	0x1d407
		Instruction group(s): [7, 1] 

0x1d4fc:	nop	dword ptr [rax]
0x1d500:	mov	byte ptr [rbx - 1], 0
0x1d504:	mov	rdi, qword ptr [r14 + 0x20]
0x1d508:	call	0x86e0
		Instruction group(s): [2, 7, 145] 

0x1d50d:	test	eax, eax
0x1d50f:	je	0x1d4ba
		Instruction group(s): [7, 1] 

0x1d511:	mov	rdi, qword ptr [r14 + 0x28]
0x1d515:	call	0x1c790
		Instruction group(s): [2, 7, 145] 

0x1d51a:	nop	word ptr [rax + rax]
0x1d520:	mov	rbp, qword ptr [rdi + 8]
0x1d524:	mov	r13, -1
0x1d52b:	cmp	r12, rbp
0x1d52e:	jbe	0x1d4ba
		Instruction group(s): [7, 1] 

0x1d530:	mov	qword ptr [rdi], rbp
0x1d533:	nop	dword ptr [rax + rax]
0x1d538:	mov	esi, 0xa
0x1d53d:	mov	rdi, rbp
0x1d540:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x1d545:	test	rax, rax
0x1d548:	je	0x1d59b
		Instruction group(s): [7, 1] 

0x1d54a:	cmp	rbp, rax
0x1d54d:	jae	0x1d588
		Instruction group(s): [7, 1] 

0x1d54f:	cmp	byte ptr [rax - 1], 0x5c
0x1d553:	lea	rdx, [rax - 1]
0x1d557:	jne	0x1d588
		Instruction group(s): [7, 1] 

0x1d559:	xor	esi, esi
0x1d55b:	jmp	0x1d56b
		Instruction group(s): [7, 1] 

0x1d55d:	nop	dword ptr [rax]
0x1d560:	sub	rdx, 1
0x1d564:	cmp	byte ptr [rdx], 0x5c
0x1d567:	jne	0x1d575
		Instruction group(s): [7, 1] 

0x1d569:	mov	esi, edi
0x1d56b:	mov	edi, esi
0x1d56d:	xor	edi, 1
0x1d570:	cmp	rdx, rbp
0x1d573:	jne	0x1d560
		Instruction group(s): [7, 1] 

0x1d575:	lea	rdx, [rax + 1]
0x1d579:	cmp	esi, 1
0x1d57c:	mov	rbp, rdx
0x1d57f:	jne	0x1d538
		Instruction group(s): [7, 1] 

0x1d581:	jmp	0x1d58c
		Instruction group(s): [7, 1] 

0x1d583:	nop	dword ptr [rax + rax]
0x1d588:	lea	rdx, [rax + 1]
0x1d58c:	mov	byte ptr [rax], 0
0x1d58f:	xor	r13d, r13d
0x1d592:	mov	qword ptr [r14 + 8], rdx
0x1d596:	jmp	0x1d4ba
		Instruction group(s): [7, 1] 

0x1d59b:	lea	rax, [rbx + r15 + 1]
0x1d5a0:	xor	r13d, r13d
0x1d5a3:	mov	qword ptr [r14 + 8], rax
0x1d5a7:	jmp	0x1d4ba
		Instruction group(s): [7, 1] 

0x1d5ac:	nop	dword ptr [rax]
0x1d5b0:	push	r15
		Instruction group(s): [145] 

0x1d5b2:	push	r14
		Instruction group(s): [145] 

0x1d5b4:	push	r13
		Instruction group(s): [145] 

0x1d5b6:	push	r12
		Instruction group(s): [145] 

0x1d5b8:	push	rbp
		Instruction group(s): [145] 

0x1d5b9:	push	rbx
		Instruction group(s): [145] 

0x1d5ba:	mov	rbx, rsi
0x1d5bd:	sub	rsp, 0x38
0x1d5c1:	mov	dword ptr [rsi], 0
0x1d5c7:	mov	rax, qword ptr fs:[0x28]
0x1d5d0:	mov	qword ptr [rsp + 0x28], rax
0x1d5d5:	xor	eax, eax
0x1d5d7:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1d5dc:	cmp	byte ptr [rax], 0
0x1d5df:	mov	r12, rax
0x1d5e2:	je	0x1d680
		Instruction group(s): [7, 1] 

0x1d5e8:	mov	r15, rax
0x1d5eb:	mov	rbp, rsp
0x1d5ee:	lea	r13, [rip + 0x116e5]
0x1d5f5:	lea	r14, [rip + 0x109e0]
0x1d5fc:	jmp	0x1d630
		Instruction group(s): [7, 1] 

0x1d5fe:	nop	
0x1d600:	cmp	ecx, 8
0x1d603:	je	0x1d6b0
		Instruction group(s): [7, 1] 

0x1d609:	cmp	ecx, 7
0x1d60c:	jne	0x1d680
		Instruction group(s): [7, 1] 

0x1d60e:	mov	ecx, 7
0x1d613:	mov	rsi, r13
0x1d616:	mov	rdi, r15
0x1d619:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x1d61b:	jne	0x1d680
		Instruction group(s): [7, 1] 

0x1d61d:	or	byte ptr [rbx], 0x20
0x1d620:	mov	rdi, rax
0x1d623:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1d628:	cmp	byte ptr [rax], 0
0x1d62b:	mov	r15, rax
0x1d62e:	je	0x1d680
		Instruction group(s): [7, 1] 

0x1d630:	mov	rsi, rbp
0x1d633:	mov	rdi, r15
0x1d636:	call	0x283b0
		Instruction group(s): [2, 7, 145] 

0x1d63b:	test	rax, rax
0x1d63e:	jne	0x1d6f8
		Instruction group(s): [7, 1] 

0x1d644:	mov	rdi, r15
0x1d647:	call	0x1bb60
		Instruction group(s): [2, 7, 145] 

0x1d64c:	mov	rcx, rax
0x1d64f:	sub	rcx, r15
0x1d652:	cmp	ecx, 6
0x1d655:	jne	0x1d600
		Instruction group(s): [7, 1] 

0x1d657:	mov	ecx, 6
0x1d65c:	mov	rsi, r14
0x1d65f:	mov	rdi, r15
0x1d662:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x1d664:	jne	0x1d6d0
		Instruction group(s): [7, 1] 

0x1d666:	or	byte ptr [rbx], 8
0x1d669:	mov	rdi, rax
0x1d66c:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1d671:	cmp	byte ptr [rax], 0
0x1d674:	mov	r15, rax
0x1d677:	jne	0x1d630
		Instruction group(s): [7, 1] 

0x1d679:	nop	dword ptr [rax]
0x1d680:	mov	rbx, qword ptr [rsp + 0x28]
0x1d685:	xor	rbx, qword ptr fs:[0x28]
0x1d68e:	mov	rax, r12
0x1d691:	jne	0x1d727
		Instruction group(s): [7, 1] 

0x1d697:	add	rsp, 0x38
0x1d69b:	pop	rbx
		Instruction group(s): [145] 

0x1d69c:	pop	rbp
		Instruction group(s): [145] 

0x1d69d:	pop	r12
		Instruction group(s): [145] 

0x1d69f:	pop	r13
		Instruction group(s): [145] 

0x1d6a1:	pop	r14
		Instruction group(s): [145] 

0x1d6a3:	pop	r15
		Instruction group(s): [145] 

0x1d6a5:	ret	
		Instruction group(s): [3, 145] 

0x1d6a6:	nop	word ptr cs:[rax + rax]
0x1d6b0:	lea	rsi, [rip + 0xe0c5]
0x1d6b7:	mov	ecx, 8
0x1d6bc:	mov	rdi, r15
0x1d6bf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x1d6c1:	jne	0x1d700
		Instruction group(s): [7, 1] 

0x1d6c3:	or	byte ptr [rbx], 0x10
0x1d6c6:	jmp	0x1d620
		Instruction group(s): [7, 1] 

0x1d6cb:	nop	dword ptr [rax + rax]
0x1d6d0:	lea	rsi, [rip + 0x1081b]
0x1d6d7:	mov	ecx, 6
0x1d6dc:	mov	rdi, r15
0x1d6df:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x1d6e1:	jne	0x1d680
		Instruction group(s): [7, 1] 

0x1d6e3:	or	byte ptr [rbx], 2
0x1d6e6:	mov	rdi, rax
0x1d6e9:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1d6ee:	mov	r15, rax
0x1d6f1:	nop	dword ptr [rax]
0x1d6f8:	or	byte ptr [rbx], 1
0x1d6fb:	mov	r12, r15
0x1d6fe:	jmp	0x1d680
		Instruction group(s): [7, 1] 

0x1d700:	lea	rsi, [rip + 0x107e9]
0x1d707:	mov	ecx, 8
0x1d70c:	mov	rdi, r15
0x1d70f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x1d711:	jne	0x1d680
		Instruction group(s): [7, 1] 

0x1d717:	or	byte ptr [rbx], 4
0x1d71a:	mov	rdi, rax
0x1d71d:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1d722:	mov	r15, rax
0x1d725:	jmp	0x1d6f8
		Instruction group(s): [7, 1] 

0x1d727:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x1d72c:	nop	dword ptr [rax]
0x1d730:	push	rbp
		Instruction group(s): [145] 

0x1d731:	mov	rax, rdi
0x1d734:	mov	rbp, rsp
0x1d737:	push	r15
		Instruction group(s): [145] 

0x1d739:	push	r14
		Instruction group(s): [145] 

0x1d73b:	push	r13
		Instruction group(s): [145] 

0x1d73d:	push	r12
		Instruction group(s): [145] 

0x1d73f:	mov	r12, rdx
0x1d742:	push	rbx
		Instruction group(s): [145] 

0x1d743:	sub	rsp, 0x28
0x1d747:	mov	rbx, qword ptr fs:[0x28]
0x1d750:	mov	qword ptr [rbp - 0x38], rbx
0x1d754:	xor	ebx, ebx
0x1d756:	cmp	esi, 5
0x1d759:	je	0x1d880
		Instruction group(s): [7, 1] 

0x1d75f:	cmp	esi, 6
0x1d762:	je	0x1d840
		Instruction group(s): [7, 1] 

0x1d768:	cmp	esi, 4
0x1d76b:	jne	0x1d857
		Instruction group(s): [7, 1] 

0x1d771:	lea	rbx, [rip + 0x10794]
0x1d778:	mov	ecx, 4
0x1d77d:	mov	rsi, rbx
0x1d780:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x1d782:	je	0x1da70
		Instruction group(s): [7, 1] 

0x1d788:	lea	r13, [rip + 0x10782]
0x1d78f:	mov	ecx, 4
0x1d794:	mov	rdi, rax
0x1d797:	mov	rsi, r13
0x1d79a:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x1d79c:	jne	0x1d857
		Instruction group(s): [7, 1] 

0x1d7a2:	lea	rdi, [rax + 4]
0x1d7a6:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1d7ab:	mov	rbx, qword ptr [rip + 0x2185d6]
0x1d7b2:	mov	r15d, dword ptr [rbx]
0x1d7b5:	test	r15d, r15d
0x1d7b8:	je	0x1df93
		Instruction group(s): [7, 1] 

0x1d7be:	mov	rdx, qword ptr [rbx + 0x10]
0x1d7c2:	lea	r14d, [r15 - 1]
		Instruction group(s): [145] 

0x1d7c6:	cmp	byte ptr [rdx + r14], 0
0x1d7cb:	jne	0x1df71
		Instruction group(s): [7, 1] 

0x1d7d1:	mov	rdx, qword ptr [rbx + 8]
0x1d7d5:	add	rdx, r14
0x1d7d8:	movzx	ecx, byte ptr [rdx]
0x1d7db:	test	cl, cl
0x1d7dd:	je	0x1dd18
		Instruction group(s): [7, 1] 

0x1d7e3:	cmp	cl, 1
0x1d7e6:	jne	0x1d7eb
		Instruction group(s): [7, 1] 

0x1d7e8:	mov	byte ptr [rdx], 0
0x1d7eb:	cmp	byte ptr [rax], 0
0x1d7ee:	jne	0x1dc00
		Instruction group(s): [7, 1] 

0x1d7f4:	mov	rax, qword ptr [rbx + 0x10]
0x1d7f8:	mov	byte ptr [rax + r14], 1
0x1d7fd:	mov	edx, dword ptr [rbx]
0x1d7ff:	nop	
0x1d800:	test	edx, edx
0x1d802:	je	0x1d833
		Instruction group(s): [7, 1] 

0x1d804:	mov	rcx, qword ptr [rbx + 8]
0x1d808:	cmp	byte ptr [rcx], 0
0x1d80b:	jne	0x1dae0
		Instruction group(s): [7, 1] 

0x1d811:	sub	edx, 1
0x1d814:	lea	rax, [rcx + 1]
0x1d818:	lea	rdx, [rcx + rdx + 1]
0x1d81d:	jmp	0x1d82e
		Instruction group(s): [7, 1] 

0x1d81f:	nop	
0x1d820:	add	rax, 1
0x1d824:	cmp	byte ptr [rax - 1], 0
0x1d828:	jne	0x1dae0
		Instruction group(s): [7, 1] 

0x1d82e:	cmp	rdx, rax
0x1d831:	jne	0x1d820
		Instruction group(s): [7, 1] 

0x1d833:	xor	eax, eax
0x1d835:	jmp	0x1d85c
		Instruction group(s): [7, 1] 

0x1d837:	nop	word ptr [rax + rax]
0x1d840:	lea	rbx, [rip + 0x106b8]
0x1d847:	mov	ecx, 6
0x1d84c:	mov	rsi, rbx
0x1d84f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x1d851:	je	0x1da50
		Instruction group(s): [7, 1] 

0x1d857:	mov	eax, 0xfffffffe
0x1d85c:	mov	rbx, qword ptr [rbp - 0x38]
0x1d860:	xor	rbx, qword ptr fs:[0x28]
0x1d869:	jne	0x1df40
		Instruction group(s): [7, 1] 

0x1d86f:	lea	rsp, [rbp - 0x28]
0x1d873:	pop	rbx
		Instruction group(s): [145] 

0x1d874:	pop	r12
		Instruction group(s): [145] 

0x1d876:	pop	r13
		Instruction group(s): [145] 

0x1d878:	pop	r14
		Instruction group(s): [145] 

0x1d87a:	pop	r15
		Instruction group(s): [145] 

0x1d87c:	pop	rbp
		Instruction group(s): [145] 

0x1d87d:	ret	
		Instruction group(s): [3, 145] 

0x1d87e:	nop	
0x1d880:	lea	rbx, [rip + 0x10672]
0x1d887:	mov	ecx, 5
0x1d88c:	mov	rsi, rbx
0x1d88f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x1d891:	je	0x1d990
		Instruction group(s): [7, 1] 

0x1d897:	lea	rbx, [rip + 0x10668]
0x1d89e:	mov	ecx, 5
0x1d8a3:	mov	rdi, rax
0x1d8a6:	mov	rsi, rbx
0x1d8a9:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x1d8ab:	jne	0x1da90
		Instruction group(s): [7, 1] 

0x1d8b1:	lea	rdi, [rax + 5]
0x1d8b5:	mov	r14d, 3
0x1d8bb:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1d8c0:	mov	rcx, rax
0x1d8c3:	mov	r15, qword ptr [rip + 0x2184be]
0x1d8ca:	mov	esi, dword ptr [r15 + 4]
0x1d8ce:	test	esi, esi
0x1d8d0:	je	0x1d9b2
		Instruction group(s): [7, 1] 

0x1d8d6:	mov	edx, dword ptr [r15]
0x1d8d9:	lea	eax, [rdx + 1]
		Instruction group(s): [145] 

0x1d8dc:	cmp	eax, esi
0x1d8de:	mov	dword ptr [r15], eax
0x1d8e1:	ja	0x1da00
		Instruction group(s): [7, 1] 

0x1d8e7:	mov	rax, qword ptr [r15 + 0x10]
0x1d8eb:	mov	r13d, edx
0x1d8ee:	test	edx, edx
0x1d8f0:	mov	byte ptr [rax + r13], 0
0x1d8f5:	je	0x1d92b
		Instruction group(s): [7, 1] 

0x1d8f7:	mov	rsi, qword ptr [r15 + 8]
0x1d8fb:	cmp	byte ptr [rsi], 0
0x1d8fe:	jne	0x1daf0
		Instruction group(s): [7, 1] 

0x1d904:	sub	edx, 1
0x1d907:	lea	rax, [rsi + 1]
0x1d90b:	lea	rdx, [rsi + rdx + 1]
0x1d910:	jmp	0x1d926
		Instruction group(s): [7, 1] 

0x1d912:	nop	word ptr [rax + rax]
0x1d918:	add	rax, 1
0x1d91c:	cmp	byte ptr [rax - 1], 0
0x1d920:	jne	0x1daf0
		Instruction group(s): [7, 1] 

0x1d926:	cmp	rdx, rax
0x1d929:	jne	0x1d918
		Instruction group(s): [7, 1] 

0x1d92b:	cmp	r14d, 1
0x1d92f:	jbe	0x1dd60
		Instruction group(s): [7, 1] 

0x1d935:	movzx	eax, byte ptr [rcx]
0x1d938:	cmp	al, 0x28
0x1d93a:	je	0x1de48
		Instruction group(s): [7, 1] 

0x1d940:	cmp	al, 0x2c
0x1d942:	je	0x1dcc0
		Instruction group(s): [7, 1] 

0x1d948:	cmp	al, 0x22
0x1d94a:	je	0x1dcc0
		Instruction group(s): [7, 1] 

0x1d950:	cmp	al, 0x27
0x1d952:	jne	0x1d983
		Instruction group(s): [7, 1] 

0x1d954:	lea	rdi, [rcx + 1]
0x1d958:	movzx	ecx, byte ptr [rdi]
0x1d95b:	test	cl, cl
0x1d95d:	je	0x1d983
		Instruction group(s): [7, 1] 

0x1d95f:	cmp	al, cl
0x1d961:	mov	rdx, rdi
0x1d964:	jne	0x1d978
		Instruction group(s): [7, 1] 

0x1d966:	jmp	0x1db00
		Instruction group(s): [7, 1] 

0x1d96b:	nop	dword ptr [rax + rax]
0x1d970:	cmp	cl, al
0x1d972:	je	0x1db00
		Instruction group(s): [7, 1] 

0x1d978:	add	rdx, 1
0x1d97c:	movzx	ecx, byte ptr [rdx]
0x1d97f:	test	cl, cl
0x1d981:	jne	0x1d970
		Instruction group(s): [7, 1] 

0x1d983:	mov	eax, 0xffffffff
0x1d988:	jmp	0x1d85c
		Instruction group(s): [7, 1] 

0x1d98d:	nop	dword ptr [rax]
0x1d990:	lea	rdi, [rax + 5]
0x1d994:	xor	r14d, r14d
0x1d997:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1d99c:	mov	r15, qword ptr [rip + 0x2183e5]
0x1d9a3:	mov	rcx, rax
0x1d9a6:	mov	esi, dword ptr [r15 + 4]
0x1d9aa:	test	esi, esi
0x1d9ac:	jne	0x1d8d6
		Instruction group(s): [7, 1] 

0x1d9b2:	mov	dword ptr [r15 + 4], 5
0x1d9ba:	mov	edi, 5
0x1d9bf:	mov	qword ptr [rbp - 0x48], rcx
0x1d9c3:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x1d9c8:	mov	r13, qword ptr [rip + 0x2183b9]
0x1d9cf:	mov	qword ptr [r15 + 8], rax
0x1d9d3:	mov	edi, dword ptr [r13 + 4]
0x1d9d7:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x1d9dc:	mov	r15, qword ptr [rip + 0x2183a5]
0x1d9e3:	mov	qword ptr [r13 + 0x10], rax
0x1d9e7:	mov	rcx, qword ptr [rbp - 0x48]
0x1d9eb:	mov	edx, dword ptr [r15]
0x1d9ee:	mov	esi, dword ptr [r15 + 4]
0x1d9f2:	lea	eax, [rdx + 1]
		Instruction group(s): [145] 

0x1d9f5:	cmp	eax, esi
0x1d9f7:	mov	dword ptr [r15], eax
0x1d9fa:	jbe	0x1d8e7
		Instruction group(s): [7, 1] 

0x1da00:	mov	rdi, qword ptr [r15 + 8]
0x1da04:	add	esi, 5
0x1da07:	mov	qword ptr [rbp - 0x50], rcx
0x1da0b:	mov	dword ptr [r15 + 4], esi
0x1da0f:	mov	dword ptr [rbp - 0x48], edx
0x1da12:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x1da17:	mov	r13, qword ptr [rip + 0x21836a]
0x1da1e:	mov	qword ptr [r15 + 8], rax
0x1da22:	mov	esi, dword ptr [r13 + 4]
0x1da26:	mov	rdi, qword ptr [r13 + 0x10]
0x1da2a:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x1da2f:	mov	r15, qword ptr [rip + 0x218352]
0x1da36:	mov	qword ptr [r13 + 0x10], rax
0x1da3a:	mov	rcx, qword ptr [rbp - 0x50]
0x1da3e:	mov	edx, dword ptr [rbp - 0x48]
0x1da41:	jmp	0x1d8e7
		Instruction group(s): [7, 1] 

0x1da46:	nop	word ptr cs:[rax + rax]
0x1da50:	lea	rdi, [rax + 6]
0x1da54:	mov	r14d, 1
0x1da5a:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1da5f:	mov	rcx, rax
0x1da62:	jmp	0x1d8c3
		Instruction group(s): [7, 1] 

0x1da67:	nop	word ptr [rax + rax]
0x1da70:	lea	rdi, [rax + 4]
0x1da74:	mov	r14d, 2
0x1da7a:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1da7f:	mov	rcx, rax
0x1da82:	jmp	0x1d8c3
		Instruction group(s): [7, 1] 

0x1da87:	nop	word ptr [rax + rax]
0x1da90:	lea	rbx, [rip + 0x1047f]
0x1da97:	mov	ecx, 5
0x1da9c:	mov	rdi, rax
0x1da9f:	mov	rsi, rbx
0x1daa2:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x1daa4:	jne	0x1d857
		Instruction group(s): [7, 1] 

0x1daaa:	lea	rdi, [rax + 5]
0x1daae:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1dab3:	cmp	byte ptr [rax], 0
0x1dab6:	jne	0x1dc90
		Instruction group(s): [7, 1] 

0x1dabc:	mov	rbx, qword ptr [rip + 0x2182c5]
0x1dac3:	mov	edx, dword ptr [rbx]
0x1dac5:	test	edx, edx
0x1dac7:	je	0x1df45
		Instruction group(s): [7, 1] 

0x1dacd:	sub	edx, 1
0x1dad0:	mov	dword ptr [rbx], edx
0x1dad2:	jmp	0x1d800
		Instruction group(s): [7, 1] 

0x1dad7:	nop	word ptr [rax + rax]
0x1dae0:	mov	eax, 1
0x1dae5:	jmp	0x1d85c
		Instruction group(s): [7, 1] 

0x1daea:	nop	word ptr [rax + rax]
0x1daf0:	mov	byte ptr [rsi + r13], 1
0x1daf5:	mov	eax, 1
0x1dafa:	jmp	0x1d85c
		Instruction group(s): [7, 1] 

0x1daff:	nop	
0x1db00:	lea	rax, [rdx + 1]
0x1db04:	mov	byte ptr [rdx], 0
0x1db07:	mov	qword ptr [rbp - 0x48], rax
0x1db0b:	call	0xe9f0
		Instruction group(s): [2, 7, 145] 

0x1db10:	mov	rdi, rax
0x1db13:	mov	qword ptr [rbp - 0x50], rax
0x1db17:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1db1c:	lea	edx, [rax + 1]
		Instruction group(s): [145] 

0x1db1f:	mov	rsi, qword ptr [rbp - 0x50]
0x1db23:	lea	rax, [rdx + 0x1e]
0x1db27:	shr	rax, 4
0x1db2b:	shl	rax, 4
0x1db2f:	sub	rsp, rax
0x1db32:	lea	r15, [rsp + 0xf]
0x1db37:	and	r15, 0xfffffffffffffff0
0x1db3b:	mov	rdi, r15
0x1db3e:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x1db43:	mov	rdi, qword ptr [rbp - 0x48]
0x1db47:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1db4c:	movzx	edx, byte ptr [rax]
0x1db4f:	mov	rcx, rax
0x1db52:	cmp	dl, 0x29
0x1db55:	je	0x1de58
		Instruction group(s): [7, 1] 

0x1db5b:	cmp	dl, 0x22
0x1db5e:	je	0x1de58
		Instruction group(s): [7, 1] 

0x1db64:	cmp	dl, 0x27
0x1db67:	jne	0x1d983
		Instruction group(s): [7, 1] 

0x1db6d:	movzx	eax, byte ptr [rcx + 1]
0x1db71:	lea	r8, [rcx + 1]
0x1db75:	mov	rdi, r8
0x1db78:	test	al, al
0x1db7a:	je	0x1db97
		Instruction group(s): [7, 1] 

0x1db7c:	cmp	al, dl
0x1db7e:	jne	0x1db8c
		Instruction group(s): [7, 1] 

0x1db80:	jmp	0x1db97
		Instruction group(s): [7, 1] 

0x1db82:	nop	word ptr [rax + rax]
0x1db88:	test	al, al
0x1db8a:	je	0x1db97
		Instruction group(s): [7, 1] 

0x1db8c:	add	rdi, 1
0x1db90:	movzx	eax, byte ptr [rdi]
0x1db93:	cmp	al, dl
0x1db95:	jne	0x1db88
		Instruction group(s): [7, 1] 

0x1db97:	test	al, al
0x1db99:	mov	qword ptr [rbp - 0x48], r8
0x1db9d:	je	0x1d983
		Instruction group(s): [7, 1] 

0x1dba3:	mov	byte ptr [rdi], 0
0x1dba6:	add	rdi, 1
0x1dbaa:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1dbaf:	cmp	byte ptr [rax], 0
0x1dbb2:	mov	r8, qword ptr [rbp - 0x48]
0x1dbb6:	jne	0x1dd20
		Instruction group(s): [7, 1] 

0x1dbbc:	mov	rdi, r8
0x1dbbf:	call	0xe9f0
		Instruction group(s): [2, 7, 145] 

0x1dbc4:	xor	edx, edx
0x1dbc6:	cmp	rax, r15
0x1dbc9:	je	0x1dbdc
		Instruction group(s): [7, 1] 

0x1dbcb:	movzx	ecx, byte ptr [r15]
0x1dbcf:	mov	edx, 1
0x1dbd4:	cmp	cl, byte ptr [rax]
0x1dbd6:	je	0x1de21
		Instruction group(s): [7, 1] 

0x1dbdc:	mov	rbx, qword ptr [rip + 0x2181a5]
0x1dbe3:	cmp	r14d, 3
0x1dbe7:	sete	al
0x1dbea:	xor	eax, edx
0x1dbec:	mov	rcx, qword ptr [rbx + 8]
0x1dbf0:	mov	byte ptr [rcx + r13], al
0x1dbf4:	mov	edx, dword ptr [rbx]
0x1dbf6:	jmp	0x1d800
		Instruction group(s): [7, 1] 

0x1dbfb:	nop	dword ptr [rax + rax]
0x1dc00:	movzx	ecx, byte ptr [rax + 1]
0x1dc04:	lea	rsi, [rip + 0x218595]
0x1dc0b:	lea	rdx, [rax + 1]
0x1dc0f:	test	byte ptr [rsi + rcx*2], 5
0x1dc13:	jne	0x1dc25
		Instruction group(s): [7, 1] 

0x1dc15:	nop	dword ptr [rax]
0x1dc18:	add	rdx, 1
0x1dc1c:	movzx	ecx, byte ptr [rdx]
0x1dc1f:	test	byte ptr [rsi + rcx*2], 5
0x1dc23:	je	0x1dc18
		Instruction group(s): [7, 1] 

0x1dc25:	sub	rdx, rax
0x1dc28:	cmp	edx, 4
0x1dc2b:	mov	r8, rdx
0x1dc2e:	je	0x1de14
		Instruction group(s): [7, 1] 

0x1dc34:	cmp	edx, 5
0x1dc37:	jne	0x1ddd6
		Instruction group(s): [7, 1] 

0x1dc3d:	lea	rsi, [rip + 0x102d2]
0x1dc44:	mov	ecx, 5
0x1dc49:	mov	rdi, rax
0x1dc4c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x1dc4e:	jne	0x1ddd6
		Instruction group(s): [7, 1] 

0x1dc54:	lea	rsi, [rip + 0xff1d]
0x1dc5b:	mov	edx, 5
0x1dc60:	xor	edi, edi
0x1dc62:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1dc67:	lea	rcx, [rip + 0x102a3]
0x1dc6e:	mov	rdx, rax
0x1dc71:	mov	esi, 4
0x1dc76:	mov	rdi, r12
0x1dc79:	xor	eax, eax
0x1dc7b:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x1dc80:	mov	rbx, qword ptr [rip + 0x218101]
0x1dc87:	mov	edx, dword ptr [rbx]
0x1dc89:	jmp	0x1d800
		Instruction group(s): [7, 1] 

0x1dc8e:	nop	
0x1dc90:	lea	rsi, [rip + 0xfee1]
0x1dc97:	xor	edi, edi
0x1dc99:	mov	edx, 5
0x1dc9e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1dca3:	mov	rcx, rbx
0x1dca6:	mov	rdx, rax
0x1dca9:	mov	esi, 5
0x1dcae:	mov	rdi, r12
0x1dcb1:	xor	eax, eax
0x1dcb3:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x1dcb8:	jmp	0x1dabc
		Instruction group(s): [7, 1] 

0x1dcbd:	nop	dword ptr [rax]
0x1dcc0:	cmp	al, 0x2c
0x1dcc2:	lea	rdi, [rcx + 1]
0x1dcc6:	jne	0x1d958
		Instruction group(s): [7, 1] 

0x1dccc:	movzx	edx, byte ptr [rdi]
0x1dccf:	xor	eax, eax
0x1dcd1:	mov	r15, rdi
0x1dcd4:	test	dl, dl
0x1dcd6:	jne	0x1dd02
		Instruction group(s): [7, 1] 

0x1dcd8:	jmp	0x1d983
		Instruction group(s): [7, 1] 

0x1dcdd:	nop	dword ptr [rax]
0x1dce0:	cmp	dl, 0x29
0x1dce3:	je	0x1dd10
		Instruction group(s): [7, 1] 

0x1dce5:	test	eax, eax
0x1dce7:	jg	0x1dcf2
		Instruction group(s): [7, 1] 

0x1dce9:	cmp	dl, 0x2c
0x1dcec:	je	0x1deb5
		Instruction group(s): [7, 1] 

0x1dcf2:	add	r15, 1
0x1dcf6:	movzx	edx, byte ptr [r15]
0x1dcfa:	test	dl, dl
0x1dcfc:	je	0x1d983
		Instruction group(s): [7, 1] 

0x1dd02:	cmp	dl, 0x28
0x1dd05:	jne	0x1dce0
		Instruction group(s): [7, 1] 

0x1dd07:	add	eax, 1
0x1dd0a:	jmp	0x1dcf2
		Instruction group(s): [7, 1] 

0x1dd0c:	nop	dword ptr [rax]
0x1dd10:	sub	eax, 1
0x1dd13:	jmp	0x1dcf2
		Instruction group(s): [7, 1] 

0x1dd15:	nop	dword ptr [rax]
0x1dd18:	mov	byte ptr [rdx], 2
0x1dd1b:	jmp	0x1d7eb
		Instruction group(s): [7, 1] 

0x1dd20:	lea	rsi, [rip + 0xfe51]
0x1dd27:	mov	edx, 5
0x1dd2c:	xor	edi, edi
0x1dd2e:	mov	qword ptr [rbp - 0x50], r8
0x1dd32:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1dd37:	mov	rdi, rbx
0x1dd3a:	mov	qword ptr [rbp - 0x48], rax
0x1dd3e:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1dd43:	mov	rdx, qword ptr [rbp - 0x48]
0x1dd47:	mov	rsi, rax
0x1dd4a:	mov	rcx, rbx
0x1dd4d:	mov	rdi, r12
0x1dd50:	xor	eax, eax
0x1dd52:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x1dd57:	mov	r8, qword ptr [rbp - 0x50]
0x1dd5b:	jmp	0x1dbbc
		Instruction group(s): [7, 1] 

0x1dd60:	xor	esi, esi
0x1dd62:	mov	rdi, rcx
0x1dd65:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x1dd6a:	mov	rdi, rax
0x1dd6d:	mov	r12, rax
0x1dd70:	call	0x1bb60
		Instruction group(s): [2, 7, 145] 

0x1dd75:	mov	rbx, rax
0x1dd78:	mov	rdi, rax
0x1dd7b:	sub	rbx, r12
0x1dd7e:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1dd83:	cmp	byte ptr [rax], 0
0x1dd86:	jne	0x1d983
		Instruction group(s): [7, 1] 

0x1dd8c:	mov	eax, ebx
0x1dd8e:	mov	esi, ebx
0x1dd90:	mov	rdi, r12
0x1dd93:	mov	byte ptr [r12 + rax], 0
0x1dd98:	call	0x27020
		Instruction group(s): [2, 7, 145] 

0x1dd9d:	test	rax, rax
0x1dda0:	mov	edx, 1
0x1dda5:	je	0x1ddb1
		Instruction group(s): [7, 1] 

0x1dda7:	mov	rax, qword ptr [rax + 8]
0x1ddab:	cmp	byte ptr [rax], 0
0x1ddae:	sete	dl
0x1ddb1:	mov	rbx, qword ptr [rip + 0x217fd0]
0x1ddb8:	and	r14d, 1
0x1ddbc:	mov	rdi, r12
0x1ddbf:	xor	r14d, edx
0x1ddc2:	mov	rax, qword ptr [rbx + 8]
0x1ddc6:	mov	byte ptr [rax + r13], r14b
0x1ddca:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1ddcf:	mov	edx, dword ptr [rbx]
0x1ddd1:	jmp	0x1d800
		Instruction group(s): [7, 1] 

0x1ddd6:	mov	rdx, r12
0x1ddd9:	mov	esi, r8d
0x1dddc:	mov	rdi, rax
0x1dddf:	call	0x1d730
		Instruction group(s): [2, 7, 145] 

0x1dde4:	test	eax, eax
0x1dde6:	js	0x1dc54
		Instruction group(s): [7, 1] 

0x1ddec:	mov	rbx, qword ptr [rip + 0x217f95]
0x1ddf3:	mov	rax, qword ptr [rbx + 8]
0x1ddf7:	add	r14, rax
0x1ddfa:	cmp	byte ptr [r14], 1
0x1ddfe:	jg	0x1de08
		Instruction group(s): [7, 1] 

0x1de00:	movzx	eax, byte ptr [rax + r15]
0x1de05:	mov	byte ptr [r14], al
0x1de08:	mov	eax, dword ptr [rbx]
0x1de0a:	lea	edx, [rax - 1]
		Instruction group(s): [145] 

0x1de0d:	mov	dword ptr [rbx], edx
0x1de0f:	jmp	0x1d800
		Instruction group(s): [7, 1] 

0x1de14:	mov	ecx, 4
0x1de19:	mov	rsi, r13
0x1de1c:	jmp	0x1dc49
		Instruction group(s): [7, 1] 

0x1de21:	xor	edx, edx
0x1de23:	test	cl, cl
0x1de25:	je	0x1dbdc
		Instruction group(s): [7, 1] 

0x1de2b:	lea	rsi, [rax + 1]
0x1de2f:	lea	rdi, [r15 + 1]
0x1de33:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x1de38:	test	eax, eax
0x1de3a:	setne	dl
0x1de3d:	jmp	0x1dbdc
		Instruction group(s): [7, 1] 

0x1de42:	nop	word ptr [rax + rax]
0x1de48:	lea	rdi, [rcx + 1]
0x1de4c:	jmp	0x1dccc
		Instruction group(s): [7, 1] 

0x1de51:	nop	dword ptr [rax]
0x1de58:	cmp	dl, 0x29
0x1de5b:	jne	0x1db6d
		Instruction group(s): [7, 1] 

0x1de61:	nop	dword ptr [rax]
0x1de68:	mov	rdi, rcx
0x1de6b:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1de70:	mov	r8, rax
0x1de73:	movzx	eax, byte ptr [rax]
0x1de76:	test	al, al
0x1de78:	je	0x1d983
		Instruction group(s): [7, 1] 

0x1de7e:	mov	rdi, r8
0x1de81:	xor	edx, edx
0x1de83:	jmp	0x1de9b
		Instruction group(s): [7, 1] 

0x1de85:	nop	dword ptr [rax]
0x1de88:	cmp	al, 0x29
0x1de8a:	je	0x1dea8
		Instruction group(s): [7, 1] 

0x1de8c:	add	rdi, 1
0x1de90:	movzx	eax, byte ptr [rdi]
0x1de93:	test	al, al
0x1de95:	je	0x1d983
		Instruction group(s): [7, 1] 

0x1de9b:	cmp	al, 0x28
0x1de9d:	jne	0x1de88
		Instruction group(s): [7, 1] 

0x1de9f:	add	edx, 1
0x1dea2:	jmp	0x1de8c
		Instruction group(s): [7, 1] 

0x1dea4:	nop	dword ptr [rax]
0x1dea8:	test	edx, edx
0x1deaa:	je	0x1df38
		Instruction group(s): [7, 1] 

0x1deb0:	sub	edx, 1
0x1deb3:	jmp	0x1de8c
		Instruction group(s): [7, 1] 

0x1deb5:	cmp	byte ptr [r15], 0
0x1deb9:	je	0x1d983
		Instruction group(s): [7, 1] 

0x1debf:	lea	rcx, [r15 + 1]
0x1dec3:	mov	qword ptr [rbp - 0x50], rdi
0x1dec7:	mov	qword ptr [rbp - 0x48], rcx
0x1decb:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0x1ded0:	mov	rcx, qword ptr [rbp - 0x48]
0x1ded4:	mov	rdx, qword ptr [rax]
0x1ded7:	mov	rdi, qword ptr [rbp - 0x50]
0x1dedb:	jmp	0x1dee4
		Instruction group(s): [7, 1] 

0x1dedd:	nop	dword ptr [rax]
0x1dee0:	sub	r15, 1
0x1dee4:	movzx	eax, byte ptr [r15 - 1]
0x1dee9:	test	byte ptr [rdx + rax*2], 1
0x1deed:	jne	0x1dee0
		Instruction group(s): [7, 1] 

0x1deef:	mov	byte ptr [r15], 0
0x1def3:	mov	qword ptr [rbp - 0x50], rcx
0x1def7:	call	0xe9f0
		Instruction group(s): [2, 7, 145] 

0x1defc:	mov	rdi, rax
0x1deff:	mov	qword ptr [rbp - 0x48], rax
0x1df03:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1df08:	lea	edx, [rax + 1]
		Instruction group(s): [145] 

0x1df0b:	mov	rsi, qword ptr [rbp - 0x48]
0x1df0f:	lea	rax, [rdx + 0x1e]
0x1df13:	shr	rax, 4
0x1df17:	shl	rax, 4
0x1df1b:	sub	rsp, rax
0x1df1e:	lea	r15, [rsp + 0xf]
0x1df23:	and	r15, 0xfffffffffffffff0
0x1df27:	mov	rdi, r15
0x1df2a:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x1df2f:	mov	rcx, qword ptr [rbp - 0x50]
0x1df33:	jmp	0x1de68
		Instruction group(s): [7, 1] 

0x1df38:	movzx	eax, byte ptr [rdi]
0x1df3b:	jmp	0x1db97
		Instruction group(s): [7, 1] 

0x1df40:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x1df45:	lea	rsi, [rip + 0xffd0]
0x1df4c:	mov	edx, 5
0x1df51:	xor	edi, edi
0x1df53:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1df58:	lea	rcx, [rip + 0xffb7]
0x1df5f:	mov	rdx, rax
0x1df62:	mov	esi, 5
0x1df67:	mov	rdi, r12
0x1df6a:	xor	eax, eax
0x1df6c:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x1df71:	lea	rsi, [rip + 0xfc28]
0x1df78:	mov	edx, 5
0x1df7d:	xor	edi, edi
0x1df7f:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1df84:	xor	esi, esi
0x1df86:	mov	rdx, rax
0x1df89:	mov	rdi, r12
0x1df8c:	xor	eax, eax
0x1df8e:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x1df93:	lea	rsi, [rip + 0xff82]
0x1df9a:	mov	edx, 5
0x1df9f:	xor	edi, edi
0x1dfa1:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1dfa6:	mov	rcx, r13
0x1dfa9:	mov	rdx, rax
0x1dfac:	mov	esi, 4
0x1dfb1:	mov	rdi, r12
0x1dfb4:	xor	eax, eax
0x1dfb6:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x1dfbb:	nop	dword ptr [rax + rax]
0x1dfc0:	push	r12
		Instruction group(s): [145] 

0x1dfc2:	push	rbp
		Instruction group(s): [145] 

0x1dfc3:	mov	r12, rsi
0x1dfc6:	push	rbx
		Instruction group(s): [145] 

0x1dfc7:	mov	rbp, rdx
0x1dfca:	mov	rbx, rdi
0x1dfcd:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0x1dfd2:	mov	rcx, qword ptr [rax]
0x1dfd5:	jmp	0x1dfe3
		Instruction group(s): [7, 1] 

0x1dfd7:	nop	word ptr [rax + rax]
0x1dfe0:	mov	rbx, r8
0x1dfe3:	movzx	eax, byte ptr [rbx]
0x1dfe6:	lea	r8, [rbx + 1]
0x1dfea:	test	byte ptr [rcx + rax*2], 1
0x1dfee:	mov	rdi, rax
0x1dff1:	jne	0x1dfe0
		Instruction group(s): [7, 1] 

0x1dff3:	cmp	al, 0x3f
0x1dff5:	ja	0x1e100
		Instruction group(s): [7, 1] 

0x1dffb:	lea	rcx, [rip + 0x10152]
0x1e002:	movsxd	rax, dword ptr [rcx + rax*4]
		Instruction group(s): [145] 

0x1e006:	add	rax, rcx
0x1e009:	jmp	rax
		Instruction group(s): [145, 1] 

0x1e00b:	cmp	byte ptr [rbx + 3], 0x3d
0x1e00f:	jne	0x1e206
		Instruction group(s): [7, 1] 

0x1e015:	lea	r8, [rbx + 3]
0x1e019:	nop	dword ptr [rax]
0x1e020:	mov	eax, 7
0x1e025:	sub	r8, rbx
0x1e028:	mov	qword ptr [r12], rbx
0x1e02c:	mov	dword ptr [rbp], r8d
0x1e030:	pop	rbx
		Instruction group(s): [145] 

0x1e031:	pop	rbp
		Instruction group(s): [145] 

0x1e032:	pop	r12
		Instruction group(s): [145] 

0x1e034:	ret	
		Instruction group(s): [3, 145] 

0x1e035:	nop	dword ptr [rax]
0x1e038:	sub	r8, rbx
0x1e03b:	mov	qword ptr [r12], rbx
0x1e03f:	mov	eax, 6
0x1e044:	mov	dword ptr [rbp], r8d
0x1e048:	pop	rbx
		Instruction group(s): [145] 

0x1e049:	pop	rbp
		Instruction group(s): [145] 

0x1e04a:	pop	r12
		Instruction group(s): [145] 

0x1e04c:	ret	
		Instruction group(s): [3, 145] 

0x1e04d:	nop	dword ptr [rax]
0x1e050:	movzx	eax, byte ptr [rbx + 1]
0x1e054:	cmp	al, 0x3a
0x1e056:	je	0x1e00b
		Instruction group(s): [7, 1] 

0x1e058:	cmp	al, 0x3d
0x1e05a:	je	0x1e1e0
		Instruction group(s): [7, 1] 

0x1e060:	mov	eax, 4
0x1e065:	jmp	0x1e025
		Instruction group(s): [7, 1] 

0x1e067:	nop	word ptr [rax + rax]
0x1e070:	sub	r8, rbx
0x1e073:	mov	qword ptr [r12], rbx
0x1e077:	mov	eax, 1
0x1e07c:	mov	dword ptr [rbp], r8d
0x1e080:	pop	rbx
		Instruction group(s): [145] 

0x1e081:	pop	rbp
		Instruction group(s): [145] 

0x1e082:	pop	r12
		Instruction group(s): [145] 

0x1e084:	ret	
		Instruction group(s): [3, 145] 

0x1e085:	nop	dword ptr [rax]
0x1e088:	cmp	byte ptr [rbx + 1], 0x3d
0x1e08c:	mov	eax, 2
0x1e091:	je	0x1e1e0
		Instruction group(s): [7, 1] 

0x1e097:	mov	r10d, 1
0x1e09d:	movabs	r9, 0x40000000b
0x1e0a7:	cmp	dil, 0x2b
0x1e0ab:	je	0x1e1c8
		Instruction group(s): [7, 1] 

0x1e0b1:	jle	0x1e110
		Instruction group(s): [7, 1] 

0x1e0b3:	cmp	dil, 0x3d
0x1e0b7:	je	0x1e19c
		Instruction group(s): [7, 1] 

0x1e0bd:	jle	0x1e1f0
		Instruction group(s): [7, 1] 

0x1e0c3:	cmp	dil, 0x3f
0x1e0c7:	je	0x1e1c8
		Instruction group(s): [7, 1] 

0x1e0cd:	cmp	dil, 0x5c
0x1e0d1:	jne	0x1e1b5
		Instruction group(s): [7, 1] 

0x1e0d7:	movzx	edi, byte ptr [r8]
0x1e0db:	lea	rdx, [r8 + 1]
0x1e0df:	lea	ecx, [rdi - 0x3a]
		Instruction group(s): [145] 

0x1e0e2:	cmp	cl, 0x22
0x1e0e5:	ja	0x1e0f6
		Instruction group(s): [7, 1] 

0x1e0e7:	mov	rsi, r10
0x1e0ea:	shl	rsi, cl
0x1e0ed:	test	rsi, r9
0x1e0f0:	jne	0x1e1f8
		Instruction group(s): [7, 1] 

0x1e0f6:	mov	r8, rdx
0x1e0f9:	jmp	0x1e0a7
		Instruction group(s): [7, 1] 

0x1e0fb:	nop	dword ptr [rax + rax]
0x1e100:	mov	eax, 2
0x1e105:	jmp	0x1e097
		Instruction group(s): [7, 1] 

0x1e107:	nop	word ptr [rax + rax]
0x1e110:	cmp	dil, 9
0x1e114:	je	0x1e19c
		Instruction group(s): [7, 1] 

0x1e11a:	jle	0x1e1b0
		Instruction group(s): [7, 1] 

0x1e120:	cmp	dil, 0x20
0x1e124:	je	0x1e19c
		Instruction group(s): [7, 1] 

0x1e126:	cmp	dil, 0x24
0x1e12a:	jne	0x1e1b5
		Instruction group(s): [7, 1] 

0x1e130:	movzx	ecx, byte ptr [r8]
0x1e134:	movzx	edi, byte ptr [r8 + 1]
0x1e139:	lea	rdx, [r8 + 1]
0x1e13d:	add	r8, 2
0x1e141:	cmp	cl, 0x24
0x1e144:	je	0x1e0a7
		Instruction group(s): [7, 1] 

0x1e14a:	cmp	cl, 0x28
0x1e14d:	je	0x1e244
		Instruction group(s): [7, 1] 

0x1e153:	cmp	cl, 0x7b
0x1e156:	mov	eax, 3
0x1e15b:	mov	r11d, 0x7d
0x1e161:	jne	0x1e0a7
		Instruction group(s): [7, 1] 

0x1e167:	test	dil, dil
0x1e16a:	je	0x1e197
		Instruction group(s): [7, 1] 

0x1e16c:	xor	esi, esi
0x1e16e:	jmp	0x1e18d
		Instruction group(s): [7, 1] 

0x1e170:	cmp	dil, r11b
0x1e173:	je	0x1e218
		Instruction group(s): [7, 1] 

0x1e179:	movzx	edi, byte ptr [rdx + 1]
0x1e17d:	lea	rax, [rdx + 1]
0x1e181:	test	dil, dil
0x1e184:	je	0x1e236
		Instruction group(s): [7, 1] 

0x1e18a:	mov	rdx, rax
0x1e18d:	cmp	dil, cl
0x1e190:	jne	0x1e170
		Instruction group(s): [7, 1] 

0x1e192:	add	esi, 1
0x1e195:	jmp	0x1e179
		Instruction group(s): [7, 1] 

0x1e197:	mov	eax, 3
0x1e19c:	sub	r8, 1
0x1e1a0:	mov	qword ptr [r12], rbx
0x1e1a4:	sub	r8, rbx
0x1e1a7:	mov	dword ptr [rbp], r8d
0x1e1ab:	pop	rbx
		Instruction group(s): [145] 

0x1e1ac:	pop	rbp
		Instruction group(s): [145] 

0x1e1ad:	pop	r12
		Instruction group(s): [145] 

0x1e1af:	ret	
		Instruction group(s): [3, 145] 

0x1e1b0:	test	dil, dil
0x1e1b3:	je	0x1e19c
		Instruction group(s): [7, 1] 

0x1e1b5:	movzx	edi, byte ptr [r8]
0x1e1b9:	add	r8, 1
0x1e1bd:	jmp	0x1e0a7
		Instruction group(s): [7, 1] 

0x1e1c2:	nop	word ptr [rax + rax]
0x1e1c8:	movzx	edi, byte ptr [r8]
0x1e1cc:	cmp	dil, 0x3d
0x1e1d0:	je	0x1e19c
		Instruction group(s): [7, 1] 

0x1e1d2:	add	r8, 1
0x1e1d6:	jmp	0x1e0a7
		Instruction group(s): [7, 1] 

0x1e1db:	nop	dword ptr [rax + rax]
0x1e1e0:	lea	r8, [rbx + 2]
0x1e1e4:	mov	eax, 7
0x1e1e9:	jmp	0x1e025
		Instruction group(s): [7, 1] 

0x1e1ee:	nop	
0x1e1f0:	cmp	dil, 0x3a
0x1e1f4:	jne	0x1e1b5
		Instruction group(s): [7, 1] 

0x1e1f6:	jmp	0x1e19c
		Instruction group(s): [7, 1] 

0x1e1f8:	movzx	edi, byte ptr [r8 + 1]
0x1e1fd:	add	r8, 2
0x1e201:	jmp	0x1e0a7
		Instruction group(s): [7, 1] 

0x1e206:	lea	r8, [rbx + 2]
0x1e20a:	mov	eax, 5
0x1e20f:	jmp	0x1e025
		Instruction group(s): [7, 1] 

0x1e214:	nop	dword ptr [rax]
0x1e218:	sub	esi, 1
0x1e21b:	cmp	esi, -1
0x1e21e:	jne	0x1e179
		Instruction group(s): [7, 1] 

0x1e224:	lea	r8, [rdx + 2]
0x1e228:	movzx	edi, byte ptr [rdx + 1]
0x1e22c:	mov	eax, 3
0x1e231:	jmp	0x1e0a7
		Instruction group(s): [7, 1] 

0x1e236:	lea	r8, [rdx + 2]
0x1e23a:	mov	eax, 3
0x1e23f:	jmp	0x1e19c
		Instruction group(s): [7, 1] 

0x1e244:	mov	r11d, 0x29
0x1e24a:	jmp	0x1e167
		Instruction group(s): [7, 1] 

0x1e24f:	nop	
0x1e250:	mov	esi, 0x80
0x1e255:	jmp	0x1d120
		Instruction group(s): [7, 1] 

0x1e25a:	nop	word ptr [rax + rax]
0x1e260:	push	rbp
		Instruction group(s): [145] 

0x1e261:	mov	rbp, rsp
0x1e264:	push	r15
		Instruction group(s): [145] 

0x1e266:	push	r14
		Instruction group(s): [145] 

0x1e268:	push	r13
		Instruction group(s): [145] 

0x1e26a:	push	r12
		Instruction group(s): [145] 

0x1e26c:	push	rbx
		Instruction group(s): [145] 

0x1e26d:	sub	rsp, 0x48
0x1e271:	mov	rbx, qword ptr [rdi]
0x1e274:	mov	qword ptr [rbp - 0x58], rdi
0x1e278:	mov	rcx, qword ptr fs:[0x28]
0x1e281:	mov	qword ptr [rbp - 0x38], rcx
0x1e285:	xor	ecx, ecx
0x1e287:	movzx	eax, byte ptr [rbx]
0x1e28a:	cmp	al, 0x25
0x1e28c:	je	0x1e39a
		Instruction group(s): [7, 1] 

0x1e292:	lea	r10, [rip + 0x217f07]
0x1e299:	movzx	edx, al
0x1e29c:	xor	r15d, r15d
0x1e29f:	mov	dword ptr [rbp - 0x5c], 0
0x1e2a6:	test	byte ptr [r10 + rdx*2], 0x81
0x1e2ab:	je	0x1e38b
		Instruction group(s): [7, 1] 

0x1e2b1:	nop	dword ptr [rax]
0x1e2b8:	test	al, al
0x1e2ba:	je	0x1e448
		Instruction group(s): [7, 1] 

0x1e2c0:	cmp	byte ptr [rbx - 1], 0x5c
0x1e2c4:	jne	0x1e391
		Instruction group(s): [7, 1] 

0x1e2ca:	mov	rax, qword ptr [rbp - 0x58]
0x1e2ce:	mov	r14, qword ptr [rax]
0x1e2d1:	lea	rax, [rbx - 2]
0x1e2d5:	cmp	r14, rax
0x1e2d8:	ja	0x1e430
		Instruction group(s): [7, 1] 

0x1e2de:	cmp	byte ptr [rbx - 2], 0x5c
0x1e2e2:	jne	0x1e430
		Instruction group(s): [7, 1] 

0x1e2e8:	lea	rdx, [r14 - 1]
0x1e2ec:	mov	rax, -3
0x1e2f3:	sub	rdx, rbx
0x1e2f6:	jmp	0x1e30b
		Instruction group(s): [7, 1] 

0x1e2f8:	nop	dword ptr [rax + rax]
0x1e300:	sub	rax, 1
0x1e304:	cmp	byte ptr [rbx + rax + 1], 0x5c
0x1e309:	jne	0x1e313
		Instruction group(s): [7, 1] 

0x1e30b:	cmp	rdx, rax
0x1e30e:	mov	r12d, eax
0x1e311:	jne	0x1e300
		Instruction group(s): [7, 1] 

0x1e313:	add	r12d, 1
0x1e317:	mov	r13d, r12d
0x1e31a:	movsxd	r11, r12d
		Instruction group(s): [145] 

0x1e31d:	shr	r13d, 0x1f
0x1e321:	add	r13d, r12d
0x1e324:	and	r12d, 1
0x1e328:	sar	r13d, 1
0x1e32b:	movsxd	r13, r13d
		Instruction group(s): [145] 

0x1e32e:	mov	r9, r13
0x1e331:	mov	r8, rbx
0x1e334:	sub	r8, r14
0x1e337:	test	r15, r15
0x1e33a:	je	0x1e3c0
		Instruction group(s): [7, 1] 

0x1e340:	movsxd	rdx, dword ptr [rbp - 0x5c]
		Instruction group(s): [145] 

0x1e344:	lea	rdi, [r15 + r8]
0x1e348:	mov	qword ptr [rbp - 0x50], r10
0x1e34c:	mov	qword ptr [rbp - 0x48], r9
0x1e350:	lea	rsi, [rdi + r9]
0x1e354:	add	rdi, r11
0x1e357:	sub	rdx, r8
0x1e35a:	sub	rdx, r13
0x1e35d:	add	rdx, 1
0x1e361:	call	0x8be0
		Instruction group(s): [2, 7, 145] 

0x1e366:	mov	r9, qword ptr [rbp - 0x48]
0x1e36a:	mov	r10, qword ptr [rbp - 0x50]
0x1e36e:	add	rbx, r9
0x1e371:	test	r12d, r12d
0x1e374:	je	0x1e454
		Instruction group(s): [7, 1] 

0x1e37a:	movzx	eax, byte ptr [rbx]
0x1e37d:	movzx	edx, al
0x1e380:	test	byte ptr [r10 + rdx*2], 0x81
0x1e385:	jne	0x1e2b8
		Instruction group(s): [7, 1] 

0x1e38b:	add	rbx, 1
0x1e38f:	jmp	0x1e37a
		Instruction group(s): [7, 1] 

0x1e391:	test	r15, r15
0x1e394:	jne	0x1e44d
		Instruction group(s): [7, 1] 

0x1e39a:	mov	rcx, qword ptr [rbp - 0x38]
0x1e39e:	xor	rcx, qword ptr fs:[0x28]
0x1e3a7:	mov	rax, rbx
0x1e3aa:	jne	0x1e479
		Instruction group(s): [7, 1] 

0x1e3b0:	lea	rsp, [rbp - 0x28]
0x1e3b4:	pop	rbx
		Instruction group(s): [145] 

0x1e3b5:	pop	r12
		Instruction group(s): [145] 

0x1e3b7:	pop	r13
		Instruction group(s): [145] 

0x1e3b9:	pop	r14
		Instruction group(s): [145] 

0x1e3bb:	pop	r15
		Instruction group(s): [145] 

0x1e3bd:	pop	rbp
		Instruction group(s): [145] 

0x1e3be:	ret	
		Instruction group(s): [3, 145] 

0x1e3bf:	nop	
0x1e3c0:	mov	rdi, r14
0x1e3c3:	mov	qword ptr [rbp - 0x70], r10
0x1e3c7:	mov	qword ptr [rbp - 0x68], r8
0x1e3cb:	mov	qword ptr [rbp - 0x50], r11
0x1e3cf:	mov	qword ptr [rbp - 0x48], r9
0x1e3d3:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1e3d8:	lea	edx, [rax + 1]
		Instruction group(s): [145] 

0x1e3db:	mov	dword ptr [rbp - 0x5c], eax
0x1e3de:	mov	rsi, r14
0x1e3e1:	movsxd	rdx, edx
		Instruction group(s): [145] 

0x1e3e4:	lea	rax, [rdx + 0x1e]
0x1e3e8:	and	rax, 0xfffffffffffffff0
0x1e3ec:	sub	rsp, rax
0x1e3ef:	lea	rcx, [rsp + 0xf]
0x1e3f4:	and	rcx, 0xfffffffffffffff0
0x1e3f8:	mov	rdi, rcx
0x1e3fb:	mov	r15, rcx
0x1e3fe:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x1e403:	mov	r8, qword ptr [rbp - 0x68]
0x1e407:	mov	rax, qword ptr [rbp - 0x58]
0x1e40b:	mov	r14, r15
0x1e40e:	mov	r10, qword ptr [rbp - 0x70]
0x1e412:	mov	r11, qword ptr [rbp - 0x50]
0x1e416:	mov	r9, qword ptr [rbp - 0x48]
0x1e41a:	lea	rbx, [r15 + r8]
0x1e41e:	mov	qword ptr [rax], r15
0x1e421:	jmp	0x1e340
		Instruction group(s): [7, 1] 

0x1e426:	nop	word ptr cs:[rax + rax]
0x1e430:	mov	r12d, 1
0x1e436:	mov	r11, -1
0x1e43d:	xor	r9d, r9d
0x1e440:	xor	r13d, r13d
0x1e443:	jmp	0x1e331
		Instruction group(s): [7, 1] 

0x1e448:	test	r15, r15
0x1e44b:	je	0x1e472
		Instruction group(s): [7, 1] 

0x1e44d:	mov	rax, qword ptr [rbp - 0x58]
0x1e451:	mov	r14, qword ptr [rax]
0x1e454:	mov	rdi, r14
0x1e457:	sub	rbx, r15
0x1e45a:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x1e45f:	mov	rcx, qword ptr [rbp - 0x58]
0x1e463:	add	rbx, rax
0x1e466:	mov	qword ptr [rcx], rax
0x1e469:	cmp	byte ptr [rbx], 0
0x1e46c:	jne	0x1e39a
		Instruction group(s): [7, 1] 

0x1e472:	xor	ebx, ebx
0x1e474:	jmp	0x1e39a
		Instruction group(s): [7, 1] 

0x1e479:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x1e47e:	nop	
0x1e480:	push	r15
		Instruction group(s): [145] 

0x1e482:	push	r14
		Instruction group(s): [145] 

0x1e484:	push	r13
		Instruction group(s): [145] 

0x1e486:	push	r12
		Instruction group(s): [145] 

0x1e488:	push	rbp
		Instruction group(s): [145] 

0x1e489:	push	rbx
		Instruction group(s): [145] 

0x1e48a:	sub	rsp, 0x48
0x1e48e:	mov	r10d, dword ptr [rip + 0x217b2b]
0x1e495:	mov	rax, qword ptr [rsp + 0x98]
0x1e49d:	mov	qword ptr [rsp], rdx
0x1e4a1:	mov	dword ptr [rsp + 0x10], r8d
0x1e4a6:	mov	qword ptr [rsp + 0x20], r9
0x1e4ab:	mov	r12d, dword ptr [rsp + 0x90]
0x1e4b3:	mov	qword ptr [rsp + 0x18], rax
0x1e4b8:	mov	rax, qword ptr fs:[0x28]
0x1e4c1:	mov	qword ptr [rsp + 0x38], rax
0x1e4c6:	xor	eax, eax
0x1e4c8:	test	r10d, r10d
0x1e4cb:	jne	0x1ee7e
		Instruction group(s): [7, 1] 

0x1e4d1:	mov	rax, qword ptr [rdi + 8]
0x1e4d5:	mov	r13, rdi
0x1e4d8:	lea	rdi, [rsp + 0x30]
0x1e4dd:	mov	r15, rsi
0x1e4e0:	mov	rbx, rcx
0x1e4e3:	xor	r14d, r14d
0x1e4e6:	mov	qword ptr [rsp + 8], rdi
0x1e4eb:	mov	qword ptr [rsp + 0x30], rax
0x1e4f0:	call	0x1e260
		Instruction group(s): [2, 7, 145] 

0x1e4f5:	mov	r9d, dword ptr [rsp + 0x80]
0x1e4fd:	mov	rbp, rax
0x1e500:	test	r9d, r9d
0x1e503:	jne	0x1e960
		Instruction group(s): [7, 1] 

0x1e509:	test	rbx, rbx
0x1e50c:	je	0x1e948
		Instruction group(s): [7, 1] 

0x1e512:	movzx	edx, byte ptr [rbx]
0x1e515:	mov	rcx, rbx
0x1e518:	test	dl, dl
0x1e51a:	je	0x1e595
		Instruction group(s): [7, 1] 

0x1e51c:	mov	rsi, rbx
0x1e51f:	mov	qword ptr [rsp + 0x10], rbx
0x1e524:	jmp	0x1e545
		Instruction group(s): [7, 1] 

0x1e526:	nop	word ptr cs:[rax + rax]
0x1e530:	mov	byte ptr [rax], dl
0x1e532:	movzx	edx, byte ptr [r12 + 1]
0x1e538:	lea	rsi, [r12 + 1]
0x1e53d:	lea	rcx, [rax + 1]
0x1e541:	test	dl, dl
0x1e543:	je	0x1e590
		Instruction group(s): [7, 1] 

0x1e545:	cmp	dl, 0x5c
0x1e548:	mov	r12, rsi
0x1e54b:	mov	rax, rcx
0x1e54e:	jne	0x1e530
		Instruction group(s): [7, 1] 

0x1e550:	add	r12, 1
0x1e554:	movzx	edx, byte ptr [r12]
0x1e559:	cmp	dl, 0x5c
0x1e55c:	je	0x1e550
		Instruction group(s): [7, 1] 

0x1e55e:	mov	rdi, r12
0x1e561:	sub	rdi, rsi
0x1e564:	cmp	dl, 0x3a
0x1e567:	mov	eax, edi
0x1e569:	jne	0x1e928
		Instruction group(s): [7, 1] 

0x1e56f:	test	dil, 1
0x1e573:	je	0x1e928
		Instruction group(s): [7, 1] 

0x1e579:	cmp	edi, 1
0x1e57c:	jg	0x1eda9
		Instruction group(s): [7, 1] 

0x1e582:	mov	edx, 0x3a
0x1e587:	mov	rax, rcx
0x1e58a:	jmp	0x1e530
		Instruction group(s): [7, 1] 

0x1e58c:	nop	dword ptr [rax]
0x1e590:	mov	rbx, qword ptr [rsp + 0x10]
0x1e595:	mov	byte ptr [rcx], 0
0x1e598:	mov	r8d, dword ptr [rip + 0x21af9d]
0x1e59f:	test	r8d, r8d
0x1e5a2:	je	0x1e6f8
		Instruction group(s): [7, 1] 

0x1e5a8:	mov	esi, 0x24
0x1e5ad:	mov	rdi, rbx
0x1e5b0:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x1e5b5:	test	rax, rax
0x1e5b8:	je	0x1e6f8
		Instruction group(s): [7, 1] 

0x1e5be:	mov	edi, 0x28
0x1e5c3:	call	0x1b8c0
		Instruction group(s): [2, 7, 145] 

0x1e5c8:	mov	qword ptr [rax + 8], rbx
0x1e5cc:	mov	qword ptr [rsp + 0x10], rax
0x1e5d1:	mov	rbx, rax
0x1e5d4:	movzx	eax, byte ptr [rax + 0x21]
0x1e5d8:	mov	byte ptr [rsp + 0x20], al
0x1e5dc:	or	eax, 4
0x1e5df:	test	r15, r15
0x1e5e2:	setne	dl
0x1e5e5:	and	eax, 0xfffffffd
0x1e5e8:	add	edx, edx
0x1e5ea:	or	eax, edx
0x1e5ec:	mov	byte ptr [rbx + 0x21], al
0x1e5ef:	test	rbp, rbp
0x1e5f2:	je	0x1e731
		Instruction group(s): [7, 1] 

0x1e5f8:	test	r15, r15
0x1e5fb:	jne	0x1ee6d
		Instruction group(s): [7, 1] 

0x1e601:	mov	r15, qword ptr [r13]
0x1e605:	mov	rdi, r13
0x1e608:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1e60d:	test	r15, r15
0x1e610:	je	0x1ed78
		Instruction group(s): [7, 1] 

0x1e616:	mov	rax, r15
0x1e619:	mov	edi, 1
0x1e61e:	nop	
0x1e620:	mov	rax, qword ptr [rax]
0x1e623:	add	edi, 1
0x1e626:	test	rax, rax
0x1e629:	jne	0x1e620
		Instruction group(s): [7, 1] 

0x1e62b:	lea	ebx, [rdi*8]
		Instruction group(s): [145] 

0x1e632:	mov	edi, ebx
0x1e634:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x1e639:	mov	edi, ebx
0x1e63b:	mov	r13, rax
0x1e63e:	mov	ebx, 1
0x1e643:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x1e648:	mov	r12, rax
0x1e64b:	mov	rax, qword ptr [rsp + 0x30]
0x1e650:	mov	qword ptr [rsp], r14
0x1e654:	mov	r14, r15
0x1e657:	mov	r15, qword ptr [rsp + 8]
0x1e65c:	mov	qword ptr [r13], rax
0x1e660:	mov	qword ptr [r12], rbp
0x1e664:	nop	dword ptr [rax]
0x1e668:	mov	rax, qword ptr [r14 + 8]
0x1e66c:	mov	rdi, r15
0x1e66f:	mov	qword ptr [rsp + 0x30], rax
0x1e674:	call	0x1e260
		Instruction group(s): [2, 7, 145] 

0x1e679:	test	rax, rax
0x1e67c:	je	0x1edd1
		Instruction group(s): [7, 1] 

0x1e682:	mov	rsi, qword ptr [rsp + 0x30]
0x1e687:	mov	rbp, qword ptr [r14]
0x1e68a:	mov	ecx, ebx
0x1e68c:	mov	rdi, r14
0x1e68f:	add	ebx, 1
0x1e692:	mov	qword ptr [r13 + rcx*8], rsi
0x1e697:	mov	qword ptr [r12 + rcx*8], rax
0x1e69b:	mov	r14, rbp
0x1e69e:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1e6a3:	test	rbp, rbp
0x1e6a6:	jne	0x1e668
		Instruction group(s): [7, 1] 

0x1e6a8:	mov	r14, qword ptr [rsp]
0x1e6ac:	sub	rsp, 8
0x1e6b0:	mov	rsi, r12
0x1e6b3:	mov	rdi, r13
0x1e6b6:	push	1
		Instruction group(s): [145] 

0x1e6b8:	mov	r8, qword ptr [rsp + 0x20]
0x1e6bd:	mov	r9, r14
0x1e6c0:	mov	ecx, dword ptr [rsp + 0x98]
0x1e6c7:	mov	edx, ebx
0x1e6c9:	call	0x255c0
		Instruction group(s): [2, 7, 145] 

0x1e6ce:	pop	rsi
		Instruction group(s): [145] 

0x1e6cf:	pop	rdi
		Instruction group(s): [145] 

0x1e6d0:	mov	rax, qword ptr [rsp + 0x38]
0x1e6d5:	xor	rax, qword ptr fs:[0x28]
0x1e6de:	jne	0x1ee8f
		Instruction group(s): [7, 1] 

0x1e6e4:	add	rsp, 0x48
0x1e6e8:	pop	rbx
		Instruction group(s): [145] 

0x1e6e9:	pop	rbp
		Instruction group(s): [145] 

0x1e6ea:	pop	r12
		Instruction group(s): [145] 

0x1e6ec:	pop	r13
		Instruction group(s): [145] 

0x1e6ee:	pop	r14
		Instruction group(s): [145] 

0x1e6f0:	pop	r15
		Instruction group(s): [145] 

0x1e6f2:	ret	
		Instruction group(s): [3, 145] 

0x1e6f3:	nop	dword ptr [rax + rax]
0x1e6f8:	mov	rdi, rbx
0x1e6fb:	call	0xf9d0
		Instruction group(s): [2, 7, 145] 

0x1e700:	mov	rdi, rbx
0x1e703:	mov	r12, rax
0x1e706:	mov	qword ptr [rsp + 0x10], rax
0x1e70b:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1e710:	test	r15, r15
0x1e713:	jne	0x1e5ef
		Instruction group(s): [7, 1] 

0x1e719:	test	rbp, rbp
0x1e71c:	jne	0x1e5ef
		Instruction group(s): [7, 1] 

0x1e722:	xor	esi, esi
0x1e724:	mov	rdi, r12
0x1e727:	call	0xfa80
		Instruction group(s): [2, 7, 145] 

0x1e72c:	mov	qword ptr [rsp + 0x10], rax
0x1e731:	mov	rdi, r13
0x1e734:	nop	dword ptr [rax]
0x1e738:	mov	rbx, qword ptr [rdi]
0x1e73b:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1e740:	mov	rax, qword ptr [rsp + 0x30]
0x1e745:	lea	rsi, [rip + 0xf7e0]
0x1e74c:	cmp	rax, rsi
0x1e74f:	je	0x1ea30
		Instruction group(s): [7, 1] 

0x1e755:	cmp	byte ptr [rax], 0x2e
0x1e758:	je	0x1eba0
		Instruction group(s): [7, 1] 

0x1e75e:	lea	rsi, [rip + 0xf803]
0x1e765:	cmp	rax, rsi
0x1e768:	je	0x1eb90
		Instruction group(s): [7, 1] 

0x1e76e:	lea	rdx, [rip + 0xf804]
0x1e775:	cmp	rax, rdx
0x1e778:	je	0x1ebfd
		Instruction group(s): [7, 1] 

0x1e77e:	nop	
0x1e780:	test	r15, r15
0x1e783:	je	0x1e79e
		Instruction group(s): [7, 1] 

0x1e785:	mov	rdx, qword ptr [rsp + 0x30]
0x1e78a:	mov	rsi, qword ptr [rsp]
0x1e78e:	mov	rdi, r15
0x1e791:	call	0x13230
		Instruction group(s): [2, 7, 145] 

0x1e796:	test	eax, eax
0x1e798:	je	0x1ec10
		Instruction group(s): [7, 1] 

0x1e79e:	mov	rdi, qword ptr [rsp + 0x10]
0x1e7a3:	xor	ebp, ebp
0x1e7a5:	test	rdi, rdi
0x1e7a8:	je	0x1e7ba
		Instruction group(s): [7, 1] 

0x1e7aa:	test	rbx, rbx
0x1e7ad:	mov	rbp, rdi
0x1e7b0:	je	0x1e7ba
		Instruction group(s): [7, 1] 

0x1e7b2:	call	0x1be20
		Instruction group(s): [2, 7, 145] 

0x1e7b7:	mov	rbp, rax
0x1e7ba:	mov	eax, dword ptr [rsp + 0x88]
0x1e7c1:	mov	rdi, qword ptr [rsp + 0x30]
0x1e7c6:	test	eax, eax
0x1e7c8:	jne	0x1e9e8
		Instruction group(s): [7, 1] 

0x1e7ce:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x1e7d3:	mov	rdi, rax
0x1e7d6:	call	0xf1a0
		Instruction group(s): [2, 7, 145] 

0x1e7db:	cmp	qword ptr [rax + 0x68], 0
0x1e7e0:	mov	r12, rax
0x1e7e3:	jne	0x1edf5
		Instruction group(s): [7, 1] 

0x1e7e9:	test	rbp, rbp
0x1e7ec:	sete	r8b
0x1e7f0:	test	r14, r14
0x1e7f3:	je	0x1ec68
		Instruction group(s): [7, 1] 

0x1e7f9:	mov	rax, qword ptr [rax + 0x20]
0x1e7fd:	cmp	rax, r14
0x1e800:	je	0x1ed10
		Instruction group(s): [7, 1] 

0x1e806:	test	rax, rax
0x1e809:	je	0x1e81a
		Instruction group(s): [7, 1] 

0x1e80b:	test	byte ptr [r12 + 0x85], 8
0x1e814:	jne	0x1ec90
		Instruction group(s): [7, 1] 

0x1e81a:	mov	qword ptr [r12 + 0x20], r14
0x1e81f:	cmp	qword ptr [rip + 0x21ade2], r12
0x1e826:	jne	0x1e831
		Instruction group(s): [7, 1] 

0x1e828:	test	r8b, r8b
0x1e82b:	jne	0x1ed60
		Instruction group(s): [7, 1] 

0x1e831:	or	byte ptr [r12 + 0x85], 8
0x1e83a:	test	r15, r15
0x1e83d:	je	0x1e9d6
		Instruction group(s): [7, 1] 

0x1e843:	lea	rdi, [rip + 0xf183]
0x1e84a:	call	0xe9f0
		Instruction group(s): [2, 7, 145] 

0x1e84f:	mov	r13, rax
0x1e852:	mov	rax, qword ptr [rsp]
0x1e856:	lea	r9, [rip + 0x107ee]
0x1e85d:	mov	rsi, qword ptr [rsp + 0x30]
0x1e862:	mov	rdx, r15
0x1e865:	mov	rdi, r13
0x1e868:	lea	rcx, [r9 - 1]
0x1e86c:	lea	r8, [rax + 1]
0x1e870:	call	0x12ef0
		Instruction group(s): [2, 7, 145] 

0x1e875:	sub	rax, r13
0x1e878:	mov	rdi, r13
0x1e87b:	mov	rsi, rax
0x1e87e:	call	0x26050
		Instruction group(s): [2, 7, 145] 

0x1e883:	test	rbp, rbp
0x1e886:	mov	qword ptr [r12 + 0x28], rax
0x1e88b:	je	0x1e8cb
		Instruction group(s): [7, 1] 

0x1e88d:	test	byte ptr [rbp + 0x21], 4
0x1e891:	je	0x1e9c8
		Instruction group(s): [7, 1] 

0x1e897:	mov	qword ptr [rbp + 0x10], rax
0x1e89b:	mov	rcx, qword ptr [r12 + 0x18]
0x1e8a0:	test	rcx, rcx
0x1e8a3:	je	0x1e8c6
		Instruction group(s): [7, 1] 

0x1e8a5:	test	r14, r14
0x1e8a8:	mov	rdx, rbp
0x1e8ab:	jne	0x1e8bb
		Instruction group(s): [7, 1] 

0x1e8ad:	jmp	0x1e9b3
		Instruction group(s): [7, 1] 

0x1e8b2:	nop	word ptr [rax + rax]
0x1e8b8:	mov	rdx, rax
0x1e8bb:	mov	rax, qword ptr [rdx]
0x1e8be:	test	rax, rax
0x1e8c1:	jne	0x1e8b8
		Instruction group(s): [7, 1] 

0x1e8c3:	mov	qword ptr [rdx], rcx
0x1e8c6:	mov	qword ptr [r12 + 0x18], rbp
0x1e8cb:	mov	rax, qword ptr [r12]
0x1e8cf:	test	rbx, rbx
0x1e8d2:	mov	qword ptr [rsp + 0x30], rax
0x1e8d7:	je	0x1e6d0
		Instruction group(s): [7, 1] 

0x1e8dd:	mov	rax, qword ptr [rbx + 8]
0x1e8e1:	mov	rdi, qword ptr [rsp + 8]
0x1e8e6:	mov	qword ptr [rsp + 0x30], rax
0x1e8eb:	call	0x1e260
		Instruction group(s): [2, 7, 145] 

0x1e8f0:	test	rax, rax
0x1e8f3:	je	0x1e919
		Instruction group(s): [7, 1] 

0x1e8f5:	lea	rsi, [rip + 0xf434]
0x1e8fc:	mov	edx, 5
0x1e901:	xor	edi, edi
0x1e903:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1e908:	mov	rdi, qword ptr [rsp + 0x18]
0x1e90d:	mov	rdx, rax
0x1e910:	xor	esi, esi
0x1e912:	xor	eax, eax
0x1e914:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x1e919:	mov	rdi, rbx
0x1e91c:	jmp	0x1e738
		Instruction group(s): [7, 1] 

0x1e921:	nop	dword ptr [rax]
0x1e928:	movsxd	rbx, eax
		Instruction group(s): [145] 

0x1e92b:	mov	rdi, rcx
0x1e92e:	mov	rdx, rbx
0x1e931:	call	0x8be0
		Instruction group(s): [2, 7, 145] 

0x1e936:	movzx	edx, byte ptr [r12]
0x1e93b:	lea	rax, [rax + rbx]
0x1e93f:	jmp	0x1e530
		Instruction group(s): [7, 1] 

0x1e944:	nop	dword ptr [rax]
0x1e948:	mov	qword ptr [rsp + 0x10], 0
0x1e951:	jmp	0x1e5ef
		Instruction group(s): [7, 1] 

0x1e956:	nop	word ptr cs:[rax + rax]
0x1e960:	mov	edi, 0x30
0x1e965:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x1e96a:	mov	r14, rax
0x1e96d:	mov	rax, qword ptr [rsp + 0x18]
0x1e972:	mov	esi, dword ptr [rsp + 0x80]
0x1e979:	mov	rdi, qword ptr [rsp + 0x20]
0x1e97e:	mov	rax, qword ptr [rax]
0x1e981:	mov	qword ptr [r14], rax
0x1e984:	mov	eax, dword ptr [rsp + 0x10]
0x1e988:	mov	qword ptr [r14 + 8], rax
0x1e98c:	call	0x1bae0
		Instruction group(s): [2, 7, 145] 

0x1e991:	mov	qword ptr [r14 + 0x18], 0
0x1e999:	mov	qword ptr [r14 + 0x10], rax
0x1e99d:	mov	byte ptr [r14 + 0x2a], r12b
0x1e9a1:	jmp	0x1e509
		Instruction group(s): [7, 1] 

0x1e9a6:	nop	word ptr cs:[rax + rax]
0x1e9b0:	mov	rcx, rax
0x1e9b3:	mov	rax, qword ptr [rcx]
0x1e9b6:	test	rax, rax
0x1e9b9:	jne	0x1e9b0
		Instruction group(s): [7, 1] 

0x1e9bb:	mov	qword ptr [rcx], rbp
0x1e9be:	jmp	0x1e8cb
		Instruction group(s): [7, 1] 

0x1e9c3:	nop	dword ptr [rax + rax]
0x1e9c8:	mov	rdi, rbp
0x1e9cb:	mov	rsi, rax
0x1e9ce:	call	0xfa80
		Instruction group(s): [2, 7, 145] 

0x1e9d3:	mov	rbp, rax
0x1e9d6:	test	rbp, rbp
0x1e9d9:	jne	0x1e89b
		Instruction group(s): [7, 1] 

0x1e9df:	jmp	0x1e8cb
		Instruction group(s): [7, 1] 

0x1e9e4:	nop	dword ptr [rax]
0x1e9e8:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x1e9ed:	test	rax, rax
0x1e9f0:	je	0x1ea06
		Instruction group(s): [7, 1] 

0x1e9f2:	test	byte ptr [rax + 0x85], 8
0x1e9f9:	je	0x1ea06
		Instruction group(s): [7, 1] 

0x1e9fb:	cmp	qword ptr [rax + 0x68], 0
0x1ea00:	je	0x1ee2c
		Instruction group(s): [7, 1] 

0x1ea06:	mov	rdi, qword ptr [rsp + 0x30]
0x1ea0b:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x1ea10:	mov	rdi, rax
0x1ea13:	call	0xf1a0
		Instruction group(s): [2, 7, 145] 

0x1ea18:	cmp	qword ptr [rax + 0x68], 0
0x1ea1d:	mov	r12, rax
0x1ea20:	je	0x1ec58
		Instruction group(s): [7, 1] 

0x1ea26:	mov	qword ptr [r12 + 0x20], r14
0x1ea2b:	jmp	0x1e831
		Instruction group(s): [7, 1] 

0x1ea30:	mov	rax, qword ptr [rip + 0x217399]
0x1ea37:	sub	rsp, 8
0x1ea3b:	lea	rdx, [rip + 0xd365]
0x1ea42:	push	0
		Instruction group(s): [145] 

0x1ea44:	lea	rdi, [rip + 0xea8d]
0x1ea4b:	xor	r8d, r8d
0x1ea4e:	xor	ecx, ecx
0x1ea50:	mov	esi, 0xb
0x1ea55:	mov	dword ptr [rip + 0x21aad9], 1
0x1ea5f:	mov	r9, qword ptr [rax + 8]
0x1ea63:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x1ea68:	mov	rax, qword ptr [rip + 0x217361]
0x1ea6f:	lea	rdx, [rip + 0xf4bd]
0x1ea76:	lea	rdi, [rip + 0xb589]
0x1ea7d:	xor	r8d, r8d
0x1ea80:	xor	ecx, ecx
0x1ea82:	mov	esi, 7
0x1ea87:	mov	qword ptr [rsp], 0
0x1ea8f:	mov	r9, qword ptr [rax + 8]
0x1ea93:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x1ea98:	mov	rax, qword ptr [rip + 0x217331]
0x1ea9f:	lea	rdx, [rip + 0xf491]
0x1eaa6:	lea	rdi, [rip + 0xb5e7]
0x1eaad:	xor	r8d, r8d
0x1eab0:	xor	ecx, ecx
0x1eab2:	mov	esi, 2
0x1eab7:	mov	qword ptr [rsp], 0
0x1eabf:	mov	r9, qword ptr [rax + 8]
0x1eac3:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x1eac8:	mov	rax, qword ptr [rip + 0x217301]
0x1eacf:	lea	rdx, [rip + 0xf465]
0x1ead6:	lea	rdi, [rip + 0xf461]
0x1eadd:	xor	r8d, r8d
0x1eae0:	xor	ecx, ecx
0x1eae2:	mov	esi, 6
0x1eae7:	mov	qword ptr [rsp], 0
0x1eaef:	mov	r9, qword ptr [rax + 8]
0x1eaf3:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x1eaf8:	mov	rax, qword ptr [rip + 0x2172d1]
0x1eaff:	lea	rdx, [rip + 0xf43f]
0x1eb06:	lea	rdi, [rip + 0xb53a]
0x1eb0d:	xor	r8d, r8d
0x1eb10:	xor	ecx, ecx
0x1eb12:	mov	esi, 2
0x1eb17:	mov	qword ptr [rsp], 0
0x1eb1f:	mov	r9, qword ptr [rax + 8]
0x1eb23:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x1eb28:	mov	rax, qword ptr [rip + 0x2172a1]
0x1eb2f:	lea	rdx, [rip + 0xf416]
0x1eb36:	lea	rdi, [rip + 0xf414]
0x1eb3d:	xor	r8d, r8d
0x1eb40:	xor	ecx, ecx
0x1eb42:	mov	esi, 6
0x1eb47:	mov	qword ptr [rsp], 0
0x1eb4f:	mov	r9, qword ptr [rax + 8]
0x1eb53:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x1eb58:	mov	rax, qword ptr [rip + 0x217271]
0x1eb5f:	lea	rdx, [rip + 0xf3f2]
0x1eb66:	lea	rdi, [rip + 0xf3ee]
0x1eb6d:	xor	ecx, ecx
0x1eb6f:	xor	r8d, r8d
0x1eb72:	mov	esi, 0xc
0x1eb77:	mov	qword ptr [rsp], 0
0x1eb7f:	mov	r9, qword ptr [rax + 8]
0x1eb83:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x1eb88:	pop	rdx
		Instruction group(s): [145] 

0x1eb89:	pop	rcx
		Instruction group(s): [145] 

0x1eb8a:	jmp	0x1e780
		Instruction group(s): [7, 1] 

0x1eb8f:	nop	
0x1eb90:	mov	dword ptr [rip + 0x21a9a2], 1
0x1eb9a:	jmp	0x1e780
		Instruction group(s): [7, 1] 

0x1eb9f:	nop	
0x1eba0:	lea	rdx, [rax + 1]
0x1eba4:	lea	rdi, [rip + 0xf382]
0x1ebab:	mov	ecx, 6
0x1ebb0:	mov	rsi, rdx
0x1ebb3:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x1ebb5:	je	0x1ea30
		Instruction group(s): [7, 1] 

0x1ebbb:	lea	rsi, [rip + 0xf3a6]
0x1ebc2:	cmp	rax, rsi
0x1ebc5:	je	0x1eb90
		Instruction group(s): [7, 1] 

0x1ebc7:	lea	rdi, [rip + 0xf39b]
0x1ebce:	mov	ecx, 0x10
0x1ebd3:	mov	rsi, rdx
0x1ebd6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x1ebd8:	je	0x1eb90
		Instruction group(s): [7, 1] 

0x1ebda:	lea	rsi, [rip + 0xf398]
0x1ebe1:	cmp	rax, rsi
0x1ebe4:	je	0x1ebfd
		Instruction group(s): [7, 1] 

0x1ebe6:	lea	rdi, [rip + 0xf38d]
0x1ebed:	mov	ecx, 9
0x1ebf2:	mov	rsi, rdx
0x1ebf5:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x1ebf7:	jne	0x1e780
		Instruction group(s): [7, 1] 

0x1ebfd:	mov	dword ptr [rip + 0x21a965], 1
0x1ec07:	jmp	0x1e780
		Instruction group(s): [7, 1] 

0x1ec0c:	nop	dword ptr [rax]
0x1ec10:	lea	rsi, [rip + 0xf021]
0x1ec17:	mov	edx, 5
0x1ec1c:	xor	edi, edi
0x1ec1e:	mov	rbp, qword ptr [rsp + 0x30]
0x1ec23:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1ec28:	mov	rdi, qword ptr [rsp + 0x30]
0x1ec2d:	mov	r13, rax
0x1ec30:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1ec35:	mov	rdi, qword ptr [rsp + 0x18]
0x1ec3a:	mov	rcx, rbp
0x1ec3d:	mov	rsi, rax
0x1ec40:	mov	rdx, r13
0x1ec43:	xor	eax, eax
0x1ec45:	xor	ebp, ebp
0x1ec47:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x1ec4c:	jmp	0x1e7ba
		Instruction group(s): [7, 1] 

0x1ec51:	nop	dword ptr [rax]
0x1ec58:	mov	qword ptr [r12 + 0x68], rax
0x1ec5d:	jmp	0x1ea26
		Instruction group(s): [7, 1] 

0x1ec62:	nop	word ptr [rax + rax]
0x1ec68:	cmp	rax, qword ptr [rip + 0x21a8e9]
0x1ec6f:	jne	0x1e81f
		Instruction group(s): [7, 1] 

0x1ec75:	test	rbp, rbp
0x1ec78:	jne	0x1e81f
		Instruction group(s): [7, 1] 

0x1ec7e:	mov	qword ptr [r12 + 0x20], 0
0x1ec87:	jmp	0x1e81f
		Instruction group(s): [7, 1] 

0x1ec8c:	nop	dword ptr [rax]
0x1ec90:	mov	rcx, qword ptr [r12]
0x1ec94:	mov	byte ptr [rsp + 0x2f], r8b
0x1ec99:	mov	rdi, rcx
0x1ec9c:	mov	qword ptr [rsp + 0x20], rcx
0x1eca1:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1eca6:	lea	rsi, [rip + 0xf023]
0x1ecad:	mov	edx, 5
0x1ecb2:	xor	edi, edi
0x1ecb4:	mov	r13, rax
0x1ecb7:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1ecbc:	mov	rcx, qword ptr [rsp + 0x20]
0x1ecc1:	mov	rdx, rax
0x1ecc4:	mov	rsi, r13
0x1ecc7:	mov	rdi, r14
0x1ecca:	xor	eax, eax
0x1eccc:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x1ecd1:	mov	rcx, qword ptr [r12]
0x1ecd5:	lea	rsi, [rip + 0xf024]
0x1ecdc:	mov	edx, 5
0x1ece1:	xor	edi, edi
0x1ece3:	mov	qword ptr [rsp + 0x20], rcx
0x1ece8:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1eced:	mov	rdi, qword ptr [r12 + 0x20]
0x1ecf2:	mov	rcx, qword ptr [rsp + 0x20]
0x1ecf7:	mov	rdx, rax
0x1ecfa:	mov	rsi, r13
0x1ecfd:	xor	eax, eax
0x1ecff:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x1ed04:	movzx	r8d, byte ptr [rsp + 0x2f]
0x1ed0a:	jmp	0x1e81a
		Instruction group(s): [7, 1] 

0x1ed0f:	nop	
0x1ed10:	mov	rcx, qword ptr [r12]
0x1ed14:	lea	rsi, [rip + 0xef7d]
0x1ed1b:	mov	edx, 5
0x1ed20:	xor	edi, edi
0x1ed22:	mov	byte ptr [rsp + 0x2f], r8b
0x1ed27:	mov	qword ptr [rsp + 0x20], rcx
0x1ed2c:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1ed31:	mov	rdi, qword ptr [r12]
0x1ed35:	mov	r13, rax
0x1ed38:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1ed3d:	mov	rcx, qword ptr [rsp + 0x20]
0x1ed42:	mov	rdi, qword ptr [rsp + 0x18]
0x1ed47:	mov	rsi, rax
0x1ed4a:	mov	rdx, r13
0x1ed4d:	xor	eax, eax
0x1ed4f:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x1ed54:	movzx	r8d, byte ptr [rsp + 0x2f]
0x1ed5a:	jmp	0x1e81a
		Instruction group(s): [7, 1] 

0x1ed5f:	nop	
0x1ed60:	mov	rdi, qword ptr [r12 + 0x18]
0x1ed65:	call	0x1bee0
		Instruction group(s): [2, 7, 145] 

0x1ed6a:	mov	qword ptr [r12 + 0x18], 0
0x1ed73:	jmp	0x1e831
		Instruction group(s): [7, 1] 

0x1ed78:	mov	edi, 8
0x1ed7d:	mov	ebx, 1
0x1ed82:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x1ed87:	mov	edi, 8
0x1ed8c:	mov	r13, rax
0x1ed8f:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x1ed94:	mov	r12, rax
0x1ed97:	mov	rax, qword ptr [rsp + 0x30]
0x1ed9c:	mov	qword ptr [r13], rax
0x1eda0:	mov	qword ptr [r12], rbp
0x1eda4:	jmp	0x1e6ac
		Instruction group(s): [7, 1] 

0x1eda9:	sar	edi, 1
0x1edab:	movsxd	r8, edi
		Instruction group(s): [145] 

0x1edae:	mov	rdi, rcx
0x1edb1:	mov	rdx, r8
0x1edb4:	mov	qword ptr [rsp + 0x20], r8
0x1edb9:	call	0x8be0
		Instruction group(s): [2, 7, 145] 

0x1edbe:	mov	r8, qword ptr [rsp + 0x20]
0x1edc3:	movzx	edx, byte ptr [r12]
0x1edc8:	lea	rax, [rax + r8]
0x1edcc:	jmp	0x1e530
		Instruction group(s): [7, 1] 

0x1edd1:	lea	rsi, [rip + 0xee40]
0x1edd8:	mov	edx, 5
0x1eddd:	xor	edi, edi
0x1eddf:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1ede4:	mov	rdi, qword ptr [rsp + 0x18]
0x1ede9:	mov	rdx, rax
0x1edec:	xor	esi, esi
0x1edee:	xor	eax, eax
0x1edf0:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x1edf5:	lea	rsi, [rip + 0xee6c]
0x1edfc:	mov	edx, 5
0x1ee01:	xor	edi, edi
0x1ee03:	mov	rbp, qword ptr [rax]
0x1ee06:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1ee0b:	mov	rdi, qword ptr [r12]
0x1ee0f:	mov	rbx, rax
0x1ee12:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1ee17:	mov	rdi, qword ptr [rsp + 0x18]
0x1ee1c:	mov	rsi, rax
0x1ee1f:	mov	rcx, rbp
0x1ee22:	mov	rdx, rbx
0x1ee25:	xor	eax, eax
0x1ee27:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x1ee2c:	lea	rsi, [rip + 0xee35]
0x1ee33:	mov	rbp, rax
0x1ee36:	mov	edx, 5
0x1ee3b:	xor	edi, edi
0x1ee3d:	mov	rbx, qword ptr [rax]
0x1ee40:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1ee45:	mov	rdi, qword ptr [rbp]
0x1ee49:	mov	rdx, rax
0x1ee4c:	or	rcx, 0xffffffffffffffff
0x1ee50:	xor	eax, eax
0x1ee52:	repne scasb	al, byte ptr [rdi]
0x1ee54:	mov	rdi, qword ptr [rsp + 0x18]
0x1ee59:	mov	rax, rcx
0x1ee5c:	mov	rcx, rbx
0x1ee5f:	not	rax
0x1ee62:	lea	rsi, [rax - 1]
0x1ee66:	xor	eax, eax
0x1ee68:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x1ee6d:	mov	edx, 5
0x1ee72:	lea	rsi, [rip + 0xed77]
0x1ee79:	jmp	0x1eddd
		Instruction group(s): [7, 1] 

0x1ee7e:	mov	edx, 5
0x1ee83:	lea	rsi, [rip + 0xed36]
0x1ee8a:	jmp	0x1eddd
		Instruction group(s): [7, 1] 

0x1ee8f:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x1ee94:	nop	
0x1ee96:	nop	word ptr cs:[rax + rax]
0x1eea0:	push	r12
		Instruction group(s): [145] 

0x1eea2:	push	rbp
		Instruction group(s): [145] 

0x1eea3:	push	rbx
		Instruction group(s): [145] 

0x1eea4:	mov	rbx, rdi
0x1eea7:	sub	rsp, 0x10
0x1eeab:	movzx	eax, byte ptr [rdi + 1]
0x1eeaf:	cmp	al, 0x2f
0x1eeb1:	je	0x1ef50
		Instruction group(s): [7, 1] 

0x1eeb7:	test	al, al
0x1eeb9:	je	0x1ef50
		Instruction group(s): [7, 1] 

0x1eebf:	add	rbx, 1
0x1eec3:	mov	esi, 0x2f
0x1eec8:	mov	rdi, rbx
0x1eecb:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x1eed0:	test	rax, rax
0x1eed3:	mov	rbp, rax
0x1eed6:	je	0x1ef18
		Instruction group(s): [7, 1] 

0x1eed8:	mov	byte ptr [rax], 0
0x1eedb:	mov	rdi, rbx
0x1eede:	call	0x8a00
		Instruction group(s): [2, 7, 145] 

0x1eee3:	test	rax, rax
0x1eee6:	je	0x1ef40
		Instruction group(s): [7, 1] 

0x1eee8:	mov	rsi, qword ptr [rax + 0x20]
0x1eeec:	lea	rcx, [rbp + 1]
0x1eef0:	lea	rdx, [rip + 0xc250]
0x1eef7:	mov	edi, 3
0x1eefc:	xor	eax, eax
0x1eefe:	call	0x1b950
		Instruction group(s): [2, 7, 145] 

0x1ef03:	add	rsp, 0x10
0x1ef07:	mov	rdi, rax
0x1ef0a:	pop	rbx
		Instruction group(s): [145] 

0x1ef0b:	pop	rbp
		Instruction group(s): [145] 

0x1ef0c:	pop	r12
		Instruction group(s): [145] 

0x1ef0e:	jmp	0x1bac0
		Instruction group(s): [7, 1] 

0x1ef13:	nop	dword ptr [rax + rax]
0x1ef18:	mov	rdi, rbx
0x1ef1b:	call	0x8a00
		Instruction group(s): [2, 7, 145] 

0x1ef20:	test	rax, rax
0x1ef23:	je	0x1ef44
		Instruction group(s): [7, 1] 

0x1ef25:	mov	rdi, qword ptr [rax + 0x20]
0x1ef29:	add	rsp, 0x10
0x1ef2d:	pop	rbx
		Instruction group(s): [145] 

0x1ef2e:	pop	rbp
		Instruction group(s): [145] 

0x1ef2f:	pop	r12
		Instruction group(s): [145] 

0x1ef31:	jmp	0x1bac0
		Instruction group(s): [7, 1] 

0x1ef36:	nop	word ptr cs:[rax + rax]
0x1ef40:	mov	byte ptr [rbp], 0x2f
0x1ef44:	add	rsp, 0x10
0x1ef48:	xor	eax, eax
0x1ef4a:	pop	rbx
		Instruction group(s): [145] 

0x1ef4b:	pop	rbp
		Instruction group(s): [145] 

0x1ef4c:	pop	r12
		Instruction group(s): [145] 

0x1ef4e:	ret	
		Instruction group(s): [3, 145] 

0x1ef4f:	nop	
0x1ef50:	mov	r12d, dword ptr [rip + 0x21a619]
0x1ef57:	lea	rdi, [rip + 0xf025]
0x1ef5e:	xor	esi, esi
0x1ef60:	mov	dword ptr [rip + 0x21a606], 0
0x1ef6a:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x1ef6f:	mov	dword ptr [rip + 0x21a5fa], r12d
0x1ef76:	cmp	byte ptr [rax], 0
0x1ef79:	mov	rbp, rax
0x1ef7c:	je	0x1efb8
		Instruction group(s): [7, 1] 

0x1ef7e:	lea	rdx, [rbx + 1]
0x1ef82:	mov	rsi, rax
0x1ef85:	mov	edi, 2
0x1ef8a:	xor	eax, eax
0x1ef8c:	call	0x1b950
		Instruction group(s): [2, 7, 145] 

0x1ef91:	mov	rdi, rax
0x1ef94:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0x1ef99:	mov	rdi, rbp
0x1ef9c:	mov	qword ptr [rsp + 8], rax
0x1efa1:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1efa6:	mov	rax, qword ptr [rsp + 8]
0x1efab:	add	rsp, 0x10
0x1efaf:	pop	rbx
		Instruction group(s): [145] 

0x1efb0:	pop	rbp
		Instruction group(s): [145] 

0x1efb1:	pop	r12
		Instruction group(s): [145] 

0x1efb3:	ret	
		Instruction group(s): [3, 145] 

0x1efb4:	nop	dword ptr [rax]
0x1efb8:	mov	rdi, rax
0x1efbb:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1efc0:	lea	rdi, [rip + 0xefc4]
0x1efc7:	call	0x8610
		Instruction group(s): [2, 7, 145] 

0x1efcc:	test	rax, rax
0x1efcf:	jne	0x1f018
		Instruction group(s): [7, 1] 

0x1efd1:	call	0x8b00
		Instruction group(s): [2, 7, 145] 

0x1efd6:	test	rax, rax
0x1efd9:	je	0x1ef44
		Instruction group(s): [7, 1] 

0x1efdf:	mov	rdi, rax
0x1efe2:	call	0x8a00
		Instruction group(s): [2, 7, 145] 

0x1efe7:	test	rax, rax
0x1efea:	je	0x1ef44
		Instruction group(s): [7, 1] 

0x1eff0:	mov	rsi, qword ptr [rax + 0x20]
0x1eff4:	lea	rdx, [rbx + 1]
0x1eff8:	test	rsi, rsi
0x1effb:	je	0x1ef44
		Instruction group(s): [7, 1] 

0x1f001:	mov	edi, 2
0x1f006:	xor	eax, eax
0x1f008:	call	0x1b950
		Instruction group(s): [2, 7, 145] 

0x1f00d:	jmp	0x1ef03
		Instruction group(s): [7, 1] 

0x1f012:	nop	word ptr [rax + rax]
0x1f018:	cmp	byte ptr [rax], 0
0x1f01b:	je	0x1efd1
		Instruction group(s): [7, 1] 

0x1f01d:	lea	rdx, [rbx + 1]
0x1f021:	mov	rsi, rax
0x1f024:	jmp	0x1f001
		Instruction group(s): [7, 1] 

0x1f026:	nop	word ptr cs:[rax + rax]
0x1f030:	push	r15
		Instruction group(s): [145] 

0x1f032:	push	r14
		Instruction group(s): [145] 

0x1f034:	push	r13
		Instruction group(s): [145] 

0x1f036:	push	r12
		Instruction group(s): [145] 

0x1f038:	push	rbp
		Instruction group(s): [145] 

0x1f039:	push	rbx
		Instruction group(s): [145] 

0x1f03a:	sub	rsp, 0xb8
0x1f041:	mov	rax, qword ptr fs:[0x28]
0x1f04a:	mov	qword ptr [rsp + 0xa8], rax
0x1f052:	xor	eax, eax
0x1f054:	test	rdi, rdi
0x1f057:	je	0x1f2f5
		Instruction group(s): [7, 1] 

0x1f05d:	cmp	qword ptr [rdi], 0
0x1f061:	mov	r12, rdi
0x1f064:	je	0x1f314
		Instruction group(s): [7, 1] 

0x1f06a:	mov	rax, rdi
0x1f06d:	mov	edx, 5
0x1f072:	nop	word ptr [rax + rax]
0x1f078:	add	rax, 8
0x1f07c:	add	edx, 1
0x1f07f:	cmp	qword ptr [rax], 0
0x1f083:	jne	0x1f078
		Instruction group(s): [7, 1] 

0x1f085:	lea	edi, [rdx*8]
		Instruction group(s): [145] 

0x1f08c:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x1f091:	mov	rbp, qword ptr [r12]
0x1f095:	xor	r14d, r14d
0x1f098:	mov	r15, rax
0x1f09b:	mov	dword ptr [rip + 0x219a6b], 0
0x1f0a5:	lea	rbx, [rsp + 0x10]
0x1f0aa:	test	rbp, rbp
0x1f0ad:	je	0x1f117
		Instruction group(s): [7, 1] 

0x1f0af:	nop	
0x1f0b0:	add	r12, 8
0x1f0b4:	xor	r13d, r13d
0x1f0b7:	cmp	byte ptr [rbp], 0x7e
0x1f0bb:	jne	0x1f0d2
		Instruction group(s): [7, 1] 

0x1f0bd:	jmp	0x1f1f8
		Instruction group(s): [7, 1] 

0x1f0c2:	nop	word ptr [rax + rax]
0x1f0c8:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x1f0cd:	cmp	dword ptr [rax], 4
0x1f0d0:	jne	0x1f0ff
		Instruction group(s): [7, 1] 

0x1f0d2:	mov	rdx, rbx
0x1f0d5:	mov	rsi, rbp
0x1f0d8:	mov	edi, 1
0x1f0dd:	call	0x8a90
		Instruction group(s): [2, 7, 145] 

0x1f0e2:	cmp	eax, -1
0x1f0e5:	je	0x1f0c8
		Instruction group(s): [7, 1] 

0x1f0e7:	test	eax, eax
0x1f0e9:	jne	0x1f0ff
		Instruction group(s): [7, 1] 

0x1f0eb:	mov	eax, dword ptr [rsp + 0x28]
0x1f0ef:	and	eax, 0xf000
0x1f0f4:	cmp	eax, 0x4000
0x1f0f9:	je	0x1f280
		Instruction group(s): [7, 1] 

0x1f0ff:	mov	rdi, r13
0x1f102:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1f107:	mov	rbp, qword ptr [r12]
0x1f10b:	test	rbp, rbp
0x1f10e:	jne	0x1f0b0
		Instruction group(s): [7, 1] 

0x1f110:	mov	eax, r14d
0x1f113:	lea	rax, [r15 + rax*8]
0x1f117:	mov	rsi, qword ptr [rip + 0x216c42]
0x1f11e:	lea	rbp, [rip + 0x216c3b]
0x1f125:	lea	rbx, [rsp + 0x10]
0x1f12a:	test	rsi, rsi
0x1f12d:	jne	0x1f146
		Instruction group(s): [7, 1] 

0x1f12f:	jmp	0x1f181
		Instruction group(s): [7, 1] 

0x1f131:	nop	dword ptr [rax]
0x1f138:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x1f13d:	cmp	dword ptr [rax], 4
0x1f140:	jne	0x1f170
		Instruction group(s): [7, 1] 

0x1f142:	mov	rsi, qword ptr [rbp]
0x1f146:	mov	rdx, rbx
0x1f149:	mov	edi, 1
0x1f14e:	call	0x8a90
		Instruction group(s): [2, 7, 145] 

0x1f153:	cmp	eax, -1
0x1f156:	je	0x1f138
		Instruction group(s): [7, 1] 

0x1f158:	test	eax, eax
0x1f15a:	jne	0x1f170
		Instruction group(s): [7, 1] 

0x1f15c:	mov	eax, dword ptr [rsp + 0x28]
0x1f160:	and	eax, 0xf000
0x1f165:	cmp	eax, 0x4000
0x1f16a:	je	0x1f210
		Instruction group(s): [7, 1] 

0x1f170:	add	rbp, 8
0x1f174:	mov	rsi, qword ptr [rbp]
0x1f178:	test	rsi, rsi
0x1f17b:	jne	0x1f146
		Instruction group(s): [7, 1] 

0x1f17d:	lea	rax, [r15 + r14*8]
0x1f181:	mov	qword ptr [rax], 0
0x1f188:	mov	rdx, qword ptr [r15]
0x1f18b:	test	rdx, rdx
0x1f18e:	je	0x1f1c1
		Instruction group(s): [7, 1] 

0x1f190:	lea	rbp, [rip + 0xedf9]
0x1f197:	mov	rbx, r15
0x1f19a:	nop	word ptr [rax + rax]
0x1f1a0:	xor	r9d, r9d
0x1f1a3:	xor	ecx, ecx
0x1f1a5:	xor	edi, edi
0x1f1a7:	add	rbx, 8
0x1f1ab:	mov	r8d, 3
0x1f1b1:	mov	rsi, rbp
0x1f1b4:	call	0x27e20
		Instruction group(s): [2, 7, 145] 

0x1f1b9:	mov	rdx, qword ptr [rbx]
0x1f1bc:	test	rdx, rdx
0x1f1bf:	jne	0x1f1a0
		Instruction group(s): [7, 1] 

0x1f1c1:	mov	rax, qword ptr [rsp + 0xa8]
0x1f1c9:	xor	rax, qword ptr fs:[0x28]
0x1f1d2:	mov	qword ptr [rip + 0x21993f], r15
0x1f1d9:	jne	0x1f329
		Instruction group(s): [7, 1] 

0x1f1df:	add	rsp, 0xb8
0x1f1e6:	pop	rbx
		Instruction group(s): [145] 

0x1f1e7:	pop	rbp
		Instruction group(s): [145] 

0x1f1e8:	pop	r12
		Instruction group(s): [145] 

0x1f1ea:	pop	r13
		Instruction group(s): [145] 

0x1f1ec:	pop	r14
		Instruction group(s): [145] 

0x1f1ee:	pop	r15
		Instruction group(s): [145] 

0x1f1f0:	ret	
		Instruction group(s): [3, 145] 

0x1f1f1:	nop	dword ptr [rax]
0x1f1f8:	mov	rdi, rbp
0x1f1fb:	call	0x1eea0
		Instruction group(s): [2, 7, 145] 

0x1f200:	test	rax, rax
0x1f203:	mov	r13, rax
0x1f206:	cmovne	rbp, rax
		Instruction group(s): [137] 

0x1f20a:	jmp	0x1f0d2
		Instruction group(s): [7, 1] 

0x1f20f:	nop	
0x1f210:	mov	r13, qword ptr [rbp]
0x1f214:	mov	rdi, r13
0x1f217:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1f21c:	cmp	eax, 1
0x1f21f:	jbe	0x1f31e
		Instruction group(s): [7, 1] 

0x1f225:	lea	edx, [rax - 1]
		Instruction group(s): [145] 

0x1f228:	cmp	byte ptr [r13 + rdx], 0x2f
0x1f22e:	mov	rsi, rdx
0x1f231:	jne	0x1f31e
		Instruction group(s): [7, 1] 

0x1f237:	sub	eax, 2
0x1f23a:	add	rax, r13
0x1f23d:	jmp	0x1f251
		Instruction group(s): [7, 1] 

0x1f23f:	nop	
0x1f240:	movzx	edx, byte ptr [rax]
0x1f243:	sub	rax, 1
0x1f247:	lea	ecx, [rsi - 1]
		Instruction group(s): [145] 

0x1f24a:	cmp	dl, 0x2f
0x1f24d:	jne	0x1f256
		Instruction group(s): [7, 1] 

0x1f24f:	mov	esi, ecx
0x1f251:	cmp	esi, 1
0x1f254:	jne	0x1f240
		Instruction group(s): [7, 1] 

0x1f256:	cmp	dword ptr [rip + 0x2198b4], esi
0x1f25c:	jae	0x1f264
		Instruction group(s): [7, 1] 

0x1f25e:	mov	dword ptr [rip + 0x2198ac], esi
0x1f264:	lea	r12d, [r14 + 1]
		Instruction group(s): [145] 

0x1f268:	lea	r14, [r15 + r14*8]
0x1f26c:	mov	rdi, r13
0x1f26f:	call	0x26050
		Instruction group(s): [2, 7, 145] 

0x1f274:	mov	qword ptr [r14], rax
0x1f277:	mov	r14d, r12d
0x1f27a:	jmp	0x1f170
		Instruction group(s): [7, 1] 

0x1f27f:	nop	
0x1f280:	mov	rdi, rbp
0x1f283:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1f288:	cmp	eax, 1
0x1f28b:	jbe	0x1f325
		Instruction group(s): [7, 1] 

0x1f291:	lea	edx, [rax - 1]
		Instruction group(s): [145] 

0x1f294:	cmp	byte ptr [rbp + rdx], 0x2f
0x1f299:	mov	rsi, rdx
0x1f29c:	jne	0x1f325
		Instruction group(s): [7, 1] 

0x1f2a2:	sub	eax, 2
0x1f2a5:	add	rax, rbp
0x1f2a8:	jmp	0x1f2c1
		Instruction group(s): [7, 1] 

0x1f2aa:	nop	word ptr [rax + rax]
0x1f2b0:	movzx	edx, byte ptr [rax]
0x1f2b3:	sub	rax, 1
0x1f2b7:	lea	ecx, [rsi - 1]
		Instruction group(s): [145] 

0x1f2ba:	cmp	dl, 0x2f
0x1f2bd:	jne	0x1f2c6
		Instruction group(s): [7, 1] 

0x1f2bf:	mov	esi, ecx
0x1f2c1:	cmp	esi, 1
0x1f2c4:	jne	0x1f2b0
		Instruction group(s): [7, 1] 

0x1f2c6:	cmp	dword ptr [rip + 0x219844], esi
0x1f2cc:	jae	0x1f2d4
		Instruction group(s): [7, 1] 

0x1f2ce:	mov	dword ptr [rip + 0x21983c], esi
0x1f2d4:	lea	eax, [r14 + 1]
		Instruction group(s): [145] 

0x1f2d8:	lea	r14, [r15 + r14*8]
0x1f2dc:	mov	rdi, rbp
0x1f2df:	mov	dword ptr [rsp + 0xc], eax
0x1f2e3:	call	0x26050
		Instruction group(s): [2, 7, 145] 

0x1f2e8:	mov	qword ptr [r14], rax
0x1f2eb:	mov	r14d, dword ptr [rsp + 0xc]
0x1f2f0:	jmp	0x1f0ff
		Instruction group(s): [7, 1] 

0x1f2f5:	mov	edi, 0x28
0x1f2fa:	xor	r14d, r14d
0x1f2fd:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x1f302:	mov	dword ptr [rip + 0x219804], 0
0x1f30c:	mov	r15, rax
0x1f30f:	jmp	0x1f117
		Instruction group(s): [7, 1] 

0x1f314:	mov	edi, 0x28
0x1f319:	jmp	0x1f08c
		Instruction group(s): [7, 1] 

0x1f31e:	mov	esi, eax
0x1f320:	jmp	0x1f256
		Instruction group(s): [7, 1] 

0x1f325:	mov	esi, eax
0x1f327:	jmp	0x1f2c6
		Instruction group(s): [7, 1] 

0x1f329:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x1f32e:	nop	
0x1f330:	push	r15
		Instruction group(s): [145] 

0x1f332:	push	r14
		Instruction group(s): [145] 

0x1f334:	mov	r14d, r8d
0x1f337:	push	r13
		Instruction group(s): [145] 

0x1f339:	push	r12
		Instruction group(s): [145] 

0x1f33b:	and	r14d, 0x10
0x1f33f:	push	rbp
		Instruction group(s): [145] 

0x1f340:	push	rbx
		Instruction group(s): [145] 

0x1f341:	mov	rbx, rcx
0x1f344:	mov	ecx, r8d
0x1f347:	sub	rsp, 0xd8
0x1f34e:	mov	rax, qword ptr fs:[0x28]
0x1f357:	mov	qword ptr [rsp + 0xc8], rax
0x1f35f:	xor	eax, eax
0x1f361:	mov	dword ptr [rsp + 0x38], edx
0x1f365:	mov	eax, 0x10
0x1f36a:	or	edx, 1
0x1f36d:	cmp	esi, 0x10
0x1f370:	mov	qword ptr [rsp + 0x50], rdi
0x1f375:	mov	dword ptr [rsp + 0x30], r8d
0x1f37a:	cmovae	eax, esi
		Instruction group(s): [137] 

0x1f37d:	and	ecx, 4
0x1f380:	mov	qword ptr [rsp + 0x60], 0
0x1f389:	mov	dword ptr [rsp + 0x34], edx
0x1f38d:	mov	dword ptr [rsp + 0xc], eax
0x1f391:	mov	dword ptr [rsp + 0x3c], ecx
0x1f395:	jne	0x1f3a4
		Instruction group(s): [7, 1] 

0x1f397:	lea	rdi, [rsp + 0x80]
0x1f39f:	call	0xdec0
		Instruction group(s): [2, 7, 145] 

0x1f3a4:	mov	rax, qword ptr [rsp + 0x50]
0x1f3a9:	mov	rax, qword ptr [rax]
0x1f3ac:	mov	rdi, rax
0x1f3af:	mov	qword ptr [rsp + 0x10], rax
0x1f3b4:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1f3b9:	lea	ebp, [rax + 1]
		Instruction group(s): [145] 

0x1f3bc:	cmp	dword ptr [rip + 0x21973e], ebp
0x1f3c2:	mov	rax, qword ptr [rip + 0x21972f]
0x1f3c9:	mov	qword ptr [rsp + 0x18], rax
0x1f3ce:	jge	0x1f3f9
		Instruction group(s): [7, 1] 

0x1f3d0:	mov	esi, ebp
0x1f3d2:	mov	rdi, rax
0x1f3d5:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x1f3da:	mov	qword ptr [rsp + 0x18], rax
0x1f3df:	mov	qword ptr [rip + 0x219712], rax
0x1f3e6:	mov	rax, qword ptr [rsp + 0x50]
0x1f3eb:	mov	dword ptr [rip + 0x21970f], ebp
0x1f3f1:	mov	rax, qword ptr [rax]
0x1f3f4:	mov	qword ptr [rsp + 0x10], rax
0x1f3f9:	lea	rax, [rsp + 0x80]
0x1f401:	lea	r15, [rsp + 0x60]
0x1f406:	mov	qword ptr [rsp + 0x40], rax
0x1f40b:	lea	rax, [rsp + 0x68]
0x1f410:	mov	qword ptr [rsp + 0x48], rax
0x1f415:	lea	rax, [rsp + 0x78]
0x1f41a:	mov	qword ptr [rsp + 0x58], rax
0x1f41f:	nop	
0x1f420:	mov	rdi, qword ptr [rsp + 0x10]
0x1f425:	mov	qword ptr [rsp + 0x70], 0
0x1f42e:	mov	qword ptr [rsp + 0x78], 0
0x1f437:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1f43c:	mov	r12, rax
0x1f43f:	movzx	eax, byte ptr [rax]
0x1f442:	lea	rcx, [rip + 0x216d57]
0x1f449:	movzx	eax, word ptr [rcx + rax*2]
0x1f44d:	test	dword ptr [rsp + 0x34], eax
0x1f451:	jne	0x1f962
		Instruction group(s): [7, 1] 

0x1f457:	mov	ebp, dword ptr [rsp + 0x38]
0x1f45b:	mov	rdi, r12
0x1f45e:	or	ebp, 3
0x1f461:	mov	esi, ebp
0x1f463:	call	0x1d120
		Instruction group(s): [2, 7, 145] 

0x1f468:	test	rax, rax
0x1f46b:	mov	qword ptr [rsp + 0x10], rax
0x1f470:	je	0x1f780
		Instruction group(s): [7, 1] 

0x1f476:	test	byte ptr [rsp + 0x30], 1
0x1f47b:	mov	rdx, qword ptr [rsp + 0x10]
0x1f480:	je	0x1f680
		Instruction group(s): [7, 1] 

0x1f486:	cmp	qword ptr [rsp + 0x10], r12
0x1f48b:	je	0x1f760
		Instruction group(s): [7, 1] 

0x1f491:	mov	rcx, qword ptr [rsp + 0x10]
0x1f496:	mov	rsi, r12
0x1f499:	sub	rcx, r12
0x1f49c:	mov	r12, qword ptr [rsp + 0x18]
0x1f4a1:	mov	r13d, ecx
0x1f4a4:	movsxd	rcx, ecx
		Instruction group(s): [145] 

0x1f4a7:	mov	rdx, rcx
0x1f4aa:	mov	qword ptr [rsp + 0x20], rcx
0x1f4af:	mov	rdi, r12
0x1f4b2:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x1f4b7:	mov	rcx, qword ptr [rsp + 0x20]
0x1f4bc:	mov	byte ptr [r12 + rcx], 0
0x1f4c1:	mov	ecx, dword ptr [rsp + 0x30]
0x1f4c5:	mov	r12, qword ptr [rip + 0x21962c]
0x1f4cc:	and	ecx, 2
0x1f4cf:	jne	0x1f4dc
		Instruction group(s): [7, 1] 

0x1f4d1:	cmp	qword ptr [rsp + 0x18], r12
0x1f4d6:	je	0x1f8c8
		Instruction group(s): [7, 1] 

0x1f4dc:	mov	rdx, qword ptr [rsp + 0x18]
0x1f4e1:	cmp	rdx, r12
0x1f4e4:	jbe	0x1f509
		Instruction group(s): [7, 1] 

0x1f4e6:	movsxd	rax, r13d
		Instruction group(s): [145] 

0x1f4e9:	cmp	byte ptr [rdx + rax - 1], 0x29
0x1f4ee:	je	0x1f880
		Instruction group(s): [7, 1] 

0x1f4f4:	mov	rsi, qword ptr [rsp + 0x18]
0x1f4f9:	add	r13d, 1
0x1f4fd:	movsxd	r13, r13d
		Instruction group(s): [145] 

0x1f500:	mov	byte ptr [rsi + rax], 0x29
0x1f504:	mov	byte ptr [rsi + r13], 0
0x1f509:	mov	edx, dword ptr [rsp + 0x3c]
0x1f50d:	test	edx, edx
0x1f50f:	jne	0x1f830
		Instruction group(s): [7, 1] 

0x1f515:	cmp	byte ptr [r12], 0x7e
0x1f51a:	mov	qword ptr [rsp + 0x68], r12
0x1f51f:	mov	qword ptr [rsp + 0x28], 0
0x1f528:	je	0x1f898
		Instruction group(s): [7, 1] 

0x1f52e:	test	ecx, ecx
0x1f530:	je	0x1f7d0
		Instruction group(s): [7, 1] 

0x1f536:	mov	eax, dword ptr [rsp + 0x30]
0x1f53a:	and	eax, 8
0x1f53d:	mov	dword ptr [rsp + 0x20], eax
0x1f541:	jne	0x1f798
		Instruction group(s): [7, 1] 

0x1f547:	lea	rsi, [rip + 0xea50]
0x1f54e:	mov	rdi, r12
0x1f551:	call	0x8b20
		Instruction group(s): [2, 7, 145] 

0x1f556:	test	rax, rax
0x1f559:	je	0x1f870
		Instruction group(s): [7, 1] 

0x1f55f:	mov	rcx, qword ptr [rsp + 0x40]
0x1f564:	xor	edx, edx
0x1f566:	mov	esi, 0x204
0x1f56b:	mov	rdi, r12
0x1f56e:	call	0x8c60
		Instruction group(s): [2, 7, 145] 

0x1f573:	test	eax, eax
0x1f575:	je	0x1f810
		Instruction group(s): [7, 1] 

0x1f57b:	cmp	eax, 1
0x1f57e:	je	0x1f9d7
		Instruction group(s): [7, 1] 

0x1f584:	mov	r12, qword ptr [rsp + 0x48]
0x1f589:	mov	ebp, 1
0x1f58e:	mov	dword ptr [rsp + 0x20], 1
0x1f596:	test	ebp, ebp
0x1f598:	jle	0x1f64e
		Instruction group(s): [7, 1] 

0x1f59e:	nop	
0x1f5a0:	mov	rsi, qword ptr [rsp + 0x78]
0x1f5a5:	mov	rdi, qword ptr [r12 + rbp*8 - 8]
0x1f5aa:	test	rsi, rsi
0x1f5ad:	je	0x1f6d0
		Instruction group(s): [7, 1] 

0x1f5b3:	mov	edx, dword ptr [rsp + 0xc]
0x1f5b7:	call	0xb1f0
		Instruction group(s): [2, 7, 145] 

0x1f5bc:	test	rax, rax
0x1f5bf:	mov	r13, rax
0x1f5c2:	je	0x1f720
		Instruction group(s): [7, 1] 

0x1f5c8:	mov	rax, qword ptr [r15]
0x1f5cb:	test	rax, rax
0x1f5ce:	je	0x1f750
		Instruction group(s): [7, 1] 

0x1f5d4:	mov	qword ptr [rax], r13
0x1f5d7:	jmp	0x1f611
		Instruction group(s): [7, 1] 

0x1f5d9:	nop	dword ptr [rax]
0x1f5e0:	test	rbx, rbx
0x1f5e3:	je	0x1f605
		Instruction group(s): [7, 1] 

0x1f5e5:	mov	rdx, qword ptr [rsp + 0x68]
0x1f5ea:	mov	rsi, rbx
0x1f5ed:	mov	edi, 2
0x1f5f2:	xor	eax, eax
0x1f5f4:	call	0x1b950
		Instruction group(s): [2, 7, 145] 

0x1f5f9:	mov	rdi, rax
0x1f5fc:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x1f601:	mov	qword ptr [r13 + 8], rax
0x1f605:	mov	rax, qword ptr [r13]
0x1f609:	test	rax, rax
0x1f60c:	je	0x1f63f
		Instruction group(s): [7, 1] 

0x1f60e:	mov	r13, rax
0x1f611:	test	r14d, r14d
0x1f614:	je	0x1f5e0
		Instruction group(s): [7, 1] 

0x1f616:	mov	rdx, qword ptr [rsp + 0x68]
0x1f61b:	mov	rsi, rbx
0x1f61e:	mov	edi, 2
0x1f623:	xor	eax, eax
0x1f625:	call	0x1b950
		Instruction group(s): [2, 7, 145] 

0x1f62a:	mov	rdi, rax
0x1f62d:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0x1f632:	mov	qword ptr [r13 + 8], rax
0x1f636:	mov	rax, qword ptr [r13]
0x1f63a:	test	rax, rax
0x1f63d:	jne	0x1f60e
		Instruction group(s): [7, 1] 

0x1f63f:	mov	r15, r13
0x1f642:	sub	rbp, 1
0x1f646:	test	ebp, ebp
0x1f648:	jg	0x1f5a0
		Instruction group(s): [7, 1] 

0x1f64e:	mov	eax, dword ptr [rsp + 0x20]
0x1f652:	test	eax, eax
0x1f654:	jne	0x1f7ba
		Instruction group(s): [7, 1] 

0x1f65a:	mov	rdi, qword ptr [rsp + 0x70]
0x1f65f:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1f664:	mov	rdi, qword ptr [rsp + 0x28]
0x1f669:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1f66e:	jmp	0x1f420
		Instruction group(s): [7, 1] 

0x1f673:	nop	dword ptr [rax + rax]
0x1f678:	mov	r12, rax
0x1f67b:	nop	dword ptr [rax + rax]
0x1f680:	mov	rax, rdx
0x1f683:	sub	rax, r12
0x1f686:	cmp	rax, 2
0x1f68a:	jle	0x1f486
		Instruction group(s): [7, 1] 

0x1f690:	cmp	byte ptr [r12], 0x2e
0x1f695:	jne	0x1f486
		Instruction group(s): [7, 1] 

0x1f69b:	cmp	byte ptr [r12 + 1], 0x2f
0x1f6a1:	jne	0x1f486
		Instruction group(s): [7, 1] 

0x1f6a7:	cmp	byte ptr [r12 + 2], 0x2f
0x1f6ad:	lea	rax, [r12 + 2]
0x1f6b2:	jne	0x1f678
		Instruction group(s): [7, 1] 

0x1f6b4:	nop	dword ptr [rax]
0x1f6b8:	add	rax, 1
0x1f6bc:	cmp	byte ptr [rax], 0x2f
0x1f6bf:	je	0x1f6b8
		Instruction group(s): [7, 1] 

0x1f6c1:	mov	r12, rax
0x1f6c4:	jmp	0x1f680
		Instruction group(s): [7, 1] 

0x1f6c6:	nop	word ptr cs:[rax + rax]
0x1f6d0:	mov	rdx, rdi
0x1f6d3:	mov	rsi, rbx
0x1f6d6:	mov	edi, 2
0x1f6db:	xor	eax, eax
0x1f6dd:	call	0x1b950
		Instruction group(s): [2, 7, 145] 

0x1f6e2:	mov	edi, dword ptr [rsp + 0xc]
0x1f6e6:	mov	r13, rax
0x1f6e9:	call	0x1b8c0
		Instruction group(s): [2, 7, 145] 

0x1f6ee:	test	r14d, r14d
0x1f6f1:	mov	qword ptr [r15], rax
0x1f6f4:	mov	rdi, r13
0x1f6f7:	jne	0x1f710
		Instruction group(s): [7, 1] 

0x1f6f9:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x1f6fe:	mov	r15, qword ptr [r15]
0x1f701:	mov	qword ptr [r15 + 8], rax
0x1f705:	jmp	0x1f642
		Instruction group(s): [7, 1] 

0x1f70a:	nop	word ptr [rax + rax]
0x1f710:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0x1f715:	jmp	0x1f6fe
		Instruction group(s): [7, 1] 

0x1f717:	nop	word ptr [rax + rax]
0x1f720:	mov	rdx, qword ptr [r12 + rbp*8 - 8]
0x1f725:	mov	r8, qword ptr [rsp + 0x78]
0x1f72a:	lea	r9, [rip + 0xf700]
0x1f731:	lea	rcx, [rip + 0xa67c]
0x1f738:	mov	rsi, rbx
0x1f73b:	mov	edi, 5
0x1f740:	xor	eax, eax
0x1f742:	call	0x1b950
		Instruction group(s): [2, 7, 145] 

0x1f747:	jmp	0x1f6e2
		Instruction group(s): [7, 1] 

0x1f749:	nop	dword ptr [rax]
0x1f750:	mov	qword ptr [r15], r13
0x1f753:	jmp	0x1f611
		Instruction group(s): [7, 1] 

0x1f758:	nop	dword ptr [rax + rax]
0x1f760:	mov	rax, qword ptr [rsp + 0x18]
0x1f765:	mov	ecx, 0x2f2e
0x1f76a:	mov	r13d, 2
0x1f770:	mov	word ptr [rax], cx
0x1f773:	mov	byte ptr [rax + 2], 0
0x1f777:	jmp	0x1f4c1
		Instruction group(s): [7, 1] 

0x1f77c:	nop	dword ptr [rax]
0x1f780:	mov	rdi, r12
0x1f783:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1f788:	add	rax, r12
0x1f78b:	mov	qword ptr [rsp + 0x10], rax
0x1f790:	jmp	0x1f476
		Instruction group(s): [7, 1] 

0x1f795:	nop	dword ptr [rax]
0x1f798:	mov	rcx, qword ptr [rsp + 0x40]
0x1f79d:	xor	edx, edx
0x1f79f:	mov	esi, 0x204
0x1f7a4:	mov	rdi, r12
0x1f7a7:	call	0x8c60
		Instruction group(s): [2, 7, 145] 

0x1f7ac:	cmp	eax, 1
0x1f7af:	je	0x1f9d7
		Instruction group(s): [7, 1] 

0x1f7b5:	cmp	eax, 3
0x1f7b8:	jne	0x1f801
		Instruction group(s): [7, 1] 

0x1f7ba:	mov	rdi, qword ptr [rsp + 0x40]
0x1f7bf:	call	0x8620
		Instruction group(s): [2, 7, 145] 

0x1f7c4:	jmp	0x1f65a
		Instruction group(s): [7, 1] 

0x1f7c9:	nop	dword ptr [rax]
0x1f7d0:	mov	rdi, r12
0x1f7d3:	call	0xae90
		Instruction group(s): [2, 7, 145] 

0x1f7d8:	test	eax, eax
0x1f7da:	je	0x1f536
		Instruction group(s): [7, 1] 

0x1f7e0:	mov	rdx, qword ptr [rsp + 0x58]
0x1f7e5:	lea	rsi, [rsp + 0x70]
0x1f7ea:	mov	rdi, r12
0x1f7ed:	call	0xaf30
		Instruction group(s): [2, 7, 145] 

0x1f7f2:	mov	r12, qword ptr [rsp + 0x70]
0x1f7f7:	mov	qword ptr [rsp + 0x68], r12
0x1f7fc:	jmp	0x1f536
		Instruction group(s): [7, 1] 

0x1f801:	test	eax, eax
0x1f803:	jne	0x1f584
		Instruction group(s): [7, 1] 

0x1f809:	nop	dword ptr [rax]
0x1f810:	movsxd	rbp, dword ptr [rsp + 0x80]
		Instruction group(s): [145] 

0x1f818:	mov	r12, qword ptr [rsp + 0x88]
0x1f820:	mov	dword ptr [rsp + 0x20], 1
0x1f828:	jmp	0x1f596
		Instruction group(s): [7, 1] 

0x1f82d:	nop	dword ptr [rax]
0x1f830:	mov	rdx, r12
0x1f833:	mov	rsi, rbx
0x1f836:	mov	edi, 2
0x1f83b:	xor	eax, eax
0x1f83d:	call	0x1b950
		Instruction group(s): [2, 7, 145] 

0x1f842:	mov	edi, dword ptr [rsp + 0xc]
0x1f846:	mov	rbp, rax
0x1f849:	call	0x1b8c0
		Instruction group(s): [2, 7, 145] 

0x1f84e:	test	r14d, r14d
0x1f851:	mov	qword ptr [r15], rax
0x1f854:	mov	rdi, rbp
0x1f857:	jne	0x1f958
		Instruction group(s): [7, 1] 

0x1f85d:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x1f862:	mov	r15, qword ptr [r15]
0x1f865:	mov	qword ptr [r15 + 8], rax
0x1f869:	jmp	0x1f420
		Instruction group(s): [7, 1] 

0x1f86e:	nop	
0x1f870:	mov	ebp, 1
0x1f875:	mov	r12, qword ptr [rsp + 0x48]
0x1f87a:	jmp	0x1f596
		Instruction group(s): [7, 1] 

0x1f87f:	nop	
0x1f880:	cmp	r13d, 1
0x1f884:	mov	qword ptr [rsp + 0x18], r12
0x1f889:	jne	0x1f509
		Instruction group(s): [7, 1] 

0x1f88f:	jmp	0x1f420
		Instruction group(s): [7, 1] 

0x1f894:	nop	dword ptr [rax]
0x1f898:	mov	rdi, r12
0x1f89b:	mov	dword ptr [rsp + 0x20], ecx
0x1f89f:	call	0x1eea0
		Instruction group(s): [2, 7, 145] 

0x1f8a4:	test	rax, rax
0x1f8a7:	mov	qword ptr [rsp + 0x28], rax
0x1f8ac:	mov	ecx, dword ptr [rsp + 0x20]
0x1f8b0:	je	0x1f52e
		Instruction group(s): [7, 1] 

0x1f8b6:	mov	qword ptr [rsp + 0x68], rax
0x1f8bb:	mov	r12, rax
0x1f8be:	jmp	0x1f52e
		Instruction group(s): [7, 1] 

0x1f8c3:	nop	dword ptr [rax + rax]
0x1f8c8:	mov	rdi, qword ptr [rsp + 0x18]
0x1f8cd:	cmp	byte ptr [rdi], 0x28
0x1f8d0:	je	0x1f94e
		Instruction group(s): [7, 1] 

0x1f8d2:	movsxd	rax, r13d
		Instruction group(s): [145] 

0x1f8d5:	cmp	byte ptr [rdi + rax - 1], 0x29
0x1f8da:	je	0x1f94e
		Instruction group(s): [7, 1] 

0x1f8dc:	mov	esi, 0x28
0x1f8e1:	mov	dword ptr [rsp + 0x20], ecx
0x1f8e5:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x1f8ea:	test	rax, rax
0x1f8ed:	mov	qword ptr [rsp + 0x28], rax
0x1f8f2:	mov	ecx, dword ptr [rsp + 0x20]
0x1f8f6:	je	0x1f94e
		Instruction group(s): [7, 1] 

0x1f8f8:	mov	r12, qword ptr [rsp + 0x10]
0x1f8fd:	mov	qword ptr [rsp + 0x20], rbx
0x1f902:	mov	rbx, r12
0x1f905:	mov	r12d, ebp
0x1f908:	mov	ebp, ecx
0x1f90a:	nop	word ptr [rax + rax]
0x1f910:	mov	rdi, rbx
0x1f913:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1f918:	jmp	0x1f924
		Instruction group(s): [7, 1] 

0x1f91a:	nop	word ptr [rax + rax]
0x1f920:	add	rax, 1
0x1f924:	movzx	ecx, byte ptr [rax]
0x1f927:	lea	rsi, [rip + 0x216872]
0x1f92e:	mov	rdx, rcx
0x1f931:	movzx	ecx, word ptr [rsi + rcx*2]
0x1f935:	test	ecx, r12d
0x1f938:	je	0x1f920
		Instruction group(s): [7, 1] 

0x1f93a:	cmp	rbx, rax
0x1f93d:	je	0x1f994
		Instruction group(s): [7, 1] 

0x1f93f:	cmp	byte ptr [rax - 1], 0x29
0x1f943:	je	0x1f9b0
		Instruction group(s): [7, 1] 

0x1f945:	test	dl, dl
0x1f947:	je	0x1f994
		Instruction group(s): [7, 1] 

0x1f949:	mov	rbx, rax
0x1f94c:	jmp	0x1f910
		Instruction group(s): [7, 1] 

0x1f94e:	mov	r12, qword ptr [rsp + 0x18]
0x1f953:	jmp	0x1f509
		Instruction group(s): [7, 1] 

0x1f958:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0x1f95d:	jmp	0x1f862
		Instruction group(s): [7, 1] 

0x1f962:	mov	rax, qword ptr [rsp + 0x50]
0x1f967:	mov	rcx, qword ptr [rsp + 0xc8]
0x1f96f:	xor	rcx, qword ptr fs:[0x28]
0x1f978:	mov	qword ptr [rax], r12
0x1f97b:	mov	rax, qword ptr [rsp + 0x60]
0x1f980:	jne	0x1f9d2
		Instruction group(s): [7, 1] 

0x1f982:	add	rsp, 0xd8
0x1f989:	pop	rbx
		Instruction group(s): [145] 

0x1f98a:	pop	rbp
		Instruction group(s): [145] 

0x1f98b:	pop	r12
		Instruction group(s): [145] 

0x1f98d:	pop	r13
		Instruction group(s): [145] 

0x1f98f:	pop	r14
		Instruction group(s): [145] 

0x1f991:	pop	r15
		Instruction group(s): [145] 

0x1f993:	ret	
		Instruction group(s): [3, 145] 

0x1f994:	mov	rbx, qword ptr [rsp + 0x20]
0x1f999:	mov	ecx, ebp
0x1f99b:	test	r13d, r13d
0x1f99e:	je	0x1f420
		Instruction group(s): [7, 1] 

0x1f9a4:	mov	r12, qword ptr [rip + 0x21914d]
0x1f9ab:	jmp	0x1f4dc
		Instruction group(s): [7, 1] 

0x1f9b0:	mov	r12, qword ptr [rsp + 0x28]
0x1f9b5:	mov	ecx, ebp
0x1f9b7:	mov	rbx, qword ptr [rsp + 0x20]
0x1f9bc:	add	r12, 1
0x1f9c0:	mov	rax, r12
0x1f9c3:	sub	rax, qword ptr [rsp + 0x18]
0x1f9c8:	mov	qword ptr [rsp + 0x18], r12
0x1f9cd:	sub	r13d, eax
0x1f9d0:	jmp	0x1f99b
		Instruction group(s): [7, 1] 

0x1f9d2:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x1f9d7:	lea	rsi, [rip + 0xdfa2]
0x1f9de:	mov	edx, 5
0x1f9e3:	xor	edi, edi
0x1f9e5:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x1f9ea:	xor	esi, esi
0x1f9ec:	mov	rdx, rax
0x1f9ef:	xor	edi, edi
0x1f9f1:	xor	eax, eax
0x1f9f3:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x1f9f8:	nop	dword ptr [rax + rax]
0x1fa00:	push	r15
		Instruction group(s): [145] 

0x1fa02:	push	r14
		Instruction group(s): [145] 

0x1fa04:	mov	r15, rdi
0x1fa07:	push	r13
		Instruction group(s): [145] 

0x1fa09:	push	r12
		Instruction group(s): [145] 

0x1fa0b:	xor	r14d, r14d
0x1fa0e:	push	rbp
		Instruction group(s): [145] 

0x1fa0f:	push	rbx
		Instruction group(s): [145] 

0x1fa10:	xor	ebp, ebp
0x1fa12:	sub	rsp, 0x128
0x1fa19:	mov	rax, qword ptr fs:[0x28]
0x1fa22:	mov	qword ptr [rsp + 0x118], rax
0x1fa2a:	xor	eax, eax
0x1fa2c:	movzx	eax, byte ptr [rip + 0x2162d5]
0x1fa33:	mov	dword ptr [rsp + 0x94], esi
0x1fa3a:	mov	byte ptr [rsp + 0x6f], al
0x1fa3e:	lea	rax, [rdi + 0x28]
0x1fa42:	mov	qword ptr [rsp + 0x38], rax
0x1fa47:	mov	rax, qword ptr [rdi + 0x28]
0x1fa4b:	mov	edi, 0xc8
0x1fa50:	mov	qword ptr [rsp + 0xd0], rax
0x1fa58:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x1fa5d:	mov	qword ptr [rsp + 0x70], 0
0x1fa66:	mov	qword ptr [rsp + 0x40], rax
0x1fa6b:	mov	qword ptr [rsp + 8], 0
0x1fa74:	mov	dword ptr [rsp + 0x68], 0
0x1fa7c:	mov	qword ptr [rsp + 0x18], 0
0x1fa85:	mov	qword ptr [rsp + 0x58], 0
0x1fa8e:	mov	dword ptr [rsp + 0x48], 0
0x1fa96:	mov	dword ptr [rsp + 0x34], 0
0x1fa9e:	mov	dword ptr [rsp + 0x64], 1
0x1faa6:	mov	dword ptr [rsp + 0x60], 1
0x1faae:	mov	dword ptr [rsp], 0
0x1fab5:	mov	dword ptr [rsp + 0x90], 0xc8
0x1fac0:	mov	dword ptr [rsp + 0x30], 0
0x1fac8:	mov	qword ptr [rsp + 0x28], 0
0x1fad1:	nop	dword ptr [rax]
0x1fad8:	mov	rax, qword ptr [rsp + 0x18]
0x1fadd:	add	qword ptr [r15 + 0x30], rax
0x1fae1:	mov	rdi, r15
0x1fae4:	call	0x1d340
		Instruction group(s): [2, 7, 145] 

0x1fae9:	test	rax, rax
0x1faec:	mov	qword ptr [rsp + 0x18], rax
0x1faf1:	js	0x2021a
		Instruction group(s): [7, 1] 

0x1faf7:	cmp	qword ptr [r15 + 0x30], 1
0x1fafc:	mov	r13, qword ptr [r15]
0x1faff:	movzx	r12d, byte ptr [r13]
0x1fb04:	je	0x1ffb0
		Instruction group(s): [7, 1] 

0x1fb0a:	test	r12b, r12b
0x1fb0d:	je	0x1fad8
		Instruction group(s): [7, 1] 

0x1fb0f:	mov	rdi, r13
0x1fb12:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1fb17:	cmp	byte ptr [rip + 0x2161ea], r12b
0x1fb1e:	mov	rbx, rax
0x1fb21:	jne	0x1fba0
		Instruction group(s): [7, 1] 

0x1fb23:	test	ebp, ebp
0x1fb25:	jne	0x1fad8
		Instruction group(s): [7, 1] 

0x1fb27:	test	r14, r14
0x1fb2a:	je	0x1fba0
		Instruction group(s): [7, 1] 

0x1fb2c:	mov	r12d, dword ptr [rsp + 0x34]
0x1fb31:	test	r12d, r12d
0x1fb34:	jne	0x1fad8
		Instruction group(s): [7, 1] 

0x1fb36:	mov	r11d, dword ptr [rsp]
0x1fb3a:	test	r11d, r11d
0x1fb3d:	jne	0x1fb47
		Instruction group(s): [7, 1] 

0x1fb3f:	mov	eax, dword ptr [r15 + 0x30]
0x1fb43:	mov	dword ptr [rsp + 0x60], eax
0x1fb47:	mov	eax, dword ptr [rsp]
0x1fb4a:	lea	r12d, [rax + rbx]
		Instruction group(s): [145] 

0x1fb4e:	cmp	r12d, dword ptr [rsp + 0x90]
0x1fb56:	jbe	0x1fb74
		Instruction group(s): [7, 1] 

0x1fb58:	lea	eax, [r12 + r12]
		Instruction group(s): [145] 

0x1fb5c:	mov	rdi, qword ptr [rsp + 0x40]
0x1fb61:	mov	esi, eax
0x1fb63:	mov	dword ptr [rsp + 0x90], eax
0x1fb6a:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x1fb6f:	mov	qword ptr [rsp + 0x40], rax
0x1fb74:	mov	edi, dword ptr [rsp]
0x1fb77:	mov	rbp, qword ptr [rsp + 0x40]
0x1fb7c:	lea	edx, [rbx - 1]
		Instruction group(s): [145] 

0x1fb7f:	lea	rsi, [r13 + 1]
0x1fb83:	add	rdi, rbp
0x1fb86:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x1fb8b:	lea	eax, [r12 - 1]
		Instruction group(s): [145] 

0x1fb90:	mov	dword ptr [rsp], r12d
0x1fb94:	mov	byte ptr [rbp + rax], 0xa
0x1fb99:	xor	ebp, ebp
0x1fb9b:	jmp	0x1fad8
		Instruction group(s): [7, 1] 

0x1fba0:	add	ebx, 1
0x1fba3:	cmp	ebx, dword ptr [rsp + 0x30]
0x1fba7:	ja	0x200e0
		Instruction group(s): [7, 1] 

0x1fbad:	mov	rbx, qword ptr [rsp + 0x28]
0x1fbb2:	mov	rsi, r13
0x1fbb5:	mov	rdi, rbx
0x1fbb8:	call	0x86c0
		Instruction group(s): [2, 7, 145] 

0x1fbbd:	mov	rdi, rbx
0x1fbc0:	call	0x1bbc0
		Instruction group(s): [2, 7, 145] 

0x1fbc5:	mov	esi, 8
0x1fbca:	mov	rdi, rbx
0x1fbcd:	call	0x1d120
		Instruction group(s): [2, 7, 145] 

0x1fbd2:	test	rax, rax
0x1fbd5:	je	0x1fbda
		Instruction group(s): [7, 1] 

0x1fbd7:	mov	byte ptr [rax], 0
0x1fbda:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0x1fbdf:	mov	rdi, qword ptr [rsp + 0x28]
0x1fbe4:	mov	qword ptr [rsp + 0x10], rax
0x1fbe9:	mov	rdx, qword ptr [rax]
0x1fbec:	jmp	0x1fbf4
		Instruction group(s): [7, 1] 

0x1fbee:	nop	
0x1fbf0:	add	rdi, 1
0x1fbf4:	movzx	eax, byte ptr [rdi]
0x1fbf7:	test	byte ptr [rdx + rax*2 + 1], 0x20
0x1fbfc:	jne	0x1fbf0
		Instruction group(s): [7, 1] 

0x1fbfe:	lea	rbx, [rsp + 0xbc]
0x1fc06:	mov	rsi, rbx
0x1fc09:	call	0x1d5b0
		Instruction group(s): [2, 7, 145] 

0x1fc0e:	mov	r12, rax
0x1fc11:	movzx	eax, byte ptr [rsp + 0xbc]
0x1fc19:	test	al, 1
0x1fc1b:	je	0x20020
		Instruction group(s): [7, 1] 

0x1fc21:	mov	edx, eax
0x1fc23:	and	edx, 0x10
0x1fc26:	cmp	dl, 1
0x1fc29:	sbb	ecx, ecx
0x1fc2b:	and	ecx, 0xfffffffd
0x1fc2e:	add	ecx, 5
0x1fc31:	test	r14, r14
0x1fc34:	mov	dword ptr [rsp + 0x50], ecx
0x1fc38:	je	0x1fc92
		Instruction group(s): [7, 1] 

0x1fc3a:	mov	eax, dword ptr [rsp + 0x64]
0x1fc3e:	mov	rdi, r14
0x1fc41:	mov	qword ptr [rsp + 0xd8], rax
0x1fc49:	lea	rax, [rsp + 0xd0]
0x1fc51:	push	rax
		Instruction group(s): [145] 

0x1fc52:	movsx	eax, byte ptr [rsp + 0x77]
0x1fc57:	push	rax
		Instruction group(s): [145] 

0x1fc58:	mov	eax, dword ptr [rsp + 0x78]
0x1fc5c:	push	rax
		Instruction group(s): [145] 

0x1fc5d:	mov	eax, dword ptr [rsp + 0x18]
0x1fc61:	push	rax
		Instruction group(s): [145] 

0x1fc62:	mov	r9, qword ptr [rsp + 0x60]
0x1fc67:	mov	r8d, dword ptr [rsp + 0x80]
0x1fc6f:	mov	rcx, qword ptr [rsp + 0x78]
0x1fc74:	mov	rdx, qword ptr [rsp + 0x90]
0x1fc7c:	mov	rsi, qword ptr [rsp + 0x28]
0x1fc81:	call	0x1e480
		Instruction group(s): [2, 7, 145] 

0x1fc86:	movzx	eax, byte ptr [rsp + 0xdc]
0x1fc8e:	add	rsp, 0x20
0x1fc92:	mov	r10d, dword ptr [rsp + 0x34]
0x1fc97:	test	r10d, r10d
0x1fc9a:	jne	0x200ff
		Instruction group(s): [7, 1] 

0x1fca0:	test	al, 4
0x1fca2:	jne	0x20173
		Instruction group(s): [7, 1] 

0x1fca8:	test	al, 2
0x1fcaa:	je	0x20158
		Instruction group(s): [7, 1] 

0x1fcb0:	mov	edi, 0x64
0x1fcb5:	lea	rbx, [rsp + 0xf0]
0x1fcbd:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x1fcc2:	movdqu	xmm0, xmmword ptr [r15 + 0x28]
		Instruction group(s): [149] 

0x1fcc8:	mov	rsi, rbx
0x1fccb:	mov	rdi, r12
0x1fcce:	mov	r13, rax
0x1fcd1:	movaps	xmmword ptr [rsp + 0xe0], xmm0
		Instruction group(s): [148] 

0x1fcd9:	call	0x283b0
		Instruction group(s): [2, 7, 145] 

0x1fcde:	test	rax, rax
0x1fce1:	je	0x204c0
		Instruction group(s): [7, 1] 

0x1fce7:	lea	rax, [rsp + 0xe0]
0x1fcef:	mov	qword ptr [rsp + 0x80], rax
0x1fcf7:	mov	rax, qword ptr [rsp + 0xf8]
0x1fcff:	cmp	byte ptr [rax], 0
0x1fd02:	jne	0x20516
		Instruction group(s): [7, 1] 

0x1fd08:	movsxd	rax, dword ptr [rsp + 0x110]
		Instruction group(s): [145] 

0x1fd10:	mov	rdx, qword ptr [rsp + 0xf0]
0x1fd18:	mov	byte ptr [rdx + rax], 0
0x1fd1c:	xor	esi, esi
0x1fd1e:	mov	rdi, r12
0x1fd21:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x1fd26:	mov	rdi, rax
0x1fd29:	mov	qword ptr [rsp + 0x88], rax
0x1fd31:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1fd36:	cmp	byte ptr [rax], 0
0x1fd39:	mov	qword ptr [rsp + 0x78], rax
0x1fd3e:	je	0x2104b
		Instruction group(s): [7, 1] 

0x1fd44:	mov	rbx, qword ptr [rsp + 0x78]
0x1fd49:	mov	rdi, rbx
0x1fd4c:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1fd51:	lea	rax, [rbx + rax - 1]
0x1fd56:	mov	rsi, rbx
0x1fd59:	cmp	rbx, rax
0x1fd5c:	jae	0x1fd86
		Instruction group(s): [7, 1] 

0x1fd5e:	mov	rbx, qword ptr [rsp + 0x10]
0x1fd63:	mov	rcx, qword ptr [rbx]
0x1fd66:	jmp	0x1fd7d
		Instruction group(s): [7, 1] 

0x1fd68:	nop	dword ptr [rax + rax]
0x1fd70:	sub	rax, 1
0x1fd74:	cmp	rsi, rax
0x1fd77:	je	0x202bd
		Instruction group(s): [7, 1] 

0x1fd7d:	movzx	edx, byte ptr [rax]
0x1fd80:	test	byte ptr [rcx + rdx*2], 1
0x1fd84:	jne	0x1fd70
		Instruction group(s): [7, 1] 

0x1fd86:	mov	byte ptr [rax + 1], 0
0x1fd8a:	xor	ebx, ebx
0x1fd8c:	mov	dword ptr [rsp], 0x64
0x1fd93:	mov	dword ptr [rsp + 0x20], 1
0x1fd9b:	jmp	0x1fdbb
		Instruction group(s): [7, 1] 

0x1fd9d:	nop	dword ptr [rax]
0x1fda0:	mov	edi, ebx
0x1fda2:	mov	edx, edx
0x1fda4:	mov	rsi, rbp
0x1fda7:	add	rdi, r13
0x1fdaa:	mov	ebx, r12d
0x1fdad:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x1fdb2:	mov	ecx, r14d
0x1fdb5:	mov	byte ptr [r13 + rcx], 0xa
0x1fdbb:	mov	rdi, r15
0x1fdbe:	call	0x1d340
		Instruction group(s): [2, 7, 145] 

0x1fdc3:	test	rax, rax
0x1fdc6:	js	0x207bf
		Instruction group(s): [7, 1] 

0x1fdcc:	add	qword ptr [r15 + 0x30], rax
0x1fdd0:	mov	rbp, qword ptr [r15]
0x1fdd3:	mov	rdi, rbp
0x1fdd6:	call	0x1bbc0
		Instruction group(s): [2, 7, 145] 

0x1fddb:	movzx	eax, byte ptr [rip + 0x215f26]
0x1fde2:	cmp	byte ptr [rbp], al
0x1fde5:	je	0x1fe40
		Instruction group(s): [7, 1] 

0x1fde7:	mov	rdi, rbp
0x1fdea:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1fdef:	mov	rdi, rax
0x1fdf2:	mov	r12, rax
0x1fdf5:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1fdfa:	cmp	eax, 6
0x1fdfd:	je	0x1fe88
		Instruction group(s): [7, 1] 

0x1fe03:	jbe	0x1ff90
		Instruction group(s): [7, 1] 

0x1fe09:	mov	rsi, qword ptr [rsp + 0x10]
0x1fe0e:	movzx	ecx, byte ptr [r12 + 6]
0x1fe14:	mov	rdx, qword ptr [rsi]
0x1fe17:	test	byte ptr [rdx + rcx*2], 1
0x1fe1b:	je	0x1ff99
		Instruction group(s): [7, 1] 

0x1fe21:	lea	rdi, [rip + 0xe0ca]
0x1fe28:	mov	ecx, 6
0x1fe2d:	mov	rsi, r12
0x1fe30:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x1fe32:	jne	0x1ff99
		Instruction group(s): [7, 1] 

0x1fe38:	add	dword ptr [rsp + 0x20], 1
0x1fe3d:	nop	dword ptr [rax]
0x1fe40:	mov	rdi, rbp
0x1fe43:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x1fe48:	lea	r14d, [rbx + rax]
		Instruction group(s): [145] 

0x1fe4c:	mov	rdx, rax
0x1fe4f:	lea	r12d, [r14 + 1]
		Instruction group(s): [145] 

0x1fe53:	cmp	r12d, dword ptr [rsp]
0x1fe57:	jbe	0x1fda0
		Instruction group(s): [7, 1] 

0x1fe5d:	mov	qword ptr [rsp + 8], rax
0x1fe62:	lea	eax, [r14 + r14]
		Instruction group(s): [145] 

0x1fe66:	mov	rdi, r13
0x1fe69:	lea	esi, [rax + 1]
		Instruction group(s): [145] 

0x1fe6c:	mov	dword ptr [rsp], eax
0x1fe6f:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x1fe74:	mov	rdx, qword ptr [rsp + 8]
0x1fe79:	mov	r13, rax
0x1fe7c:	jmp	0x1fda0
		Instruction group(s): [7, 1] 

0x1fe81:	nop	dword ptr [rax]
0x1fe88:	lea	rdi, [rip + 0xe063]
0x1fe8f:	mov	ecx, 6
0x1fe94:	mov	rsi, r12
0x1fe97:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x1fe99:	je	0x1fe38
		Instruction group(s): [7, 1] 

0x1fe9b:	mov	rax, qword ptr [rsp + 0x10]
0x1fea0:	movzx	edx, byte ptr [r12 + 5]
0x1fea6:	mov	rax, qword ptr [rax]
0x1fea9:	test	byte ptr [rax + rdx*2], 1
0x1fead:	je	0x1fe40
		Instruction group(s): [7, 1] 

0x1feaf:	lea	rdi, [rip + 0xe100]
0x1feb6:	mov	ecx, 5
0x1febb:	mov	rsi, r12
0x1febe:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x1fec0:	jne	0x1fe40
		Instruction group(s): [7, 1] 

0x1fec6:	add	r12, 5
0x1feca:	mov	esi, 8
0x1fecf:	mov	rdi, r12
0x1fed2:	call	0x1d120
		Instruction group(s): [2, 7, 145] 

0x1fed7:	test	rax, rax
0x1feda:	je	0x1fedf
		Instruction group(s): [7, 1] 

0x1fedc:	mov	byte ptr [rax], 0
0x1fedf:	mov	rdi, r12
0x1fee2:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x1fee7:	cmp	byte ptr [rax], 0
0x1feea:	jne	0x200b0
		Instruction group(s): [7, 1] 

0x1fef0:	sub	dword ptr [rsp + 0x20], 1
0x1fef5:	jne	0x1fe40
		Instruction group(s): [7, 1] 

0x1fefb:	test	ebx, ebx
0x1fefd:	je	0x202cf
		Instruction group(s): [7, 1] 

0x1ff03:	lea	eax, [rbx - 1]
		Instruction group(s): [145] 

0x1ff06:	mov	byte ptr [r13 + rax], 0
0x1ff0c:	movzx	r8d, word ptr [rsp + 0x116]
0x1ff15:	mov	ecx, dword ptr [rsp + 0x50]
0x1ff19:	xor	r9d, r9d
0x1ff1c:	mov	rsi, qword ptr [rsp + 0x78]
0x1ff21:	mov	rdi, qword ptr [rsp + 0x80]
0x1ff29:	mov	rdx, r13
0x1ff2c:	shr	r8w, 7
0x1ff31:	and	r8d, 7
0x1ff35:	call	0x27e20
		Instruction group(s): [2, 7, 145] 

0x1ff3a:	mov	rdi, r13
0x1ff3d:	mov	rbx, rax
0x1ff40:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1ff45:	mov	rdi, qword ptr [rsp + 0x88]
0x1ff4d:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x1ff52:	movzx	edx, byte ptr [rsp + 0xbc]
0x1ff5a:	test	dl, 8
0x1ff5d:	je	0x1ff63
		Instruction group(s): [7, 1] 

0x1ff5f:	and	byte ptr [rbx + 0x27], 0x9f
0x1ff63:	and	edx, 0x20
0x1ff66:	je	0x20200
		Instruction group(s): [7, 1] 

0x1ff6c:	or	byte ptr [rbx + 0x24], 0x80
0x1ff70:	xor	ebp, ebp
0x1ff72:	xor	r14d, r14d
0x1ff75:	mov	qword ptr [rsp + 8], 0
0x1ff7e:	mov	dword ptr [rsp], 0
0x1ff85:	jmp	0x1fad8
		Instruction group(s): [7, 1] 

0x1ff8a:	nop	word ptr [rax + rax]
0x1ff90:	cmp	eax, 5
0x1ff93:	je	0x1feaf
		Instruction group(s): [7, 1] 

0x1ff99:	cmp	eax, 5
0x1ff9c:	jbe	0x1fe40
		Instruction group(s): [7, 1] 

0x1ffa2:	jmp	0x1fe9b
		Instruction group(s): [7, 1] 

0x1ffa7:	nop	word ptr [rax + rax]
0x1ffb0:	cmp	r12b, 0xef
0x1ffb4:	jne	0x1fb0a
		Instruction group(s): [7, 1] 

0x1ffba:	cmp	byte ptr [r13 + 1], 0xbb
0x1ffbf:	jne	0x1fb0f
		Instruction group(s): [7, 1] 

0x1ffc5:	cmp	byte ptr [r13 + 2], 0xbf
0x1ffca:	jne	0x1fb0f
		Instruction group(s): [7, 1] 

0x1ffd0:	test	byte ptr [rip + 0x216421], 1
0x1ffd7:	lea	rbx, [r13 + 3]
0x1ffdb:	je	0x20509
		Instruction group(s): [7, 1] 

0x1ffe1:	mov	r12, qword ptr [r15 + 0x28]
0x1ffe5:	mov	edx, 5
0x1ffea:	test	r12, r12
0x1ffed:	je	0x204ec
		Instruction group(s): [7, 1] 

0x1fff3:	lea	rsi, [rip + 0xdd6e]
0x1fffa:	xor	edi, edi
0x1fffc:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x20001:	mov	rdx, r12
0x20004:	mov	rsi, rax
0x20007:	mov	edi, 1
0x2000c:	xor	eax, eax
0x2000e:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x20013:	movzx	r12d, byte ptr [r13 + 3]
0x20018:	mov	r13, rbx
0x2001b:	jmp	0x1fb0a
		Instruction group(s): [7, 1] 

0x20020:	cmp	byte ptr [r12], 0
0x20025:	je	0x1fad8
		Instruction group(s): [7, 1] 

0x2002b:	mov	rdi, r12
0x2002e:	call	0x1bb60
		Instruction group(s): [2, 7, 145] 

0x20033:	mov	rdx, rax
0x20036:	mov	rdi, rax
0x20039:	mov	qword ptr [rsp + 0xc0], rax
0x20041:	sub	rdx, r12
0x20044:	mov	dword ptr [rsp + 0xb8], edx
0x2004b:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x20050:	mov	r9d, dword ptr [rsp + 0x48]
0x20055:	mov	qword ptr [rsp + 0xc0], rax
0x2005d:	test	r9d, r9d
0x20060:	je	0x20129
		Instruction group(s): [7, 1] 

0x20066:	cmp	dword ptr [rsp + 0xb8], 5
0x2006e:	jne	0x1fad8
		Instruction group(s): [7, 1] 

0x20074:	lea	rsi, [rip + 0xdf3b]
0x2007b:	mov	ecx, 5
0x20080:	mov	rdi, r12
0x20083:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x20085:	jne	0x1fad8
		Instruction group(s): [7, 1] 

0x2008b:	movzx	edx, byte ptr [rax]
0x2008e:	lea	rax, [rip + 0x21610b]
0x20095:	test	byte ptr [rax + rdx*2], 9
0x20099:	sete	al
0x2009c:	movzx	eax, al
0x2009f:	mov	dword ptr [rsp + 0x48], eax
0x200a3:	jmp	0x1fad8
		Instruction group(s): [7, 1] 

0x200a8:	nop	dword ptr [rax + rax]
0x200b0:	lea	rsi, [rip + 0xdd59]
0x200b7:	xor	edi, edi
0x200b9:	mov	edx, 5
0x200be:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x200c3:	mov	rdi, qword ptr [rsp + 0x38]
0x200c8:	mov	rdx, rax
0x200cb:	xor	esi, esi
0x200cd:	xor	eax, eax
0x200cf:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x200d4:	jmp	0x1fef0
		Instruction group(s): [7, 1] 

0x200d9:	nop	dword ptr [rax]
0x200e0:	mov	rdi, qword ptr [rsp + 0x28]
0x200e5:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x200ea:	mov	edi, ebx
0x200ec:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x200f1:	mov	dword ptr [rsp + 0x30], ebx
0x200f5:	mov	qword ptr [rsp + 0x28], rax
0x200fa:	jmp	0x1fbad
		Instruction group(s): [7, 1] 

0x200ff:	xor	r14d, r14d
0x20102:	xor	ebp, ebp
0x20104:	test	al, 2
0x20106:	mov	eax, 1
0x2010b:	cmove	eax, dword ptr [rsp + 0x48]
		Instruction group(s): [137] 

0x20110:	mov	qword ptr [rsp + 8], 0
0x20119:	mov	dword ptr [rsp], 0
0x20120:	mov	dword ptr [rsp + 0x48], eax
0x20124:	jmp	0x1fad8
		Instruction group(s): [7, 1] 

0x20129:	mov	rdx, qword ptr [rsp + 0x38]
0x2012e:	mov	esi, dword ptr [rsp + 0xb8]
0x20135:	mov	rdi, r12
0x20138:	call	0x1d730
		Instruction group(s): [2, 7, 145] 

0x2013d:	cmp	eax, -2
0x20140:	je	0x202d9
		Instruction group(s): [7, 1] 

0x20146:	cmp	eax, -1
0x20149:	je	0x21061
		Instruction group(s): [7, 1] 

0x2014f:	mov	dword ptr [rsp + 0x34], eax
0x20153:	jmp	0x1fad8
		Instruction group(s): [7, 1] 

0x20158:	mov	edx, dword ptr [rsp + 0x50]
0x2015c:	mov	rdi, qword ptr [rsp + 0x38]
0x20161:	xor	ecx, ecx
0x20163:	mov	rsi, r12
0x20166:	call	0x28720
		Instruction group(s): [2, 7, 145] 

0x2016b:	mov	rbx, rax
0x2016e:	jmp	0x1ff52
		Instruction group(s): [7, 1] 

0x20173:	xor	esi, esi
0x20175:	mov	rdi, r12
0x20178:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x2017d:	mov	rdi, rax
0x20180:	mov	rbx, rax
0x20183:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x20188:	cmp	byte ptr [rax], 0
0x2018b:	mov	rbp, rax
0x2018e:	je	0x2103d
		Instruction group(s): [7, 1] 

0x20194:	mov	rdi, rax
0x20197:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x2019c:	lea	rax, [rbp + rax - 1]
0x201a1:	cmp	rbp, rax
0x201a4:	jae	0x201c6
		Instruction group(s): [7, 1] 

0x201a6:	mov	rcx, qword ptr [rsp + 0x10]
0x201ab:	mov	rcx, qword ptr [rcx]
0x201ae:	jmp	0x201bd
		Instruction group(s): [7, 1] 

0x201b0:	sub	rax, 1
0x201b4:	cmp	rbp, rax
0x201b7:	je	0x202c7
		Instruction group(s): [7, 1] 

0x201bd:	movzx	edx, byte ptr [rax]
0x201c0:	test	byte ptr [rcx + rdx*2], 1
0x201c4:	jne	0x201b0
		Instruction group(s): [7, 1] 

0x201c6:	mov	byte ptr [rax + 1], 0
0x201ca:	mov	edx, dword ptr [rsp + 0x50]
0x201ce:	sub	rax, rbp
0x201d1:	lea	esi, [rax + 1]
		Instruction group(s): [145] 

0x201d4:	mov	rdi, rbp
0x201d7:	xor	ecx, ecx
0x201d9:	xor	ebp, ebp
0x201db:	xor	r14d, r14d
0x201de:	call	0x26f40
		Instruction group(s): [2, 7, 145] 

0x201e3:	mov	rdi, rbx
0x201e6:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x201eb:	mov	qword ptr [rsp + 8], 0
0x201f4:	mov	dword ptr [rsp], 0
0x201fb:	jmp	0x1fad8
		Instruction group(s): [7, 1] 

0x20200:	xor	ebp, ebp
0x20202:	mov	qword ptr [rsp + 8], 0
0x2020b:	xor	r14d, r14d
0x2020e:	mov	dword ptr [rsp], 0
0x20215:	jmp	0x1fad8
		Instruction group(s): [7, 1] 

0x2021a:	mov	rax, qword ptr [rip + 0x215b67]
0x20221:	mov	ecx, dword ptr [rax]
0x20223:	test	ecx, ecx
0x20225:	jne	0x21019
		Instruction group(s): [7, 1] 

0x2022b:	test	r14, r14
0x2022e:	je	0x20280
		Instruction group(s): [7, 1] 

0x20230:	mov	eax, dword ptr [rsp + 0x64]
0x20234:	mov	rdi, r14
0x20237:	mov	qword ptr [rsp + 0xd8], rax
0x2023f:	lea	rax, [rsp + 0xd0]
0x20247:	push	rax
		Instruction group(s): [145] 

0x20248:	movsx	eax, byte ptr [rsp + 0x77]
0x2024d:	push	rax
		Instruction group(s): [145] 

0x2024e:	mov	eax, dword ptr [rsp + 0x78]
0x20252:	push	rax
		Instruction group(s): [145] 

0x20253:	mov	eax, dword ptr [rsp + 0x18]
0x20257:	push	rax
		Instruction group(s): [145] 

0x20258:	mov	r9, qword ptr [rsp + 0x60]
0x2025d:	mov	r8d, dword ptr [rsp + 0x80]
0x20265:	mov	rcx, qword ptr [rsp + 0x78]
0x2026a:	mov	rdx, qword ptr [rsp + 0x90]
0x20272:	mov	rsi, qword ptr [rsp + 0x28]
0x20277:	call	0x1e480
		Instruction group(s): [2, 7, 145] 

0x2027c:	add	rsp, 0x20
0x20280:	mov	rdi, qword ptr [rsp + 0x28]
0x20285:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x2028a:	mov	rdi, qword ptr [rsp + 0x40]
0x2028f:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x20294:	mov	rax, qword ptr [rsp + 0x118]
0x2029c:	xor	rax, qword ptr fs:[0x28]
0x202a5:	jne	0x2105c
		Instruction group(s): [7, 1] 

0x202ab:	add	rsp, 0x128
0x202b2:	pop	rbx
		Instruction group(s): [145] 

0x202b3:	pop	rbp
		Instruction group(s): [145] 

0x202b4:	pop	r12
		Instruction group(s): [145] 

0x202b6:	pop	r13
		Instruction group(s): [145] 

0x202b8:	pop	r14
		Instruction group(s): [145] 

0x202ba:	pop	r15
		Instruction group(s): [145] 

0x202bc:	ret	
		Instruction group(s): [3, 145] 

0x202bd:	mov	rax, qword ptr [rsp + 0x78]
0x202c2:	jmp	0x1fd86
		Instruction group(s): [7, 1] 

0x202c7:	mov	rax, rbp
0x202ca:	jmp	0x201c6
		Instruction group(s): [7, 1] 

0x202cf:	mov	byte ptr [r13], 0
0x202d4:	jmp	0x1ff0c
		Instruction group(s): [7, 1] 

0x202d9:	mov	r8d, dword ptr [rsp + 0x34]
0x202de:	test	r8d, r8d
0x202e1:	jne	0x1fad8
		Instruction group(s): [7, 1] 

0x202e7:	mov	eax, dword ptr [rsp + 0xb8]
0x202ee:	cmp	eax, 6
0x202f1:	je	0x2072d
		Instruction group(s): [7, 1] 

0x202f7:	cmp	eax, 8
0x202fa:	je	0x20542
		Instruction group(s): [7, 1] 

0x20300:	cmp	eax, 5
0x20303:	jne	0x208ae
		Instruction group(s): [7, 1] 

0x20309:	lea	rsi, [rip + 0xae2b]
0x20310:	mov	ecx, 5
0x20315:	mov	rdi, r12
0x20318:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x2031a:	mov	ecx, 5
0x2031f:	lea	rsi, [rip + 0xd413]
0x20326:	setb	al
0x20329:	seta	dl
0x2032c:	sub	edx, eax
0x2032e:	movsx	eax, dl
0x20331:	test	eax, eax
0x20333:	mov	dword ptr [rsp + 0x48], eax
0x20337:	je	0x20de6
		Instruction group(s): [7, 1] 

0x2033d:	mov	rdi, r12
0x20340:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x20342:	jne	0x20587
		Instruction group(s): [7, 1] 

0x20348:	test	r14, r14
0x2034b:	movzx	ebp, byte ptr [r12]
0x20350:	je	0x203a2
		Instruction group(s): [7, 1] 

0x20352:	mov	eax, dword ptr [rsp + 0x64]
0x20356:	mov	rdi, r14
0x20359:	mov	qword ptr [rsp + 0xd8], rax
0x20361:	lea	rax, [rsp + 0xd0]
0x20369:	push	rax
		Instruction group(s): [145] 

0x2036a:	movsx	eax, byte ptr [rsp + 0x77]
0x2036f:	push	rax
		Instruction group(s): [145] 

0x20370:	mov	eax, dword ptr [rsp + 0x78]
0x20374:	push	rax
		Instruction group(s): [145] 

0x20375:	mov	eax, dword ptr [rsp + 0x18]
0x20379:	push	rax
		Instruction group(s): [145] 

0x2037a:	mov	r9, qword ptr [rsp + 0x60]
0x2037f:	mov	r8d, dword ptr [rsp + 0x80]
0x20387:	mov	rcx, qword ptr [rsp + 0x78]
0x2038c:	mov	rdx, qword ptr [rsp + 0x90]
0x20394:	mov	rsi, qword ptr [rsp + 0x28]
0x20399:	call	0x1e480
		Instruction group(s): [2, 7, 145] 

0x2039e:	add	rsp, 0x20
0x203a2:	mov	rdi, qword ptr [rsp + 0xc0]
0x203aa:	xor	esi, esi
0x203ac:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x203b1:	cmp	byte ptr [rax], 0
0x203b4:	mov	rbx, rax
0x203b7:	mov	rdi, rax
0x203ba:	je	0x20894
		Instruction group(s): [7, 1] 

0x203c0:	lea	rdi, [rsp + 0xc0]
0x203c8:	xor	ecx, ecx
0x203ca:	mov	r8d, 2
0x203d0:	mov	edx, 1
0x203d5:	mov	esi, 0x10
0x203da:	mov	qword ptr [rsp + 0xc0], rax
0x203e2:	call	0x1f330
		Instruction group(s): [2, 7, 145] 

0x203e7:	mov	rdi, rbx
0x203ea:	mov	r14, rax
0x203ed:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x203f2:	test	r14, r14
0x203f5:	je	0x2049a
		Instruction group(s): [7, 1] 

0x203fb:	cmp	bpl, 0x2d
0x203ff:	lea	rbx, [rsp + 0xf0]
0x20407:	mov	r12, r14
0x2040a:	sete	bpl
0x2040e:	movzx	ebp, bpl
0x20412:	mov	rax, qword ptr [r12 + 8]
0x20417:	mov	rdi, qword ptr [rsp + 0x38]
0x2041c:	mov	edx, ebp
0x2041e:	mov	rsi, rbx
0x20421:	mov	r14, qword ptr [r14]
0x20424:	mov	qword ptr [rsp + 0xf0], rax
0x2042c:	call	0x194b0
		Instruction group(s): [2, 7, 145] 

0x20431:	mov	r13d, eax
0x20434:	mov	eax, ebp
0x20436:	or	eax, r13d
0x20439:	je	0x20fd2
		Instruction group(s): [7, 1] 

0x2043f:	mov	rdi, r12
0x20442:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x20447:	cmp	r13d, -1
0x2044b:	je	0x2048e
		Instruction group(s): [7, 1] 

0x2044d:	mov	edi, 0x28
0x20452:	call	0x1b8c0
		Instruction group(s): [2, 7, 145] 

0x20457:	mov	r12, rax
0x2045a:	mov	rax, qword ptr [rip + 0x2186a7]
0x20461:	mov	rdi, qword ptr [rsp + 0xf0]
0x20469:	mov	qword ptr [rip + 0x218698], r12
0x20470:	mov	qword ptr [r12], rax
0x20474:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x20479:	test	rax, rax
0x2047c:	mov	qword ptr [r12 + 0x18], rax
0x20481:	je	0x21654
		Instruction group(s): [7, 1] 

0x20487:	or	byte ptr [rax + 0x84], 0x40
0x2048e:	test	r14, r14
0x20491:	mov	r12, r14
0x20494:	jne	0x20412
		Instruction group(s): [7, 1] 

0x2049a:	xor	ebp, ebp
0x2049c:	mov	dword ptr [rsp + 0x48], 0
0x204a4:	mov	qword ptr [rsp + 8], 0
0x204ad:	mov	dword ptr [rsp], 0
0x204b4:	jmp	0x1fad8
		Instruction group(s): [7, 1] 

0x204b9:	nop	dword ptr [rax]
0x204c0:	movzx	eax, word ptr [rsp + 0x116]
0x204c8:	and	ax, 0xfc7f
0x204cc:	or	ah, 1
0x204cf:	mov	word ptr [rsp + 0x116], ax
0x204d7:	lea	rax, [rsp + 0xe0]
0x204df:	mov	qword ptr [rsp + 0x80], rax
0x204e7:	jmp	0x1fd1c
		Instruction group(s): [7, 1] 

0x204ec:	lea	rsi, [rip + 0xd89d]
0x204f3:	xor	edi, edi
0x204f5:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x204fa:	mov	edi, 1
0x204ff:	mov	rsi, rax
0x20502:	xor	eax, eax
0x20504:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x20509:	movzx	r12d, byte ptr [r13 + 3]
0x2050e:	mov	r13, rbx
0x20511:	jmp	0x1fb0a
		Instruction group(s): [7, 1] 

0x20516:	lea	rsi, [rip + 0xd89b]
0x2051d:	xor	edi, edi
0x2051f:	mov	edx, 5
0x20524:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x20529:	mov	rdi, qword ptr [rsp + 0x80]
0x20531:	mov	rdx, rax
0x20534:	xor	esi, esi
0x20536:	xor	eax, eax
0x20538:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x2053d:	jmp	0x1fd08
		Instruction group(s): [7, 1] 

0x20542:	lea	rsi, [rip + 0xda91]
0x20549:	mov	ecx, 8
0x2054e:	mov	rdi, r12
0x20551:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x20553:	je	0x20744
		Instruction group(s): [7, 1] 

0x20559:	lea	rsi, [rip + 0xda83]
0x20560:	mov	ecx, 8
0x20565:	mov	rdi, r12
0x20568:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x2056a:	je	0x2068e
		Instruction group(s): [7, 1] 

0x20570:	lea	rsi, [rip + 0xda75]
0x20577:	mov	ecx, 8
0x2057c:	mov	rdi, r12
0x2057f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x20581:	je	0x2068e
		Instruction group(s): [7, 1] 

0x20587:	movzx	eax, byte ptr [rip + 0x21577a]
0x2058e:	cmp	byte ptr [r13], al
0x20592:	je	0x21643
		Instruction group(s): [7, 1] 

0x20598:	test	r14, r14
0x2059b:	je	0x205ed
		Instruction group(s): [7, 1] 

0x2059d:	mov	eax, dword ptr [rsp + 0x64]
0x205a1:	mov	rdi, r14
0x205a4:	mov	qword ptr [rsp + 0xd8], rax
0x205ac:	lea	rax, [rsp + 0xd0]
0x205b4:	push	rax
		Instruction group(s): [145] 

0x205b5:	movsx	eax, byte ptr [rsp + 0x77]
0x205ba:	push	rax
		Instruction group(s): [145] 

0x205bb:	mov	eax, dword ptr [rsp + 0x78]
0x205bf:	push	rax
		Instruction group(s): [145] 

0x205c0:	mov	eax, dword ptr [rsp + 0x18]
0x205c4:	push	rax
		Instruction group(s): [145] 

0x205c5:	mov	r9, qword ptr [rsp + 0x60]
0x205ca:	mov	r8d, dword ptr [rsp + 0x80]
0x205d2:	mov	rcx, qword ptr [rsp + 0x78]
0x205d7:	mov	rdx, qword ptr [rsp + 0x90]
0x205df:	mov	rsi, qword ptr [rsp + 0x28]
0x205e4:	call	0x1e480
		Instruction group(s): [2, 7, 145] 

0x205e9:	add	rsp, 0x20
0x205ed:	mov	eax, dword ptr [r15 + 0x30]
0x205f1:	mov	esi, 0x4018
0x205f6:	mov	rdi, r13
0x205f9:	mov	dword ptr [rsp + 0x64], eax
0x205fd:	call	0x1d120
		Instruction group(s): [2, 7, 145] 

0x20602:	test	rax, rax
0x20605:	mov	qword ptr [rsp], rax
0x20609:	je	0x20623
		Instruction group(s): [7, 1] 

0x2060b:	cmp	byte ptr [rax], 0x23
0x2060e:	je	0x2089e
		Instruction group(s): [7, 1] 

0x20614:	mov	rax, qword ptr [rsp]
0x20618:	mov	byte ptr [rax], 0
0x2061b:	add	rax, 1
0x2061f:	mov	qword ptr [rsp], rax
0x20623:	mov	rdi, r13
0x20626:	lea	r14, [rsp + 0xb8]
0x2062e:	call	0x1bbc0
		Instruction group(s): [2, 7, 145] 

0x20633:	lea	rax, [rsp + 0xc8]
0x2063b:	mov	rdx, r14
0x2063e:	mov	rdi, r13
0x20641:	mov	rsi, rax
0x20644:	mov	qword ptr [rsp + 8], rax
0x20649:	call	0x1dfc0
		Instruction group(s): [2, 7, 145] 

0x2064e:	cmp	eax, 1
0x20651:	je	0x20a21
		Instruction group(s): [7, 1] 

0x20657:	jb	0x208c8
		Instruction group(s): [7, 1] 

0x2065d:	sub	eax, 4
0x20660:	cmp	eax, 1
0x20663:	ja	0x208c8
		Instruction group(s): [7, 1] 

0x20669:	mov	qword ptr [rsp + 8], 0
0x20672:	xor	r14d, r14d
0x20675:	mov	ebp, 1
0x2067a:	mov	dword ptr [rsp], 0
0x20681:	mov	dword ptr [rsp + 0x48], 0
0x20689:	jmp	0x1fad8
		Instruction group(s): [7, 1] 

0x2068e:	test	r14, r14
0x20691:	movzx	r13d, byte ptr [r12]
0x20696:	je	0x206e8
		Instruction group(s): [7, 1] 

0x20698:	mov	eax, dword ptr [rsp + 0x64]
0x2069c:	mov	rdi, r14
0x2069f:	mov	qword ptr [rsp + 0xd8], rax
0x206a7:	lea	rax, [rsp + 0xd0]
0x206af:	push	rax
		Instruction group(s): [145] 

0x206b0:	movsx	eax, byte ptr [rsp + 0x77]
0x206b5:	push	rax
		Instruction group(s): [145] 

0x206b6:	mov	eax, dword ptr [rsp + 0x78]
0x206ba:	push	rax
		Instruction group(s): [145] 

0x206bb:	mov	eax, dword ptr [rsp + 0x18]
0x206bf:	push	rax
		Instruction group(s): [145] 

0x206c0:	mov	r9, qword ptr [rsp + 0x60]
0x206c5:	mov	r8d, dword ptr [rsp + 0x80]
0x206cd:	mov	rcx, qword ptr [rsp + 0x78]
0x206d2:	mov	rdx, qword ptr [rsp + 0x90]
0x206da:	mov	rsi, qword ptr [rsp + 0x28]
0x206df:	call	0x1e480
		Instruction group(s): [2, 7, 145] 

0x206e4:	add	rsp, 0x20
0x206e8:	mov	rdi, qword ptr [rsp + 0xc0]
0x206f0:	xor	esi, esi
0x206f2:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x206f7:	cmp	byte ptr [rax], 0
0x206fa:	mov	rbx, rax
0x206fd:	jne	0x20ec4
		Instruction group(s): [7, 1] 

0x20703:	mov	rdi, rbx
0x20706:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x2070b:	xor	ebp, ebp
0x2070d:	mov	dword ptr [rsp + 0x48], 0
0x20715:	mov	qword ptr [rsp + 8], 0
0x2071e:	xor	r14d, r14d
0x20721:	mov	dword ptr [rsp], 0
0x20728:	jmp	0x1fad8
		Instruction group(s): [7, 1] 

0x2072d:	lea	rsi, [rip + 0xd8a8]
0x20734:	mov	ecx, 6
0x20739:	mov	rdi, r12
0x2073c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x2073e:	jne	0x20587
		Instruction group(s): [7, 1] 

0x20744:	test	r14, r14
0x20747:	movzx	ebp, byte ptr [r12]
0x2074c:	je	0x2079e
		Instruction group(s): [7, 1] 

0x2074e:	mov	eax, dword ptr [rsp + 0x64]
0x20752:	mov	rdi, r14
0x20755:	mov	qword ptr [rsp + 0xd8], rax
0x2075d:	lea	rax, [rsp + 0xd0]
0x20765:	push	rax
		Instruction group(s): [145] 

0x20766:	movsx	eax, byte ptr [rsp + 0x77]
0x2076b:	push	rax
		Instruction group(s): [145] 

0x2076c:	mov	eax, dword ptr [rsp + 0x78]
0x20770:	push	rax
		Instruction group(s): [145] 

0x20771:	mov	eax, dword ptr [rsp + 0x18]
0x20775:	push	rax
		Instruction group(s): [145] 

0x20776:	mov	r9, qword ptr [rsp + 0x60]
0x2077b:	mov	r8d, dword ptr [rsp + 0x80]
0x20783:	mov	rcx, qword ptr [rsp + 0x78]
0x20788:	mov	rdx, qword ptr [rsp + 0x90]
0x20790:	mov	rsi, qword ptr [rsp + 0x28]
0x20795:	call	0x1e480
		Instruction group(s): [2, 7, 145] 

0x2079a:	add	rsp, 0x20
0x2079e:	mov	rdi, qword ptr [rsp + 0xc0]
0x207a6:	cmp	byte ptr [rdi], 0
0x207a9:	jne	0x207e6
		Instruction group(s): [7, 1] 

0x207ab:	xor	eax, eax
0x207ad:	cmp	bpl, 0x75
0x207b1:	setne	al
0x207b4:	mov	dword ptr [rip + 0x218e7e], eax
0x207ba:	jmp	0x2070b
		Instruction group(s): [7, 1] 

0x207bf:	lea	rsi, [rip + 0xd622]
0x207c6:	mov	edx, 5
0x207cb:	xor	edi, edi
0x207cd:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x207d2:	mov	rdi, qword ptr [rsp + 0x80]
0x207da:	mov	rdx, rax
0x207dd:	xor	esi, esi
0x207df:	xor	eax, eax
0x207e1:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x207e6:	xor	esi, esi
0x207e8:	lea	rbx, [rsp + 0xf0]
0x207f0:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x207f5:	mov	qword ptr [rsp + 0xf0], rax
0x207fd:	mov	r12, rax
0x20800:	lea	rax, [rsp + 0xe0]
0x20808:	mov	rdi, rbx
0x2080b:	mov	rsi, rax
0x2080e:	mov	qword ptr [rsp + 0x80], rax
0x20816:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x2081b:	test	rax, rax
0x2081e:	mov	r13, rax
0x20821:	je	0x20891
		Instruction group(s): [7, 1] 

0x20823:	cmp	bpl, 0x75
0x20827:	sete	bpl
0x2082b:	shl	ebp, 5
0x2082e:	mov	esi, dword ptr [rsp + 0xe0]
0x20835:	mov	rdi, r13
0x20838:	call	0x27020
		Instruction group(s): [2, 7, 145] 

0x2083d:	test	rax, rax
0x20840:	jne	0x2086d
		Instruction group(s): [7, 1] 

0x20842:	sub	rsp, 8
0x20846:	lea	rdx, [rip + 0xd180]
0x2084d:	mov	rdi, r13
0x20850:	push	qword ptr [rsp + 0x40]
		Instruction group(s): [145] 

0x20854:	mov	esi, dword ptr [rsp + 0xf0]
0x2085b:	xor	r9d, r9d
0x2085e:	xor	r8d, r8d
0x20861:	mov	ecx, 2
0x20866:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x2086b:	pop	rsi
		Instruction group(s): [145] 

0x2086c:	pop	rdi
		Instruction group(s): [145] 

0x2086d:	movzx	edx, byte ptr [rax + 0x27]
0x20871:	mov	rdi, rbx
0x20874:	and	edx, 0xffffff9f
0x20877:	or	edx, ebp
0x20879:	mov	byte ptr [rax + 0x27], dl
0x2087c:	mov	rsi, qword ptr [rsp + 0x80]
0x20884:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x20889:	test	rax, rax
0x2088c:	mov	r13, rax
0x2088f:	jne	0x2082e
		Instruction group(s): [7, 1] 

0x20891:	mov	rdi, r12
0x20894:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x20899:	jmp	0x2070b
		Instruction group(s): [7, 1] 

0x2089e:	mov	byte ptr [rax], 0
0x208a1:	mov	qword ptr [rsp], 0
0x208a9:	jmp	0x20623
		Instruction group(s): [7, 1] 

0x208ae:	cmp	eax, 7
0x208b1:	jne	0x21629
		Instruction group(s): [7, 1] 

0x208b7:	mov	ecx, 7
0x208bc:	lea	rsi, [rip + 0xd721]
0x208c3:	jmp	0x2057c
		Instruction group(s): [7, 1] 

0x208c8:	mov	edx, dword ptr [rsp + 0xb8]
0x208cf:	mov	rsi, qword ptr [rsp + 0xc8]
0x208d7:	xor	edi, edi
0x208d9:	call	0xe160
		Instruction group(s): [2, 7, 145] 

0x208de:	mov	rbp, qword ptr [rsp]
0x208e2:	mov	rdi, rax
0x208e5:	mov	qword ptr [rsp + 0xc0], rax
0x208ed:	jmp	0x2096c
		Instruction group(s): [7, 1] 

0x208ef:	mov	esi, 0x40
0x208f4:	call	0x1d120
		Instruction group(s): [2, 7, 145] 

0x208f9:	test	rax, rax
0x208fc:	jne	0x20aa0
		Instruction group(s): [7, 1] 

0x20902:	mov	rsi, qword ptr [rsp + 8]
0x20907:	mov	rdi, qword ptr [rsp + 0xc8]
0x2090f:	mov	rdx, r14
0x20912:	call	0x1dfc0
		Instruction group(s): [2, 7, 145] 

0x20917:	cmp	eax, 1
0x2091a:	je	0x20a46
		Instruction group(s): [7, 1] 

0x20920:	mov	r12, qword ptr [rsp + 0xc0]
0x20928:	mov	rdi, r12
0x2092b:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x20930:	add	r12, rax
0x20933:	lea	rax, [r12 + 1]
0x20938:	mov	qword ptr [rsp + 0xc0], rax
0x20940:	mov	byte ptr [r12], 0x20
0x20945:	mov	edx, dword ptr [rsp + 0xb8]
0x2094c:	mov	rdi, qword ptr [rsp + 0xc0]
0x20954:	mov	rsi, qword ptr [rsp + 0xc8]
0x2095c:	call	0xe160
		Instruction group(s): [2, 7, 145] 

0x20961:	mov	rdi, rax
0x20964:	mov	qword ptr [rsp + 0xc0], rax
0x2096c:	mov	eax, dword ptr [rsp + 0xb8]
0x20973:	add	qword ptr [rsp + 0xc8], rax
0x2097b:	test	rbp, rbp
0x2097e:	jne	0x208ef
		Instruction group(s): [7, 1] 

0x20984:	mov	esi, 0x10
0x20989:	call	0x1d120
		Instruction group(s): [2, 7, 145] 

0x2098e:	test	rax, rax
0x20991:	mov	rbp, rax
0x20994:	je	0x2161c
		Instruction group(s): [7, 1] 

0x2099a:	mov	r12, qword ptr [rsp + 0xc0]
0x209a2:	mov	rcx, qword ptr [rip + 0x218aff]
0x209a9:	mov	rdi, r12
0x209ac:	mov	qword ptr [rsp + 0x20], rcx
0x209b1:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x209b6:	mov	byte ptr [rbp], 0
0x209ba:	mov	rsi, qword ptr [rsp + 0xc8]
0x209c2:	lea	rdi, [r12 + rax]
0x209c6:	mov	rdx, -1
0x209cd:	call	0xe160
		Instruction group(s): [2, 7, 145] 

0x209d2:	mov	rdx, qword ptr [rsp + 0xc8]
0x209da:	mov	rdi, rdx
0x209dd:	mov	qword ptr [rsp + 0x10], rdx
0x209e2:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x209e7:	mov	rdx, qword ptr [rsp + 0x10]
0x209ec:	mov	rcx, qword ptr [rsp + 0x20]
0x209f1:	mov	rdi, r12
0x209f4:	add	rdx, rax
0x209f7:	mov	rax, qword ptr [rip + 0x218aaa]
0x209fe:	sub	rdi, rcx
0x20a01:	sub	rbp, rcx
0x20a04:	mov	qword ptr [rsp + 0xc8], rdx
0x20a0c:	add	rdi, rax
0x20a0f:	lea	rbp, [rax + rbp + 1]
0x20a14:	mov	qword ptr [rsp + 0xc0], rdi
0x20a1c:	jmp	0x208ef
		Instruction group(s): [7, 1] 

0x20a21:	cmp	qword ptr [rsp], 0
0x20a26:	jne	0x2160b
		Instruction group(s): [7, 1] 

0x20a2c:	xor	ebp, ebp
0x20a2e:	mov	qword ptr [rsp + 8], 0
0x20a37:	xor	r14d, r14d
0x20a3a:	mov	dword ptr [rsp], 0
0x20a41:	jmp	0x20681
		Instruction group(s): [7, 1] 

0x20a46:	mov	rdi, qword ptr [rip + 0x218a5b]
0x20a4d:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x20a52:	mov	qword ptr [rsp + 0xc0], rax
0x20a5a:	cmp	byte ptr [rax], 0
0x20a5d:	je	0x20a2c
		Instruction group(s): [7, 1] 

0x20a5f:	cmp	byte ptr [rip + 0x2152a2], 9
0x20a66:	jne	0x215fa
		Instruction group(s): [7, 1] 

0x20a6c:	lea	rsi, [rip + 0xd5b0]
0x20a73:	mov	edx, 8
0x20a78:	mov	rdi, r13
0x20a7b:	call	0x86a0
		Instruction group(s): [2, 7, 145] 

0x20a80:	test	eax, eax
0x20a82:	jne	0x215fa
		Instruction group(s): [7, 1] 

0x20a88:	mov	edx, 5
0x20a8d:	lea	rsi, [rip + 0xd3cc]
0x20a94:	jmp	0x21025
		Instruction group(s): [7, 1] 

0x20a99:	nop	dword ptr [rax]
0x20aa0:	mov	rdi, qword ptr [rip + 0x218a01]
0x20aa7:	mov	r12, rax
0x20aaa:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x20aaf:	mov	qword ptr [rsp + 0xc0], rax
0x20ab7:	lea	rax, [rsp + 0xc0]
0x20abf:	xor	r8d, r8d
0x20ac2:	xor	ecx, ecx
0x20ac4:	mov	byte ptr [r12], 0
0x20ac9:	mov	edx, 1
0x20ace:	mov	esi, 0x10
0x20ad3:	mov	rdi, rax
0x20ad6:	mov	qword ptr [rsp + 0x10], rax
0x20adb:	call	0x1f330
		Instruction group(s): [2, 7, 145] 

0x20ae0:	test	rax, rax
0x20ae3:	mov	r14, rax
0x20ae6:	mov	byte ptr [r12], 0x3a
0x20aeb:	je	0x215e0
		Instruction group(s): [7, 1] 

0x20af1:	lea	rax, [r12 + 1]
0x20af6:	xor	ecx, ecx
0x20af8:	mov	qword ptr [rsp + 0xc0], rax
0x20b00:	movzx	eax, byte ptr [r12 + 1]
0x20b06:	cmp	al, 0x3a
0x20b08:	sete	cl
0x20b0b:	mov	dword ptr [rsp + 0x68], ecx
0x20b0f:	je	0x2159c
		Instruction group(s): [7, 1] 

0x20b15:	mov	rsi, qword ptr [rsp + 0xc8]
0x20b1d:	xor	r12d, r12d
0x20b20:	mov	r13, qword ptr [rsp + 0xc0]
0x20b28:	cmp	byte ptr [rsi], 0
0x20b2b:	je	0x20b86
		Instruction group(s): [7, 1] 

0x20b2d:	mov	rax, r13
0x20b30:	sub	rax, qword ptr [rip + 0x218971]
0x20b37:	or	r9, 0xffffffffffffffff
0x20b3b:	mov	rdi, r13
0x20b3e:	mov	rcx, r9
0x20b41:	mov	qword ptr [rsp + 8], rax
0x20b46:	xor	eax, eax
0x20b48:	repne scasb	al, byte ptr [rdi]
0x20b4a:	mov	rdi, rsi
0x20b4d:	not	rcx
0x20b50:	mov	rdx, rcx
0x20b53:	mov	rcx, r9
0x20b56:	repne scasb	al, byte ptr [rdi]
0x20b58:	add	rdx, r9
0x20b5b:	mov	rax, rcx
0x20b5e:	mov	edi, edx
0x20b60:	mov	r12d, edx
0x20b63:	not	eax
0x20b65:	add	rdi, r13
0x20b68:	mov	edx, eax
0x20b6a:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x20b6f:	mov	r8d, dword ptr [rsp + 8]
0x20b74:	add	r8, qword ptr [rip + 0x21892d]
0x20b7b:	mov	qword ptr [rsp + 0xc0], r8
0x20b83:	mov	r13, r8
0x20b86:	mov	rsi, rbx
0x20b89:	mov	rdi, r13
0x20b8c:	call	0x1d5b0
		Instruction group(s): [2, 7, 145] 

0x20b91:	movzx	edx, byte ptr [rsp + 0xbc]
0x20b99:	mov	qword ptr [rsp + 0xc0], rax
0x20ba1:	test	dl, 1
0x20ba4:	je	0x210ac
		Instruction group(s): [7, 1] 

0x20baa:	mov	rsi, qword ptr [rsp]
0x20bae:	test	rsi, rsi
0x20bb1:	je	0x20c1c
		Instruction group(s): [7, 1] 

0x20bb3:	sub	rax, qword ptr [rip + 0x2188ee]
0x20bba:	lea	rbp, [rsi - 1]
0x20bbe:	mov	byte ptr [rsi - 1], 0x3b
0x20bc2:	mov	rdi, rbp
0x20bc5:	mov	rbx, rax
0x20bc8:	call	0x1bbc0
		Instruction group(s): [2, 7, 145] 

0x20bcd:	or	r8, 0xffffffffffffffff
0x20bd1:	mov	rsi, qword ptr [rsp + 0xc0]
0x20bd9:	xor	eax, eax
0x20bdb:	mov	rcx, r8
0x20bde:	mov	rdi, rbp
0x20be1:	repne scasb	al, byte ptr [rdi]
0x20be3:	mov	rdi, rsi
0x20be6:	mov	rdx, rcx
0x20be9:	mov	rcx, r8
0x20bec:	repne scasb	al, byte ptr [rdi]
0x20bee:	not	edx
0x20bf0:	mov	rax, rcx
0x20bf3:	not	rax
0x20bf6:	lea	rdi, [rsi + rax - 1]
0x20bfb:	mov	rsi, rbp
0x20bfe:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x20c03:	mov	eax, ebx
0x20c05:	add	rax, qword ptr [rip + 0x21889c]
0x20c0c:	movzx	edx, byte ptr [rsp + 0xbc]
0x20c14:	mov	qword ptr [rsp + 0xc0], rax
0x20c1c:	mov	rax, qword ptr [rsp + 0xc0]
0x20c24:	and	edx, 0x10
0x20c27:	mov	rdi, r14
0x20c2a:	cmp	dl, 1
0x20c2d:	lea	rbx, [rsp + 0xf0]
0x20c35:	sbb	ebp, ebp
0x20c37:	mov	qword ptr [rsp], rax
0x20c3b:	mov	rax, qword ptr [rip + 0x21518e]
0x20c42:	and	ebp, 0xfffffffd
0x20c45:	add	ebp, 5
0x20c48:	mov	qword ptr [rsp + 8], rax
0x20c4d:	mov	eax, ebp
0x20c4f:	and	eax, 7
0x20c52:	mov	byte ptr [rsp + 0x10], al
0x20c56:	jmp	0x20d55
		Instruction group(s): [7, 1] 

0x20c5b:	nop	dword ptr [rax + rax]
0x20c60:	mov	rdi, qword ptr [rsp + 0xf0]
0x20c68:	mov	rsi, rax
0x20c6b:	call	0x26b50
		Instruction group(s): [2, 7, 145] 

0x20c70:	movdqu	xmm0, xmmword ptr [r15 + 0x28]
		Instruction group(s): [149] 

0x20c76:	lea	rdi, [rax + 0x20]
0x20c7a:	mov	rsi, qword ptr [rsp]
0x20c7e:	movups	xmmword ptr [rax + 0x30], xmm0
		Instruction group(s): [148] 

0x20c82:	call	0x28660
		Instruction group(s): [2, 7, 145] 

0x20c87:	mov	r12, rax
0x20c8a:	movzx	eax, byte ptr [rsp + 0x10]
0x20c8f:	mov	rdi, qword ptr [r12 + 8]
0x20c94:	lea	edx, [rax*4]
		Instruction group(s): [145] 

0x20c9b:	movzx	eax, byte ptr [r12 + 0x27]
0x20ca1:	and	eax, 0xffffffe3
0x20ca4:	or	eax, edx
0x20ca6:	mov	byte ptr [r12 + 0x27], al
0x20cab:	movzx	eax, word ptr [r12 + 0x26]
0x20cb1:	and	ax, 0x380
0x20cb5:	add	ax, -0x80
0x20cb9:	je	0x21070
		Instruction group(s): [7, 1] 

0x20cbf:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0x20cc4:	mov	qword ptr [r12 + 8], rax
0x20cc9:	movzx	eax, byte ptr [rsp + 0xbc]
0x20cd1:	movzx	edx, byte ptr [r12 + 0x24]
0x20cd7:	mov	ecx, eax
0x20cd9:	or	edx, 8
0x20cdc:	shr	al, 3
0x20cdf:	shr	cl, 5
0x20ce2:	and	edx, 0x7f
0x20ce5:	xor	eax, 1
0x20ce8:	shl	ecx, 7
0x20ceb:	and	eax, 1
0x20cee:	or	edx, ecx
0x20cf0:	neg	eax
0x20cf2:	mov	byte ptr [r12 + 0x24], dl
0x20cf7:	movzx	edx, byte ptr [r12 + 0x27]
0x20cfd:	and	eax, 3
0x20d00:	shl	eax, 5
0x20d03:	and	edx, 0xffffff9f
0x20d06:	or	eax, edx
0x20d08:	mov	byte ptr [r12 + 0x27], al
0x20d0d:	and	eax, 0x1c
0x20d10:	cmp	al, 0x14
0x20d12:	je	0x20d49
		Instruction group(s): [7, 1] 

0x20d14:	mov	r13, qword ptr [r12]
0x20d18:	mov	rdi, r13
0x20d1b:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x20d20:	mov	rdi, r13
0x20d23:	mov	esi, eax
0x20d25:	call	0x27020
		Instruction group(s): [2, 7, 145] 

0x20d2a:	test	rax, rax
0x20d2d:	mov	r13, rax
0x20d30:	je	0x20d49
		Instruction group(s): [7, 1] 

0x20d32:	cmp	r12, rax
0x20d35:	je	0x20d49
		Instruction group(s): [7, 1] 

0x20d37:	movzx	eax, byte ptr [rax + 0x27]
0x20d3b:	and	eax, 0x1c
0x20d3e:	sub	eax, 0xc
0x20d41:	test	al, 0xf8
0x20d43:	je	0x21536
		Instruction group(s): [7, 1] 

0x20d49:	test	r14, r14
0x20d4c:	mov	rdi, r14
0x20d4f:	je	0x21585
		Instruction group(s): [7, 1] 

0x20d55:	mov	rax, qword ptr [r14 + 8]
0x20d59:	mov	r14, qword ptr [r14]
0x20d5c:	mov	qword ptr [rsp + 0xf0], rax
0x20d64:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x20d69:	mov	rdi, rbx
0x20d6c:	call	0x1e260
		Instruction group(s): [2, 7, 145] 

0x20d71:	test	rax, rax
0x20d74:	jne	0x20c60
		Instruction group(s): [7, 1] 

0x20d7a:	mov	rdi, qword ptr [rsp + 0xf0]
0x20d82:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x20d87:	test	rax, rax
0x20d8a:	je	0x2108f
		Instruction group(s): [7, 1] 

0x20d90:	mov	r12, qword ptr [rax + 0x68]
0x20d94:	test	r12, r12
0x20d97:	cmove	r12, rax
		Instruction group(s): [137] 

0x20d9b:	mov	rdi, r12
0x20d9e:	mov	esi, 1
0x20da3:	call	0x28130
		Instruction group(s): [2, 7, 145] 

0x20da8:	mov	rax, qword ptr [r12 + 0x50]
0x20dad:	mov	rsi, qword ptr [rsp]
0x20db1:	mov	ecx, 1
0x20db6:	mov	rdi, qword ptr [rsp + 0x38]
0x20dbb:	mov	edx, ebp
0x20dbd:	mov	qword ptr [rip + 0x21500c], rax
0x20dc4:	call	0x28720
		Instruction group(s): [2, 7, 145] 

0x20dc9:	test	rax, rax
0x20dcc:	mov	r12, rax
0x20dcf:	je	0x21081
		Instruction group(s): [7, 1] 

0x20dd5:	mov	rax, qword ptr [rsp + 8]
0x20dda:	mov	qword ptr [rip + 0x214fef], rax
0x20de1:	jmp	0x20cc9
		Instruction group(s): [7, 1] 

0x20de6:	test	r14, r14
0x20de9:	je	0x20e3b
		Instruction group(s): [7, 1] 

0x20deb:	mov	eax, dword ptr [rsp + 0x64]
0x20def:	mov	rdi, r14
0x20df2:	mov	qword ptr [rsp + 0xd8], rax
0x20dfa:	lea	rax, [rsp + 0xd0]
0x20e02:	push	rax
		Instruction group(s): [145] 

0x20e03:	movsx	eax, byte ptr [rsp + 0x77]
0x20e08:	push	rax
		Instruction group(s): [145] 

0x20e09:	mov	eax, dword ptr [rsp + 0x78]
0x20e0d:	push	rax
		Instruction group(s): [145] 

0x20e0e:	mov	eax, dword ptr [rsp + 0x18]
0x20e12:	push	rax
		Instruction group(s): [145] 

0x20e13:	mov	r9, qword ptr [rsp + 0x60]
0x20e18:	mov	r8d, dword ptr [rsp + 0x80]
0x20e20:	mov	rcx, qword ptr [rsp + 0x78]
0x20e25:	mov	rdx, qword ptr [rsp + 0x90]
0x20e2d:	mov	rsi, qword ptr [rsp + 0x28]
0x20e32:	call	0x1e480
		Instruction group(s): [2, 7, 145] 

0x20e37:	add	rsp, 0x20
0x20e3b:	mov	rdi, qword ptr [rsp + 0xc0]
0x20e43:	lea	r14, [rsp + 0xe0]
0x20e4b:	lea	rbx, [rsp + 0xf0]
0x20e53:	xor	ebp, ebp
0x20e55:	call	0xe9f0
		Instruction group(s): [2, 7, 145] 

0x20e5a:	mov	rsi, r14
0x20e5d:	mov	rdi, rbx
0x20e60:	mov	qword ptr [rsp + 0xf0], rax
0x20e68:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x20e6d:	test	rax, rax
0x20e70:	je	0x20e8f
		Instruction group(s): [7, 1] 

0x20e72:	mov	esi, dword ptr [rsp + 0xe0]
0x20e79:	mov	rdi, rax
0x20e7c:	call	0x1bae0
		Instruction group(s): [2, 7, 145] 

0x20e81:	mov	rsi, r14
0x20e84:	mov	rdi, rbx
0x20e87:	mov	rbp, rax
0x20e8a:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x20e8f:	mov	rdi, rbp
0x20e92:	mov	rsi, rax
0x20e95:	xor	r14d, r14d
0x20e98:	call	0x28cc0
		Instruction group(s): [2, 7, 145] 

0x20e9d:	mov	rdi, rbp
0x20ea0:	xor	ebp, ebp
0x20ea2:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x20ea7:	mov	dword ptr [rsp + 0x34], 0
0x20eaf:	mov	qword ptr [rsp + 8], 0
0x20eb8:	mov	dword ptr [rsp], 0
0x20ebf:	jmp	0x1fad8
		Instruction group(s): [7, 1] 

0x20ec4:	lea	rdi, [rsp + 0xc0]
0x20ecc:	xor	ecx, ecx
0x20ece:	mov	r8d, 2
0x20ed4:	mov	edx, 1
0x20ed9:	mov	esi, 0x10
0x20ede:	mov	qword ptr [rsp + 0xc0], rbx
0x20ee6:	call	0x1f330
		Instruction group(s): [2, 7, 145] 

0x20eeb:	mov	rdi, rbx
0x20eee:	mov	r12, rax
0x20ef1:	lea	rbx, [rsp + 0xf0]
0x20ef9:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x20efe:	pxor	xmm0, xmm0
		Instruction group(s): [149] 

0x20f02:	test	r12, r12
0x20f05:	mov	r14, qword ptr [rip + 0x214e7c]
0x20f0c:	mov	qword ptr [rsp + 0x100], 0
0x20f18:	mov	qword ptr [rip + 0x214e69], rbx
0x20f1f:	movaps	xmmword ptr [rsp + 0xf0], xmm0
		Instruction group(s): [148] 

0x20f27:	je	0x20fc5
		Instruction group(s): [7, 1] 

0x20f2d:	xor	eax, eax
0x20f2f:	cmp	r13b, 0x69
0x20f33:	mov	rdi, r12
0x20f36:	setne	al
0x20f39:	mov	edx, dword ptr [rsp + 0x94]
0x20f40:	lea	eax, [rax*4 + 0xa]
		Instruction group(s): [145] 

0x20f47:	xor	edx, 1
0x20f4a:	or	eax, edx
0x20f4c:	mov	dword ptr [rsp], eax
0x20f4f:	jmp	0x20f5b
		Instruction group(s): [7, 1] 

0x20f51:	mov	rdi, qword ptr [rsp + 8]
0x20f56:	test	rdi, rdi
0x20f59:	je	0x20fc5
		Instruction group(s): [7, 1] 

0x20f5b:	mov	rax, qword ptr [rdi]
0x20f5e:	mov	rbp, qword ptr [rdi + 8]
0x20f62:	mov	qword ptr [rsp + 8], rax
0x20f67:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x20f6c:	mov	esi, dword ptr [rsp]
0x20f6f:	mov	rdi, rbp
0x20f72:	call	0x21670
		Instruction group(s): [2, 7, 145] 

0x20f77:	xor	edx, edx
0x20f79:	cmp	r13b, 0x69
0x20f7d:	setne	dl
0x20f80:	or	edx, eax
0x20f82:	jne	0x20f51
		Instruction group(s): [7, 1] 

0x20f84:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x20f89:	mov	edi, dword ptr [rax]
0x20f8b:	call	0x8cc0
		Instruction group(s): [2, 7, 145] 

0x20f90:	mov	rdi, rbp
0x20f93:	mov	r12, rax
0x20f96:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x20f9b:	mov	rdi, r12
0x20f9e:	mov	rbx, rax
0x20fa1:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x20fa6:	mov	rdi, qword ptr [rsp + 0x38]
0x20fab:	lea	rsi, [rbx + rax]
0x20faf:	lea	rdx, [rip + 0xa77a]
0x20fb6:	mov	r8, r12
0x20fb9:	mov	rcx, rbp
0x20fbc:	xor	eax, eax
0x20fbe:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x20fc3:	jmp	0x20f51
		Instruction group(s): [7, 1] 

0x20fc5:	mov	rdi, r14
0x20fc8:	call	0x1d0f0
		Instruction group(s): [2, 7, 145] 

0x20fcd:	jmp	0x2070b
		Instruction group(s): [7, 1] 

0x20fd2:	lea	rsi, [rip + 0xd01c]
0x20fd9:	mov	edx, 5
0x20fde:	xor	edi, edi
0x20fe0:	mov	rbx, qword ptr [rsp + 0xf0]
0x20fe8:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x20fed:	mov	rdi, qword ptr [rsp + 0xf0]
0x20ff5:	mov	rdx, rax
0x20ff8:	or	rcx, 0xffffffffffffffff
0x20ffc:	xor	eax, eax
0x20ffe:	repne scasb	al, byte ptr [rdi]
0x21000:	mov	rdi, qword ptr [rsp + 0x38]
0x21005:	mov	rax, rcx
0x21008:	mov	rcx, rbx
0x2100b:	not	rax
0x2100e:	lea	rsi, [rax - 1]
0x21012:	xor	eax, eax
0x21014:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x21019:	lea	rsi, [rip + 0xd04e]
0x21020:	mov	edx, 5
0x21025:	xor	edi, edi
0x21027:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x2102c:	mov	rdi, qword ptr [rsp + 0x38]
0x21031:	mov	rdx, rax
0x21034:	xor	esi, esi
0x21036:	xor	eax, eax
0x21038:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x2103d:	mov	edx, 5
0x21042:	lea	rsi, [rip + 0xcf59]
0x21049:	jmp	0x21025
		Instruction group(s): [7, 1] 

0x2104b:	mov	edx, 5
0x21050:	lea	rsi, [rip + 0xcf4b]
0x21057:	jmp	0x207cb
		Instruction group(s): [7, 1] 

0x2105c:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x21061:	mov	edx, 5
0x21066:	lea	rsi, [rip + 0xcf4f]
0x2106d:	jmp	0x21025
		Instruction group(s): [7, 1] 

0x2106f:	nop	
0x21070:	xor	esi, esi
0x21072:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x21077:	mov	qword ptr [r12 + 8], rax
0x2107c:	jmp	0x20cc9
		Instruction group(s): [7, 1] 

0x21081:	mov	edx, 5
0x21086:	lea	rsi, [rip + 0xce13]
0x2108d:	jmp	0x21025
		Instruction group(s): [7, 1] 

0x2108f:	mov	rdi, qword ptr [rsp + 0xf0]
0x21097:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x2109c:	mov	rdi, rax
0x2109f:	call	0xf1a0
		Instruction group(s): [2, 7, 145] 

0x210a4:	mov	r12, rax
0x210a7:	jmp	0x20d9b
		Instruction group(s): [7, 1] 

0x210ac:	mov	rdi, qword ptr [rsp + 0xc8]
0x210b4:	mov	esi, 0x20
0x210b9:	call	0x1d120
		Instruction group(s): [2, 7, 145] 

0x210be:	mov	rsi, qword ptr [rsp + 0xc8]
0x210c6:	movzx	eax, byte ptr [rip + 0x214c3b]
0x210cd:	cmp	byte ptr [rsi], 0
0x210d0:	mov	byte ptr [rsp + 0x6f], al
0x210d4:	jne	0x214d9
		Instruction group(s): [7, 1] 

0x210da:	mov	r13, qword ptr [rsp + 0xc0]
0x210e2:	mov	esi, 0x3a
0x210e7:	mov	rdi, r13
0x210ea:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x210ef:	test	rax, rax
0x210f2:	je	0x21133
		Instruction group(s): [7, 1] 

0x210f4:	cmp	byte ptr [rax - 1], 0x5c
0x210f8:	jne	0x21469
		Instruction group(s): [7, 1] 

0x210fe:	lea	rdx, [rax - 2]
0x21102:	xor	ecx, ecx
0x21104:	jmp	0x21108
		Instruction group(s): [7, 1] 

0x21106:	mov	ecx, esi
0x21108:	mov	esi, ecx
0x2110a:	sub	rdx, 1
0x2110e:	xor	esi, 1
0x21111:	cmp	byte ptr [rdx + 1], 0x5c
0x21115:	je	0x21106
		Instruction group(s): [7, 1] 

0x21117:	cmp	ecx, 1
0x2111a:	je	0x21469
		Instruction group(s): [7, 1] 

0x21120:	lea	rdi, [rax + 1]
0x21124:	mov	esi, 0x3a
0x21129:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x2112e:	test	rax, rax
0x21131:	jne	0x210f4
		Instruction group(s): [7, 1] 

0x21133:	mov	qword ptr [rsp + 8], 0
0x2113c:	xor	eax, eax
0x2113e:	mov	qword ptr [rsp + 0xf0], r13
0x21146:	or	rcx, 0xffffffffffffffff
0x2114a:	mov	rdi, r13
0x2114d:	lea	rbx, [rsp + 0xf0]
0x21155:	repne scasb	al, byte ptr [rdi]
0x21157:	mov	rdi, rbx
0x2115a:	mov	rax, rcx
0x2115d:	not	rax
0x21160:	lea	rax, [r13 + rax - 2]
0x21165:	mov	qword ptr [rsp + 0xe0], rax
0x2116d:	lea	rax, [rsp + 0xe0]
0x21175:	mov	rsi, rax
0x21178:	call	0x137f0
		Instruction group(s): [2, 7, 145] 

0x2117d:	mov	rdi, qword ptr [rsp + 0xf0]
0x21185:	mov	rax, qword ptr [rsp + 0xe0]
0x2118d:	mov	qword ptr [rsp + 0x58], 0
0x21196:	cmp	rdi, rax
0x21199:	ja	0x211b0
		Instruction group(s): [7, 1] 

0x2119b:	cmp	byte ptr [rdi], 0
0x2119e:	je	0x211b0
		Instruction group(s): [7, 1] 

0x211a0:	sub	rax, rdi
0x211a3:	lea	esi, [rax + 1]
		Instruction group(s): [145] 

0x211a6:	call	0x1bae0
		Instruction group(s): [2, 7, 145] 

0x211ab:	mov	qword ptr [rsp + 0x58], rax
0x211b0:	test	rbp, rbp
0x211b3:	je	0x2145d
		Instruction group(s): [7, 1] 

0x211b9:	xor	eax, eax
0x211bb:	or	rcx, 0xffffffffffffffff
0x211bf:	mov	rdi, rbp
0x211c2:	repne scasb	al, byte ptr [rdi]
0x211c4:	mov	rax, rcx
0x211c7:	not	rax
0x211ca:	lea	rbx, [rax - 1]
0x211ce:	mov	eax, dword ptr [r15 + 0x30]
0x211d2:	mov	dword ptr [rsp + 0x60], eax
0x211d6:	lea	eax, [rbx + 2]
		Instruction group(s): [145] 

0x211d9:	cmp	eax, dword ptr [rsp + 0x90]
0x211e0:	jbe	0x211fc
		Instruction group(s): [7, 1] 

0x211e2:	mov	rdi, qword ptr [rsp + 0x40]
0x211e7:	add	eax, eax
0x211e9:	mov	esi, eax
0x211eb:	mov	dword ptr [rsp + 0x90], eax
0x211f2:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x211f7:	mov	qword ptr [rsp + 0x40], rax
0x211fc:	mov	rsi, rbp
0x211ff:	mov	rbp, qword ptr [rsp + 0x40]
0x21204:	mov	r12d, ebx
0x21207:	mov	rdx, r12
0x2120a:	mov	rdi, rbp
0x2120d:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x21212:	lea	eax, [rbx + 1]
		Instruction group(s): [145] 

0x21215:	mov	byte ptr [rbp + r12], 0xa
0x2121b:	mov	dword ptr [rsp], eax
0x2121e:	xor	ebp, ebp
0x21220:	cmp	dword ptr [rsp + 0x94], 0
0x21228:	je	0x20681
		Instruction group(s): [7, 1] 

0x2122e:	mov	rax, qword ptr [rip + 0x218313]
0x21235:	mov	rax, qword ptr [rax + 8]
0x21239:	cmp	byte ptr [rax], 0
0x2123c:	jne	0x20681
		Instruction group(s): [7, 1] 

0x21242:	mov	rax, qword ptr [rip + 0x2183bf]
0x21249:	mov	qword ptr [rsp + 0x48], r14
0x2124e:	mov	qword ptr [rsp + 0x10], r14
0x21253:	mov	qword ptr [rsp + 0x20], r15
0x21258:	mov	qword ptr [rsp + 0x88], rax
0x21260:	mov	rax, qword ptr [rsp + 0x48]
0x21265:	mov	esi, 0x25
0x2126a:	mov	r12, qword ptr [rax + 8]
0x2126e:	mov	rdi, r12
0x21271:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x21276:	test	rax, rax
0x21279:	jne	0x213af
		Instruction group(s): [7, 1] 

0x2127f:	movzx	eax, byte ptr [r12]
0x21284:	cmp	al, 0x2e
0x21286:	mov	byte ptr [rsp + 0x80], al
0x2128d:	jne	0x212a5
		Instruction group(s): [7, 1] 

0x2128f:	mov	esi, 0x2f
0x21294:	mov	rdi, r12
0x21297:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x2129c:	test	rax, rax
0x2129f:	je	0x21399
		Instruction group(s): [7, 1] 

0x212a5:	mov	rax, qword ptr [rsp + 0x88]
0x212ad:	mov	rbp, qword ptr [rax + 0x18]
0x212b1:	test	rbp, rbp
0x212b4:	je	0x213cc
		Instruction group(s): [7, 1] 

0x212ba:	lea	rax, [r12 + 1]
0x212bf:	mov	r15, rbp
0x212c2:	mov	qword ptr [rsp + 0x50], rbp
0x212c7:	mov	qword ptr [rsp + 0xa0], rax
0x212cf:	mov	rbx, qword ptr [r15 + 8]
0x212d3:	test	rbx, rbx
0x212d6:	mov	r14, rbx
0x212d9:	je	0x21451
		Instruction group(s): [7, 1] 

0x212df:	movzx	r13d, byte ptr [r14]
0x212e3:	cmp	r13b, 0x2e
0x212e7:	je	0x21437
		Instruction group(s): [7, 1] 

0x212ed:	cmp	r14, r12
0x212f0:	je	0x21399
		Instruction group(s): [7, 1] 

0x212f6:	cmp	byte ptr [rsp + 0x80], r13b
0x212fe:	mov	rbp, qword ptr [rsp + 0x50]
0x21303:	je	0x21404
		Instruction group(s): [7, 1] 

0x21309:	lea	rax, [rbx + 1]
0x2130d:	mov	qword ptr [rsp + 0xa8], r14
0x21315:	mov	r14, rbp
0x21318:	mov	rbp, rbx
0x2131b:	mov	qword ptr [rsp + 0x98], rax
0x21323:	jmp	0x21363
		Instruction group(s): [7, 1] 

0x21325:	mov	rdi, rsi
0x21328:	mov	qword ptr [rsp + 0x78], rsi
0x2132d:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x21332:	mov	rsi, qword ptr [rsp + 0x78]
0x21337:	mov	ebx, eax
0x21339:	mov	rdi, r12
0x2133c:	mov	rdx, rbx
0x2133f:	call	0x86a0
		Instruction group(s): [2, 7, 145] 

0x21344:	test	eax, eax
0x21346:	jne	0x2135b
		Instruction group(s): [7, 1] 

0x21348:	lea	rax, [r12 + rbx]
0x2134c:	cmp	rax, qword ptr [rsp + 0xa8]
0x21354:	je	0x21399
		Instruction group(s): [7, 1] 

0x21356:	cmp	r13b, byte ptr [rax]
0x21359:	je	0x21375
		Instruction group(s): [7, 1] 

0x2135b:	mov	r14, qword ptr [r14]
0x2135e:	test	r14, r14
0x21361:	je	0x213c0
		Instruction group(s): [7, 1] 

0x21363:	mov	rsi, qword ptr [r14 + 8]
0x21367:	test	rsi, rsi
0x2136a:	jne	0x21325
		Instruction group(s): [7, 1] 

0x2136c:	mov	rax, qword ptr [r14 + 0x18]
0x21370:	mov	rsi, qword ptr [rax]
0x21373:	jmp	0x21325
		Instruction group(s): [7, 1] 

0x21375:	test	r13b, r13b
0x21378:	je	0x21399
		Instruction group(s): [7, 1] 

0x2137a:	test	rbp, rbp
0x2137d:	mov	rsi, qword ptr [rsp + 0x98]
0x21385:	je	0x21441
		Instruction group(s): [7, 1] 

0x2138b:	lea	rdi, [r12 + rbx + 1]
0x21390:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x21395:	test	eax, eax
0x21397:	jne	0x2135b
		Instruction group(s): [7, 1] 

0x21399:	mov	rax, qword ptr [rsp + 0x48]
0x2139e:	mov	rax, qword ptr [rax]
0x213a1:	test	rax, rax
0x213a4:	mov	qword ptr [rsp + 0x48], rax
0x213a9:	jne	0x21260
		Instruction group(s): [7, 1] 

0x213af:	mov	r14, qword ptr [rsp + 0x10]
0x213b4:	mov	r15, qword ptr [rsp + 0x20]
0x213b9:	xor	ebp, ebp
0x213bb:	jmp	0x20681
		Instruction group(s): [7, 1] 

0x213c0:	mov	r15, qword ptr [r15]
0x213c3:	test	r15, r15
0x213c6:	jne	0x212cf
		Instruction group(s): [7, 1] 

0x213cc:	mov	r14, qword ptr [rsp + 0x10]
0x213d1:	mov	r15, qword ptr [rsp + 0x20]
0x213d6:	sub	rsp, 8
0x213da:	push	0
		Instruction group(s): [145] 

0x213dc:	lea	rdi, [rip + 0xc221]
0x213e3:	mov	rdx, r12
0x213e6:	xor	r9d, r9d
0x213e9:	xor	r8d, r8d
0x213ec:	mov	ecx, 2
0x213f1:	mov	esi, 0xd
0x213f6:	xor	ebp, ebp
0x213f8:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x213fd:	pop	rax
		Instruction group(s): [145] 

0x213fe:	pop	rdx
		Instruction group(s): [145] 

0x213ff:	jmp	0x20681
		Instruction group(s): [7, 1] 

0x21404:	cmp	byte ptr [rsp + 0x80], 0
0x2140c:	je	0x21399
		Instruction group(s): [7, 1] 

0x2140e:	test	rbx, rbx
0x21411:	lea	rsi, [rbx + 1]
0x21415:	jne	0x21422
		Instruction group(s): [7, 1] 

0x21417:	mov	rax, qword ptr [r15 + 0x18]
0x2141b:	mov	rsi, qword ptr [rax]
0x2141e:	add	rsi, 1
0x21422:	mov	rdi, qword ptr [rsp + 0xa0]
0x2142a:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x2142f:	test	eax, eax
0x21431:	je	0x21399
		Instruction group(s): [7, 1] 

0x21437:	mov	rbp, qword ptr [rsp + 0x50]
0x2143c:	jmp	0x21309
		Instruction group(s): [7, 1] 

0x21441:	mov	rax, qword ptr [r15 + 0x18]
0x21445:	mov	rsi, qword ptr [rax]
0x21448:	add	rsi, 1
0x2144c:	jmp	0x2138b
		Instruction group(s): [7, 1] 

0x21451:	mov	rax, qword ptr [r15 + 0x18]
0x21455:	mov	r14, qword ptr [rax]
0x21458:	jmp	0x212df
		Instruction group(s): [7, 1] 

0x2145d:	mov	dword ptr [rsp], 0
0x21464:	jmp	0x2121e
		Instruction group(s): [7, 1] 

0x21469:	mov	rdi, qword ptr [rsp + 0x10]
0x2146e:	xor	ecx, ecx
0x21470:	mov	r8d, 4
0x21476:	mov	edx, 0x40
0x2147b:	mov	esi, 0x10
0x21480:	call	0x1f330
		Instruction group(s): [2, 7, 145] 

0x21485:	add	qword ptr [rsp + 0xc0], 1
0x2148e:	test	rax, rax
0x21491:	mov	rbx, rax
0x21494:	je	0x215cf
		Instruction group(s): [7, 1] 

0x2149a:	cmp	qword ptr [rbx], 0
0x2149e:	jne	0x215be
		Instruction group(s): [7, 1] 

0x214a4:	lea	rdi, [rbx + 8]
0x214a8:	call	0x1e260
		Instruction group(s): [2, 7, 145] 

0x214ad:	mov	rsi, qword ptr [rbx + 8]
0x214b1:	test	rax, rax
0x214b4:	mov	qword ptr [rsp + 0x70], rax
0x214b9:	mov	qword ptr [rsp + 8], rsi
0x214be:	je	0x215ad
		Instruction group(s): [7, 1] 

0x214c4:	mov	rdi, rbx
0x214c7:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x214cc:	mov	r13, qword ptr [rsp + 0xc0]
0x214d4:	jmp	0x2113c
		Instruction group(s): [7, 1] 

0x214d9:	mov	rax, qword ptr [rsp + 0xc0]
0x214e1:	mov	edi, r12d
0x214e4:	or	rdx, 0xffffffffffffffff
0x214e8:	mov	rbx, rax
0x214eb:	sub	rbx, qword ptr [rip + 0x217fb6]
0x214f2:	add	rdi, rax
0x214f5:	call	0xe160
		Instruction group(s): [2, 7, 145] 

0x214fa:	mov	edi, ebx
0x214fc:	add	rdi, qword ptr [rip + 0x217fa5]
0x21503:	test	rbp, rbp
0x21506:	mov	qword ptr [rsp + 0xc0], rdi
0x2150e:	jne	0x210da
		Instruction group(s): [7, 1] 

0x21514:	mov	esi, 0x10
0x21519:	call	0x1d120
		Instruction group(s): [2, 7, 145] 

0x2151e:	test	rax, rax
0x21521:	mov	rbp, rax
0x21524:	je	0x210da
		Instruction group(s): [7, 1] 

0x2152a:	mov	byte ptr [rax], 0
0x2152d:	add	rbp, 1
0x21531:	jmp	0x210da
		Instruction group(s): [7, 1] 

0x21536:	mov	rdi, qword ptr [r12 + 8]
0x2153b:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x21540:	mov	rdi, qword ptr [r13 + 8]
0x21544:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0x21549:	movzx	edx, byte ptr [r13 + 0x27]
0x2154e:	mov	qword ptr [r12 + 8], rax
0x21553:	movzx	eax, byte ptr [r12 + 0x27]
0x21559:	and	edx, 0x1c
0x2155c:	and	eax, 0xffffffe3
0x2155f:	or	eax, edx
0x21561:	mov	byte ptr [r12 + 0x27], al
0x21566:	movzx	eax, byte ptr [r13 + 0x24]
0x2156b:	and	eax, 1
0x2156e:	mov	edx, eax
0x21570:	movzx	eax, byte ptr [r12 + 0x24]
0x21576:	and	eax, 0xfffffffc
0x21579:	or	eax, edx
0x2157b:	mov	byte ptr [r12 + 0x24], al
0x21580:	jmp	0x20d49
		Instruction group(s): [7, 1] 

0x21585:	xor	ebp, ebp
0x21587:	mov	qword ptr [rsp + 8], 0
0x21590:	mov	dword ptr [rsp], 0
0x21597:	jmp	0x20681
		Instruction group(s): [7, 1] 

0x2159c:	add	r12, 2
0x215a0:	mov	qword ptr [rsp + 0xc0], r12
0x215a8:	jmp	0x20b15
		Instruction group(s): [7, 1] 

0x215ad:	mov	edx, 5
0x215b2:	lea	rsi, [rip + 0xc917]
0x215b9:	jmp	0x21025
		Instruction group(s): [7, 1] 

0x215be:	mov	edx, 5
0x215c3:	lea	rsi, [rip + 0xca8b]
0x215ca:	jmp	0x21025
		Instruction group(s): [7, 1] 

0x215cf:	mov	edx, 5
0x215d4:	lea	rsi, [rip + 0xca63]
0x215db:	jmp	0x21025
		Instruction group(s): [7, 1] 

0x215e0:	mov	qword ptr [rsp + 8], 0
0x215e9:	mov	ebp, 1
0x215ee:	mov	dword ptr [rsp], 0
0x215f5:	jmp	0x20681
		Instruction group(s): [7, 1] 

0x215fa:	mov	edx, 5
0x215ff:	lea	rsi, [rip + 0xca26]
0x21606:	jmp	0x21025
		Instruction group(s): [7, 1] 

0x2160b:	mov	edx, 5
0x21610:	lea	rsi, [rip + 0xc9f1]
0x21617:	jmp	0x21025
		Instruction group(s): [7, 1] 

0x2161c:	mov	rdi, qword ptr [rsp + 0xc0]
0x21624:	jmp	0x208ef
		Instruction group(s): [7, 1] 

0x21629:	cmp	eax, 4
0x2162c:	jne	0x20587
		Instruction group(s): [7, 1] 

0x21632:	mov	ecx, 4
0x21637:	lea	rsi, [rip + 0xc9c5]
0x2163e:	jmp	0x2033d
		Instruction group(s): [7, 1] 

0x21643:	mov	edx, 5
0x21648:	lea	rsi, [rip + 0xc7e9]
0x2164f:	jmp	0x21025
		Instruction group(s): [7, 1] 

0x21654:	mov	rdi, qword ptr [rsp + 0xf0]
0x2165c:	call	0xf1a0
		Instruction group(s): [2, 7, 145] 

0x21661:	mov	qword ptr [r12 + 0x18], rax
0x21666:	jmp	0x20487
		Instruction group(s): [7, 1] 

0x2166b:	nop	dword ptr [rax + rax]
0x21670:	push	r15
		Instruction group(s): [145] 

0x21672:	push	r14
		Instruction group(s): [145] 

0x21674:	push	r13
		Instruction group(s): [145] 

0x21676:	push	r12
		Instruction group(s): [145] 

0x21678:	mov	r12d, esi
0x2167b:	push	rbp
		Instruction group(s): [145] 

0x2167c:	push	rbx
		Instruction group(s): [145] 

0x2167d:	mov	ebx, esi
0x2167f:	and	ebx, 8
0x21682:	mov	rbp, rdi
0x21685:	sub	rsp, 0x58
0x21689:	mov	rax, qword ptr fs:[0x28]
0x21692:	mov	qword ptr [rsp + 0x48], rax
0x21697:	xor	eax, eax
0x21699:	test	byte ptr [rip + 0x214d58], 2
0x216a0:	mov	qword ptr [rsp + 0x38], rdi
0x216a5:	mov	qword ptr [rsp + 0x40], 1
0x216ae:	jne	0x21900
		Instruction group(s): [7, 1] 

0x216b4:	xor	r14d, r14d
0x216b7:	test	ebx, ebx
0x216b9:	jne	0x216c5
		Instruction group(s): [7, 1] 

0x216bb:	cmp	byte ptr [rbp], 0x7e
0x216bf:	je	0x21960
		Instruction group(s): [7, 1] 

0x216c5:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x216ca:	lea	r13, [rip + 0x8aff]
0x216d1:	mov	rbx, rax
0x216d4:	jmp	0x216ea
		Instruction group(s): [7, 1] 

0x216d6:	nop	word ptr cs:[rax + rax]
0x216e0:	cmp	r15d, 4
0x216e4:	jne	0x21850
		Instruction group(s): [7, 1] 

0x216ea:	mov	dword ptr [rbx], 0
0x216f0:	mov	rsi, r13
0x216f3:	mov	rdi, rbp
0x216f6:	call	0x8c10
		Instruction group(s): [2, 7, 145] 

0x216fb:	test	rax, rax
0x216fe:	mov	qword ptr [rsp + 0x30], rax
0x21703:	mov	r15d, dword ptr [rbx]
0x21706:	je	0x216e0
		Instruction group(s): [7, 1] 

0x21708:	cmp	r15d, 0x18
0x2170c:	ja	0x21724
		Instruction group(s): [7, 1] 

0x2170e:	mov	eax, 1
0x21713:	mov	ecx, r15d
0x21716:	shl	rax, cl
0x21719:	test	eax, 0x1801000
0x2171e:	jne	0x21996
		Instruction group(s): [7, 1] 

0x21724:	mov	rdi, rbp
0x21727:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x2172c:	mov	edi, 0x28
0x21731:	mov	r13, rax
0x21734:	call	0x1b8c0
		Instruction group(s): [2, 7, 145] 

0x21739:	mov	rbp, rax
0x2173c:	mov	rax, qword ptr [rip + 0x2173c5]
0x21743:	mov	rdi, r13
0x21746:	mov	qword ptr [rip + 0x2173bb], rbp
0x2174d:	mov	qword ptr [rbp], rax
0x21751:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x21756:	test	rax, rax
0x21759:	mov	qword ptr [rbp + 0x18], rax
0x2175d:	je	0x219d0
		Instruction group(s): [7, 1] 

0x21763:	test	r12b, 4
0x21767:	mov	r13, qword ptr [rax]
0x2176a:	mov	byte ptr [rbp + 0x20], r12b
0x2176e:	je	0x21774
		Instruction group(s): [7, 1] 

0x21770:	or	byte ptr [rbp + 0x21], 8
0x21774:	mov	rdi, r14
0x21777:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x2177c:	mov	rdi, qword ptr [rsp + 0x30]
0x21781:	test	rdi, rdi
0x21784:	je	0x218f0
		Instruction group(s): [7, 1] 

0x2178a:	call	0x8a70
		Instruction group(s): [2, 7, 145] 

0x2178f:	lea	rbp, [rsp + 0x38]
0x21794:	mov	edi, eax
0x21796:	mov	edx, 1
0x2179b:	mov	esi, 2
0x217a0:	xor	eax, eax
0x217a2:	lea	rbx, [rsp + 0x10]
0x217a7:	call	0x8750
		Instruction group(s): [2, 7, 145] 

0x217ac:	lea	rsi, [rip + 0xc927]
0x217b3:	mov	rdx, r13
0x217b6:	xor	r9d, r9d
0x217b9:	mov	r8d, 3
0x217bf:	mov	ecx, 2
0x217c4:	mov	rdi, rbp
0x217c7:	call	0x27e20
		Instruction group(s): [2, 7, 145] 

0x217cc:	mov	edi, 0xc8
0x217d1:	mov	dword ptr [rsp + 0x28], 0xc8
0x217d9:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x217de:	mov	esi, r12d
0x217e1:	mov	rdi, rbx
0x217e4:	mov	r13, qword ptr [rip + 0x217305]
0x217eb:	not	esi
0x217ed:	mov	qword ptr [rsp + 0x20], rax
0x217f2:	mov	qword ptr [rsp + 0x18], rax
0x217f7:	and	esi, 1
0x217fa:	mov	qword ptr [rsp + 0x10], rax
0x217ff:	mov	qword ptr [rip + 0x2172ea], rbp
0x21806:	call	0x1fa00
		Instruction group(s): [2, 7, 145] 

0x2180b:	mov	rdi, qword ptr [rsp + 0x30]
0x21810:	mov	qword ptr [rip + 0x2172d9], r13
0x21817:	call	0x87a0
		Instruction group(s): [2, 7, 145] 

0x2181c:	mov	rdi, qword ptr [rsp + 0x20]
0x21821:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x21826:	mov	eax, 1
0x2182b:	mov	rcx, qword ptr [rsp + 0x48]
0x21830:	xor	rcx, qword ptr fs:[0x28]
0x21839:	jne	0x21a97
		Instruction group(s): [7, 1] 

0x2183f:	add	rsp, 0x58
0x21843:	pop	rbx
		Instruction group(s): [145] 

0x21844:	pop	rbp
		Instruction group(s): [145] 

0x21845:	pop	r12
		Instruction group(s): [145] 

0x21847:	pop	r13
		Instruction group(s): [145] 

0x21849:	pop	r14
		Instruction group(s): [145] 

0x2184b:	pop	r15
		Instruction group(s): [145] 

0x2184d:	ret	
		Instruction group(s): [3, 145] 

0x2184e:	nop	
0x21850:	cmp	r15d, 0x18
0x21854:	jbe	0x21980
		Instruction group(s): [7, 1] 

0x2185a:	test	r12b, 2
0x2185e:	je	0x21724
		Instruction group(s): [7, 1] 

0x21864:	cmp	byte ptr [rbp], 0x2f
0x21868:	je	0x21724
		Instruction group(s): [7, 1] 

0x2186e:	mov	rax, qword ptr [rip + 0x2172a3]
0x21875:	mov	rsi, qword ptr [rax]
0x21878:	test	rsi, rsi
0x2187b:	je	0x21724
		Instruction group(s): [7, 1] 

0x21881:	xor	r13d, r13d
0x21884:	jmp	0x218ab
		Instruction group(s): [7, 1] 

0x21886:	nop	word ptr cs:[rax + rax]
0x21890:	mov	rax, qword ptr [rip + 0x217281]
0x21897:	lea	edx, [r13 + 1]
		Instruction group(s): [145] 

0x2189b:	mov	r13, rdx
0x2189e:	mov	rsi, qword ptr [rax + rdx*8]
0x218a2:	test	rsi, rsi
0x218a5:	je	0x21724
		Instruction group(s): [7, 1] 

0x218ab:	lea	rdx, [rip + 0x9895]
0x218b2:	mov	rcx, rbp
0x218b5:	mov	edi, 3
0x218ba:	xor	eax, eax
0x218bc:	call	0x1b950
		Instruction group(s): [2, 7, 145] 

0x218c1:	lea	rsi, [rip + 0x8908]
0x218c8:	mov	rdi, rax
0x218cb:	mov	qword ptr [rsp + 8], rax
0x218d0:	call	0x8c10
		Instruction group(s): [2, 7, 145] 

0x218d5:	test	rax, rax
0x218d8:	mov	qword ptr [rsp + 0x30], rax
0x218dd:	je	0x21890
		Instruction group(s): [7, 1] 

0x218df:	mov	rbp, qword ptr [rsp + 8]
0x218e4:	jmp	0x21724
		Instruction group(s): [7, 1] 

0x218e9:	nop	dword ptr [rax]
0x218f0:	mov	dword ptr [rbx], r15d
0x218f3:	xor	eax, eax
0x218f5:	jmp	0x2182b
		Instruction group(s): [7, 1] 

0x218fa:	nop	word ptr [rax + rax]
0x21900:	lea	rsi, [rip + 0xc777]
0x21907:	xor	edi, edi
0x21909:	mov	edx, 5
0x2190e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x21913:	mov	rdx, rbp
0x21916:	mov	rsi, rax
0x21919:	mov	edi, 1
0x2191e:	xor	eax, eax
0x21920:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x21925:	test	r12b, 1
0x21929:	jne	0x21a70
		Instruction group(s): [7, 1] 

0x2192f:	test	r12b, 2
0x21933:	jne	0x21a40
		Instruction group(s): [7, 1] 

0x21939:	test	r12b, 4
0x2193d:	jne	0x21a10
		Instruction group(s): [7, 1] 

0x21943:	test	ebx, ebx
0x21945:	jne	0x219e8
		Instruction group(s): [7, 1] 

0x2194b:	lea	rdi, [rip + 0xc784]
0x21952:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x21957:	jmp	0x216b4
		Instruction group(s): [7, 1] 

0x2195c:	nop	dword ptr [rax]
0x21960:	mov	rdi, rbp
0x21963:	call	0x1eea0
		Instruction group(s): [2, 7, 145] 

0x21968:	test	rax, rax
0x2196b:	mov	r14, rax
0x2196e:	cmovne	rbp, rax
		Instruction group(s): [137] 

0x21972:	jmp	0x216c5
		Instruction group(s): [7, 1] 

0x21977:	nop	word ptr [rax + rax]
0x21980:	mov	eax, 1
0x21985:	mov	ecx, r15d
0x21988:	shl	rax, cl
0x2198b:	test	eax, 0x1801000
0x21990:	je	0x2185a
		Instruction group(s): [7, 1] 

0x21996:	mov	edi, r15d
0x21999:	call	0x8cc0
		Instruction group(s): [2, 7, 145] 

0x2199e:	mov	rdx, rax
0x219a1:	or	rcx, 0xffffffffffffffff
0x219a5:	xor	eax, eax
0x219a7:	mov	rdi, rdx
0x219aa:	repne scasb	al, byte ptr [rdi]
0x219ac:	mov	rdi, qword ptr [rip + 0x21713d]
0x219b3:	mov	rax, rcx
0x219b6:	mov	rcx, rdx
0x219b9:	lea	rdx, [rip + 0x9772]
0x219c0:	not	rax
0x219c3:	lea	rsi, [rax - 1]
0x219c7:	xor	eax, eax
0x219c9:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x219ce:	nop	
0x219d0:	mov	rdi, r13
0x219d3:	call	0xf1a0
		Instruction group(s): [2, 7, 145] 

0x219d8:	mov	qword ptr [rbp + 0x18], rax
0x219dc:	jmp	0x21763
		Instruction group(s): [7, 1] 

0x219e1:	nop	dword ptr [rax]
0x219e8:	lea	rsi, [rip + 0xc6d5]
0x219ef:	xor	edi, edi
0x219f1:	mov	edx, 5
0x219f6:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x219fb:	mov	edi, 1
0x21a00:	mov	rsi, rax
0x21a03:	xor	eax, eax
0x21a05:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x21a0a:	jmp	0x2194b
		Instruction group(s): [7, 1] 

0x21a0f:	nop	
0x21a10:	lea	rsi, [rip + 0xc69f]
0x21a17:	xor	edi, edi
0x21a19:	mov	edx, 5
0x21a1e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x21a23:	mov	edi, 1
0x21a28:	mov	rsi, rax
0x21a2b:	xor	eax, eax
0x21a2d:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x21a32:	jmp	0x21943
		Instruction group(s): [7, 1] 

0x21a37:	nop	word ptr [rax + rax]
0x21a40:	lea	rsi, [rip + 0xc660]
0x21a47:	xor	edi, edi
0x21a49:	mov	edx, 5
0x21a4e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x21a53:	mov	edi, 1
0x21a58:	mov	rsi, rax
0x21a5b:	xor	eax, eax
0x21a5d:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x21a62:	jmp	0x21939
		Instruction group(s): [7, 1] 

0x21a67:	nop	word ptr [rax + rax]
0x21a70:	lea	rsi, [rip + 0xc61d]
0x21a77:	xor	edi, edi
0x21a79:	mov	edx, 5
0x21a7e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x21a83:	mov	edi, 1
0x21a88:	mov	rsi, rax
0x21a8b:	xor	eax, eax
0x21a8d:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x21a92:	jmp	0x2192f
		Instruction group(s): [7, 1] 

0x21a97:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x21a9c:	nop	dword ptr [rax]
0x21aa0:	push	r13
		Instruction group(s): [145] 

0x21aa2:	push	r12
		Instruction group(s): [145] 

0x21aa4:	lea	rdx, [rip + 0xbf22]
0x21aab:	push	rbp
		Instruction group(s): [145] 

0x21aac:	push	rbx
		Instruction group(s): [145] 

0x21aad:	mov	rbp, rdi
0x21ab0:	lea	rdi, [rip + 0xc623]
0x21ab7:	xor	r8d, r8d
0x21aba:	mov	ecx, 2
0x21abf:	sub	rsp, 0x30
0x21ac3:	mov	esi, 0xd
0x21ac8:	mov	rax, qword ptr fs:[0x28]
0x21ad1:	mov	qword ptr [rsp + 0x20], rax
0x21ad6:	xor	eax, eax
0x21ad8:	mov	rax, qword ptr [rip + 0x2142f1]
0x21adf:	push	0
		Instruction group(s): [145] 

0x21ae1:	mov	r9, qword ptr [rax + 8]
0x21ae5:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x21aea:	test	byte ptr [rip + 0x214907], 1
0x21af1:	pop	rax
		Instruction group(s): [145] 

0x21af2:	pop	rdx
		Instruction group(s): [145] 

0x21af3:	jne	0x21c98
		Instruction group(s): [7, 1] 

0x21af9:	mov	ebx, dword ptr [rip + 0x217a71]
0x21aff:	lea	rdi, [rip + 0xc5f8]
0x21b06:	xor	esi, esi
0x21b08:	mov	dword ptr [rip + 0x217a5e], 0
0x21b12:	lea	r12, [rsp + 0xc]
0x21b17:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x21b1c:	mov	dword ptr [rip + 0x217a4e], ebx
0x21b22:	mov	r13, rax
0x21b25:	mov	qword ptr [rsp + 0x10], rax
0x21b2a:	lea	rbx, [rsp + 0x10]
0x21b2f:	jmp	0x21b5b
		Instruction group(s): [7, 1] 

0x21b31:	nop	dword ptr [rax]
0x21b38:	mov	rdx, qword ptr [rsp + 0x10]
0x21b3d:	cmp	byte ptr [rdx], 0
0x21b40:	je	0x21b4e
		Instruction group(s): [7, 1] 

0x21b42:	lea	rcx, [rdx + 1]
0x21b46:	mov	qword ptr [rsp + 0x10], rcx
0x21b4b:	mov	byte ptr [rdx], 0
0x21b4e:	mov	esi, 7
0x21b53:	mov	rdi, rax
0x21b56:	call	0x21670
		Instruction group(s): [2, 7, 145] 

0x21b5b:	mov	rsi, r12
0x21b5e:	mov	rdi, rbx
0x21b61:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x21b66:	test	rax, rax
0x21b69:	jne	0x21b38
		Instruction group(s): [7, 1] 

0x21b6b:	mov	rdi, r13
0x21b6e:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x21b73:	test	rbp, rbp
0x21b76:	je	0x21c18
		Instruction group(s): [7, 1] 

0x21b7c:	mov	rdi, qword ptr [rbp]
0x21b80:	test	rdi, rdi
0x21b83:	je	0x21c18
		Instruction group(s): [7, 1] 

0x21b89:	mov	rbx, qword ptr [rip + 0x216f78]
0x21b90:	lea	r13, [rip + 0xbe36]
0x21b97:	xor	r12d, r12d
0x21b9a:	nop	word ptr [rax + rax]
0x21ba0:	xor	esi, esi
0x21ba2:	call	0x21670
		Instruction group(s): [2, 7, 145] 

0x21ba7:	test	eax, eax
0x21ba9:	je	0x21c70
		Instruction group(s): [7, 1] 

0x21baf:	mov	rax, qword ptr [rip + 0x216f52]
0x21bb6:	mov	rcx, rax
0x21bb9:	jmp	0x21bc3
		Instruction group(s): [7, 1] 

0x21bbb:	nop	dword ptr [rax + rax]
0x21bc0:	mov	rcx, rdx
0x21bc3:	mov	rdx, qword ptr [rcx]
0x21bc6:	cmp	rdx, rbx
0x21bc9:	jne	0x21bc0
		Instruction group(s): [7, 1] 

0x21bcb:	mov	rdx, qword ptr [rcx + 8]
0x21bcf:	test	rdx, rdx
0x21bd2:	je	0x21c88
		Instruction group(s): [7, 1] 

0x21bd8:	mov	qword ptr [rbp], rdx
0x21bdc:	add	rbp, 8
0x21be0:	mov	rdi, qword ptr [rbp]
0x21be4:	add	r12d, 1
0x21be8:	mov	rbx, rax
0x21beb:	test	rdi, rdi
0x21bee:	jne	0x21ba0
		Instruction group(s): [7, 1] 

0x21bf0:	test	r12d, r12d
0x21bf3:	je	0x21c18
		Instruction group(s): [7, 1] 

0x21bf5:	mov	rsi, qword ptr [rsp + 0x18]
0x21bfa:	xor	rsi, qword ptr fs:[0x28]
0x21c03:	jne	0x21dd8
		Instruction group(s): [7, 1] 

0x21c09:	add	rsp, 0x28
0x21c0d:	pop	rbx
		Instruction group(s): [145] 

0x21c0e:	pop	rbp
		Instruction group(s): [145] 

0x21c0f:	pop	r12
		Instruction group(s): [145] 

0x21c11:	pop	r13
		Instruction group(s): [145] 

0x21c13:	ret	
		Instruction group(s): [3, 145] 

0x21c14:	nop	dword ptr [rax]
0x21c18:	mov	rdi, qword ptr [rip + 0x214121]
0x21c1f:	lea	rbx, [rip + 0x21411a]
0x21c26:	test	rdi, rdi
0x21c29:	jne	0x21c40
		Instruction group(s): [7, 1] 

0x21c2b:	jmp	0x21d9d
		Instruction group(s): [7, 1] 

0x21c30:	add	rbx, 8
0x21c34:	mov	rdi, qword ptr [rbx]
0x21c37:	test	rdi, rdi
0x21c3a:	je	0x21cd0
		Instruction group(s): [7, 1] 

0x21c40:	call	0xd6f0
		Instruction group(s): [2, 7, 145] 

0x21c45:	test	eax, eax
0x21c47:	je	0x21c30
		Instruction group(s): [7, 1] 

0x21c49:	mov	rdi, qword ptr [rbx]
0x21c4c:	test	rdi, rdi
0x21c4f:	je	0x21cd0
		Instruction group(s): [7, 1] 

0x21c51:	xor	esi, esi
0x21c53:	call	0x21670
		Instruction group(s): [2, 7, 145] 

0x21c58:	test	eax, eax
0x21c5a:	je	0x21d89
		Instruction group(s): [7, 1] 

0x21c60:	mov	rax, qword ptr [rip + 0x216ea1]
0x21c67:	jmp	0x21bf5
		Instruction group(s): [7, 1] 

0x21c69:	nop	dword ptr [rax]
0x21c70:	mov	rsi, qword ptr [rbp]
0x21c74:	mov	rdi, r13
0x21c77:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0x21c7c:	jmp	0x21baf
		Instruction group(s): [7, 1] 

0x21c81:	nop	dword ptr [rax]
0x21c88:	mov	rdx, qword ptr [rcx + 0x18]
0x21c8c:	mov	rdx, qword ptr [rdx]
0x21c8f:	jmp	0x21bd8
		Instruction group(s): [7, 1] 

0x21c94:	nop	dword ptr [rax]
0x21c98:	lea	rsi, [rip + 0xc449]
0x21c9f:	mov	edx, 5
0x21ca4:	xor	edi, edi
0x21ca6:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x21cab:	mov	edi, 1
0x21cb0:	mov	rsi, rax
0x21cb3:	xor	eax, eax
0x21cb5:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x21cba:	mov	rdi, qword ptr [rip + 0x21415f]
0x21cc1:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x21cc6:	jmp	0x21af9
		Instruction group(s): [7, 1] 

0x21ccb:	nop	dword ptr [rax + rax]
0x21cd0:	mov	rax, qword ptr [rip + 0x216e31]
0x21cd7:	mov	rdi, qword ptr [rip + 0x214062]
0x21cde:	test	rax, rax
0x21ce1:	je	0x21dc8
		Instruction group(s): [7, 1] 

0x21ce7:	mov	rbp, qword ptr [rax]
0x21cea:	test	rbp, rbp
0x21ced:	jne	0x21cfb
		Instruction group(s): [7, 1] 

0x21cef:	jmp	0x21dc0
		Instruction group(s): [7, 1] 

0x21cf4:	nop	dword ptr [rax]
0x21cf8:	mov	rbp, rdx
0x21cfb:	mov	rdx, qword ptr [rbp]
0x21cff:	test	rdx, rdx
0x21d02:	jne	0x21cf8
		Instruction group(s): [7, 1] 

0x21d04:	test	rdi, rdi
0x21d07:	je	0x21ddd
		Instruction group(s): [7, 1] 

0x21d0d:	lea	r12, [rip + 0x21402c]
0x21d14:	jmp	0x21d32
		Instruction group(s): [7, 1] 

0x21d16:	nop	word ptr cs:[rax + rax]
0x21d20:	add	r12, 8
0x21d24:	mov	qword ptr [rbp], rbx
0x21d28:	mov	rbp, rbx
0x21d2b:	cmp	qword ptr [r12], 0
0x21d30:	je	0x21d76
		Instruction group(s): [7, 1] 

0x21d32:	mov	edi, 0x28
0x21d37:	call	0x1b8c0
		Instruction group(s): [2, 7, 145] 

0x21d3c:	mov	rdi, qword ptr [r12]
0x21d40:	mov	rbx, rax
0x21d43:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x21d48:	mov	rdi, rax
0x21d4b:	call	0xf1a0
		Instruction group(s): [2, 7, 145] 

0x21d50:	or	byte ptr [rbx + 0x21], 8
0x21d54:	test	rbp, rbp
0x21d57:	mov	qword ptr [rbx + 0x18], rax
0x21d5b:	mov	byte ptr [rbx + 0x20], 4
0x21d5f:	jne	0x21d20
		Instruction group(s): [7, 1] 

0x21d61:	add	r12, 8
0x21d65:	mov	qword ptr [rip + 0x216d9c], rbx
0x21d6c:	mov	rbp, rbx
0x21d6f:	cmp	qword ptr [r12], 0
0x21d74:	jne	0x21d32
		Instruction group(s): [7, 1] 

0x21d76:	mov	rax, qword ptr [rip + 0x216d8b]
0x21d7d:	mov	qword ptr [rbx], 0
0x21d84:	jmp	0x21bf5
		Instruction group(s): [7, 1] 

0x21d89:	mov	rsi, qword ptr [rbx]
0x21d8c:	lea	rdi, [rip + 0xbc3a]
0x21d93:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0x21d98:	jmp	0x21c60
		Instruction group(s): [7, 1] 

0x21d9d:	mov	rax, qword ptr [rip + 0x216d64]
0x21da4:	test	rax, rax
0x21da7:	je	0x21bf5
		Instruction group(s): [7, 1] 

0x21dad:	mov	rbp, qword ptr [rax]
0x21db0:	test	rbp, rbp
0x21db3:	jne	0x21cfb
		Instruction group(s): [7, 1] 

0x21db9:	mov	rbx, rax
0x21dbc:	jmp	0x21d7d
		Instruction group(s): [7, 1] 

0x21dbe:	nop	
0x21dc0:	mov	rbp, rax
0x21dc3:	jmp	0x21d04
		Instruction group(s): [7, 1] 

0x21dc8:	xor	ebp, ebp
0x21dca:	test	rdi, rdi
0x21dcd:	jne	0x21d0d
		Instruction group(s): [7, 1] 

0x21dd3:	jmp	0x21bf5
		Instruction group(s): [7, 1] 

0x21dd8:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x21ddd:	mov	rbx, rbp
0x21de0:	jmp	0x21d7d
		Instruction group(s): [7, 1] 

0x21de2:	nop	dword ptr [rax]
0x21de6:	nop	word ptr cs:[rax + rax]
0x21df0:	push	rbp
		Instruction group(s): [145] 

0x21df1:	push	rbx
		Instruction group(s): [145] 

0x21df2:	mov	rbp, rsi
0x21df5:	mov	rbx, rdi
0x21df8:	sub	rsp, 0x68
0x21dfc:	mov	rax, qword ptr fs:[0x28]
0x21e05:	mov	qword ptr [rsp + 0x58], rax
0x21e0a:	xor	eax, eax
0x21e0c:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x21e11:	test	rbp, rbp
0x21e14:	mov	qword ptr [rsp + 0x30], rbx
0x21e19:	mov	qword ptr [rsp + 0x28], rbx
0x21e1e:	mov	qword ptr [rsp + 0x20], rbx
0x21e23:	mov	dword ptr [rsp + 0x38], eax
0x21e27:	mov	qword ptr [rsp + 0x40], 0
0x21e30:	mov	rbx, qword ptr [rip + 0x216cb9]
0x21e37:	je	0x21ea8
		Instruction group(s): [7, 1] 

0x21e39:	movdqu	xmm0, xmmword ptr [rbp]
		Instruction group(s): [149] 

0x21e3e:	movups	xmmword ptr [rsp + 0x48], xmm0
		Instruction group(s): [148] 

0x21e43:	lea	rdi, [rsp + 0x20]
0x21e48:	mov	rbp, qword ptr [rip + 0x213f39]
0x21e4f:	mov	esi, 1
0x21e54:	pxor	xmm0, xmm0
		Instruction group(s): [149] 

0x21e58:	lea	rax, [rdi + 0x28]
0x21e5c:	mov	qword ptr [rsp + 0x10], 0
0x21e65:	mov	qword ptr [rip + 0x216c84], rax
0x21e6c:	mov	rax, rsp
0x21e6f:	mov	qword ptr [rip + 0x213f12], rax
0x21e76:	movaps	xmmword ptr [rsp], xmm0
		Instruction group(s): [148] 

0x21e7a:	call	0x1fa00
		Instruction group(s): [2, 7, 145] 

0x21e7f:	mov	rdi, rbp
0x21e82:	call	0x1d0f0
		Instruction group(s): [2, 7, 145] 

0x21e87:	mov	rax, qword ptr [rsp + 0x58]
0x21e8c:	xor	rax, qword ptr fs:[0x28]
0x21e95:	mov	qword ptr [rip + 0x216c54], rbx
0x21e9c:	jne	0x21ed7
		Instruction group(s): [7, 1] 

0x21e9e:	add	rsp, 0x68
0x21ea2:	pop	rbx
		Instruction group(s): [145] 

0x21ea3:	pop	rbp
		Instruction group(s): [145] 

0x21ea4:	ret	
		Instruction group(s): [3, 145] 

0x21ea5:	nop	dword ptr [rax]
0x21ea8:	test	rbx, rbx
0x21eab:	je	0x21ec0
		Instruction group(s): [7, 1] 

0x21ead:	movdqu	xmm0, xmmword ptr [rbx]
		Instruction group(s): [149] 

0x21eb1:	movups	xmmword ptr [rsp + 0x48], xmm0
		Instruction group(s): [148] 

0x21eb6:	jmp	0x21e43
		Instruction group(s): [7, 1] 

0x21eb8:	nop	dword ptr [rax + rax]
0x21ec0:	mov	qword ptr [rsp + 0x48], 0
0x21ec9:	mov	qword ptr [rsp + 0x50], 1
0x21ed2:	jmp	0x21e43
		Instruction group(s): [7, 1] 

0x21ed7:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x21edc:	nop	dword ptr [rax]
0x21ee0:	push	r14
		Instruction group(s): [145] 

0x21ee2:	push	r13
		Instruction group(s): [145] 

0x21ee4:	push	r12
		Instruction group(s): [145] 

0x21ee6:	push	rbp
		Instruction group(s): [145] 

0x21ee7:	push	rbx
		Instruction group(s): [145] 

0x21ee8:	mov	rbx, rdi
0x21eeb:	sub	rsp, 0x20a0
0x21ef2:	mov	rax, qword ptr fs:[0x28]
0x21efb:	mov	qword ptr [rsp + 0x2098], rax
0x21f03:	xor	eax, eax
0x21f05:	mov	r13, rsp
0x21f08:	jmp	0x21f20
		Instruction group(s): [7, 1] 

0x21f0a:	nop	word ptr [rax + rax]
0x21f10:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x21f15:	mov	eax, dword ptr [rax]
0x21f17:	cmp	eax, 4
0x21f1a:	jne	0x22057
		Instruction group(s): [7, 1] 

0x21f20:	mov	rdx, r13
0x21f23:	mov	rsi, rbx
0x21f26:	mov	edi, 1
0x21f2b:	call	0x8a90
		Instruction group(s): [2, 7, 145] 

0x21f30:	cmp	eax, -1
0x21f33:	je	0x21f10
		Instruction group(s): [7, 1] 

0x21f35:	test	eax, eax
0x21f37:	jne	0x22050
		Instruction group(s): [7, 1] 

0x21f3d:	mov	rdx, qword ptr [rsp + 0x60]
0x21f42:	mov	rsi, qword ptr [rsp + 0x58]
0x21f47:	mov	rdi, rbx
0x21f4a:	call	0x103f0
		Instruction group(s): [2, 7, 145] 

0x21f4f:	mov	r14, rax
0x21f52:	mov	eax, dword ptr [rip + 0x214474]
0x21f58:	test	eax, eax
0x21f5a:	je	0x22079
		Instruction group(s): [7, 1] 

0x21f60:	lea	rbp, [rsp + 0x90]
0x21f68:	lea	r12, [rsp + 0x1090]
0x21f70:	mov	edx, 0x1000
0x21f75:	mov	rsi, rbx
0x21f78:	mov	rdi, rbp
0x21f7b:	call	0x8b90
		Instruction group(s): [2, 7, 145] 

0x21f80:	mov	rdx, r13
0x21f83:	mov	rsi, rbp
0x21f86:	mov	edi, 1
0x21f8b:	call	0x8820
		Instruction group(s): [2, 7, 145] 

0x21f90:	cmp	eax, -1
0x21f93:	je	0x220c0
		Instruction group(s): [7, 1] 

0x21f99:	test	eax, eax
0x21f9b:	jne	0x22124
		Instruction group(s): [7, 1] 

0x21fa1:	mov	eax, dword ptr [rsp + 0x18]
0x21fa5:	and	eax, 0xf000
0x21faa:	cmp	eax, 0xa000
0x21faf:	jne	0x22079
		Instruction group(s): [7, 1] 

0x21fb5:	mov	rdx, qword ptr [rsp + 0x60]
0x21fba:	mov	rsi, qword ptr [rsp + 0x58]
0x21fbf:	mov	rdi, rbp
0x21fc2:	call	0x103f0
		Instruction group(s): [2, 7, 145] 

0x21fc7:	cmp	r14, rax
0x21fca:	cmovb	r14, rax
		Instruction group(s): [137] 

0x21fce:	jmp	0x21fde
		Instruction group(s): [7, 1] 

0x21fd0:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x21fd5:	cmp	dword ptr [rax], 4
0x21fd8:	jne	0x22110
		Instruction group(s): [7, 1] 

0x21fde:	mov	edx, 0x1000
0x21fe3:	mov	rsi, r12
0x21fe6:	mov	rdi, rbp
0x21fe9:	call	0x8740
		Instruction group(s): [2, 7, 145] 

0x21fee:	cmp	rax, -1
0x21ff2:	mov	rbx, rax
0x21ff5:	je	0x21fd0
		Instruction group(s): [7, 1] 

0x21ff7:	test	rax, rax
0x21ffa:	js	0x22110
		Instruction group(s): [7, 1] 

0x22000:	mov	byte ptr [rsp + rax + 0x1090], 0
0x22008:	cmp	byte ptr [rsp + 0x1090], 0x2f
0x22010:	je	0x220a8
		Instruction group(s): [7, 1] 

0x22016:	mov	esi, 0x2f
0x2201b:	mov	rdi, rbp
0x2201e:	call	0x8890
		Instruction group(s): [2, 7, 145] 

0x22023:	test	rax, rax
0x22026:	je	0x220a8
		Instruction group(s): [7, 1] 

0x2202c:	mov	rdx, rax
0x2202f:	sub	rdx, rbp
0x22032:	add	rbx, rdx
0x22035:	cmp	rbx, 0xffe
0x2203c:	jg	0x22079
		Instruction group(s): [7, 1] 

0x2203e:	lea	rdi, [rax + 1]
0x22042:	mov	rsi, r12
0x22045:	call	0x86c0
		Instruction group(s): [2, 7, 145] 

0x2204a:	jmp	0x21f80
		Instruction group(s): [7, 1] 

0x2204f:	nop	
0x22050:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x22055:	mov	eax, dword ptr [rax]
0x22057:	cmp	eax, 2
0x2205a:	je	0x22065
		Instruction group(s): [7, 1] 

0x2205c:	cmp	eax, 0x14
0x2205f:	jne	0x220f0
		Instruction group(s): [7, 1] 

0x22065:	mov	eax, dword ptr [rip + 0x214361]
0x2206b:	mov	r14d, 1
0x22071:	test	eax, eax
0x22073:	jne	0x21f60
		Instruction group(s): [7, 1] 

0x22079:	mov	rcx, qword ptr [rsp + 0x2098]
0x22081:	xor	rcx, qword ptr fs:[0x28]
0x2208a:	mov	rax, r14
0x2208d:	jne	0x2212d
		Instruction group(s): [7, 1] 

0x22093:	add	rsp, 0x20a0
0x2209a:	pop	rbx
		Instruction group(s): [145] 

0x2209b:	pop	rbp
		Instruction group(s): [145] 

0x2209c:	pop	r12
		Instruction group(s): [145] 

0x2209e:	pop	r13
		Instruction group(s): [145] 

0x220a0:	pop	r14
		Instruction group(s): [145] 

0x220a2:	ret	
		Instruction group(s): [3, 145] 

0x220a3:	nop	dword ptr [rax + rax]
0x220a8:	mov	edx, 0x1000
0x220ad:	mov	rsi, r12
0x220b0:	mov	rdi, rbp
0x220b3:	call	0x8b90
		Instruction group(s): [2, 7, 145] 

0x220b8:	jmp	0x21f80
		Instruction group(s): [7, 1] 

0x220bd:	nop	dword ptr [rax]
0x220c0:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x220c5:	mov	eax, dword ptr [rax]
0x220c7:	cmp	eax, 4
0x220ca:	je	0x21f80
		Instruction group(s): [7, 1] 

0x220d0:	cmp	eax, 2
0x220d3:	je	0x22079
		Instruction group(s): [7, 1] 

0x220d5:	cmp	eax, 0x14
0x220d8:	je	0x22079
		Instruction group(s): [7, 1] 

0x220da:	lea	rdi, [rip + 0xc173]
0x220e1:	mov	rsi, rbp
0x220e4:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0x220e9:	jmp	0x22079
		Instruction group(s): [7, 1] 

0x220eb:	nop	dword ptr [rax + rax]
0x220f0:	lea	rdi, [rip + 0xc1aa]
0x220f7:	mov	rsi, rbx
0x220fa:	mov	r14d, 1
0x22100:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0x22105:	jmp	0x22079
		Instruction group(s): [7, 1] 

0x2210a:	nop	word ptr [rax + rax]
0x22110:	lea	rdi, [rip + 0xc145]
0x22117:	mov	rsi, rbp
0x2211a:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0x2211f:	jmp	0x22079
		Instruction group(s): [7, 1] 

0x22124:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x22129:	mov	eax, dword ptr [rax]
0x2212b:	jmp	0x220d0
		Instruction group(s): [7, 1] 

0x2212d:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x22132:	nop	dword ptr [rax]
0x22136:	nop	word ptr cs:[rax + rax]
0x22140:	push	r14
		Instruction group(s): [145] 

0x22142:	push	r13
		Instruction group(s): [145] 

0x22144:	push	r12
		Instruction group(s): [145] 

0x22146:	push	rbp
		Instruction group(s): [145] 

0x22147:	push	rbx
		Instruction group(s): [145] 

0x22148:	mov	rbx, rdi
0x2214b:	mov	rax, qword ptr [rbx + 0x18]
0x2214f:	test	rax, rax
0x22152:	je	0x22189
		Instruction group(s): [7, 1] 

0x22154:	nop	dword ptr [rax]
0x22158:	mov	rdx, qword ptr [rax + 0x18]
0x2215c:	test	byte ptr [rdx + 0x85], 4
0x22163:	je	0x22181
		Instruction group(s): [7, 1] 

0x22165:	movzx	ecx, byte ptr [rdx + 0x84]
0x2216c:	and	ecx, 3
0x2216f:	cmp	cl, 1
0x22172:	jbe	0x22181
		Instruction group(s): [7, 1] 

0x22174:	test	byte ptr [rbx + 0x86], 0x10
0x2217b:	jne	0x22210
		Instruction group(s): [7, 1] 

0x22181:	mov	rax, qword ptr [rax]
0x22184:	test	rax, rax
0x22187:	jne	0x22158
		Instruction group(s): [7, 1] 

0x22189:	mov	rbp, qword ptr [rbx]
0x2218c:	mov	r12, qword ptr [rbx + 0x60]
0x22190:	mov	rdi, rbp
0x22193:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x22198:	test	r12, r12
0x2219b:	mov	r13, rax
0x2219e:	mov	r14d, dword ptr [rip + 0x21738f]
0x221a5:	je	0x22220
		Instruction group(s): [7, 1] 

0x221a7:	mov	r12, qword ptr [r12]
0x221ab:	mov	rdi, r12
0x221ae:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x221b3:	xor	edi, edi
0x221b5:	test	r14d, r14d
0x221b8:	lea	r13, [rax + r13 + 4]
0x221bd:	mov	edx, 5
0x221c2:	lea	rsi, [rip + 0xc25f]
0x221c9:	je	0x2228d
		Instruction group(s): [7, 1] 

0x221cf:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x221d4:	lea	rsi, [rip + 0xc207]
0x221db:	sub	rsp, 8
0x221df:	lea	rcx, [rip + 0xb86b]
0x221e6:	mov	rdx, rax
0x221e9:	mov	r9, r12
0x221ec:	mov	r8, rbp
0x221ef:	push	rsi
		Instruction group(s): [145] 

0x221f0:	xor	eax, eax
0x221f2:	mov	rsi, r13
0x221f5:	xor	edi, edi
0x221f7:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x221fc:	pop	rax
		Instruction group(s): [145] 

0x221fd:	pop	rdx
		Instruction group(s): [145] 

0x221fe:	and	byte ptr [rbx + 0x86], 0xef
0x22205:	pop	rbx
		Instruction group(s): [145] 

0x22206:	pop	rbp
		Instruction group(s): [145] 

0x22207:	pop	r12
		Instruction group(s): [145] 

0x22209:	pop	r13
		Instruction group(s): [145] 

0x2220b:	pop	r14
		Instruction group(s): [145] 

0x2220d:	ret	
		Instruction group(s): [3, 145] 

0x2220e:	nop	
0x22210:	mov	rbx, rdx
0x22213:	jmp	0x2214b
		Instruction group(s): [7, 1] 

0x22218:	nop	dword ptr [rax + rax]
0x22220:	add	r13, 4
0x22224:	xor	edi, edi
0x22226:	test	r14d, r14d
0x22229:	mov	edx, 5
0x2222e:	lea	rsi, [rip + 0xc223]
0x22235:	je	0x2226c
		Instruction group(s): [7, 1] 

0x22237:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x2223c:	lea	r9, [rip + 0xc19f]
0x22243:	lea	rcx, [rip + 0xb807]
0x2224a:	mov	r8, rbp
0x2224d:	mov	rdx, rax
0x22250:	mov	rsi, r13
0x22253:	xor	edi, edi
0x22255:	xor	eax, eax
0x22257:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x2225c:	and	byte ptr [rbx + 0x86], 0xef
0x22263:	pop	rbx
		Instruction group(s): [145] 

0x22264:	pop	rbp
		Instruction group(s): [145] 

0x22265:	pop	r12
		Instruction group(s): [145] 

0x22267:	pop	r13
		Instruction group(s): [145] 

0x22269:	pop	r14
		Instruction group(s): [145] 

0x2226b:	ret	
		Instruction group(s): [3, 145] 

0x2226c:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x22271:	lea	r9, [rip + 0xb755]
0x22278:	mov	rdx, rax
0x2227b:	mov	r8, rbp
0x2227e:	mov	rsi, r13
0x22281:	xor	edi, edi
0x22283:	xor	eax, eax
0x22285:	mov	rcx, r9
0x22288:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x2228d:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x22292:	lea	rcx, [rip + 0xb734]
0x22299:	sub	rsp, 8
0x2229d:	mov	rdx, rax
0x222a0:	mov	r9, r12
0x222a3:	mov	r8, rbp
0x222a6:	mov	rsi, r13
0x222a9:	push	rcx
		Instruction group(s): [145] 

0x222aa:	xor	edi, edi
0x222ac:	xor	eax, eax
0x222ae:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x222b3:	nop	dword ptr [rax]
0x222b6:	nop	word ptr cs:[rax + rax]
0x222c0:	push	rbp
		Instruction group(s): [145] 

0x222c1:	mov	rbp, rsp
0x222c4:	push	r15
		Instruction group(s): [145] 

0x222c6:	push	r14
		Instruction group(s): [145] 

0x222c8:	push	r13
		Instruction group(s): [145] 

0x222ca:	push	r12
		Instruction group(s): [145] 

0x222cc:	mov	r14, rdi
0x222cf:	push	rbx
		Instruction group(s): [145] 

0x222d0:	mov	r13d, esi
0x222d3:	sub	rsp, 0xf8
0x222da:	mov	rdi, qword ptr [rdi]
0x222dd:	mov	rax, qword ptr fs:[0x28]
0x222e6:	mov	qword ptr [rbp - 0x38], rax
0x222ea:	xor	eax, eax
0x222ec:	call	0xae90
		Instruction group(s): [2, 7, 145] 

0x222f1:	test	eax, eax
0x222f3:	jne	0x22538
		Instruction group(s): [7, 1] 

0x222f9:	mov	rdi, qword ptr [r14]
0x222fc:	call	0x21ee0
		Instruction group(s): [2, 7, 145] 

0x22301:	cmp	rax, 1
0x22305:	mov	r12, rax
0x22308:	mov	qword ptr [rbp - 0xc0], rax
0x2230f:	jne	0x223b0
		Instruction group(s): [7, 1] 

0x22315:	test	r13d, r13d
0x22318:	je	0x223b0
		Instruction group(s): [7, 1] 

0x2231e:	test	byte ptr [r14 + 0x86], 2
0x22326:	je	0x22628
		Instruction group(s): [7, 1] 

0x2232c:	mov	rax, qword ptr [r14 + 0x68]
0x22330:	test	rax, rax
0x22333:	cmove	rax, r14
		Instruction group(s): [137] 

0x22337:	nop	word ptr [rax + rax]
0x22340:	cmp	r12, 1
0x22344:	je	0x22360
		Instruction group(s): [7, 1] 

0x22346:	movzx	edx, word ptr [rax + 0x84]
0x2234d:	and	dx, 0x410c
0x22352:	cmp	dx, 0x4000
0x22357:	jne	0x22360
		Instruction group(s): [7, 1] 

0x22359:	and	byte ptr [rax + 0x85], 0xbf
0x22360:	mov	qword ptr [rax + 0x70], r12
0x22364:	mov	rax, qword ptr [rax + 0x38]
0x22368:	test	rax, rax
0x2236b:	jne	0x22340
		Instruction group(s): [7, 1] 

0x2236d:	mov	rcx, qword ptr [rbp - 0x38]
0x22371:	xor	rcx, qword ptr fs:[0x28]
0x2237a:	mov	rax, r12
0x2237d:	jne	0x22ca2
		Instruction group(s): [7, 1] 

0x22383:	lea	rsp, [rbp - 0x28]
0x22387:	pop	rbx
		Instruction group(s): [145] 

0x22388:	pop	r12
		Instruction group(s): [145] 

0x2238a:	pop	r13
		Instruction group(s): [145] 

0x2238c:	pop	r14
		Instruction group(s): [145] 

0x2238e:	pop	r15
		Instruction group(s): [145] 

0x22390:	pop	rbp
		Instruction group(s): [145] 

0x22391:	ret	
		Instruction group(s): [3, 145] 

0x22392:	mov	r12, qword ptr [r14]
0x22395:	cmp	byte ptr [r12], 0x2d
0x2239a:	je	0x2285d
		Instruction group(s): [7, 1] 

0x223a0:	mov	r12, qword ptr [rbp - 0xc0]
0x223a7:	nop	word ptr [rax + rax]
0x223b0:	mov	eax, dword ptr [rip + 0x21724a]
0x223b6:	test	eax, eax
0x223b8:	jne	0x2232c
		Instruction group(s): [7, 1] 

0x223be:	cmp	r12, 1
0x223c2:	je	0x2232c
		Instruction group(s): [7, 1] 

0x223c8:	cmp	r12, -1
0x223cc:	je	0x2232c
		Instruction group(s): [7, 1] 

0x223d2:	test	byte ptr [r14 + 0x85], 4
0x223da:	jne	0x2232c
		Instruction group(s): [7, 1] 

0x223e0:	cmp	qword ptr [rip + 0x216769], r12
0x223e7:	jae	0x2232c
		Instruction group(s): [7, 1] 

0x223ed:	lea	rdi, [rbp - 0xa8]
0x223f4:	call	0x10520
		Instruction group(s): [2, 7, 145] 

0x223f9:	mov	ecx, dword ptr [rbp - 0xa8]
0x223ff:	lea	edx, [rcx - 1]
		Instruction group(s): [145] 

0x22402:	movsxd	rdx, edx
		Instruction group(s): [145] 

0x22405:	add	rdx, rax
0x22408:	cmp	rdx, r12
0x2240b:	mov	qword ptr [rip + 0x21673e], rdx
0x22412:	jae	0x22528
		Instruction group(s): [7, 1] 

0x22418:	mov	rcx, qword ptr [rbp - 0xc0]
0x2241f:	lea	esi, [rax - 3]
		Instruction group(s): [145] 

0x22422:	sub	rax, 3
0x22426:	pxor	xmm0, xmm0
		Instruction group(s): [149] 

0x2242a:	shr	rax, 0x1e
0x2242e:	and	esi, 0x3fffffff
0x22434:	lea	edx, [rcx - 3]
		Instruction group(s): [145] 

0x22437:	and	edx, 0x3fffffff
0x2243d:	sub	edx, esi
0x2243f:	cvtsi2sd	xmm0, edx
		Instruction group(s): [149] 

0x22443:	lea	rdx, [rcx - 3]
0x22447:	shr	rdx, 0x1e
0x2244b:	sub	rdx, rax
0x2244e:	divsd	xmm0, qword ptr [rip + 0xc562]
		Instruction group(s): [149] 

0x22456:	js	0x22b81
		Instruction group(s): [7, 1] 

0x2245c:	pxor	xmm1, xmm1
		Instruction group(s): [149] 

0x22460:	cvtsi2sd	xmm1, rdx
		Instruction group(s): [149] 

0x22465:	addsd	xmm0, xmm1
		Instruction group(s): [149] 

0x22469:	ucomisd	xmm0, qword ptr [rip + 0xc54f]
		Instruction group(s): [149] 

0x22471:	jb	0x22485
		Instruction group(s): [7, 1] 

0x22473:	movsd	xmm1, qword ptr [rip + 0xc54d]
		Instruction group(s): [149] 

0x2247b:	ucomisd	xmm1, xmm0
		Instruction group(s): [149] 

0x2247f:	jae	0x22c14
		Instruction group(s): [7, 1] 

0x22485:	lea	rbx, [rbp - 0xa0]
0x2248c:	lea	rcx, [rip + 0xbdea]
0x22493:	mov	edx, 0x64
0x22498:	mov	esi, 1
0x2249d:	mov	eax, 1
0x224a2:	mov	rdi, rbx
0x224a5:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x224aa:	lea	rsi, [rip + 0xc09f]
0x224b1:	mov	edx, 5
0x224b6:	xor	edi, edi
0x224b8:	mov	r13, qword ptr [r14]
0x224bb:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x224c0:	mov	rdi, qword ptr [r14]
0x224c3:	mov	r12, rax
0x224c6:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x224cb:	mov	rcx, rbx
0x224ce:	mov	esi, dword ptr [rcx]
0x224d0:	add	rcx, 4
0x224d4:	lea	edx, [rsi - 0x1010101]
		Instruction group(s): [145] 

0x224da:	not	esi
0x224dc:	and	edx, esi
0x224de:	and	edx, 0x80808080
0x224e4:	je	0x224ce
		Instruction group(s): [7, 1] 

0x224e6:	mov	esi, edx
0x224e8:	mov	r8, rbx
0x224eb:	shr	esi, 0x10
0x224ee:	test	edx, 0x8080
0x224f4:	cmove	edx, esi
		Instruction group(s): [137] 

0x224f7:	lea	rsi, [rcx + 2]
0x224fb:	cmove	rcx, rsi
		Instruction group(s): [137] 

0x224ff:	mov	esi, edx
0x22501:	add	sil, dl
0x22504:	mov	rdx, r12
0x22507:	sbb	rcx, 3
0x2250b:	xor	edi, edi
0x2250d:	sub	rcx, rbx
0x22510:	lea	rsi, [rax + rcx]
0x22514:	mov	rcx, r13
0x22517:	xor	eax, eax
0x22519:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x2251e:	mov	dword ptr [rip + 0x2170d8], 1
0x22528:	mov	r12, qword ptr [rbp - 0xc0]
0x2252f:	jmp	0x2232c
		Instruction group(s): [7, 1] 

0x22534:	nop	dword ptr [rax]
0x22538:	mov	rdi, qword ptr [r14]
0x2253b:	lea	rdx, [rbp - 0xb0]
0x22542:	lea	rsi, [rbp - 0xb8]
0x22549:	call	0xaf30
		Instruction group(s): [2, 7, 145] 

0x2254e:	mov	rdi, qword ptr [rbp - 0xb8]
0x22555:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x2255a:	test	rax, rax
0x2255d:	mov	rbx, rax
0x22560:	je	0x22841
		Instruction group(s): [7, 1] 

0x22566:	mov	esi, r13d
0x22569:	mov	rdi, rbx
0x2256c:	call	0x222c0
		Instruction group(s): [2, 7, 145] 

0x22571:	mov	qword ptr [rbp - 0xc0], rax
0x22578:	jmp	0x22583
		Instruction group(s): [7, 1] 

0x2257a:	nop	word ptr [rax + rax]
0x22580:	mov	rbx, rax
0x22583:	mov	rax, qword ptr [rbx + 0x48]
0x22587:	test	rax, rax
0x2258a:	jne	0x22580
		Instruction group(s): [7, 1] 

0x2258c:	test	r13d, r13d
0x2258f:	mov	r12, qword ptr [rbp - 0xb8]
0x22596:	je	0x225af
		Instruction group(s): [7, 1] 

0x22598:	mov	r13, qword ptr [rbx + 8]
0x2259c:	mov	rsi, r12
0x2259f:	mov	rdi, r13
0x225a2:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x225a7:	test	eax, eax
0x225a9:	jne	0x226ff
		Instruction group(s): [7, 1] 

0x225af:	mov	rdi, r12
0x225b2:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x225b7:	mov	r12, qword ptr [rbp - 0xc0]
0x225be:	or	byte ptr [r14 + 0x84], 0x80
0x225c6:	cmp	r12, 1
0x225ca:	je	0x2236d
		Instruction group(s): [7, 1] 

0x225d0:	mov	rdi, qword ptr [r14 + 8]
0x225d4:	lea	rsi, [rbp - 0xa8]
0x225db:	mov	r12d, 1
0x225e1:	call	0xaf70
		Instruction group(s): [2, 7, 145] 

0x225e6:	test	eax, eax
0x225e8:	je	0x22608
		Instruction group(s): [7, 1] 

0x225ea:	mov	rsi, qword ptr [rbp - 0xa8]
0x225f1:	test	rsi, rsi
0x225f4:	je	0x227e8
		Instruction group(s): [7, 1] 

0x225fa:	mov	rdi, qword ptr [r14 + 8]
0x225fe:	xor	edx, edx
0x22600:	call	0x103f0
		Instruction group(s): [2, 7, 145] 

0x22605:	mov	r12, rax
0x22608:	mov	eax, dword ptr [rip + 0x216ff2]
0x2260e:	mov	qword ptr [rbp - 0xc0], r12
0x22615:	test	eax, eax
0x22617:	jne	0x2232c
		Instruction group(s): [7, 1] 

0x2261d:	jmp	0x223be
		Instruction group(s): [7, 1] 

0x22622:	nop	word ptr [rax + rax]
0x22628:	mov	rdi, qword ptr [r14]
0x2262b:	lea	rsi, [rbp - 0xc0]
0x22632:	xor	ecx, ecx
0x22634:	xor	edx, edx
0x22636:	call	0x29190
		Instruction group(s): [2, 7, 145] 

0x2263b:	test	rax, rax
0x2263e:	mov	rbx, rax
0x22641:	je	0x22392
		Instruction group(s): [7, 1] 

0x22647:	mov	rax, qword ptr [rbp - 0xc0]
0x2264e:	test	rax, rax
0x22651:	je	0x22657
		Instruction group(s): [7, 1] 

0x22653:	mov	qword ptr [r14 + 0x70], rax
0x22657:	mov	rdi, rbx
0x2265a:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x2265f:	mov	rdi, qword ptr [r14]
0x22662:	mov	r12, rax
0x22665:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x2266a:	lea	esi, [r12 - 1]
		Instruction group(s): [145] 

0x2266f:	mov	rdi, rbx
0x22672:	sub	esi, eax
0x22674:	call	0x29110
		Instruction group(s): [2, 7, 145] 

0x22679:	test	eax, eax
0x2267b:	mov	rsi, rbx
0x2267e:	mov	rdi, r14
0x22681:	je	0x226be
		Instruction group(s): [7, 1] 

0x22683:	call	0xf710
		Instruction group(s): [2, 7, 145] 

0x22688:	jmp	0x22693
		Instruction group(s): [7, 1] 

0x2268a:	nop	word ptr [rax + rax]
0x22690:	mov	r14, rax
0x22693:	mov	rax, qword ptr [r14 + 0x48]
0x22697:	test	rax, rax
0x2269a:	jne	0x22690
		Instruction group(s): [7, 1] 

0x2269c:	mov	r12, qword ptr [r14 + 0x70]
0x226a0:	test	r12, r12
0x226a3:	jne	0x2236d
		Instruction group(s): [7, 1] 

0x226a9:	mov	esi, 1
0x226ae:	mov	rdi, r14
0x226b1:	call	0x222c0
		Instruction group(s): [2, 7, 145] 

0x226b6:	mov	r12, rax
0x226b9:	jmp	0x2236d
		Instruction group(s): [7, 1] 

0x226be:	call	0xf2c0
		Instruction group(s): [2, 7, 145] 

0x226c3:	jmp	0x226cb
		Instruction group(s): [7, 1] 

0x226c5:	nop	dword ptr [rax]
0x226c8:	mov	r14, rax
0x226cb:	mov	rax, qword ptr [r14 + 0x48]
0x226cf:	test	rax, rax
0x226d2:	jne	0x226c8
		Instruction group(s): [7, 1] 

0x226d4:	mov	r12, qword ptr [rbp - 0xc0]
0x226db:	cmp	r12, 2
0x226df:	je	0x223b0
		Instruction group(s): [7, 1] 

0x226e5:	cmp	r12, -1
0x226e9:	je	0x223b0
		Instruction group(s): [7, 1] 

0x226ef:	mov	rdi, rbx
0x226f2:	call	0x21ee0
		Instruction group(s): [2, 7, 145] 

0x226f7:	mov	r12, rax
0x226fa:	jmp	0x22608
		Instruction group(s): [7, 1] 

0x226ff:	mov	rdi, r13
0x22702:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x22707:	mov	rcx, qword ptr [rbp - 0xb0]
0x2270e:	mov	qword ptr [rbp - 0xd8], rax
0x22715:	mov	rdi, rcx
0x22718:	mov	qword ptr [rbp - 0xe8], rcx
0x2271f:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x22724:	mov	r8, qword ptr [rbp - 0xd8]
0x2272b:	mov	qword ptr [rbp - 0xe0], rax
0x22732:	mov	rsi, r13
0x22735:	lea	r15d, [r8 + rax]
		Instruction group(s): [145] 

0x22739:	mov	r8d, r8d
0x2273c:	mov	rdx, r8
0x2273f:	mov	qword ptr [rbp - 0xd8], r8
0x22746:	lea	eax, [r15 + 3]
		Instruction group(s): [145] 

0x2274a:	add	rax, 0x1e
0x2274e:	shr	rax, 4
0x22752:	shl	rax, 4
0x22756:	sub	rsp, rax
0x22759:	lea	r12, [rsp + 0xf]
0x2275e:	and	r12, 0xfffffffffffffff0
0x22762:	mov	rdi, r12
0x22765:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x2276a:	mov	r8, qword ptr [rbp - 0xd8]
0x22771:	mov	r9, qword ptr [rbp - 0xe0]
0x22778:	mov	rcx, qword ptr [rbp - 0xe8]
0x2277f:	lea	rdi, [r12 + r8 + 1]
0x22784:	mov	byte ptr [r12 + r8], 0x28
0x22789:	mov	edx, r9d
0x2278c:	mov	rsi, rcx
0x2278f:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x22794:	lea	eax, [r15 + 1]
		Instruction group(s): [145] 

0x22798:	mov	rdi, r12
0x2279b:	mov	byte ptr [r12 + rax], 0x29
0x227a0:	lea	eax, [r15 + 2]
		Instruction group(s): [145] 

0x227a4:	mov	byte ptr [r12 + rax], 0
0x227a9:	mov	rax, qword ptr [rbx + 8]
0x227ad:	cmp	qword ptr [rbx], rax
0x227b0:	je	0x22af2
		Instruction group(s): [7, 1] 

0x227b6:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x227bb:	mov	rdi, r14
0x227be:	mov	rsi, rax
0x227c1:	call	0xf2c0
		Instruction group(s): [2, 7, 145] 

0x227c6:	jmp	0x227d3
		Instruction group(s): [7, 1] 

0x227c8:	nop	dword ptr [rax + rax]
0x227d0:	mov	r14, rax
0x227d3:	mov	rax, qword ptr [r14 + 0x48]
0x227d7:	test	rax, rax
0x227da:	jne	0x227d0
		Instruction group(s): [7, 1] 

0x227dc:	mov	r12, qword ptr [rbp - 0xb8]
0x227e3:	jmp	0x225af
		Instruction group(s): [7, 1] 

0x227e8:	lea	rsi, [rip + 0xbc89]
0x227ef:	mov	edx, 5
0x227f4:	xor	edi, edi
0x227f6:	mov	r13, qword ptr [rbx]
0x227f9:	mov	r15, qword ptr [rbp - 0xb0]
0x22800:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x22805:	mov	rdi, qword ptr [rbx]
0x22808:	mov	r12, rax
0x2280b:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x22810:	mov	rdi, qword ptr [rbp - 0xb0]
0x22817:	mov	rbx, rax
0x2281a:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x2281f:	lea	rsi, [rbx + rax]
0x22823:	mov	r8, r15
0x22826:	mov	rcx, r13
0x22829:	mov	rdx, r12
0x2282c:	xor	edi, edi
0x2282e:	xor	eax, eax
0x22830:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x22835:	mov	rsi, qword ptr [rbp - 0xa8]
0x2283c:	jmp	0x225fa
		Instruction group(s): [7, 1] 

0x22841:	mov	rdi, qword ptr [rbp - 0xb8]
0x22848:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x2284d:	mov	rdi, rax
0x22850:	call	0xf1a0
		Instruction group(s): [2, 7, 145] 

0x22855:	mov	rbx, rax
0x22858:	jmp	0x22566
		Instruction group(s): [7, 1] 

0x2285d:	cmp	byte ptr [r12 + 1], 0x6c
0x22863:	jne	0x223a0
		Instruction group(s): [7, 1] 

0x22869:	lea	rdi, [rip + 0xb9f7]
0x22870:	call	0xe9f0
		Instruction group(s): [2, 7, 145] 

0x22875:	mov	rdi, rax
0x22878:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0x2287d:	lea	rcx, [r12 + 2]
0x22882:	mov	r15, rax
0x22885:	mov	qword ptr [rbp - 0x120], rax
0x2288c:	mov	rdi, rcx
0x2288f:	mov	qword ptr [rbp - 0xf8], rcx
0x22896:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x2289b:	mov	dword ptr [rbp - 0xfc], eax
0x228a1:	lea	rax, [rbp - 0xa8]
0x228a8:	mov	qword ptr [rbp - 0xa8], r15
0x228af:	mov	dword ptr [rbp - 0x100], 0
0x228b9:	mov	dword ptr [rbp - 0xd8], 0
0x228c3:	mov	qword ptr [rbp - 0xe8], rax
0x228ca:	lea	rax, [rbp - 0xc8]
0x228d1:	mov	qword ptr [rbp - 0x118], r14
0x228d8:	mov	qword ptr [rbp - 0xe0], rax
0x228df:	lea	rax, [rbp - 0xb8]
0x228e6:	mov	qword ptr [rbp - 0x108], rax
0x228ed:	lea	rax, [rbp - 0xc4]
0x228f4:	mov	qword ptr [rbp - 0x110], rax
0x228fb:	mov	rsi, qword ptr [rbp - 0xe0]
0x22902:	mov	rdi, qword ptr [rbp - 0xe8]
0x22909:	call	0x1bdc0
		Instruction group(s): [2, 7, 145] 

0x2290e:	test	rax, rax
0x22911:	mov	r13, rax
0x22914:	je	0x22c4e
		Instruction group(s): [7, 1] 

0x2291a:	lea	rdi, [rip + 0xb0ac]
0x22921:	call	0xe9f0
		Instruction group(s): [2, 7, 145] 

0x22926:	mov	r12, rax
0x22929:	mov	eax, dword ptr [rbp - 0xc8]
0x2292f:	mov	rdi, r13
0x22932:	add	rax, r13
0x22935:	movzx	r15d, byte ptr [rax]
0x22939:	mov	byte ptr [rax], 0
0x2293c:	call	0x1e250
		Instruction group(s): [2, 7, 145] 

0x22941:	test	rax, rax
0x22944:	mov	r14, rax
0x22947:	je	0x22b41
		Instruction group(s): [7, 1] 

0x2294d:	mov	r8, rax
0x22950:	mov	rsi, r13
0x22953:	mov	rdi, r12
0x22956:	sub	r8, r13
0x22959:	mov	edx, r8d
0x2295c:	mov	qword ptr [rbp - 0xf0], r8
0x22963:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x22968:	mov	edx, dword ptr [rbp - 0xfc]
0x2296e:	mov	rsi, qword ptr [rbp - 0xf8]
0x22975:	mov	rdi, rax
0x22978:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x2297d:	mov	r8, qword ptr [rbp - 0xf0]
0x22984:	mov	edx, dword ptr [rbp - 0xc8]
0x2298a:	lea	rsi, [r14 + 1]
0x2298e:	mov	rdi, rax
0x22991:	sub	edx, r8d
0x22994:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x22999:	mov	eax, dword ptr [rbp - 0xc8]
0x2299f:	mov	rdi, r12
0x229a2:	mov	byte ptr [r13 + rax], r15b
0x229a7:	call	0x21ee0
		Instruction group(s): [2, 7, 145] 

0x229ac:	cmp	rax, 1
0x229b0:	mov	qword ptr [rbp - 0xb0], rax
0x229b7:	jne	0x22c87
		Instruction group(s): [7, 1] 

0x229bd:	mov	rcx, qword ptr [rbp - 0x108]
0x229c4:	mov	rdx, qword ptr [rbp - 0x110]
0x229cb:	lea	rsi, [rbp - 0xb0]
0x229d2:	mov	rdi, r12
0x229d5:	call	0x29190
		Instruction group(s): [2, 7, 145] 

0x229da:	test	rax, rax
0x229dd:	je	0x22a00
		Instruction group(s): [7, 1] 

0x229df:	test	rbx, rbx
0x229e2:	mov	edx, dword ptr [rbp - 0xc4]
0x229e8:	je	0x22b19
		Instruction group(s): [7, 1] 

0x229ee:	cmp	dword ptr [rbp - 0xd8], edx
0x229f4:	ja	0x22b19
		Instruction group(s): [7, 1] 

0x229fa:	je	0x22b07
		Instruction group(s): [7, 1] 

0x22a00:	mov	r13d, dword ptr [rip + 0x216145]
0x22a07:	test	r13d, r13d
0x22a0a:	je	0x22b9f
		Instruction group(s): [7, 1] 

0x22a10:	mov	rdi, r12
0x22a13:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x22a18:	cmp	r13, rax
0x22a1b:	jae	0x22a40
		Instruction group(s): [7, 1] 

0x22a1d:	mov	edx, dword ptr [rip + 0x21336d]
0x22a23:	mov	rdi, qword ptr [rip + 0x216116]
0x22a2a:	mov	dword ptr [rip + 0x21611c], eax
0x22a30:	lea	esi, [rdx + rax + 2]
		Instruction group(s): [145] 

0x22a34:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x22a39:	mov	qword ptr [rip + 0x216100], rax
0x22a40:	lea	rax, [rip + 0x213359]
0x22a47:	mov	r15d, dword ptr [rip + 0x2160fa]
0x22a4e:	mov	r8, qword ptr [rax]
0x22a51:	not	r15d
0x22a54:	test	r8, r8
0x22a57:	je	0x228fb
		Instruction group(s): [7, 1] 

0x22a5d:	xor	r14d, r14d
0x22a60:	jmp	0x22a83
		Instruction group(s): [7, 1] 

0x22a62:	cmp	r13d, dword ptr [rbp - 0xd8]
0x22a69:	jb	0x22ac9
		Instruction group(s): [7, 1] 

0x22a6b:	lea	rax, [rip + 0x21332e]
0x22a72:	add	r14, 1
0x22a76:	mov	r8, qword ptr [rax + r14*8]
0x22a7a:	test	r8, r8
0x22a7d:	je	0x228fb
		Instruction group(s): [7, 1] 

0x22a83:	mov	rdi, qword ptr [rip + 0x2160b6]
0x22a8a:	lea	rcx, [rip + 0xb7e6]
0x22a91:	mov	r9, r12
0x22a94:	mov	rdx, -1
0x22a9b:	mov	esi, 1
0x22aa0:	xor	eax, eax
0x22aa2:	lea	r13d, [r15 + r14]
		Instruction group(s): [145] 

0x22aa6:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x22aab:	mov	rdi, qword ptr [rip + 0x21608e]
0x22ab2:	call	0x21ee0
		Instruction group(s): [2, 7, 145] 

0x22ab7:	cmp	rax, 1
0x22abb:	mov	qword ptr [rbp - 0xb0], rax
0x22ac2:	je	0x22a6b
		Instruction group(s): [7, 1] 

0x22ac4:	test	rbx, rbx
0x22ac7:	jne	0x22a62
		Instruction group(s): [7, 1] 

0x22ac9:	mov	rdi, qword ptr [rip + 0x216070]
0x22ad0:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x22ad5:	mov	rbx, rax
0x22ad8:	mov	rax, qword ptr [rbp - 0xb0]
0x22adf:	mov	dword ptr [rbp - 0xd8], r13d
0x22ae6:	mov	qword ptr [rbp - 0xc0], rax
0x22aed:	jmp	0x22a6b
		Instruction group(s): [7, 1] 

0x22af2:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x22af7:	mov	rdi, r14
0x22afa:	mov	rsi, rax
0x22afd:	call	0xf710
		Instruction group(s): [2, 7, 145] 

0x22b02:	jmp	0x227d3
		Instruction group(s): [7, 1] 

0x22b07:	mov	ecx, dword ptr [rbp - 0x100]
0x22b0d:	cmp	dword ptr [rbp - 0xb8], ecx
0x22b13:	jae	0x22a00
		Instruction group(s): [7, 1] 

0x22b19:	mov	ecx, dword ptr [rbp - 0xb8]
0x22b1f:	mov	dword ptr [rbp - 0xd8], edx
0x22b25:	mov	rbx, rax
0x22b28:	mov	dword ptr [rbp - 0x100], ecx
0x22b2e:	mov	rcx, qword ptr [rbp - 0xb0]
0x22b35:	mov	qword ptr [rbp - 0xc0], rcx
0x22b3c:	jmp	0x22a00
		Instruction group(s): [7, 1] 

0x22b41:	lea	rsi, [rip + 0xb9d8]
0x22b48:	mov	edx, 5
0x22b4d:	xor	edi, edi
0x22b4f:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x22b54:	mov	rdi, r13
0x22b57:	mov	r12, rax
0x22b5a:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x22b5f:	mov	rcx, r13
0x22b62:	mov	rsi, rax
0x22b65:	mov	rdx, r12
0x22b68:	xor	eax, eax
0x22b6a:	xor	edi, edi
0x22b6c:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x22b71:	mov	eax, dword ptr [rbp - 0xc8]
0x22b77:	mov	byte ptr [r13 + rax], r15b
0x22b7c:	jmp	0x228fb
		Instruction group(s): [7, 1] 

0x22b81:	mov	rax, rdx
0x22b84:	pxor	xmm1, xmm1
		Instruction group(s): [149] 

0x22b88:	shr	rax, 1
0x22b8b:	and	edx, 1
0x22b8e:	or	rax, rdx
0x22b91:	cvtsi2sd	xmm1, rax
		Instruction group(s): [149] 

0x22b96:	addsd	xmm1, xmm1
		Instruction group(s): [149] 

0x22b9a:	jmp	0x22465
		Instruction group(s): [7, 1] 

0x22b9f:	lea	rax, [rip + 0x2131fa]
0x22ba6:	mov	r13d, dword ptr [rip + 0x2131e3]
0x22bad:	mov	rdi, qword ptr [rax]
0x22bb0:	test	rdi, rdi
0x22bb3:	je	0x22bf0
		Instruction group(s): [7, 1] 

0x22bb5:	mov	eax, dword ptr [rip + 0x215f8d]
0x22bbb:	lea	r14, [rip + 0x2131de]
0x22bc2:	lea	r15d, [rax + 1]
		Instruction group(s): [145] 

0x22bc6:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x22bcb:	cmp	eax, r13d
0x22bce:	jle	0x22bd9
		Instruction group(s): [7, 1] 

0x22bd0:	mov	dword ptr [rip + 0x2131ba], eax
0x22bd6:	mov	r13d, eax
0x22bd9:	add	r14, 8
0x22bdd:	mov	rdi, qword ptr [r14]
0x22be0:	mov	dword ptr [rip + 0x215f61], r15d
0x22be7:	add	r15d, 1
0x22beb:	test	rdi, rdi
0x22bee:	jne	0x22bc6
		Instruction group(s): [7, 1] 

0x22bf0:	mov	rdi, r12
0x22bf3:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x22bf8:	lea	edi, [r13 + rax + 2]
		Instruction group(s): [145] 

0x22bfd:	mov	dword ptr [rip + 0x215f49], eax
0x22c03:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x22c08:	mov	qword ptr [rip + 0x215f31], rax
0x22c0f:	jmp	0x22a40
		Instruction group(s): [7, 1] 

0x22c14:	movsd	xmm1, qword ptr [rip + 0xbdb4]
		Instruction group(s): [149] 

0x22c1c:	ucomisd	xmm0, xmm1
		Instruction group(s): [149] 

0x22c20:	jae	0x22c6f
		Instruction group(s): [7, 1] 

0x22c22:	cvttsd2si	r8, xmm0
		Instruction group(s): [149] 

0x22c27:	lea	rbx, [rbp - 0xa0]
0x22c2e:	lea	rcx, [rip + 0x912f]
0x22c35:	mov	edx, 0x64
0x22c3a:	mov	esi, 1
0x22c3f:	xor	eax, eax
0x22c41:	mov	rdi, rbx
0x22c44:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x22c49:	jmp	0x224aa
		Instruction group(s): [7, 1] 

0x22c4e:	mov	r14, qword ptr [rbp - 0x118]
0x22c55:	mov	rdi, qword ptr [rbp - 0x120]
0x22c5c:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x22c61:	test	rbx, rbx
0x22c64:	jne	0x22647
		Instruction group(s): [7, 1] 

0x22c6a:	jmp	0x223a0
		Instruction group(s): [7, 1] 

0x22c6f:	subsd	xmm0, xmm1
		Instruction group(s): [149] 

0x22c73:	movabs	rax, 0x8000000000000000
0x22c7d:	cvttsd2si	r8, xmm0
		Instruction group(s): [149] 

0x22c82:	xor	r8, rax
0x22c85:	jmp	0x22c27
		Instruction group(s): [7, 1] 

0x22c87:	mov	rdi, r12
0x22c8a:	mov	r14, qword ptr [rbp - 0x118]
0x22c91:	mov	qword ptr [rbp - 0xc0], rax
0x22c98:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x22c9d:	mov	rbx, rax
0x22ca0:	jmp	0x22c55
		Instruction group(s): [7, 1] 

0x22ca2:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x22ca7:	nop	word ptr [rax + rax]
0x22cb0:	push	r13
		Instruction group(s): [145] 

0x22cb2:	push	r12
		Instruction group(s): [145] 

0x22cb4:	push	rbp
		Instruction group(s): [145] 

0x22cb5:	push	rbx
		Instruction group(s): [145] 

0x22cb6:	mov	rbx, rdi
0x22cb9:	sub	rsp, 0xb8
0x22cc0:	mov	rax, qword ptr fs:[0x28]
0x22cc9:	mov	qword ptr [rsp + 0xa8], rax
0x22cd1:	xor	eax, eax
0x22cd3:	movzx	edx, byte ptr [rdi + 0x85]
0x22cda:	movzx	eax, byte ptr [rdi + 0x84]
0x22ce1:	or	edx, 4
0x22ce4:	mov	ebp, eax
0x22ce6:	or	eax, 0xc
0x22ce9:	mov	byte ptr [rdi + 0x85], dl
0x22cef:	mov	ecx, dword ptr [rip + 0x21690f]
0x22cf5:	and	ebp, 0xc
0x22cf8:	mov	byte ptr [rdi + 0x84], al
0x22cfe:	test	ecx, ecx
0x22d00:	jne	0x22e30
		Instruction group(s): [7, 1] 

0x22d06:	and	eax, 3
0x22d09:	mov	edi, eax
0x22d0b:	cmp	qword ptr [rbx + 0x78], 0
0x22d10:	jne	0x22d1a
		Instruction group(s): [7, 1] 

0x22d12:	mov	rax, qword ptr [rbx + 0x70]
0x22d16:	mov	qword ptr [rbx + 0x78], rax
0x22d1a:	cmp	bpl, 8
0x22d1e:	je	0x22db0
		Instruction group(s): [7, 1] 

0x22d24:	test	ecx, ecx
0x22d26:	jne	0x22dbd
		Instruction group(s): [7, 1] 

0x22d2c:	mov	rcx, qword ptr [rbx + 0x68]
0x22d30:	test	rcx, rcx
0x22d33:	je	0x22d75
		Instruction group(s): [7, 1] 

0x22d35:	mov	rdx, qword ptr [rbx + 0x70]
0x22d39:	mov	rax, rcx
0x22d3c:	nop	dword ptr [rax]
0x22d40:	test	byte ptr [rax + 0x85], 4
0x22d47:	je	0x22d75
		Instruction group(s): [7, 1] 

0x22d49:	test	rdx, rdx
0x22d4c:	je	0x22d5f
		Instruction group(s): [7, 1] 

0x22d4e:	mov	rsi, qword ptr [rax + 0x70]
0x22d52:	cmp	rsi, rdx
0x22d55:	ja	0x22d5c
		Instruction group(s): [7, 1] 

0x22d57:	test	rsi, rsi
0x22d5a:	jne	0x22d5f
		Instruction group(s): [7, 1] 

0x22d5c:	mov	rdx, rsi
0x22d5f:	mov	rax, qword ptr [rax + 0x38]
0x22d63:	test	rax, rax
0x22d66:	jne	0x22d40
		Instruction group(s): [7, 1] 

0x22d68:	mov	qword ptr [rcx + 0x70], rdx
0x22d6c:	mov	rcx, qword ptr [rcx + 0x38]
0x22d70:	test	rcx, rcx
0x22d73:	jne	0x22d68
		Instruction group(s): [7, 1] 

0x22d75:	cmp	bpl, 8
0x22d79:	je	0x22ef8
		Instruction group(s): [7, 1] 

0x22d7f:	cmp	dil, 1
0x22d83:	je	0x22ee8
		Instruction group(s): [7, 1] 

0x22d89:	mov	rax, qword ptr [rsp + 0xa8]
0x22d91:	xor	rax, qword ptr fs:[0x28]
0x22d9a:	jne	0x23160
		Instruction group(s): [7, 1] 

0x22da0:	add	rsp, 0xb8
0x22da7:	pop	rbx
		Instruction group(s): [145] 

0x22da8:	pop	rbp
		Instruction group(s): [145] 

0x22da9:	pop	r12
		Instruction group(s): [145] 

0x22dab:	pop	r13
		Instruction group(s): [145] 

0x22dad:	ret	
		Instruction group(s): [3, 145] 

0x22dae:	nop	
0x22db0:	test	byte ptr [rbx + 0x85], 0x20
0x22db7:	jne	0x22d24
		Instruction group(s): [7, 1] 

0x22dbd:	mov	ecx, dword ptr [rip + 0x213619]
0x22dc3:	test	ecx, ecx
0x22dc5:	je	0x22ea0
		Instruction group(s): [7, 1] 

0x22dcb:	mov	rax, qword ptr [rbx + 0x20]
0x22dcf:	test	rax, rax
0x22dd2:	je	0x22ebc
		Instruction group(s): [7, 1] 

0x22dd8:	movzx	edx, word ptr [rax + 0x28]
0x22ddc:	test	dx, dx
0x22ddf:	je	0x22e25
		Instruction group(s): [7, 1] 

0x22de1:	mov	rsi, qword ptr [rax + 0x20]
0x22de5:	movzx	ecx, dx
0x22de8:	mov	rax, -1
0x22def:	test	byte ptr [rsi + rcx - 1], 1
0x22df4:	je	0x22e27
		Instruction group(s): [7, 1] 

0x22df6:	lea	rax, [rsi + rcx - 2]
0x22dfb:	sub	edx, 1
0x22dfe:	mov	rcx, rax
0x22e01:	sub	rcx, rdx
0x22e04:	jmp	0x22e20
		Instruction group(s): [7, 1] 

0x22e06:	nop	word ptr cs:[rax + rax]
0x22e10:	movzx	edx, byte ptr [rax]
0x22e13:	sub	rax, 1
0x22e17:	and	edx, 1
0x22e1a:	je	0x22f88
		Instruction group(s): [7, 1] 

0x22e20:	cmp	rcx, rax
0x22e23:	jne	0x22e10
		Instruction group(s): [7, 1] 

0x22e25:	xor	eax, eax
0x22e27:	mov	qword ptr [rbx + 0x70], rax
0x22e2b:	jmp	0x22d2c
		Instruction group(s): [7, 1] 

0x22e30:	xor	ecx, ecx
0x22e32:	and	eax, 3
0x22e35:	mov	edi, eax
0x22e37:	jne	0x22d0b
		Instruction group(s): [7, 1] 

0x22e3d:	mov	rax, qword ptr [rbx + 0x20]
0x22e41:	test	rax, rax
0x22e44:	je	0x22f68
		Instruction group(s): [7, 1] 

0x22e4a:	test	byte ptr [rax + 0x2b], 1
0x22e4e:	je	0x22fa0
		Instruction group(s): [7, 1] 

0x22e54:	movzx	edx, word ptr [rax + 0x28]
0x22e58:	test	edx, edx
0x22e5a:	je	0x22d0b
		Instruction group(s): [7, 1] 

0x22e60:	mov	rax, qword ptr [rax + 0x20]
0x22e64:	test	byte ptr [rax], 1
0x22e67:	je	0x22fa0
		Instruction group(s): [7, 1] 

0x22e6d:	lea	ecx, [rdx - 1]
		Instruction group(s): [145] 

0x22e70:	add	rax, 1
0x22e74:	add	rcx, rax
0x22e77:	jmp	0x22e90
		Instruction group(s): [7, 1] 

0x22e79:	nop	dword ptr [rax]
0x22e80:	movzx	edx, byte ptr [rax]
0x22e83:	add	rax, 1
0x22e87:	and	edx, 1
0x22e8a:	je	0x22fa0
		Instruction group(s): [7, 1] 

0x22e90:	cmp	rax, rcx
0x22e93:	jne	0x22e80
		Instruction group(s): [7, 1] 

0x22e95:	xor	ecx, ecx
0x22e97:	jmp	0x22d0b
		Instruction group(s): [7, 1] 

0x22e9c:	nop	dword ptr [rax]
0x22ea0:	mov	edx, dword ptr [rip + 0x21668a]
0x22ea6:	test	edx, edx
0x22ea8:	jne	0x22dcb
		Instruction group(s): [7, 1] 

0x22eae:	mov	eax, dword ptr [rip + 0x216750]
0x22eb4:	test	eax, eax
0x22eb6:	jne	0x22dcb
		Instruction group(s): [7, 1] 

0x22ebc:	xor	eax, eax
0x22ebe:	test	byte ptr [rbx + 0x85], 8
0x22ec5:	je	0x22e27
		Instruction group(s): [7, 1] 

0x22ecb:	xor	eax, eax
0x22ecd:	cmp	qword ptr [rbx + 0x20], 0
0x22ed2:	sete	al
0x22ed5:	neg	rax
0x22ed8:	mov	qword ptr [rbx + 0x70], rax
0x22edc:	jmp	0x22d2c
		Instruction group(s): [7, 1] 

0x22ee1:	nop	dword ptr [rax]
0x22ee8:	and	byte ptr [rbx + 0x84], 0xfc
0x22eef:	jmp	0x22d89
		Instruction group(s): [7, 1] 

0x22ef4:	nop	dword ptr [rax]
0x22ef8:	cmp	dil, 1
0x22efc:	je	0x22ee8
		Instruction group(s): [7, 1] 

0x22efe:	mov	rbp, qword ptr [rbx + 0x30]
0x22f02:	test	rbp, rbp
0x22f05:	jne	0x22f24
		Instruction group(s): [7, 1] 

0x22f07:	jmp	0x22d89
		Instruction group(s): [7, 1] 

0x22f0c:	nop	dword ptr [rax]
0x22f10:	xor	esi, esi
0x22f12:	call	0x222c0
		Instruction group(s): [2, 7, 145] 

0x22f17:	mov	rbp, qword ptr [rbp]
0x22f1b:	test	rbp, rbp
0x22f1e:	je	0x22d89
		Instruction group(s): [7, 1] 

0x22f24:	mov	rdi, qword ptr [rbp + 0x18]
0x22f28:	movzx	eax, byte ptr [rdi + 0x84]
0x22f2f:	movzx	edx, byte ptr [rdi + 0x85]
0x22f36:	or	eax, 0xc
0x22f39:	or	edx, 4
0x22f3c:	mov	byte ptr [rdi + 0x84], al
0x22f42:	mov	byte ptr [rdi + 0x85], dl
0x22f48:	and	eax, 0xfffffffc
0x22f4b:	movzx	ecx, byte ptr [rbx + 0x84]
0x22f52:	and	ecx, 3
0x22f55:	or	eax, ecx
0x22f57:	and	edx, 0x20
0x22f5a:	mov	byte ptr [rdi + 0x84], al
0x22f60:	jne	0x22f17
		Instruction group(s): [7, 1] 

0x22f62:	jmp	0x22f10
		Instruction group(s): [7, 1] 

0x22f64:	nop	dword ptr [rax]
0x22f68:	mov	edi, edx
0x22f6a:	and	edi, 0x20
0x22f6d:	je	0x22d0b
		Instruction group(s): [7, 1] 

0x22f73:	and	byte ptr [rbx + 0x84], 0xfc
0x22f7a:	xor	edi, edi
0x22f7c:	xor	ecx, ecx
0x22f7e:	jmp	0x22d0b
		Instruction group(s): [7, 1] 

0x22f83:	nop	dword ptr [rax + rax]
0x22f88:	mov	rax, -1
0x22f8f:	mov	qword ptr [rbx + 0x70], rax
0x22f93:	jmp	0x22d2c
		Instruction group(s): [7, 1] 

0x22f98:	nop	dword ptr [rax + rax]
0x22fa0:	test	byte ptr [rbx + 0x85], 0x20
0x22fa7:	jne	0x22f73
		Instruction group(s): [7, 1] 

0x22fa9:	mov	edi, dword ptr [rip + 0x216511]
0x22faf:	test	edi, edi
0x22fb1:	je	0x23006
		Instruction group(s): [7, 1] 

0x22fb3:	mov	esi, dword ptr [rip + 0x216577]
0x22fb9:	test	esi, esi
0x22fbb:	je	0x22fe7
		Instruction group(s): [7, 1] 

0x22fbd:	xor	edi, edi
0x22fbf:	movzx	eax, byte ptr [rbx + 0x84]
0x22fc6:	add	dword ptr [rip + 0x215b6b], 1
0x22fcd:	mov	ecx, 1
0x22fd2:	and	eax, 0xfffffffc
0x22fd5:	or	eax, edi
0x22fd7:	mov	byte ptr [rbx + 0x84], al
0x22fdd:	and	eax, 3
0x22fe0:	mov	edi, eax
0x22fe2:	jmp	0x22d0b
		Instruction group(s): [7, 1] 

0x22fe7:	mov	rdi, qword ptr [rbx]
0x22fea:	call	0xae90
		Instruction group(s): [2, 7, 145] 

0x22fef:	test	eax, eax
0x22ff1:	je	0x23029
		Instruction group(s): [7, 1] 

0x22ff3:	mov	rdi, qword ptr [rbx]
0x22ff6:	call	0xb030
		Instruction group(s): [2, 7, 145] 

0x22ffb:	test	eax, eax
0x22ffd:	mov	edi, 3
0x23002:	je	0x22fbd
		Instruction group(s): [7, 1] 

0x23004:	jmp	0x22fbf
		Instruction group(s): [7, 1] 

0x23006:	mov	r12, qword ptr [rbx]
0x23009:	mov	rdi, r12
0x2300c:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x23011:	lea	rdx, [rip + 0xb26a]
0x23018:	mov	rsi, rax
0x2301b:	mov	rcx, r12
0x2301e:	xor	edi, edi
0x23020:	xor	eax, eax
0x23022:	call	0x1ca50
		Instruction group(s): [2, 7, 145] 

0x23027:	jmp	0x22fb3
		Instruction group(s): [7, 1] 

0x23029:	mov	rdi, qword ptr [rbx]
0x2302c:	xor	eax, eax
0x2302e:	mov	edx, 0x1b6
0x23033:	mov	esi, 0x42
0x23038:	call	0x8c00
		Instruction group(s): [2, 7, 145] 

0x2303d:	test	eax, eax
0x2303f:	mov	r12d, eax
0x23042:	js	0x23136
		Instruction group(s): [7, 1] 

0x23048:	mov	byte ptr [rsp + 0xf], 0x78
0x2304d:	lea	r13, [rsp + 0x10]
0x23052:	jmp	0x23066
		Instruction group(s): [7, 1] 

0x23054:	nop	dword ptr [rax]
0x23058:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x2305d:	cmp	dword ptr [rax], 4
0x23060:	jne	0x230fb
		Instruction group(s): [7, 1] 

0x23066:	mov	rdx, r13
0x23069:	mov	esi, r12d
0x2306c:	mov	edi, 1
0x23071:	call	0x8ae0
		Instruction group(s): [2, 7, 145] 

0x23076:	cmp	eax, -1
0x23079:	je	0x23058
		Instruction group(s): [7, 1] 

0x2307b:	test	eax, eax
0x2307d:	js	0x230fb
		Instruction group(s): [7, 1] 

0x2307f:	lea	r13, [rsp + 0xf]
0x23084:	mov	edx, 1
0x23089:	mov	edi, r12d
0x2308c:	mov	rsi, r13
0x2308f:	call	0x8980
		Instruction group(s): [2, 7, 145] 

0x23094:	test	rax, rax
0x23097:	js	0x23114
		Instruction group(s): [7, 1] 

0x23099:	xor	edx, edx
0x2309b:	xor	esi, esi
0x2309d:	mov	edi, r12d
0x230a0:	call	0x88c0
		Instruction group(s): [2, 7, 145] 

0x230a5:	test	rax, rax
0x230a8:	js	0x23125
		Instruction group(s): [7, 1] 

0x230aa:	mov	edx, 1
0x230af:	mov	rsi, r13
0x230b2:	mov	edi, r12d
0x230b5:	call	0x8770
		Instruction group(s): [2, 7, 145] 

0x230ba:	test	rax, rax
0x230bd:	js	0x2314f
		Instruction group(s): [7, 1] 

0x230c3:	cmp	qword ptr [rsp + 0x40], 0
0x230c9:	jne	0x230ee
		Instruction group(s): [7, 1] 

0x230cb:	mov	edi, r12d
0x230ce:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0x230d3:	mov	rdi, qword ptr [rbx]
0x230d6:	xor	eax, eax
0x230d8:	mov	edx, 0x1b6
0x230dd:	mov	esi, 0x202
0x230e2:	call	0x8c00
		Instruction group(s): [2, 7, 145] 

0x230e7:	test	eax, eax
0x230e9:	mov	r12d, eax
0x230ec:	js	0x23165
		Instruction group(s): [7, 1] 

0x230ee:	mov	edi, r12d
0x230f1:	call	0x8930
		Instruction group(s): [2, 7, 145] 

0x230f6:	jmp	0x22fbd
		Instruction group(s): [7, 1] 

0x230fb:	mov	rsi, qword ptr [rbx]
0x230fe:	lea	rdi, [rip + 0xb194]
0x23105:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0x2310a:	mov	edi, 3
0x2310f:	jmp	0x22fbf
		Instruction group(s): [7, 1] 

0x23114:	mov	rsi, qword ptr [rbx]
0x23117:	lea	rdi, [rip + 0xb18a]
0x2311e:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0x23123:	jmp	0x2310a
		Instruction group(s): [7, 1] 

0x23125:	mov	rsi, qword ptr [rbx]
0x23128:	lea	rdi, [rip + 0xb187]
0x2312f:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0x23134:	jmp	0x2310a
		Instruction group(s): [7, 1] 

0x23136:	mov	rsi, qword ptr [rbx]
0x23139:	lea	rdi, [rip + 0xb14b]
0x23140:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0x23145:	mov	edi, 3
0x2314a:	jmp	0x22fbf
		Instruction group(s): [7, 1] 

0x2314f:	mov	rsi, qword ptr [rbx]
0x23152:	lea	rdi, [rip + 0xb16c]
0x23159:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0x2315e:	jmp	0x2310a
		Instruction group(s): [7, 1] 

0x23160:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x23165:	mov	rsi, qword ptr [rbx]
0x23168:	lea	rdi, [rip + 0xb11c]
0x2316f:	call	0x1cde0
		Instruction group(s): [2, 7, 145] 

0x23174:	jmp	0x2310a
		Instruction group(s): [7, 1] 

0x23176:	nop	word ptr cs:[rax + rax]
0x23180:	push	r15
		Instruction group(s): [145] 

0x23182:	push	r14
		Instruction group(s): [145] 

0x23184:	push	r13
		Instruction group(s): [145] 

0x23186:	push	r12
		Instruction group(s): [145] 

0x23188:	push	rbp
		Instruction group(s): [145] 

0x23189:	push	rbx
		Instruction group(s): [145] 

0x2318a:	sub	rsp, 0xa8
0x23191:	mov	r14, qword ptr [rdi + 0x68]
0x23195:	mov	eax, dword ptr [rip + 0x2159bd]
0x2319b:	mov	dword ptr [rsp + 0x50], esi
0x2319f:	mov	qword ptr [rsp + 0x58], rdi
0x231a4:	mov	rsi, qword ptr fs:[0x28]
0x231ad:	mov	qword ptr [rsp + 0x98], rsi
0x231b5:	xor	esi, esi
0x231b7:	test	r14, r14
0x231ba:	cmove	r14, rdi
		Instruction group(s): [137] 

0x231be:	movzx	ecx, byte ptr [r14 + 0x86]
0x231c6:	mov	edx, ecx
0x231c8:	shr	dl, 3
0x231cb:	and	edx, 1
0x231ce:	cmp	edx, eax
0x231d0:	je	0x23404
		Instruction group(s): [7, 1] 

0x231d6:	lea	rsi, [rsp + 0x6c]
0x231db:	mov	dword ptr [rsp + 0x3c], 0
0x231e3:	mov	qword ptr [rsp + 8], r14
0x231e8:	mov	qword ptr [rsp + 0x18], rsi
0x231ed:	nop	dword ptr [rax]
0x231f0:	mov	rcx, qword ptr [rsp + 8]
0x231f5:	and	eax, 1
0x231f8:	lea	edx, [rax*8]
		Instruction group(s): [145] 

0x231ff:	movzx	eax, byte ptr [rcx + 0x86]
0x23206:	mov	byte ptr [rsp + 4], al
0x2320a:	and	eax, 0xfffffff7
0x2320d:	or	eax, edx
0x2320f:	mov	byte ptr [rcx + 0x86], al
0x23215:	test	byte ptr [rip + 0x2131dc], 2
0x2321c:	jne	0x233bd
		Instruction group(s): [7, 1] 

0x23222:	mov	rsi, qword ptr [rsp + 8]
0x23227:	test	byte ptr [rsi + 0x85], 4
0x2322e:	je	0x2333b
		Instruction group(s): [7, 1] 

0x23234:	movzx	esi, byte ptr [rsi + 0x84]
0x2323b:	mov	eax, dword ptr [rip + 0x2131b7]
0x23241:	and	eax, 2
0x23244:	mov	edx, esi
0x23246:	mov	byte ptr [rsp + 4], sil
0x2324b:	and	edx, 3
0x2324e:	cmp	dl, 1
0x23251:	jbe	0x234c1
		Instruction group(s): [7, 1] 

0x23257:	test	eax, eax
0x23259:	je	0x2329d
		Instruction group(s): [7, 1] 

0x2325b:	mov	edi, dword ptr [rsp + 0x50]
0x2325f:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x23264:	mov	rax, qword ptr [rsp + 8]
0x23269:	lea	rsi, [rip + 0xb340]
0x23270:	mov	edx, 5
0x23275:	xor	edi, edi
0x23277:	mov	rbx, qword ptr [rax]
0x2327a:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x2327f:	mov	edi, 1
0x23284:	mov	rsi, rax
0x23287:	xor	eax, eax
0x23289:	mov	rdx, rbx
0x2328c:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x23291:	mov	rdi, qword ptr [rip + 0x212b88]
0x23298:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x2329d:	mov	rax, qword ptr [rsp + 8]
0x232a2:	movzx	eax, byte ptr [rax + 0x86]
0x232a9:	mov	byte ptr [rsp + 4], al
0x232ad:	and	eax, 0x11
0x232b0:	cmp	al, 0x10
0x232b2:	je	0x23f42
		Instruction group(s): [7, 1] 

0x232b8:	mov	rdx, qword ptr [rsp + 8]
0x232bd:	movzx	ebx, byte ptr [rdx + 0x84]
0x232c4:	and	ebx, 3
0x232c7:	jmp	0x232d3
		Instruction group(s): [7, 1] 

0x232c9:	nop	dword ptr [rax]
0x232d0:	mov	rdx, rax
0x232d3:	mov	rax, qword ptr [rdx + 0x48]
0x232d7:	test	rax, rax
0x232da:	jne	0x232d0
		Instruction group(s): [7, 1] 

0x232dc:	test	ebx, ebx
0x232de:	mov	qword ptr [rsp + 8], rdx
0x232e3:	je	0x232f3
		Instruction group(s): [7, 1] 

0x232e5:	mov	edx, dword ptr [rip + 0x216249]
0x232eb:	test	edx, edx
0x232ed:	je	0x2428b
		Instruction group(s): [7, 1] 

0x232f3:	mov	rcx, qword ptr [rsp + 8]
0x232f8:	movzx	eax, byte ptr [rcx + 0x84]
0x232ff:	mov	byte ptr [rsp + 4], al
0x23303:	and	eax, 0xc
0x23306:	sub	eax, 4
0x23309:	test	al, 0xf8
0x2330b:	je	0x24128
		Instruction group(s): [7, 1] 

0x23311:	mov	eax, dword ptr [rsp + 0x3c]
0x23315:	cmp	eax, ebx
0x23317:	cmovae	ebx, eax
		Instruction group(s): [137] 

0x2331a:	mov	rax, qword ptr [rcx + 0x38]
0x2331e:	mov	dword ptr [rsp + 0x3c], ebx
0x23322:	test	rax, rax
0x23325:	mov	qword ptr [rsp + 8], rax
0x2332a:	je	0x23494
		Instruction group(s): [7, 1] 

0x23330:	mov	eax, dword ptr [rip + 0x215822]
0x23336:	jmp	0x231f0
		Instruction group(s): [7, 1] 

0x2333b:	mov	rax, qword ptr [rsp + 8]
0x23340:	movzx	ebx, byte ptr [rax + 0x84]
0x23347:	mov	eax, ebx
0x23349:	shr	al, 2
0x2334c:	and	eax, 3
0x2334f:	cmp	al, 2
0x23351:	je	0x23db3
		Instruction group(s): [7, 1] 

0x23357:	jbe	0x234d5
		Instruction group(s): [7, 1] 

0x2335d:	test	byte ptr [rip + 0x213094], 2
0x23364:	je	0x233b0
		Instruction group(s): [7, 1] 

0x23366:	mov	edi, dword ptr [rsp + 0x50]
0x2336a:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x2336f:	mov	r14, qword ptr [rsp + 8]
0x23374:	lea	rsi, [rip + 0xaf88]
0x2337b:	mov	edx, 5
0x23380:	xor	edi, edi
0x23382:	mov	rbx, qword ptr [r14]
0x23385:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x2338a:	mov	edi, 1
0x2338f:	mov	rsi, rax
0x23392:	xor	eax, eax
0x23394:	mov	rdx, rbx
0x23397:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x2339c:	mov	rdi, qword ptr [rip + 0x212a7d]
0x233a3:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x233a8:	movzx	ebx, byte ptr [r14 + 0x84]
0x233b0:	and	ebx, 3
0x233b3:	mov	rdx, qword ptr [rsp + 8]
0x233b8:	jmp	0x232d3
		Instruction group(s): [7, 1] 

0x233bd:	mov	edi, dword ptr [rsp + 0x50]
0x233c1:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x233c6:	mov	rax, qword ptr [rsp + 8]
0x233cb:	lea	rsi, [rip + 0xb1be]
0x233d2:	xor	edi, edi
0x233d4:	mov	edx, 5
0x233d9:	mov	rbx, qword ptr [rax]
0x233dc:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x233e1:	mov	edi, 1
0x233e6:	mov	rsi, rax
0x233e9:	xor	eax, eax
0x233eb:	mov	rdx, rbx
0x233ee:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x233f3:	mov	rdi, qword ptr [rip + 0x212a26]
0x233fa:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x233ff:	jmp	0x23222
		Instruction group(s): [7, 1] 

0x23404:	test	byte ptr [r14 + 0x85], 4
0x2340c:	je	0x2342a
		Instruction group(s): [7, 1] 

0x2340e:	movzx	edx, byte ptr [r14 + 0x84]
0x23416:	and	edx, 3
0x23419:	cmp	dl, 1
0x2341c:	jbe	0x2342a
		Instruction group(s): [7, 1] 

0x2341e:	and	ecx, 0x11
0x23421:	cmp	cl, 0x10
0x23424:	je	0x231d6
		Instruction group(s): [7, 1] 

0x2342a:	test	byte ptr [rip + 0x212fc7], 2
0x23431:	je	0x23475
		Instruction group(s): [7, 1] 

0x23433:	mov	edi, dword ptr [rsp + 0x50]
0x23437:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x2343c:	mov	rax, qword ptr [rsp + 0x58]
0x23441:	lea	rsi, [rip + 0xae8c]
0x23448:	mov	edx, 5
0x2344d:	xor	edi, edi
0x2344f:	mov	rbx, qword ptr [rax]
0x23452:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x23457:	mov	edi, 1
0x2345c:	mov	rsi, rax
0x2345f:	xor	eax, eax
0x23461:	mov	rdx, rbx
0x23464:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x23469:	mov	rdi, qword ptr [rip + 0x2129b0]
0x23470:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x23475:	movzx	eax, byte ptr [r14 + 0x84]
0x2347d:	mov	edx, eax
0x2347f:	and	eax, 3
0x23482:	and	edx, 0xc
0x23485:	cmp	dl, 0xc
0x23488:	mov	edx, 0
0x2348d:	cmove	edx, eax
		Instruction group(s): [137] 

0x23490:	mov	dword ptr [rsp + 0x3c], edx
0x23494:	mov	rcx, qword ptr [rsp + 0x98]
0x2349c:	xor	rcx, qword ptr fs:[0x28]
0x234a5:	mov	eax, dword ptr [rsp + 0x3c]
0x234a9:	jne	0x2454e
		Instruction group(s): [7, 1] 

0x234af:	add	rsp, 0xa8
0x234b6:	pop	rbx
		Instruction group(s): [145] 

0x234b7:	pop	rbp
		Instruction group(s): [145] 

0x234b8:	pop	r12
		Instruction group(s): [145] 

0x234ba:	pop	r13
		Instruction group(s): [145] 

0x234bc:	pop	r14
		Instruction group(s): [145] 

0x234be:	pop	r15
		Instruction group(s): [145] 

0x234c0:	ret	
		Instruction group(s): [3, 145] 

0x234c1:	test	eax, eax
0x234c3:	jne	0x23fc7
		Instruction group(s): [7, 1] 

0x234c9:	xor	ebx, ebx
0x234cb:	mov	rdx, qword ptr [rsp + 8]
0x234d0:	jmp	0x232d3
		Instruction group(s): [7, 1] 

0x234d5:	mov	rcx, qword ptr [rsp + 8]
0x234da:	movzx	eax, byte ptr [rcx + 0x86]
0x234e1:	mov	edx, eax
0x234e3:	and	eax, 0xffffffef
0x234e6:	and	edx, 1
0x234e9:	shl	edx, 4
0x234ec:	or	eax, edx
0x234ee:	mov	byte ptr [rcx + 0x86], al
0x234f4:	mov	eax, dword ptr [rsp + 0x50]
0x234f8:	add	eax, 1
0x234fb:	mov	dword ptr [rsp + 0x38], eax
0x234ff:	mov	rax, qword ptr [rcx + 0x68]
0x23503:	test	rax, rax
0x23506:	cmove	rax, rcx
		Instruction group(s): [137] 

0x2350a:	or	byte ptr [rax + 0x85], 2
0x23511:	mov	rax, qword ptr [rcx + 0x70]
0x23515:	test	rax, rax
0x23518:	mov	qword ptr [rsp + 0x48], rax
0x2351d:	je	0x23fe9
		Instruction group(s): [7, 1] 

0x23523:	mov	rbp, qword ptr [rsp + 8]
0x23528:	jmp	0x23533
		Instruction group(s): [7, 1] 

0x2352a:	nop	word ptr [rax + rax]
0x23530:	mov	rbp, rax
0x23533:	mov	rax, qword ptr [rbp + 0x48]
0x23537:	test	rax, rax
0x2353a:	jne	0x23530
		Instruction group(s): [7, 1] 

0x2353c:	mov	rax, qword ptr [rsp + 0x48]
0x23541:	cmp	rax, 1
0x23545:	sete	byte ptr [rsp + 0x57]
0x2354a:	movzx	esi, byte ptr [rsp + 0x57]
0x2354f:	mov	dword ptr [rsp + 4], esi
0x23553:	je	0x23f51
		Instruction group(s): [7, 1] 

0x23559:	mov	rsi, qword ptr [rsp + 0x48]
0x2355e:	lea	rax, [rsi - 3]
0x23562:	mov	qword ptr [rsp + 0x10], rsi
0x23567:	cmp	rax, -0x4653601
0x2356d:	ja	0x2357c
		Instruction group(s): [7, 1] 

0x2356f:	cmp	byte ptr [rbp + 0x84], 0
0x23576:	js	0x24197
		Instruction group(s): [7, 1] 

0x2357c:	movzx	eax, byte ptr [rbp + 0x85]
0x23583:	mov	rdx, qword ptr [rbp + 0x20]
0x23587:	test	al, 0x20
0x23589:	jne	0x237c4
		Instruction group(s): [7, 1] 

0x2358f:	test	rdx, rdx
0x23592:	je	0x23794
		Instruction group(s): [7, 1] 

0x23598:	mov	rax, qword ptr [rbp + 0x30]
0x2359c:	mov	qword ptr [rsp + 0x88], rbp
0x235a4:	xor	r14d, r14d
0x235a7:	xor	ebx, ebx
0x235a9:	mov	qword ptr [rsp + 0x40], rax
0x235ae:	mov	qword ptr [rsp + 0x70], rax
0x235b3:	mov	rax, rbp
0x235b6:	nop	word ptr cs:[rax + rax]
0x235c0:	mov	r15, qword ptr [rax + 0x18]
0x235c4:	xor	r13d, r13d
0x235c7:	test	r15, r15
0x235ca:	je	0x23775
		Instruction group(s): [7, 1] 

0x235d0:	mov	rax, qword ptr [r15 + 0x18]
0x235d4:	mov	rdi, qword ptr [rax + 0x48]
0x235d8:	test	rdi, rdi
0x235db:	jne	0x235eb
		Instruction group(s): [7, 1] 

0x235dd:	jmp	0x238e0
		Instruction group(s): [7, 1] 

0x235e2:	nop	word ptr [rax + rax]
0x235e8:	mov	rdi, rax
0x235eb:	mov	rax, qword ptr [rdi + 0x48]
0x235ef:	test	rax, rax
0x235f2:	jne	0x235e8
		Instruction group(s): [7, 1] 

0x235f4:	mov	qword ptr [r15 + 0x18], rdi
0x235f8:	mov	r12, qword ptr [rdi + 0x70]
0x235fc:	test	r12, r12
0x235ff:	jne	0x238d0
		Instruction group(s): [7, 1] 

0x23605:	mov	esi, 1
0x2360a:	call	0x222c0
		Instruction group(s): [2, 7, 145] 

0x2360f:	mov	r12, rax
0x23612:	mov	rax, qword ptr [r15 + 0x18]
0x23616:	mov	rdi, qword ptr [rax + 0x48]
0x2361a:	test	rdi, rdi
0x2361d:	jne	0x2362b
		Instruction group(s): [7, 1] 

0x2361f:	jmp	0x24553
		Instruction group(s): [7, 1] 

0x23624:	nop	dword ptr [rax]
0x23628:	mov	rdi, rax
0x2362b:	mov	rax, qword ptr [rdi + 0x48]
0x2362f:	test	rax, rax
0x23632:	jne	0x23628
		Instruction group(s): [7, 1] 

0x23634:	mov	qword ptr [r15 + 0x18], rdi
0x23638:	mov	rax, qword ptr [rdi + 0x68]
0x2363c:	test	rax, rax
0x2363f:	cmove	rax, rdi
		Instruction group(s): [137] 

0x23643:	test	byte ptr [rax + 0x85], 2
0x2364a:	jne	0x23858
		Instruction group(s): [7, 1] 

0x23650:	mov	r13d, dword ptr [rip + 0x212d51]
0x23657:	mov	eax, dword ptr [rsp + 4]
0x2365b:	mov	qword ptr [rdi + 0x60], rbp
0x2365f:	test	r13d, r13d
0x23662:	mov	dword ptr [rsp + 0x6c], eax
0x23666:	je	0x2368b
		Instruction group(s): [7, 1] 

0x23668:	movzx	eax, byte ptr [rdi + 0x86]
0x2366f:	movzx	edx, byte ptr [rbp + 0x86]
0x23676:	mov	r13d, eax
0x23679:	and	edx, 1
0x2367c:	and	eax, 0xfffffffe
0x2367f:	or	eax, edx
0x23681:	and	r13d, 1
0x23685:	mov	byte ptr [rdi + 0x86], al
0x2368b:	mov	rcx, qword ptr [rsp + 0x18]
0x23690:	mov	rdx, qword ptr [rsp + 0x10]
0x23695:	mov	esi, dword ptr [rsp + 0x38]
0x23699:	call	0x24610
		Instruction group(s): [2, 7, 145] 

0x2369e:	mov	r9d, dword ptr [rip + 0x212d03]
0x236a5:	cmp	ebx, eax
0x236a7:	cmovb	ebx, eax
		Instruction group(s): [137] 

0x236aa:	mov	rax, qword ptr [r15 + 0x18]
0x236ae:	test	r9d, r9d
0x236b1:	je	0x236cb
		Instruction group(s): [7, 1] 

0x236b3:	movzx	edx, byte ptr [rax + 0x86]
0x236ba:	and	r13d, 1
0x236be:	and	edx, 0xfffffffe
0x236c1:	or	r13d, edx
0x236c4:	mov	byte ptr [rax + 0x86], r13b
0x236cb:	test	byte ptr [r15 + 0x21], 1
0x236d0:	jne	0x236da
		Instruction group(s): [7, 1] 

0x236d2:	mov	ecx, dword ptr [rsp + 0x6c]
0x236d6:	mov	dword ptr [rsp + 4], ecx
0x236da:	mov	rdi, qword ptr [rax + 0x48]
0x236de:	test	rdi, rdi
0x236e1:	jne	0x236f3
		Instruction group(s): [7, 1] 

0x236e3:	jmp	0x23900
		Instruction group(s): [7, 1] 

0x236e8:	nop	dword ptr [rax + rax]
0x236f0:	mov	rdi, rax
0x236f3:	mov	rax, qword ptr [rdi + 0x48]
0x236f7:	test	rax, rax
0x236fa:	jne	0x236f0
		Instruction group(s): [7, 1] 

0x236fc:	mov	qword ptr [r15 + 0x18], rdi
0x23700:	mov	rdx, qword ptr [rdi + 0x68]
0x23704:	test	rdx, rdx
0x23707:	cmove	rdx, rdi
		Instruction group(s): [137] 

0x2370b:	nop	dword ptr [rax + rax]
0x23710:	movzx	eax, byte ptr [rdx + 0x84]
0x23717:	mov	rdx, qword ptr [rdx + 0x38]
0x2371b:	and	eax, 0xc
0x2371e:	sub	eax, 4
0x23721:	test	al, 0xf8
0x23723:	sete	al
0x23726:	movzx	eax, al
0x23729:	or	r14d, eax
0x2372c:	test	rdx, rdx
0x2372f:	jne	0x23710
		Instruction group(s): [7, 1] 

0x23731:	test	ebx, ebx
0x23733:	je	0x23741
		Instruction group(s): [7, 1] 

0x23735:	mov	r8d, dword ptr [rip + 0x215df8]
0x2373c:	test	r8d, r8d
0x2373f:	je	0x23775
		Instruction group(s): [7, 1] 

0x23741:	test	r14d, r14d
0x23744:	jne	0x23766
		Instruction group(s): [7, 1] 

0x23746:	mov	rax, qword ptr [rdi + 0x70]
0x2374a:	test	rax, rax
0x2374d:	je	0x238f0
		Instruction group(s): [7, 1] 

0x23753:	cmp	rax, r12
0x23756:	setne	al
0x23759:	cmp	r12, 1
0x2375d:	sete	dl
0x23760:	or	eax, edx
0x23762:	mov	byte ptr [r15 + 0x20], al
0x23766:	mov	r13, r15
0x23769:	mov	r15, qword ptr [r15]
0x2376c:	test	r15, r15
0x2376f:	jne	0x235d0
		Instruction group(s): [7, 1] 

0x23775:	mov	rsi, qword ptr [rsp + 0x40]
0x2377a:	test	rsi, rsi
0x2377d:	je	0x2391c
		Instruction group(s): [7, 1] 

0x23783:	mov	rcx, qword ptr [rsi]
0x23786:	mov	rax, qword ptr [rsi + 0x18]
0x2378a:	mov	qword ptr [rsp + 0x40], rcx
0x2378f:	jmp	0x235c0
		Instruction group(s): [7, 1] 

0x23794:	test	al, 1
0x23796:	jne	0x237d4
		Instruction group(s): [7, 1] 

0x23798:	mov	esi, dword ptr [rsp + 0x38]
0x2379c:	mov	rdi, rbp
0x2379f:	call	0x16170
		Instruction group(s): [2, 7, 145] 

0x237a4:	test	eax, eax
0x237a6:	je	0x243e0
		Instruction group(s): [7, 1] 

0x237ac:	test	byte ptr [rip + 0x212c45], 8
0x237b3:	jne	0x2458e
		Instruction group(s): [7, 1] 

0x237b9:	or	byte ptr [rbp + 0x85], 1
0x237c0:	mov	rdx, qword ptr [rbp + 0x20]
0x237c4:	test	rdx, rdx
0x237c7:	jne	0x23598
		Instruction group(s): [7, 1] 

0x237cd:	movzx	eax, byte ptr [rbp + 0x85]
0x237d4:	test	al, 8
0x237d6:	jne	0x23598
		Instruction group(s): [7, 1] 

0x237dc:	mov	rax, qword ptr [rip + 0x215d75]
0x237e3:	test	rax, rax
0x237e6:	je	0x23598
		Instruction group(s): [7, 1] 

0x237ec:	mov	rax, qword ptr [rax + 0x20]
0x237f0:	test	rax, rax
0x237f3:	je	0x23598
		Instruction group(s): [7, 1] 

0x237f9:	test	byte ptr [rip + 0x212bf8], 8
0x23800:	je	0x2384b
		Instruction group(s): [7, 1] 

0x23802:	mov	edi, dword ptr [rsp + 0x38]
0x23806:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x2380b:	mov	rbx, qword ptr [rbp]
0x2380f:	lea	rsi, [rip + 0xae92]
0x23816:	mov	edx, 5
0x2381b:	xor	edi, edi
0x2381d:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x23822:	mov	rdx, rbx
0x23825:	mov	rsi, rax
0x23828:	mov	edi, 1
0x2382d:	xor	eax, eax
0x2382f:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x23834:	mov	rdi, qword ptr [rip + 0x2125e5]
0x2383b:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x23840:	mov	rax, qword ptr [rip + 0x215d11]
0x23847:	mov	rax, qword ptr [rax + 0x20]
0x2384b:	mov	qword ptr [rbp + 0x20], rax
0x2384f:	jmp	0x23598
		Instruction group(s): [7, 1] 

0x23854:	nop	dword ptr [rax]
0x23858:	mov	r8, qword ptr [rdi]
0x2385b:	mov	rcx, qword ptr [rbp]
0x2385f:	lea	rsi, [rip + 0xae62]
0x23866:	mov	edx, 5
0x2386b:	xor	edi, edi
0x2386d:	mov	qword ptr [rsp + 0x30], r8
0x23872:	mov	qword ptr [rsp + 0x28], rcx
0x23877:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x2387c:	mov	rdi, qword ptr [rbp]
0x23880:	mov	qword ptr [rsp + 0x20], rax
0x23885:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x2388a:	mov	r12, rax
0x2388d:	mov	rax, qword ptr [r15 + 0x18]
0x23891:	mov	rdi, qword ptr [rax]
0x23894:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x23899:	mov	r8, qword ptr [rsp + 0x30]
0x2389e:	mov	rcx, qword ptr [rsp + 0x28]
0x238a3:	lea	rsi, [r12 + rax]
0x238a7:	mov	rdx, qword ptr [rsp + 0x20]
0x238ac:	xor	edi, edi
0x238ae:	xor	eax, eax
0x238b0:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x238b5:	test	r13, r13
0x238b8:	je	0x23910
		Instruction group(s): [7, 1] 

0x238ba:	mov	rax, qword ptr [r15]
0x238bd:	mov	qword ptr [r13], rax
0x238c1:	mov	r15, qword ptr [r15]
0x238c4:	jmp	0x2376c
		Instruction group(s): [7, 1] 

0x238c9:	nop	dword ptr [rax]
0x238d0:	mov	rdi, qword ptr [r15 + 0x18]
0x238d4:	jmp	0x23638
		Instruction group(s): [7, 1] 

0x238d9:	nop	dword ptr [rax]
0x238e0:	mov	rdi, rax
0x238e3:	jmp	0x235f8
		Instruction group(s): [7, 1] 

0x238e8:	nop	dword ptr [rax + rax]
0x238f0:	mov	esi, 1
0x238f5:	call	0x222c0
		Instruction group(s): [2, 7, 145] 

0x238fa:	jmp	0x23753
		Instruction group(s): [7, 1] 

0x238ff:	nop	
0x23900:	mov	rdi, rax
0x23903:	jmp	0x23700
		Instruction group(s): [7, 1] 

0x23908:	nop	dword ptr [rax + rax]
0x23910:	mov	r15, qword ptr [r15]
0x23913:	mov	qword ptr [rbp + 0x18], r15
0x23917:	jmp	0x2376c
		Instruction group(s): [7, 1] 

0x2391c:	mov	esi, dword ptr [rsp + 4]
0x23920:	test	esi, esi
0x23922:	je	0x23e36
		Instruction group(s): [7, 1] 

0x23928:	mov	r12, qword ptr [rbp + 0x18]
0x2392c:	test	r12, r12
0x2392f:	jne	0x2394d
		Instruction group(s): [7, 1] 

0x23931:	jmp	0x23ab9
		Instruction group(s): [7, 1] 

0x23936:	nop	word ptr cs:[rax + rax]
0x23940:	mov	r12, qword ptr [r12]
0x23944:	test	r12, r12
0x23947:	je	0x23ab9
		Instruction group(s): [7, 1] 

0x2394d:	mov	rax, qword ptr [r12 + 0x18]
0x23952:	test	byte ptr [rax + 0x85], 0x40
0x23959:	je	0x23940
		Instruction group(s): [7, 1] 

0x2395b:	mov	r15, qword ptr [rax + 0x70]
0x2395f:	test	r15, r15
0x23962:	je	0x23e0c
		Instruction group(s): [7, 1] 

0x23968:	mov	rdi, qword ptr [rax + 0x48]
0x2396c:	test	rdi, rdi
0x2396f:	jne	0x23983
		Instruction group(s): [7, 1] 

0x23971:	jmp	0x23e2e
		Instruction group(s): [7, 1] 

0x23976:	nop	word ptr cs:[rax + rax]
0x23980:	mov	rdi, rax
0x23983:	mov	rax, qword ptr [rdi + 0x48]
0x23987:	test	rax, rax
0x2398a:	jne	0x23980
		Instruction group(s): [7, 1] 

0x2398c:	mov	qword ptr [r12 + 0x18], rdi
0x23991:	mov	r13d, dword ptr [rip + 0x212a10]
0x23998:	mov	qword ptr [rdi + 0x60], rbp
0x2399c:	test	r13d, r13d
0x2399f:	je	0x239c4
		Instruction group(s): [7, 1] 

0x239a1:	movzx	eax, byte ptr [rdi + 0x86]
0x239a8:	movzx	edx, byte ptr [rbp + 0x86]
0x239af:	mov	r13d, eax
0x239b2:	and	edx, 1
0x239b5:	and	eax, 0xfffffffe
0x239b8:	or	eax, edx
0x239ba:	and	r13d, 1
0x239be:	mov	byte ptr [rdi + 0x86], al
0x239c4:	mov	eax, dword ptr [rip + 0x21518e]
0x239ca:	test	eax, eax
0x239cc:	sete	al
0x239cf:	lea	edx, [rax*8]
		Instruction group(s): [145] 

0x239d6:	movzx	eax, byte ptr [rdi + 0x86]
0x239dd:	and	eax, 0xfffffff7
0x239e0:	or	eax, edx
0x239e2:	mov	byte ptr [rdi + 0x86], al
0x239e8:	mov	esi, dword ptr [rsp + 0x38]
0x239ec:	call	0x23180
		Instruction group(s): [2, 7, 145] 

0x239f1:	mov	edx, dword ptr [rip + 0x2129b1]
0x239f7:	cmp	ebx, eax
0x239f9:	cmovb	ebx, eax
		Instruction group(s): [137] 

0x239fc:	mov	rax, qword ptr [r12 + 0x18]
0x23a01:	test	edx, edx
0x23a03:	je	0x23a1d
		Instruction group(s): [7, 1] 

0x23a05:	movzx	edx, byte ptr [rax + 0x86]
0x23a0c:	mov	ecx, r13d
0x23a0f:	and	ecx, 1
0x23a12:	and	edx, 0xfffffffe
0x23a15:	or	ecx, edx
0x23a17:	mov	byte ptr [rax + 0x86], cl
0x23a1d:	mov	rdi, qword ptr [rax + 0x48]
0x23a21:	test	rdi, rdi
0x23a24:	jne	0x23a33
		Instruction group(s): [7, 1] 

0x23a26:	jmp	0x23f3a
		Instruction group(s): [7, 1] 

0x23a2b:	nop	dword ptr [rax + rax]
0x23a30:	mov	rdi, rax
0x23a33:	mov	rax, qword ptr [rdi + 0x48]
0x23a37:	test	rax, rax
0x23a3a:	jne	0x23a30
		Instruction group(s): [7, 1] 

0x23a3c:	mov	qword ptr [r12 + 0x18], rdi
0x23a41:	mov	rdx, qword ptr [rdi + 0x68]
0x23a45:	test	rdx, rdx
0x23a48:	cmove	rdx, rdi
		Instruction group(s): [137] 

0x23a4c:	nop	dword ptr [rax]
0x23a50:	movzx	eax, byte ptr [rdx + 0x84]
0x23a57:	mov	rdx, qword ptr [rdx + 0x38]
0x23a5b:	and	eax, 0xc
0x23a5e:	sub	eax, 4
0x23a61:	test	al, 0xf8
0x23a63:	sete	al
0x23a66:	movzx	eax, al
0x23a69:	or	r14d, eax
0x23a6c:	test	rdx, rdx
0x23a6f:	jne	0x23a50
		Instruction group(s): [7, 1] 

0x23a71:	test	ebx, ebx
0x23a73:	je	0x23a81
		Instruction group(s): [7, 1] 

0x23a75:	mov	r13d, dword ptr [rip + 0x215ab8]
0x23a7c:	test	r13d, r13d
0x23a7f:	je	0x23ab9
		Instruction group(s): [7, 1] 

0x23a81:	test	r14d, r14d
0x23a84:	jne	0x23940
		Instruction group(s): [7, 1] 

0x23a8a:	test	byte ptr [rbp + 0x85], 0x20
0x23a91:	je	0x23d90
		Instruction group(s): [7, 1] 

0x23a97:	cmp	qword ptr [rbp + 0x20], 0
0x23a9c:	mov	eax, 1
0x23aa1:	je	0x23d90
		Instruction group(s): [7, 1] 

0x23aa7:	mov	byte ptr [r12 + 0x20], al
0x23aac:	mov	r12, qword ptr [r12]
0x23ab0:	test	r12, r12
0x23ab3:	jne	0x2394d
		Instruction group(s): [7, 1] 

0x23ab9:	mov	rax, qword ptr [rbp + 0x68]
0x23abd:	test	rax, rax
0x23ac0:	cmove	rax, rbp
		Instruction group(s): [137] 

0x23ac4:	and	byte ptr [rax + 0x85], 0xfd
0x23acb:	mov	rsi, qword ptr [rsp + 8]
0x23ad0:	mov	rax, qword ptr [rsi + 0x68]
0x23ad4:	test	rax, rax
0x23ad7:	cmove	rax, rsi
		Instruction group(s): [137] 

0x23adb:	and	byte ptr [rax + 0x85], 0xfd
0x23ae2:	test	byte ptr [rip + 0x21290f], 2
0x23ae9:	jne	0x240dd
		Instruction group(s): [7, 1] 

0x23aef:	test	r14d, r14d
0x23af2:	jne	0x24080
		Instruction group(s): [7, 1] 

0x23af8:	test	ebx, ebx
0x23afa:	jne	0x23e49
		Instruction group(s): [7, 1] 

0x23b00:	movzx	eax, byte ptr [rbp + 0x84]
0x23b07:	and	eax, 0xc
0x23b0a:	cmp	al, 4
0x23b0c:	je	0x2434a
		Instruction group(s): [7, 1] 

0x23b12:	mov	r12, qword ptr [rbp + 0x18]
0x23b16:	test	r12, r12
0x23b19:	je	0x2422a
		Instruction group(s): [7, 1] 

0x23b1f:	movzx	r15d, byte ptr [rsp + 0x57]
0x23b25:	mov	r13, qword ptr [rsp + 0x48]
0x23b2a:	mov	rax, r12
0x23b2d:	mov	r12d, ebx
0x23b30:	mov	rbx, rax
0x23b33:	mov	rdi, qword ptr [rbx + 0x18]
0x23b37:	mov	rax, qword ptr [rdi + 0x70]
0x23b3b:	test	rax, rax
0x23b3e:	jne	0x23b4e
		Instruction group(s): [7, 1] 

0x23b40:	mov	esi, 1
0x23b45:	call	0x222c0
		Instruction group(s): [2, 7, 145] 

0x23b4a:	mov	rdi, qword ptr [rbx + 0x18]
0x23b4e:	mov	rcx, qword ptr [rdi + 0x48]
0x23b52:	test	rcx, rcx
0x23b55:	jne	0x23b63
		Instruction group(s): [7, 1] 

0x23b57:	jmp	0x24120
		Instruction group(s): [7, 1] 

0x23b5c:	nop	dword ptr [rax]
0x23b60:	mov	rcx, rdx
0x23b63:	mov	rdx, qword ptr [rcx + 0x48]
0x23b67:	test	rdx, rdx
0x23b6a:	jne	0x23b60
		Instruction group(s): [7, 1] 

0x23b6c:	mov	qword ptr [rbx + 0x18], rcx
0x23b70:	movzx	esi, byte ptr [rbx + 0x21]
0x23b74:	movzx	edi, byte ptr [rbx + 0x20]
0x23b78:	and	esi, 1
0x23b7b:	jne	0x23b9f
		Instruction group(s): [7, 1] 

0x23b7d:	cmp	rax, 1
0x23b81:	jne	0x23b98
		Instruction group(s): [7, 1] 

0x23b83:	test	byte ptr [rcx + 0x85], 0x40
0x23b8a:	mov	edx, 1
0x23b8f:	cmovne	edx, dword ptr [rsp + 4]
		Instruction group(s): [137] 

0x23b94:	mov	dword ptr [rsp + 4], edx
0x23b98:	movzx	edx, dil
0x23b9c:	or	r14d, edx
0x23b9f:	cmp	qword ptr [rsp + 0x10], rax
0x23ba4:	setb	dl
0x23ba7:	or	edx, r15d
0x23baa:	or	edx, edi
0x23bac:	cmp	r13, 1
0x23bb0:	mov	byte ptr [rbx + 0x20], dl
0x23bb3:	je	0x23bd2
		Instruction group(s): [7, 1] 

0x23bb5:	mov	ecx, dword ptr [rip + 0x21283d]
0x23bbb:	test	cl, 3
0x23bbe:	je	0x23bd2
		Instruction group(s): [7, 1] 

0x23bc0:	test	sil, sil
0x23bc3:	je	0x24002
		Instruction group(s): [7, 1] 

0x23bc9:	and	ecx, 2
0x23bcc:	jne	0x24294
		Instruction group(s): [7, 1] 

0x23bd2:	mov	rbx, qword ptr [rbx]
0x23bd5:	test	rbx, rbx
0x23bd8:	jne	0x23b33
		Instruction group(s): [7, 1] 

0x23bde:	cmp	qword ptr [rbp + 0x68], 0
0x23be3:	mov	ebx, r12d
0x23be6:	je	0x23bf3
		Instruction group(s): [7, 1] 

0x23be8:	cmp	qword ptr [rbp + 0x18], 0
0x23bed:	je	0x24235
		Instruction group(s): [7, 1] 

0x23bf3:	cmp	qword ptr [rsp + 0x48], 1
0x23bf9:	mov	edx, dword ptr [rip + 0x2127f9]
0x23bff:	je	0x23ef6
		Instruction group(s): [7, 1] 

0x23c05:	test	byte ptr [rbp + 0x85], 8
0x23c0c:	je	0x23ef6
		Instruction group(s): [7, 1] 

0x23c12:	test	r14d, r14d
0x23c15:	jne	0x23ef6
		Instruction group(s): [7, 1] 

0x23c1b:	cmp	qword ptr [rbp + 0x20], 0
0x23c20:	je	0x244f0
		Instruction group(s): [7, 1] 

0x23c26:	mov	eax, dword ptr [rsp + 4]
0x23c2a:	test	eax, eax
0x23c2c:	jne	0x23c49
		Instruction group(s): [7, 1] 

0x23c2e:	mov	eax, edx
0x23c30:	and	eax, 2
0x23c33:	mov	edi, dword ptr [rip + 0x212773]
0x23c39:	test	edi, edi
0x23c3b:	je	0x23f14
		Instruction group(s): [7, 1] 

0x23c41:	test	eax, eax
0x23c43:	jne	0x245f2
		Instruction group(s): [7, 1] 

0x23c49:	and	edx, 1
0x23c4c:	je	0x23c8c
		Instruction group(s): [7, 1] 

0x23c4e:	mov	edi, dword ptr [rsp + 0x50]
0x23c52:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x23c57:	mov	r12, qword ptr [rbp]
0x23c5b:	lea	rsi, [rip + 0xa710]
0x23c62:	mov	edx, 5
0x23c67:	xor	edi, edi
0x23c69:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x23c6e:	mov	edi, 1
0x23c73:	mov	rsi, rax
0x23c76:	mov	rdx, r12
0x23c79:	xor	eax, eax
0x23c7b:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x23c80:	mov	rdi, qword ptr [rip + 0x212199]
0x23c87:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x23c8c:	mov	rax, qword ptr [rbp]
0x23c90:	mov	r12, qword ptr [rbp + 8]
0x23c94:	cmp	rax, r12
0x23c97:	je	0x23ce7
		Instruction group(s): [7, 1] 

0x23c99:	movzx	edx, byte ptr [rax]
0x23c9c:	cmp	dl, byte ptr [r12]
0x23ca0:	je	0x24430
		Instruction group(s): [7, 1] 

0x23ca6:	test	byte ptr [rip + 0x21274b], 1
0x23cad:	je	0x23ce0
		Instruction group(s): [7, 1] 

0x23caf:	lea	rsi, [rip + 0xa6d6]
0x23cb6:	mov	edx, 5
0x23cbb:	xor	edi, edi
0x23cbd:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x23cc2:	mov	edi, 1
0x23cc7:	mov	rsi, rax
0x23cca:	mov	rdx, r12
0x23ccd:	xor	eax, eax
0x23ccf:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x23cd4:	mov	rdi, qword ptr [rip + 0x212145]
0x23cdb:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x23ce0:	or	byte ptr [rbp + 0x86], 2
0x23ce7:	mov	rdi, qword ptr [rbp + 0x20]
0x23ceb:	test	rdi, rdi
0x23cee:	je	0x242ac
		Instruction group(s): [7, 1] 

0x23cf4:	call	0xc6e0
		Instruction group(s): [2, 7, 145] 

0x23cf9:	mov	ecx, dword ptr [rip + 0x215905]
0x23cff:	test	ecx, ecx
0x23d01:	je	0x2433d
		Instruction group(s): [7, 1] 

0x23d07:	mov	rax, qword ptr [rbp + 0x20]
0x23d0b:	test	byte ptr [rax + 0x2b], 1
0x23d0f:	jne	0x2433d
		Instruction group(s): [7, 1] 

0x23d15:	and	byte ptr [rbp + 0x84], 0xfc
0x23d1c:	mov	rdi, rbp
0x23d1f:	call	0x22cb0
		Instruction group(s): [2, 7, 145] 

0x23d24:	movzx	eax, byte ptr [rbp + 0x84]
0x23d2b:	mov	edx, eax
0x23d2d:	and	edx, 0xc
0x23d30:	cmp	dl, 0xc
0x23d33:	je	0x2430b
		Instruction group(s): [7, 1] 

0x23d39:	test	byte ptr [rip + 0x2126b8], 2
0x23d40:	je	0x234c9
		Instruction group(s): [7, 1] 

0x23d46:	mov	edi, dword ptr [rsp + 0x50]
0x23d4a:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x23d4f:	mov	rbp, qword ptr [rbp]
0x23d53:	lea	rsi, [rip + 0xa64f]
0x23d5a:	mov	edx, 5
0x23d5f:	xor	edi, edi
0x23d61:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x23d66:	mov	rdx, rbp
0x23d69:	mov	rsi, rax
0x23d6c:	mov	edi, 1
0x23d71:	xor	eax, eax
0x23d73:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x23d78:	mov	rdi, qword ptr [rip + 0x2120a1]
0x23d7f:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x23d84:	mov	rdx, qword ptr [rsp + 8]
0x23d89:	jmp	0x232d3
		Instruction group(s): [7, 1] 

0x23d8e:	nop	
0x23d90:	mov	rax, qword ptr [rdi + 0x70]
0x23d94:	test	rax, rax
0x23d97:	jne	0x23da3
		Instruction group(s): [7, 1] 

0x23d99:	mov	esi, 1
0x23d9e:	call	0x222c0
		Instruction group(s): [2, 7, 145] 

0x23da3:	cmp	r15, rax
0x23da6:	setne	al
0x23da9:	mov	byte ptr [r12 + 0x20], al
0x23dae:	jmp	0x23aac
		Instruction group(s): [7, 1] 

0x23db3:	test	byte ptr [rip + 0x21263e], 2
0x23dba:	je	0x234c9
		Instruction group(s): [7, 1] 

0x23dc0:	mov	edi, dword ptr [rsp + 0x50]
0x23dc4:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x23dc9:	mov	r14, qword ptr [rsp + 8]
0x23dce:	lea	rsi, [rip + 0xa513]
0x23dd5:	mov	edx, 5
0x23dda:	mov	rbx, qword ptr [r14]
0x23ddd:	xor	edi, edi
0x23ddf:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x23de4:	mov	rdx, rbx
0x23de7:	mov	rsi, rax
0x23dea:	mov	edi, 1
0x23def:	xor	eax, eax
0x23df1:	xor	ebx, ebx
0x23df3:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x23df8:	mov	rdi, qword ptr [rip + 0x212021]
0x23dff:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x23e04:	mov	rdx, r14
0x23e07:	jmp	0x232d3
		Instruction group(s): [7, 1] 

0x23e0c:	mov	rdi, rax
0x23e0f:	mov	esi, 1
0x23e14:	call	0x222c0
		Instruction group(s): [2, 7, 145] 

0x23e19:	mov	r15, rax
0x23e1c:	mov	rax, qword ptr [r12 + 0x18]
0x23e21:	mov	rdi, qword ptr [rax + 0x48]
0x23e25:	test	rdi, rdi
0x23e28:	jne	0x23983
		Instruction group(s): [7, 1] 

0x23e2e:	mov	rdi, rax
0x23e31:	jmp	0x23991
		Instruction group(s): [7, 1] 

0x23e36:	mov	ecx, dword ptr [rip + 0x212570]
0x23e3c:	test	ecx, ecx
0x23e3e:	je	0x23ab9
		Instruction group(s): [7, 1] 

0x23e44:	jmp	0x23928
		Instruction group(s): [7, 1] 

0x23e49:	cmp	ebx, 1
0x23e4c:	mov	eax, 3
0x23e51:	mov	rdi, rbp
0x23e54:	cmovne	eax, ebx
		Instruction group(s): [137] 

0x23e57:	mov	edx, eax
0x23e59:	movzx	eax, byte ptr [rbp + 0x84]
0x23e60:	and	edx, 3
0x23e63:	and	eax, 0xfffffffc
0x23e66:	or	eax, edx
0x23e68:	mov	byte ptr [rbp + 0x84], al
0x23e6e:	call	0x22cb0
		Instruction group(s): [2, 7, 145] 

0x23e73:	test	byte ptr [rip + 0x21257e], 2
0x23e7a:	je	0x23eba
		Instruction group(s): [7, 1] 

0x23e7c:	mov	edi, dword ptr [rsp + 0x50]
0x23e80:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x23e85:	mov	r12, qword ptr [rbp]
0x23e89:	lea	rsi, [rip + 0xa8c0]
0x23e90:	mov	edx, 5
0x23e95:	xor	edi, edi
0x23e97:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x23e9c:	mov	edi, 1
0x23ea1:	mov	rsi, rax
0x23ea4:	mov	rdx, r12
0x23ea7:	xor	eax, eax
0x23ea9:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x23eae:	mov	rdi, qword ptr [rip + 0x211f6b]
0x23eb5:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x23eba:	mov	r12d, dword ptr [rsp + 0x50]
0x23ebf:	test	r12d, r12d
0x23ec2:	jne	0x23eec
		Instruction group(s): [7, 1] 

0x23ec4:	mov	r11d, dword ptr [rip + 0x215669]
0x23ecb:	test	r11d, r11d
0x23ece:	je	0x23eec
		Instruction group(s): [7, 1] 

0x23ed0:	mov	r10d, dword ptr [rip + 0x215659]
0x23ed7:	test	r10d, r10d
0x23eda:	jne	0x23eec
		Instruction group(s): [7, 1] 

0x23edc:	mov	r9d, dword ptr [rip + 0x2124f9]
0x23ee3:	test	r9d, r9d
0x23ee6:	je	0x245ac
		Instruction group(s): [7, 1] 

0x23eec:	mov	rdx, qword ptr [rsp + 8]
0x23ef1:	jmp	0x232d3
		Instruction group(s): [7, 1] 

0x23ef6:	mov	r8d, dword ptr [rsp + 4]
0x23efb:	test	r8d, r8d
0x23efe:	jne	0x23c49
		Instruction group(s): [7, 1] 

0x23f04:	mov	eax, edx
0x23f06:	and	eax, 2
0x23f09:	cmp	qword ptr [rbp + 0x20], 0
0x23f0e:	jne	0x23c33
		Instruction group(s): [7, 1] 

0x23f14:	test	eax, eax
0x23f16:	jne	0x24453
		Instruction group(s): [7, 1] 

0x23f1c:	mov	rdi, rbp
0x23f1f:	call	0x22cb0
		Instruction group(s): [2, 7, 145] 

0x23f24:	mov	rax, qword ptr [rbp + 8]
0x23f28:	mov	qword ptr [rbp], rax
0x23f2c:	mov	rbp, qword ptr [rbp + 0x38]
0x23f30:	test	rbp, rbp
0x23f33:	jne	0x23f24
		Instruction group(s): [7, 1] 

0x23f35:	jmp	0x234c9
		Instruction group(s): [7, 1] 

0x23f3a:	mov	rdi, rax
0x23f3d:	jmp	0x23a41
		Instruction group(s): [7, 1] 

0x23f42:	mov	rdi, qword ptr [rsp + 8]
0x23f47:	call	0x22140
		Instruction group(s): [2, 7, 145] 

0x23f4c:	jmp	0x232b8
		Instruction group(s): [7, 1] 

0x23f51:	test	byte ptr [rip + 0x2124a0], 1
0x23f58:	mov	qword ptr [rsp + 0x10], 1
0x23f61:	je	0x2357c
		Instruction group(s): [7, 1] 

0x23f67:	mov	edi, dword ptr [rsp + 0x38]
0x23f6b:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x23f70:	mov	rbx, qword ptr [rbp]
0x23f74:	lea	rsi, [rip + 0xa3a6]
0x23f7b:	xor	edi, edi
0x23f7d:	mov	edx, 5
0x23f82:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x23f87:	mov	rdx, rbx
0x23f8a:	mov	rsi, rax
0x23f8d:	mov	edi, 1
0x23f92:	xor	eax, eax
0x23f94:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x23f99:	mov	rdi, qword ptr [rip + 0x211e80]
0x23fa0:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x23fa5:	mov	rax, qword ptr [rsp + 0x48]
0x23faa:	mov	rdx, qword ptr [rbp + 0x20]
0x23fae:	mov	qword ptr [rsp + 0x10], rax
0x23fb3:	movzx	eax, byte ptr [rbp + 0x85]
0x23fba:	test	al, 0x20
0x23fbc:	jne	0x237c4
		Instruction group(s): [7, 1] 

0x23fc2:	jmp	0x2358f
		Instruction group(s): [7, 1] 

0x23fc7:	mov	edi, dword ptr [rsp + 0x50]
0x23fcb:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x23fd0:	mov	r14, qword ptr [rsp + 8]
0x23fd5:	mov	edx, 5
0x23fda:	lea	rsi, [rip + 0xa5ff]
0x23fe1:	mov	rbx, qword ptr [r14]
0x23fe4:	jmp	0x23ddd
		Instruction group(s): [7, 1] 

0x23fe9:	mov	rdi, qword ptr [rsp + 8]
0x23fee:	mov	esi, 1
0x23ff3:	call	0x222c0
		Instruction group(s): [2, 7, 145] 

0x23ff8:	mov	qword ptr [rsp + 0x48], rax
0x23ffd:	jmp	0x23523
		Instruction group(s): [7, 1] 

0x24002:	cmp	rax, 1
0x24006:	je	0x242ea
		Instruction group(s): [7, 1] 

0x2400c:	test	dl, dl
0x2400e:	jne	0x24209
		Instruction group(s): [7, 1] 

0x24014:	and	ecx, 2
0x24017:	je	0x23bd2
		Instruction group(s): [7, 1] 

0x2401d:	lea	rsi, [rip + 0xa81c]
0x24024:	mov	edx, 5
0x24029:	xor	edi, edi
0x2402b:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x24030:	test	rax, rax
0x24033:	mov	qword ptr [rsp + 0x20], rax
0x24038:	je	0x23bd2
		Instruction group(s): [7, 1] 

0x2403e:	mov	edi, dword ptr [rsp + 0x38]
0x24042:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x24047:	mov	rdx, qword ptr [rbx + 8]
0x2404b:	mov	rcx, qword ptr [rbp]
0x2404f:	mov	rax, qword ptr [rsp + 0x20]
0x24054:	test	rdx, rdx
0x24057:	jne	0x24060
		Instruction group(s): [7, 1] 

0x24059:	mov	rdx, qword ptr [rbx + 0x18]
0x2405d:	mov	rdx, qword ptr [rdx]
0x24060:	mov	rsi, rax
0x24063:	mov	edi, 1
0x24068:	xor	eax, eax
0x2406a:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x2406f:	mov	rdi, qword ptr [rip + 0x211daa]
0x24076:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x2407b:	jmp	0x23bd2
		Instruction group(s): [7, 1] 

0x24080:	mov	esi, 1
0x24085:	mov	rdi, rbp
0x24088:	call	0x10260
		Instruction group(s): [2, 7, 145] 

0x2408d:	test	byte ptr [rip + 0x212364], 2
0x24094:	je	0x234c9
		Instruction group(s): [7, 1] 

0x2409a:	mov	edi, dword ptr [rsp + 0x50]
0x2409e:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x240a3:	mov	rbx, qword ptr [rbp]
0x240a7:	lea	rsi, [rip + 0xa672]
0x240ae:	xor	edi, edi
0x240b0:	mov	edx, 5
0x240b5:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x240ba:	mov	rdx, rbx
0x240bd:	mov	rsi, rax
0x240c0:	mov	edi, 1
0x240c5:	xor	eax, eax
0x240c7:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x240cc:	mov	rdi, qword ptr [rip + 0x211d4d]
0x240d3:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x240d8:	jmp	0x234c9
		Instruction group(s): [7, 1] 

0x240dd:	mov	edi, dword ptr [rsp + 0x38]
0x240e1:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x240e6:	mov	r12, qword ptr [rbp]
0x240ea:	lea	rsi, [rip + 0xa5ff]
0x240f1:	xor	edi, edi
0x240f3:	mov	edx, 5
0x240f8:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x240fd:	mov	rdx, r12
0x24100:	mov	rsi, rax
0x24103:	mov	edi, 1
0x24108:	xor	eax, eax
0x2410a:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x2410f:	mov	rdi, qword ptr [rip + 0x211d0a]
0x24116:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x2411b:	jmp	0x23aef
		Instruction group(s): [7, 1] 

0x24120:	mov	rcx, rdi
0x24123:	jmp	0x23b70
		Instruction group(s): [7, 1] 

0x24128:	mov	rax, qword ptr [rsp + 0x58]
0x2412d:	mov	r14, qword ptr [rsp + 8]
0x24132:	cmp	qword ptr [rax + 0x68], 0
0x24137:	je	0x2418a
		Instruction group(s): [7, 1] 

0x24139:	mov	ebp, dword ptr [rsp + 0x50]
0x2413d:	add	ebp, 1
0x24140:	movzx	eax, byte ptr [rip + 0x214a11]
0x24147:	mov	rbx, qword ptr [r14 + 0x18]
0x2414b:	and	eax, 1
0x2414e:	lea	edx, [rax*8]
		Instruction group(s): [145] 

0x24155:	movzx	eax, byte ptr [r14 + 0x86]
0x2415d:	and	eax, 0xfffffff7
0x24160:	or	eax, edx
0x24162:	test	rbx, rbx
0x24165:	mov	byte ptr [r14 + 0x86], al
0x2416c:	je	0x24181
		Instruction group(s): [7, 1] 

0x2416e:	mov	rdi, qword ptr [rbx + 0x18]
0x24172:	mov	esi, ebp
0x24174:	call	0x23180
		Instruction group(s): [2, 7, 145] 

0x24179:	mov	rbx, qword ptr [rbx]
0x2417c:	test	rbx, rbx
0x2417f:	jne	0x2416e
		Instruction group(s): [7, 1] 

0x24181:	mov	r14, qword ptr [r14 + 0x38]
0x24185:	test	r14, r14
0x24188:	jne	0x24140
		Instruction group(s): [7, 1] 

0x2418a:	mov	dword ptr [rsp + 0x3c], 0
0x24192:	jmp	0x23494
		Instruction group(s): [7, 1] 

0x24197:	mov	eax, dword ptr [rsp + 0x48]
0x2419b:	lea	r13d, [rax - 3]
		Instruction group(s): [145] 

0x2419f:	and	r13d, 0x3fffffff
0x241a6:	je	0x241dd
		Instruction group(s): [7, 1] 

0x241a8:	lea	rsi, [rip + 0xa459]
0x241af:	mov	edx, 5
0x241b4:	xor	edi, edi
0x241b6:	mov	rbx, qword ptr [rbp]
0x241ba:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x241bf:	mov	rdi, qword ptr [rbp]
0x241c3:	mov	r12, rax
0x241c6:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x241cb:	mov	rcx, rbx
0x241ce:	mov	rsi, rax
0x241d1:	mov	rdx, r12
0x241d4:	xor	edi, edi
0x241d6:	xor	eax, eax
0x241d8:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x241dd:	mov	eax, 0x3b9ac9ff
0x241e2:	mov	rdx, qword ptr [rbp + 0x20]
0x241e6:	sub	eax, r13d
0x241e9:	cdqe	
0x241eb:	add	rax, qword ptr [rsp + 0x48]
0x241f0:	mov	qword ptr [rsp + 0x10], rax
0x241f5:	movzx	eax, byte ptr [rbp + 0x85]
0x241fc:	test	al, 0x20
0x241fe:	jne	0x237c4
		Instruction group(s): [7, 1] 

0x24204:	jmp	0x2358f
		Instruction group(s): [7, 1] 

0x24209:	and	ecx, 1
0x2420c:	je	0x23bd2
		Instruction group(s): [7, 1] 

0x24212:	lea	rsi, [rip + 0xa5f7]
0x24219:	mov	edx, 5
0x2421e:	xor	edi, edi
0x24220:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x24225:	jmp	0x24030
		Instruction group(s): [7, 1] 

0x2422a:	cmp	qword ptr [rbp + 0x68], 0
0x2422f:	je	0x23bf3
		Instruction group(s): [7, 1] 

0x24235:	test	byte ptr [rip + 0x2121bc], 1
0x2423c:	je	0x23c8c
		Instruction group(s): [7, 1] 

0x24242:	mov	edi, dword ptr [rsp + 0x50]
0x24246:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x2424b:	mov	r12, qword ptr [rbp]
0x2424f:	lea	rsi, [rip + 0xa61a]
0x24256:	mov	edx, 5
0x2425b:	xor	edi, edi
0x2425d:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x24262:	mov	rdx, r12
0x24265:	mov	rsi, rax
0x24268:	mov	edi, 1
0x2426d:	xor	eax, eax
0x2426f:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x24274:	mov	rdi, qword ptr [rip + 0x211ba5]
0x2427b:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x24280:	mov	edx, dword ptr [rip + 0x212172]
0x24286:	jmp	0x23c49
		Instruction group(s): [7, 1] 

0x2428b:	mov	dword ptr [rsp + 0x3c], ebx
0x2428f:	jmp	0x23494
		Instruction group(s): [7, 1] 

0x24294:	lea	rsi, [rip + 0xa505]
0x2429b:	mov	edx, 5
0x242a0:	xor	edi, edi
0x242a2:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x242a7:	jmp	0x24030
		Instruction group(s): [7, 1] 

0x242ac:	movzx	eax, byte ptr [rbp + 0x85]
0x242b3:	test	al, 0x20
0x242b5:	jne	0x23d15
		Instruction group(s): [7, 1] 

0x242bb:	test	al, 8
0x242bd:	jne	0x23d15
		Instruction group(s): [7, 1] 

0x242c3:	mov	esi, dword ptr [rip + 0x2120df]
0x242c9:	test	esi, esi
0x242cb:	je	0x242d6
		Instruction group(s): [7, 1] 

0x242cd:	test	byte ptr [rbp + 0x86], 1
0x242d4:	jne	0x242de
		Instruction group(s): [7, 1] 

0x242d6:	mov	rdi, rbp
0x242d9:	call	0x22140
		Instruction group(s): [2, 7, 145] 

0x242de:	or	byte ptr [rbp + 0x84], 3
0x242e5:	jmp	0x23d1c
		Instruction group(s): [7, 1] 

0x242ea:	and	ecx, 1
0x242ed:	je	0x23bd2
		Instruction group(s): [7, 1] 

0x242f3:	lea	rsi, [rip + 0xa4de]
0x242fa:	mov	edx, 5
0x242ff:	xor	edi, edi
0x24301:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x24306:	jmp	0x24030
		Instruction group(s): [7, 1] 

0x2430b:	and	eax, 3
0x2430e:	cmp	al, 2
0x24310:	mov	ebx, eax
0x24312:	je	0x24380
		Instruction group(s): [7, 1] 

0x24314:	ja	0x24359
		Instruction group(s): [7, 1] 

0x24316:	cmp	al, 1
0x24318:	je	0x24329
		Instruction group(s): [7, 1] 

0x2431a:	xor	ebx, ebx
0x2431c:	test	byte ptr [rip + 0x2120d5], 1
0x24323:	jne	0x24570
		Instruction group(s): [7, 1] 

0x24329:	or	byte ptr [rbp + 0x85], 4
0x24330:	movzx	ebx, bl
0x24333:	mov	rdx, qword ptr [rsp + 8]
0x24338:	jmp	0x232d3
		Instruction group(s): [7, 1] 

0x2433d:	mov	rdi, rbp
0x24340:	call	0xc9d0
		Instruction group(s): [2, 7, 145] 

0x24345:	jmp	0x23d24
		Instruction group(s): [7, 1] 

0x2434a:	xor	esi, esi
0x2434c:	mov	rdi, rbp
0x2434f:	call	0x10260
		Instruction group(s): [2, 7, 145] 

0x24354:	jmp	0x23b12
		Instruction group(s): [7, 1] 

0x24359:	test	byte ptr [rip + 0x212098], 1
0x24360:	je	0x24329
		Instruction group(s): [7, 1] 

0x24362:	mov	edi, dword ptr [rsp + 0x50]
0x24366:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x2436b:	mov	rbx, qword ptr [rbp]
0x2436f:	mov	edx, 5
0x24374:	lea	rsi, [rip + 0xa595]
0x2437b:	jmp	0x243a2
		Instruction group(s): [7, 1] 

0x2437d:	nop	dword ptr [rax]
0x24380:	test	byte ptr [rip + 0x212071], 1
0x24387:	je	0x24329
		Instruction group(s): [7, 1] 

0x24389:	mov	edi, dword ptr [rsp + 0x50]
0x2438d:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x24392:	mov	rbx, qword ptr [rbp]
0x24396:	lea	rsi, [rip + 0xa5c3]
0x2439d:	mov	edx, 5
0x243a2:	xor	edi, edi
0x243a4:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x243a9:	mov	rdx, rbx
0x243ac:	mov	rsi, rax
0x243af:	mov	edi, 1
0x243b4:	xor	eax, eax
0x243b6:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x243bb:	mov	rdi, qword ptr [rip + 0x211a5e]
0x243c2:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x243c7:	movzx	ebx, byte ptr [rbp + 0x84]
0x243ce:	and	ebx, 3
0x243d1:	jmp	0x24329
		Instruction group(s): [7, 1] 

0x243d6:	nop	word ptr cs:[rax + rax]
0x243e0:	test	byte ptr [rip + 0x212011], 8
0x243e7:	je	0x237b9
		Instruction group(s): [7, 1] 

0x243ed:	mov	edi, dword ptr [rsp + 0x38]
0x243f1:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x243f6:	mov	rbx, qword ptr [rbp]
0x243fa:	lea	rsi, [rip + 0xa27f]
0x24401:	mov	edx, 5
0x24406:	xor	edi, edi
0x24408:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x2440d:	mov	rdx, rbx
0x24410:	mov	rsi, rax
0x24413:	mov	edi, 1
0x24418:	xor	eax, eax
0x2441a:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x2441f:	mov	rdi, qword ptr [rip + 0x2119fa]
0x24426:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x2442b:	jmp	0x237b9
		Instruction group(s): [7, 1] 

0x24430:	test	dl, dl
0x24432:	je	0x23ce7
		Instruction group(s): [7, 1] 

0x24438:	lea	rsi, [r12 + 1]
0x2443d:	lea	rdi, [rax + 1]
0x24441:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x24446:	test	eax, eax
0x24448:	je	0x23ce7
		Instruction group(s): [7, 1] 

0x2444e:	jmp	0x23ca6
		Instruction group(s): [7, 1] 

0x24453:	mov	edi, dword ptr [rsp + 0x50]
0x24457:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x2445c:	mov	rbx, qword ptr [rbp]
0x24460:	lea	rsi, [rip + 0x9ed5]
0x24467:	xor	edi, edi
0x24469:	mov	edx, 5
0x2446e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x24473:	mov	rdx, rbx
0x24476:	mov	rsi, rax
0x24479:	mov	edi, 1
0x2447e:	xor	eax, eax
0x24480:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x24485:	mov	rax, qword ptr [rbp]
0x24489:	mov	rbx, qword ptr [rbp + 8]
0x2448d:	cmp	rax, rbx
0x24490:	je	0x244d3
		Instruction group(s): [7, 1] 

0x24492:	movzx	edx, byte ptr [rax]
0x24495:	cmp	dl, byte ptr [rbx]
0x24497:	jne	0x244ae
		Instruction group(s): [7, 1] 

0x24499:	test	dl, dl
0x2449b:	je	0x244d3
		Instruction group(s): [7, 1] 

0x2449d:	lea	rsi, [rbx + 1]
0x244a1:	lea	rdi, [rax + 1]
0x244a5:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x244aa:	test	eax, eax
0x244ac:	je	0x244d3
		Instruction group(s): [7, 1] 

0x244ae:	lea	rsi, [rip + 0x9ea5]
0x244b5:	mov	edx, 5
0x244ba:	xor	edi, edi
0x244bc:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x244c1:	mov	rdx, rbx
0x244c4:	mov	rsi, rax
0x244c7:	mov	edi, 1
0x244cc:	xor	eax, eax
0x244ce:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x244d3:	lea	rdi, [rip + 0x9f08]
0x244da:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x244df:	mov	rdi, qword ptr [rip + 0x21193a]
0x244e6:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x244eb:	jmp	0x23f1c
		Instruction group(s): [7, 1] 

0x244f0:	cmp	dword ptr [rip + 0x211eb5], 0
0x244f7:	jne	0x2455b
		Instruction group(s): [7, 1] 

0x244f9:	and	dl, 2
0x244fc:	je	0x23f1c
		Instruction group(s): [7, 1] 

0x24502:	mov	edi, dword ptr [rsp + 0x50]
0x24506:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x2450b:	mov	rbx, qword ptr [rbp]
0x2450f:	lea	rsi, [rip + 0xa392]
0x24516:	mov	edx, 5
0x2451b:	xor	edi, edi
0x2451d:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x24522:	mov	rdx, rbx
0x24525:	mov	rsi, rax
0x24528:	mov	edi, 1
0x2452d:	xor	eax, eax
0x2452f:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x24534:	mov	rdi, qword ptr [rip + 0x2118e5]
0x2453b:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x24540:	mov	eax, dword ptr [rip + 0x211eb2]
0x24546:	and	eax, 2
0x24549:	jmp	0x23f14
		Instruction group(s): [7, 1] 

0x2454e:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x24553:	mov	rdi, rax
0x24556:	jmp	0x23638
		Instruction group(s): [7, 1] 

0x2455b:	cmp	dword ptr [rsp + 4], 0
0x24560:	jne	0x23c49
		Instruction group(s): [7, 1] 

0x24566:	mov	eax, edx
0x24568:	and	eax, 2
0x2456b:	jmp	0x23f14
		Instruction group(s): [7, 1] 

0x24570:	mov	edi, dword ptr [rsp + 0x50]
0x24574:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x24579:	mov	rbx, qword ptr [rbp]
0x2457d:	mov	edx, 5
0x24582:	lea	rsi, [rip + 0xa3af]
0x24589:	jmp	0x243a2
		Instruction group(s): [7, 1] 

0x2458e:	mov	edi, dword ptr [rsp + 0x38]
0x24592:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x24597:	mov	rbx, qword ptr [rbp]
0x2459b:	mov	edx, 5
0x245a0:	lea	rsi, [rip + 0xa0b1]
0x245a7:	jmp	0x24406
		Instruction group(s): [7, 1] 

0x245ac:	lea	rsi, [rip + 0xa1bd]
0x245b3:	mov	edx, 5
0x245b8:	xor	edi, edi
0x245ba:	mov	r12, qword ptr [rbp]
0x245be:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x245c3:	mov	rdi, qword ptr [rbp]
0x245c7:	mov	rdx, rax
0x245ca:	or	rcx, 0xffffffffffffffff
0x245ce:	xor	eax, eax
0x245d0:	repne scasb	al, byte ptr [rdi]
0x245d2:	xor	edi, edi
0x245d4:	mov	rax, rcx
0x245d7:	mov	rcx, r12
0x245da:	not	rax
0x245dd:	lea	rsi, [rax - 1]
0x245e1:	xor	eax, eax
0x245e3:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x245e8:	mov	rdx, qword ptr [rsp + 8]
0x245ed:	jmp	0x232d3
		Instruction group(s): [7, 1] 

0x245f2:	mov	edi, dword ptr [rsp + 0x50]
0x245f6:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x245fb:	mov	r12, qword ptr [rbp]
0x245ff:	mov	edx, 5
0x24604:	lea	rsi, [rip + 0xa2dd]
0x2460b:	jmp	0x2425b
		Instruction group(s): [7, 1] 

0x24610:	push	r15
		Instruction group(s): [145] 

0x24612:	push	r14
		Instruction group(s): [145] 

0x24614:	add	esi, 1
0x24617:	push	r13
		Instruction group(s): [145] 

0x24619:	push	r12
		Instruction group(s): [145] 

0x2461b:	mov	r15, rcx
0x2461e:	push	rbp
		Instruction group(s): [145] 

0x2461f:	push	rbx
		Instruction group(s): [145] 

0x24620:	mov	rbp, rdi
0x24623:	sub	rsp, 0x58
0x24627:	mov	rax, qword ptr fs:[0x28]
0x24630:	mov	qword ptr [rsp + 0x48], rax
0x24635:	xor	eax, eax
0x24637:	mov	rax, qword ptr [rdi + 0x68]
0x2463b:	mov	qword ptr [rsp + 8], rdx
0x24640:	mov	dword ptr [rsp + 0x20], esi
0x24644:	test	rax, rax
0x24647:	cmove	rax, rdi
		Instruction group(s): [137] 

0x2464b:	or	byte ptr [rax + 0x85], 2
0x24652:	movzx	eax, byte ptr [rdi + 0x85]
0x24659:	mov	edx, eax
0x2465b:	and	edx, 0x60
0x2465e:	cmp	dl, 0x40
0x24661:	jne	0x24790
		Instruction group(s): [7, 1] 

0x24667:	test	al, 0x20
0x24669:	mov	rdx, qword ptr [rdi + 0x20]
0x2466d:	jne	0x24740
		Instruction group(s): [7, 1] 

0x24673:	test	rdx, rdx
0x24676:	je	0x24710
		Instruction group(s): [7, 1] 

0x2467c:	mov	rbx, rbp
0x2467f:	jmp	0x2468b
		Instruction group(s): [7, 1] 

0x24681:	nop	dword ptr [rax]
0x24688:	mov	rbx, rax
0x2468b:	mov	rax, qword ptr [rbx + 0x48]
0x2468f:	test	rax, rax
0x24692:	jne	0x24688
		Instruction group(s): [7, 1] 

0x24694:	mov	rax, qword ptr [rbx + 0x70]
0x24698:	test	rax, rax
0x2469b:	je	0x249e8
		Instruction group(s): [7, 1] 

0x246a1:	cmp	rax, 1
0x246a5:	je	0x247e0
		Instruction group(s): [7, 1] 

0x246ab:	cmp	qword ptr [rsp + 8], rax
0x246b0:	jae	0x247e0
		Instruction group(s): [7, 1] 

0x246b6:	mov	dword ptr [r15], 1
0x246bd:	xor	r12d, r12d
0x246c0:	mov	rax, qword ptr [rbx + 0x68]
0x246c4:	test	rax, rax
0x246c7:	cmove	rax, rbx
		Instruction group(s): [137] 

0x246cb:	and	byte ptr [rax + 0x85], 0xfd
0x246d2:	mov	rax, qword ptr [rbp + 0x68]
0x246d6:	test	rax, rax
0x246d9:	cmove	rax, rbp
		Instruction group(s): [137] 

0x246dd:	and	byte ptr [rax + 0x85], 0xfd
0x246e4:	mov	eax, r12d
0x246e7:	mov	rcx, qword ptr [rsp + 0x48]
0x246ec:	xor	rcx, qword ptr fs:[0x28]
0x246f5:	jne	0x24b14
		Instruction group(s): [7, 1] 

0x246fb:	add	rsp, 0x58
0x246ff:	pop	rbx
		Instruction group(s): [145] 

0x24700:	pop	rbp
		Instruction group(s): [145] 

0x24701:	pop	r12
		Instruction group(s): [145] 

0x24703:	pop	r13
		Instruction group(s): [145] 

0x24705:	pop	r14
		Instruction group(s): [145] 

0x24707:	pop	r15
		Instruction group(s): [145] 

0x24709:	ret	
		Instruction group(s): [3, 145] 

0x2470a:	nop	word ptr [rax + rax]
0x24710:	test	al, 1
0x24712:	jne	0x24750
		Instruction group(s): [7, 1] 

0x24714:	mov	esi, dword ptr [rsp + 0x20]
0x24718:	call	0x16170
		Instruction group(s): [2, 7, 145] 

0x2471d:	test	eax, eax
0x2471f:	je	0x24a58
		Instruction group(s): [7, 1] 

0x24725:	test	byte ptr [rip + 0x211ccc], 8
0x2472c:	jne	0x24af6
		Instruction group(s): [7, 1] 

0x24732:	or	byte ptr [rbp + 0x85], 1
0x24739:	mov	rdx, qword ptr [rbp + 0x20]
0x2473d:	nop	dword ptr [rax]
0x24740:	test	rdx, rdx
0x24743:	jne	0x2467c
		Instruction group(s): [7, 1] 

0x24749:	movzx	eax, byte ptr [rbp + 0x85]
0x24750:	test	al, 8
0x24752:	jne	0x2467c
		Instruction group(s): [7, 1] 

0x24758:	mov	rax, qword ptr [rip + 0x214df9]
0x2475f:	test	rax, rax
0x24762:	je	0x2467c
		Instruction group(s): [7, 1] 

0x24768:	mov	rax, qword ptr [rax + 0x20]
0x2476c:	test	rax, rax
0x2476f:	je	0x2467c
		Instruction group(s): [7, 1] 

0x24775:	test	byte ptr [rip + 0x211c7c], 8
0x2477c:	jne	0x24aa8
		Instruction group(s): [7, 1] 

0x24782:	mov	qword ptr [rbp + 0x20], rax
0x24786:	jmp	0x2467c
		Instruction group(s): [7, 1] 

0x2478b:	nop	dword ptr [rax + rax]
0x24790:	call	0x23180
		Instruction group(s): [2, 7, 145] 

0x24795:	mov	rbx, rbp
0x24798:	mov	r12d, eax
0x2479b:	jmp	0x247a3
		Instruction group(s): [7, 1] 

0x2479d:	nop	dword ptr [rax]
0x247a0:	mov	rbx, rax
0x247a3:	mov	rax, qword ptr [rbx + 0x48]
0x247a7:	test	rax, rax
0x247aa:	jne	0x247a0
		Instruction group(s): [7, 1] 

0x247ac:	mov	rax, qword ptr [rbx + 0x70]
0x247b0:	test	rax, rax
0x247b3:	je	0x24a18
		Instruction group(s): [7, 1] 

0x247b9:	cmp	rax, 1
0x247bd:	je	0x247ca
		Instruction group(s): [7, 1] 

0x247bf:	cmp	qword ptr [rsp + 8], rax
0x247c4:	jae	0x246c0
		Instruction group(s): [7, 1] 

0x247ca:	mov	dword ptr [r15], 1
0x247d1:	jmp	0x246c0
		Instruction group(s): [7, 1] 

0x247d6:	nop	word ptr cs:[rax + rax]
0x247e0:	movzx	eax, byte ptr [rbx + 0x84]
0x247e7:	and	eax, 0xc
0x247ea:	cmp	al, 8
0x247ec:	je	0x24820
		Instruction group(s): [7, 1] 

0x247ee:	cmp	al, 4
0x247f0:	jne	0x24816
		Instruction group(s): [7, 1] 

0x247f2:	mov	edi, dword ptr [rip + 0x214360]
0x247f8:	test	edi, edi
0x247fa:	sete	al
0x247fd:	lea	edx, [rax*8]
		Instruction group(s): [145] 

0x24804:	movzx	eax, byte ptr [rbx + 0x86]
0x2480b:	and	eax, 0xfffffff7
0x2480e:	or	eax, edx
0x24810:	mov	byte ptr [rbx + 0x86], al
0x24816:	xor	esi, esi
0x24818:	mov	rdi, rbx
0x2481b:	call	0x10260
		Instruction group(s): [2, 7, 145] 

0x24820:	mov	r14, qword ptr [rbx + 0x18]
0x24824:	test	r14, r14
0x24827:	je	0x24a50
		Instruction group(s): [7, 1] 

0x2482d:	lea	rax, [rsp + 0x44]
0x24832:	xor	r12d, r12d
0x24835:	mov	dword ptr [rsp + 0x24], 0
0x2483d:	mov	dword ptr [rsp + 0x1c], r12d
0x24842:	xor	r13d, r13d
0x24845:	mov	r12, r14
0x24848:	mov	qword ptr [rsp + 0x28], rax
0x2484d:	mov	qword ptr [rsp + 0x38], rbp
0x24852:	mov	qword ptr [rsp + 0x30], r15
0x24857:	jmp	0x248d8
		Instruction group(s): [7, 1] 

0x24859:	nop	dword ptr [rax]
0x24860:	mov	r8, qword ptr [rdi]
0x24863:	lea	rsi, [rip + 0x9e5e]
0x2486a:	mov	edx, 5
0x2486f:	xor	edi, edi
0x24871:	mov	r14, qword ptr [rbx]
0x24874:	mov	qword ptr [rsp + 0x10], r8
0x24879:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x2487e:	mov	rdi, qword ptr [rbx]
0x24881:	mov	r15, rax
0x24884:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x24889:	mov	rbp, rax
0x2488c:	mov	rax, qword ptr [r12 + 0x18]
0x24891:	mov	rdi, qword ptr [rax]
0x24894:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x24899:	mov	r8, qword ptr [rsp + 0x10]
0x2489e:	lea	rsi, [rbp + rax]
0x248a3:	xor	edi, edi
0x248a5:	xor	eax, eax
0x248a7:	mov	rcx, r14
0x248aa:	mov	rdx, r15
0x248ad:	call	0x1cbf0
		Instruction group(s): [2, 7, 145] 

0x248b2:	test	r13, r13
0x248b5:	mov	rax, qword ptr [r12]
0x248b9:	je	0x249c0
		Instruction group(s): [7, 1] 

0x248bf:	mov	rdi, r12
0x248c2:	mov	qword ptr [r13], rax
0x248c6:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x248cb:	mov	r12, qword ptr [r13]
0x248cf:	test	r12, r12
0x248d2:	je	0x24998
		Instruction group(s): [7, 1] 

0x248d8:	mov	rdi, qword ptr [r12 + 0x18]
0x248dd:	mov	rax, qword ptr [rdi + 0x68]
0x248e1:	test	rax, rax
0x248e4:	cmove	rax, rdi
		Instruction group(s): [137] 

0x248e8:	test	byte ptr [rax + 0x85], 2
0x248ef:	jne	0x24860
		Instruction group(s): [7, 1] 

0x248f5:	mov	r14, qword ptr [rsp + 0x30]
0x248fa:	mov	rcx, qword ptr [rsp + 0x28]
0x248ff:	mov	rdx, qword ptr [rsp + 8]
0x24904:	mov	esi, dword ptr [rsp + 0x20]
0x24908:	mov	qword ptr [rdi + 0x60], rbx
0x2490c:	mov	eax, dword ptr [r14]
0x2490f:	mov	dword ptr [rsp + 0x44], eax
0x24913:	call	0x24610
		Instruction group(s): [2, 7, 145] 

0x24918:	mov	ecx, dword ptr [rsp + 0x1c]
0x2491c:	cmp	ecx, eax
0x2491e:	cmovae	eax, ecx
		Instruction group(s): [137] 

0x24921:	test	byte ptr [r12 + 0x21], 1
0x24927:	mov	dword ptr [rsp + 0x1c], eax
0x2492b:	je	0x249d8
		Instruction group(s): [7, 1] 

0x24931:	mov	rax, qword ptr [r12 + 0x18]
0x24936:	mov	rdx, qword ptr [rax + 0x48]
0x2493a:	test	rdx, rdx
0x2493d:	jne	0x2494b
		Instruction group(s): [7, 1] 

0x2493f:	jmp	0x24a48
		Instruction group(s): [7, 1] 

0x24944:	nop	dword ptr [rax]
0x24948:	mov	rdx, rax
0x2494b:	mov	rax, qword ptr [rdx + 0x48]
0x2494f:	test	rax, rax
0x24952:	jne	0x24948
		Instruction group(s): [7, 1] 

0x24954:	mov	qword ptr [r12 + 0x18], rdx
0x24959:	mov	esi, dword ptr [rsp + 0x1c]
0x2495d:	test	esi, esi
0x2495f:	je	0x2496b
		Instruction group(s): [7, 1] 

0x24961:	mov	ecx, dword ptr [rip + 0x214bcd]
0x24967:	test	ecx, ecx
0x24969:	je	0x24998
		Instruction group(s): [7, 1] 

0x2496b:	movzx	eax, byte ptr [rdx + 0x84]
0x24972:	mov	r13, r12
0x24975:	mov	r12, qword ptr [r12]
0x24979:	and	eax, 0xc
0x2497c:	sub	eax, 4
0x2497f:	test	al, 0xf8
0x24981:	mov	eax, 1
0x24986:	cmovne	eax, dword ptr [rsp + 0x24]
		Instruction group(s): [137] 

0x2498b:	test	r12, r12
0x2498e:	mov	dword ptr [rsp + 0x24], eax
0x24992:	jne	0x248d8
		Instruction group(s): [7, 1] 

0x24998:	mov	eax, dword ptr [rsp + 0x24]
0x2499c:	mov	r12d, dword ptr [rsp + 0x1c]
0x249a1:	mov	rbp, qword ptr [rsp + 0x38]
0x249a6:	test	eax, eax
0x249a8:	je	0x246c0
		Instruction group(s): [7, 1] 

0x249ae:	mov	esi, 1
0x249b3:	mov	rdi, rbx
0x249b6:	call	0x10260
		Instruction group(s): [2, 7, 145] 

0x249bb:	jmp	0x246c0
		Instruction group(s): [7, 1] 

0x249c0:	mov	rdi, r12
0x249c3:	mov	qword ptr [rbx + 0x18], rax
0x249c7:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x249cc:	mov	r12, qword ptr [rbx + 0x18]
0x249d0:	jmp	0x248cf
		Instruction group(s): [7, 1] 

0x249d5:	nop	dword ptr [rax]
0x249d8:	mov	eax, dword ptr [rsp + 0x44]
0x249dc:	mov	dword ptr [r14], eax
0x249df:	jmp	0x24931
		Instruction group(s): [7, 1] 

0x249e4:	nop	dword ptr [rax]
0x249e8:	mov	esi, 1
0x249ed:	mov	rdi, rbx
0x249f0:	call	0x222c0
		Instruction group(s): [2, 7, 145] 

0x249f5:	jmp	0x24a03
		Instruction group(s): [7, 1] 

0x249f7:	nop	word ptr [rax + rax]
0x24a00:	mov	rbx, rdx
0x24a03:	mov	rdx, qword ptr [rbx + 0x48]
0x24a07:	test	rdx, rdx
0x24a0a:	jne	0x24a00
		Instruction group(s): [7, 1] 

0x24a0c:	jmp	0x246a1
		Instruction group(s): [7, 1] 

0x24a11:	nop	dword ptr [rax]
0x24a18:	mov	esi, 1
0x24a1d:	mov	rdi, rbx
0x24a20:	call	0x222c0
		Instruction group(s): [2, 7, 145] 

0x24a25:	jmp	0x24a33
		Instruction group(s): [7, 1] 

0x24a27:	nop	word ptr [rax + rax]
0x24a30:	mov	rbx, rdx
0x24a33:	mov	rdx, qword ptr [rbx + 0x48]
0x24a37:	test	rdx, rdx
0x24a3a:	jne	0x24a30
		Instruction group(s): [7, 1] 

0x24a3c:	jmp	0x247b9
		Instruction group(s): [7, 1] 

0x24a41:	nop	dword ptr [rax]
0x24a48:	mov	rdx, rax
0x24a4b:	jmp	0x24959
		Instruction group(s): [7, 1] 

0x24a50:	xor	r12d, r12d
0x24a53:	jmp	0x246c0
		Instruction group(s): [7, 1] 

0x24a58:	test	byte ptr [rip + 0x211999], 8
0x24a5f:	je	0x24732
		Instruction group(s): [7, 1] 

0x24a65:	mov	edi, dword ptr [rsp + 0x20]
0x24a69:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x24a6e:	mov	rbx, qword ptr [rbp]
0x24a72:	lea	rsi, [rip + 0x9c07]
0x24a79:	mov	edx, 5
0x24a7e:	xor	edi, edi
0x24a80:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x24a85:	mov	rdx, rbx
0x24a88:	mov	rsi, rax
0x24a8b:	mov	edi, 1
0x24a90:	xor	eax, eax
0x24a92:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x24a97:	mov	rdi, qword ptr [rip + 0x211382]
0x24a9e:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x24aa3:	jmp	0x24732
		Instruction group(s): [7, 1] 

0x24aa8:	mov	edi, dword ptr [rsp + 0x20]
0x24aac:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x24ab1:	mov	rbx, qword ptr [rbp]
0x24ab5:	lea	rsi, [rip + 0x9ed4]
0x24abc:	mov	edx, 5
0x24ac1:	xor	edi, edi
0x24ac3:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x24ac8:	mov	rdx, rbx
0x24acb:	mov	rsi, rax
0x24ace:	mov	edi, 1
0x24ad3:	xor	eax, eax
0x24ad5:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x24ada:	mov	rdi, qword ptr [rip + 0x21133f]
0x24ae1:	call	0x8ad0
		Instruction group(s): [2, 7, 145] 

0x24ae6:	mov	rax, qword ptr [rip + 0x214a6b]
0x24aed:	mov	rax, qword ptr [rax + 0x20]
0x24af1:	jmp	0x24782
		Instruction group(s): [7, 1] 

0x24af6:	mov	edi, dword ptr [rsp + 0x20]
0x24afa:	call	0x1b850
		Instruction group(s): [2, 7, 145] 

0x24aff:	mov	rbx, qword ptr [rbp]
0x24b03:	mov	edx, 5
0x24b08:	lea	rsi, [rip + 0x9b49]
0x24b0f:	jmp	0x24a7e
		Instruction group(s): [7, 1] 

0x24b14:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x24b19:	nop	dword ptr [rax]
0x24b20:	push	r15
		Instruction group(s): [145] 

0x24b22:	push	r14
		Instruction group(s): [145] 

0x24b24:	push	r13
		Instruction group(s): [145] 

0x24b26:	push	r12
		Instruction group(s): [145] 

0x24b28:	push	rbp
		Instruction group(s): [145] 

0x24b29:	push	rbx
		Instruction group(s): [145] 

0x24b2a:	sub	rsp, 0x28
0x24b2e:	mov	eax, dword ptr [rip + 0x214ad0]
0x24b34:	mov	dword ptr [rsp + 4], eax
0x24b38:	mov	eax, dword ptr [rip + 0x21189e]
0x24b3e:	mov	dword ptr [rsp + 8], eax
0x24b42:	mov	eax, dword ptr [rip + 0x2149e8]
0x24b48:	mov	dword ptr [rsp + 0xc], eax
0x24b4c:	call	0x1be20
		Instruction group(s): [2, 7, 145] 

0x24b51:	test	rax, rax
0x24b54:	je	0x24fb3
		Instruction group(s): [7, 1] 

0x24b5a:	mov	r13, rax
0x24b5d:	mov	byte ptr [rax + 0x20], 0
0x24b61:	mov	rax, qword ptr [rax]
0x24b64:	test	rax, rax
0x24b67:	jne	0x24b5d
		Instruction group(s): [7, 1] 

0x24b69:	mov	dword ptr [rip + 0x213fe5], 1
0x24b73:	mov	ebp, 1
0x24b78:	call	0x18c30
		Instruction group(s): [2, 7, 145] 

0x24b7d:	xor	esi, esi
0x24b7f:	mov	edi, 1
0x24b84:	xor	r12d, r12d
0x24b87:	call	0x17ed0
		Instruction group(s): [2, 7, 145] 

0x24b8c:	mov	qword ptr [rsp + 0x10], r13
0x24b91:	nop	dword ptr [rax]
0x24b98:	mov	rax, qword ptr [r13 + 0x18]
0x24b9c:	mov	r14, qword ptr [rax + 0x68]
0x24ba0:	test	r14, r14
0x24ba3:	cmove	r14, rax
		Instruction group(s): [137] 

0x24ba7:	xor	ebx, ebx
0x24ba9:	nop	dword ptr [rax]
0x24bb0:	movzx	eax, byte ptr [r13 + 0x21]
0x24bb5:	shr	al, 3
0x24bb8:	and	eax, 1
0x24bbb:	mov	ecx, eax
0x24bbd:	movzx	eax, byte ptr [r14 + 0x86]
0x24bc5:	and	eax, 0xfffffffe
0x24bc8:	or	eax, ecx
0x24bca:	mov	byte ptr [r14 + 0x86], al
0x24bd1:	jmp	0x24bdb
		Instruction group(s): [7, 1] 

0x24bd3:	nop	dword ptr [rax + rax]
0x24bd8:	mov	r14, rax
0x24bdb:	mov	rax, qword ptr [r14 + 0x48]
0x24bdf:	test	rax, rax
0x24be2:	jne	0x24bd8
		Instruction group(s): [7, 1] 

0x24be4:	mov	eax, dword ptr [rip + 0x2117be]
0x24bea:	test	eax, eax
0x24bec:	je	0x24c1a
		Instruction group(s): [7, 1] 

0x24bee:	test	byte ptr [r14 + 0x85], 0x10
0x24bf6:	je	0x24e60
		Instruction group(s): [7, 1] 

0x24bfc:	mov	edx, dword ptr [rsp + 4]
0x24c00:	mov	dword ptr [rip + 0x2149fe], edx
0x24c06:	mov	edx, dword ptr [rsp + 8]
0x24c0a:	mov	dword ptr [rip + 0x2117cc], edx
0x24c10:	mov	edx, dword ptr [rsp + 0xc]
0x24c14:	mov	dword ptr [rip + 0x214916], edx
0x24c1a:	xor	esi, esi
0x24c1c:	test	eax, eax
0x24c1e:	mov	rdi, r14
0x24c21:	setne	sil
0x24c25:	mov	r15d, dword ptr [rip + 0x213f0c]
0x24c2c:	call	0x23180
		Instruction group(s): [2, 7, 145] 

0x24c31:	jmp	0x24c3b
		Instruction group(s): [7, 1] 

0x24c33:	nop	dword ptr [rax + rax]
0x24c38:	mov	r14, rcx
0x24c3b:	mov	rcx, qword ptr [r14 + 0x48]
0x24c3f:	test	rcx, rcx
0x24c42:	jne	0x24c38
		Instruction group(s): [7, 1] 

0x24c44:	cmp	dword ptr [rip + 0x213eed], r15d
0x24c4b:	jbe	0x24c52
		Instruction group(s): [7, 1] 

0x24c4d:	mov	byte ptr [r13 + 0x20], 1
0x24c52:	test	eax, eax
0x24c54:	jne	0x24d00
		Instruction group(s): [7, 1] 

0x24c5a:	test	byte ptr [r14 + 0x85], 4
0x24c62:	jne	0x24d00
		Instruction group(s): [7, 1] 

0x24c68:	and	byte ptr [r14 + 0x86], 0xfe
0x24c70:	mov	ebx, 1
0x24c75:	mov	r14, qword ptr [r14 + 0x38]
0x24c79:	test	r14, r14
0x24c7c:	jne	0x24bb0
		Instruction group(s): [7, 1] 

0x24c82:	cmp	ebx, 1
0x24c85:	jne	0x24f40
		Instruction group(s): [7, 1] 

0x24c8b:	mov	r12, r13
0x24c8e:	mov	r13, qword ptr [r13]
0x24c92:	test	r13, r13
0x24c95:	jne	0x24b98
		Instruction group(s): [7, 1] 

0x24c9b:	mov	edx, dword ptr [rip + 0x213eb7]
0x24ca1:	xor	eax, eax
0x24ca3:	mov	r13, qword ptr [rsp + 0x10]
0x24ca8:	test	edx, edx
0x24caa:	sete	al
0x24cad:	mov	dword ptr [rip + 0x213ea5], eax
0x24cb3:	cmp	qword ptr [rsp + 0x10], 0
0x24cb9:	jne	0x24b78
		Instruction group(s): [7, 1] 

0x24cbf:	mov	eax, dword ptr [rip + 0x2116e3]
0x24cc5:	test	eax, eax
0x24cc7:	je	0x24ce7
		Instruction group(s): [7, 1] 

0x24cc9:	mov	eax, dword ptr [rsp + 4]
0x24ccd:	mov	dword ptr [rip + 0x214931], eax
0x24cd3:	mov	eax, dword ptr [rsp + 8]
0x24cd7:	mov	dword ptr [rip + 0x2116ff], eax
0x24cdd:	mov	eax, dword ptr [rsp + 0xc]
0x24ce1:	mov	dword ptr [rip + 0x214849], eax
0x24ce7:	add	rsp, 0x28
0x24ceb:	mov	eax, ebp
0x24ced:	pop	rbx
		Instruction group(s): [145] 

0x24cee:	pop	rbp
		Instruction group(s): [145] 

0x24cef:	pop	r12
		Instruction group(s): [145] 

0x24cf1:	pop	r13
		Instruction group(s): [145] 

0x24cf3:	pop	r14
		Instruction group(s): [145] 

0x24cf5:	pop	r15
		Instruction group(s): [145] 

0x24cf7:	ret	
		Instruction group(s): [3, 145] 

0x24cf8:	nop	dword ptr [rax + rax]
0x24d00:	cmp	ebp, 1
0x24d03:	jbe	0x24d28
		Instruction group(s): [7, 1] 

0x24d05:	movzx	eax, byte ptr [r14 + 0x85]
0x24d0d:	shr	al, 2
0x24d10:	xor	eax, 1
0x24d13:	and	eax, 1
0x24d16:	or	ebx, eax
0x24d18:	and	byte ptr [r14 + 0x86], 0xfe
0x24d20:	jmp	0x24c75
		Instruction group(s): [7, 1] 

0x24d25:	nop	dword ptr [rax]
0x24d28:	movzx	eax, byte ptr [r14 + 0x84]
0x24d30:	and	eax, 3
0x24d33:	je	0x24e88
		Instruction group(s): [7, 1] 

0x24d39:	movzx	ebp, al
0x24d3c:	mov	eax, dword ptr [rip + 0x21169a]
0x24d42:	test	eax, eax
0x24d44:	je	0x24d05
		Instruction group(s): [7, 1] 

0x24d46:	mov	eax, dword ptr [rip + 0x2147e8]
0x24d4c:	test	eax, eax
0x24d4e:	jne	0x24d05
		Instruction group(s): [7, 1] 

0x24d50:	mov	eax, dword ptr [rip + 0x211652]
0x24d56:	test	eax, eax
0x24d58:	jne	0x24d05
		Instruction group(s): [7, 1] 

0x24d5a:	and	byte ptr [r14 + 0x86], 0xfe
0x24d62:	mov	ebx, 1
0x24d67:	mov	rcx, qword ptr [r13 + 0x18]
0x24d6b:	test	byte ptr [rcx + 0x84], 3
0x24d72:	jne	0x24e20
		Instruction group(s): [7, 1] 

0x24d78:	cmp	byte ptr [r13 + 0x20], 0
0x24d7d:	jne	0x24e20
		Instruction group(s): [7, 1] 

0x24d83:	mov	edi, dword ptr [rip + 0x214737]
0x24d89:	test	edi, edi
0x24d8b:	jne	0x24e20
		Instruction group(s): [7, 1] 

0x24d91:	mov	esi, dword ptr [rip + 0x211645]
0x24d97:	test	esi, esi
0x24d99:	jne	0x24e20
		Instruction group(s): [7, 1] 

0x24d9f:	test	byte ptr [rcx + 0x85], 0x20
0x24da6:	mov	rax, qword ptr [rcx]
0x24da9:	mov	r15, rax
0x24dac:	jne	0x24dd7
		Instruction group(s): [7, 1] 

0x24dae:	cmp	qword ptr [rcx + 0x20], 0
0x24db3:	je	0x24dd7
		Instruction group(s): [7, 1] 

0x24db5:	lea	rsi, [rip + 0x9628]
0x24dbc:	mov	edx, 5
0x24dc1:	xor	edi, edi
0x24dc3:	mov	qword ptr [rsp + 0x18], rcx
0x24dc8:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x24dcd:	mov	rcx, qword ptr [rsp + 0x18]
0x24dd2:	mov	rdx, rax
0x24dd5:	jmp	0x24df7
		Instruction group(s): [7, 1] 

0x24dd7:	lea	rsi, [rip + 0x95e9]
0x24dde:	mov	edx, 5
0x24de3:	xor	edi, edi
0x24de5:	mov	qword ptr [rsp + 0x18], rcx
0x24dea:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x24def:	mov	rcx, qword ptr [rsp + 0x18]
0x24df4:	mov	rdx, rax
0x24df7:	mov	rdi, qword ptr [rcx]
0x24dfa:	mov	qword ptr [rsp + 0x18], rdx
0x24dff:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x24e04:	mov	rdx, qword ptr [rsp + 0x18]
0x24e09:	mov	rsi, rax
0x24e0c:	mov	rcx, r15
0x24e0f:	mov	edi, 1
0x24e14:	xor	eax, eax
0x24e16:	call	0x1ca50
		Instruction group(s): [2, 7, 145] 

0x24e1b:	nop	dword ptr [rax + rax]
0x24e20:	test	r12, r12
0x24e23:	mov	rax, qword ptr [r13]
0x24e27:	je	0x24f22
		Instruction group(s): [7, 1] 

0x24e2d:	mov	rdi, r13
0x24e30:	mov	qword ptr [r12], rax
0x24e34:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x24e39:	mov	r13, qword ptr [r12]
0x24e3d:	test	ebx, ebx
0x24e3f:	je	0x24c92
		Instruction group(s): [7, 1] 

0x24e45:	test	r13, r13
0x24e48:	je	0x24c9b
		Instruction group(s): [7, 1] 

0x24e4e:	mov	r13, qword ptr [rsp + 0x10]
0x24e53:	jmp	0x24cb3
		Instruction group(s): [7, 1] 

0x24e58:	nop	dword ptr [rax + rax]
0x24e60:	mov	dword ptr [rip + 0x2146c6], 0
0x24e6a:	mov	dword ptr [rip + 0x211568], 0
0x24e74:	mov	dword ptr [rip + 0x214786], 0
0x24e7e:	jmp	0x24c1a
		Instruction group(s): [7, 1] 

0x24e83:	nop	dword ptr [rax + rax]
0x24e88:	mov	r15d, dword ptr [rip + 0x211519]
0x24e8f:	mov	rax, qword ptr [r14 + 0x70]
0x24e93:	test	r15d, r15d
0x24e96:	je	0x24f5b
		Instruction group(s): [7, 1] 

0x24e9c:	test	rax, rax
0x24e9f:	je	0x24f89
		Instruction group(s): [7, 1] 

0x24ea5:	test	byte ptr [r14 + 0x85], 4
0x24ead:	je	0x24c68
		Instruction group(s): [7, 1] 

0x24eb3:	cmp	byte ptr [r13 + 0x20], 0
0x24eb8:	je	0x24d18
		Instruction group(s): [7, 1] 

0x24ebe:	cmp	qword ptr [r14 + 0x78], rax
0x24ec2:	je	0x24d18
		Instruction group(s): [7, 1] 

0x24ec8:	mov	r11d, dword ptr [rip + 0x2114d9]
0x24ecf:	test	r11d, r11d
0x24ed2:	je	0x24f95
		Instruction group(s): [7, 1] 

0x24ed8:	mov	r10d, dword ptr [rip + 0x214651]
0x24edf:	test	r10d, r10d
0x24ee2:	jne	0x24ef6
		Instruction group(s): [7, 1] 

0x24ee4:	mov	r9d, dword ptr [rip + 0x2114f1]
0x24eeb:	mov	eax, 0
0x24ef0:	test	r9d, r9d
0x24ef3:	cmove	ebp, eax
		Instruction group(s): [137] 

0x24ef6:	movzx	eax, byte ptr [r14 + 0x86]
0x24efe:	test	al, 1
0x24f00:	je	0x24fa4
		Instruction group(s): [7, 1] 

0x24f06:	and	eax, 0xfffffffe
0x24f09:	test	r12, r12
0x24f0c:	mov	ebx, 1
0x24f11:	mov	byte ptr [r14 + 0x86], al
0x24f18:	mov	rax, qword ptr [r13]
0x24f1c:	jne	0x24e2d
		Instruction group(s): [7, 1] 

0x24f22:	mov	rdi, r13
0x24f25:	mov	qword ptr [rsp + 0x10], rax
0x24f2a:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x24f2f:	mov	rax, qword ptr [rsp + 0x10]
0x24f34:	mov	r13, rax
0x24f37:	jmp	0x24e3d
		Instruction group(s): [7, 1] 

0x24f3c:	nop	dword ptr [rax]
0x24f40:	mov	r8d, dword ptr [rip + 0x211461]
0x24f47:	mov	rcx, qword ptr [r13 + 0x18]
0x24f4b:	test	r8d, r8d
0x24f4e:	jne	0x24e20
		Instruction group(s): [7, 1] 

0x24f54:	xor	ebx, ebx
0x24f56:	jmp	0x24d6b
		Instruction group(s): [7, 1] 

0x24f5b:	test	rax, rax
0x24f5e:	jne	0x24ea5
		Instruction group(s): [7, 1] 

0x24f64:	mov	esi, 1
0x24f69:	mov	rdi, r14
0x24f6c:	call	0x222c0
		Instruction group(s): [2, 7, 145] 

0x24f71:	jmp	0x24f7b
		Instruction group(s): [7, 1] 

0x24f73:	nop	dword ptr [rax + rax]
0x24f78:	mov	r14, rcx
0x24f7b:	mov	rcx, qword ptr [r14 + 0x48]
0x24f7f:	test	rcx, rcx
0x24f82:	jne	0x24f78
		Instruction group(s): [7, 1] 

0x24f84:	jmp	0x24ea5
		Instruction group(s): [7, 1] 

0x24f89:	xor	esi, esi
0x24f8b:	mov	rdi, r14
0x24f8e:	call	0x222c0
		Instruction group(s): [2, 7, 145] 

0x24f93:	jmp	0x24f7b
		Instruction group(s): [7, 1] 

0x24f95:	and	byte ptr [r14 + 0x86], 0xfe
0x24f9d:	xor	ebp, ebp
0x24f9f:	jmp	0x24c75
		Instruction group(s): [7, 1] 

0x24fa4:	and	eax, 0xfffffffe
0x24fa7:	mov	byte ptr [r14 + 0x86], al
0x24fae:	jmp	0x24c75
		Instruction group(s): [7, 1] 

0x24fb3:	mov	dword ptr [rip + 0x213b9b], 1
0x24fbd:	mov	ebp, 1
0x24fc2:	jmp	0x24cbf
		Instruction group(s): [7, 1] 

0x24fc7:	nop	word ptr [rax + rax]
0x24fd0:	push	r12
		Instruction group(s): [145] 

0x24fd2:	push	rbp
		Instruction group(s): [145] 

0x24fd3:	mov	rbp, rsi
0x24fd6:	push	rbx
		Instruction group(s): [145] 

0x24fd7:	mov	rbx, rdi
0x24fda:	mov	r12, qword ptr [rdi]
0x24fdd:	mov	rdi, qword ptr [rdi + 0x20]
0x24fe1:	call	0x1bee0
		Instruction group(s): [2, 7, 145] 

0x24fe6:	mov	rdi, qword ptr [rbx + 8]
0x24fea:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x24fef:	mov	rdi, qword ptr [rbx + 0x18]
0x24ff3:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x24ff8:	mov	rdi, qword ptr [rbx + 0x10]
0x24ffc:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x25001:	mov	rdi, rbx
0x25004:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x25009:	cmp	qword ptr [rip + 0x214600], rbx
0x25010:	je	0x25030
		Instruction group(s): [7, 1] 

0x25012:	test	rbp, rbp
0x25015:	je	0x2501b
		Instruction group(s): [7, 1] 

0x25017:	mov	qword ptr [rbp], r12
0x2501b:	cmp	qword ptr [rip + 0x214606], rbx
0x25022:	jne	0x2502b
		Instruction group(s): [7, 1] 

0x25024:	mov	qword ptr [rip + 0x2145fd], rbp
0x2502b:	pop	rbx
		Instruction group(s): [145] 

0x2502c:	pop	rbp
		Instruction group(s): [145] 

0x2502d:	pop	r12
		Instruction group(s): [145] 

0x2502f:	ret	
		Instruction group(s): [3, 145] 

0x25030:	test	rbp, rbp
0x25033:	jne	0x2503e
		Instruction group(s): [7, 1] 

0x25035:	mov	qword ptr [rip + 0x2145d4], r12
0x2503c:	jmp	0x2501b
		Instruction group(s): [7, 1] 

0x2503e:	call	0x8650
		Instruction group(s): [2, 7, 145] 

0x25043:	nop	dword ptr [rax]
0x25046:	nop	word ptr cs:[rax + rax]
0x25050:	push	r15
		Instruction group(s): [145] 

0x25052:	push	r14
		Instruction group(s): [145] 

0x25054:	xor	ecx, ecx
0x25056:	push	r13
		Instruction group(s): [145] 

0x25058:	push	r12
		Instruction group(s): [145] 

0x2505a:	push	rbp
		Instruction group(s): [145] 

0x2505b:	push	rbx
		Instruction group(s): [145] 

0x2505c:	sub	rsp, 0x38
0x25060:	mov	rdx, qword ptr [rip + 0x2145a9]
0x25067:	mov	word ptr [rdi + 0x32], cx
0x2506b:	mov	qword ptr [rsp + 0x10], rdi
0x25070:	mov	dword ptr [rsp + 0x2c], esi
0x25074:	mov	qword ptr [rdi], 0
0x2507b:	test	rdx, rdx
0x2507e:	mov	qword ptr [rsp + 8], rdx
0x25083:	je	0x252a7
		Instruction group(s): [7, 1] 

0x25089:	movzx	eax, word ptr [rdi + 0x30]
0x2508d:	mov	qword ptr [rsp + 0x20], 0
0x25096:	mov	dword ptr [rsp + 0x28], eax
0x2509a:	sub	eax, 1
0x2509d:	lea	rax, [rax*8 + 8]
0x250a5:	mov	qword ptr [rsp + 0x18], rax
0x250aa:	mov	eax, dword ptr [rsp + 0x28]
0x250ae:	test	eax, eax
0x250b0:	je	0x251f0
		Instruction group(s): [7, 1] 

0x250b6:	mov	rax, qword ptr [rsp + 8]
0x250bb:	xor	ebp, ebp
0x250bd:	movzx	r15d, word ptr [rax + 0x30]
0x250c2:	nop	word ptr [rax + rax]
0x250c8:	test	r15d, r15d
0x250cb:	je	0x2512b
		Instruction group(s): [7, 1] 

0x250cd:	mov	rax, qword ptr [rsp + 0x10]
0x250d2:	xor	r14d, r14d
0x250d5:	mov	rax, qword ptr [rax + 8]
0x250d9:	mov	r13, qword ptr [rax + rbp]
0x250dd:	mov	rax, qword ptr [rsp + 8]
0x250e2:	mov	r12, qword ptr [rax + 8]
0x250e6:	lea	rbx, [r13 + 1]
0x250ea:	nop	word ptr [rax + rax]
0x250f0:	mov	rsi, qword ptr [r12]
0x250f4:	cmp	r13, rsi
0x250f7:	je	0x2511e
		Instruction group(s): [7, 1] 

0x250f9:	movzx	eax, byte ptr [r13]
0x250fe:	cmp	al, byte ptr [rsi]
0x25100:	jne	0x251d8
		Instruction group(s): [7, 1] 

0x25106:	test	al, al
0x25108:	je	0x2511e
		Instruction group(s): [7, 1] 

0x2510a:	add	rsi, 1
0x2510e:	mov	rdi, rbx
0x25111:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x25116:	test	eax, eax
0x25118:	jne	0x251e1
		Instruction group(s): [7, 1] 

0x2511e:	add	r14d, 1
0x25122:	add	r12, 8
0x25126:	cmp	r14d, r15d
0x25129:	jne	0x250f0
		Instruction group(s): [7, 1] 

0x2512b:	mov	rax, qword ptr [rsp + 0x10]
0x25130:	mov	rbx, qword ptr [rax + 0x20]
0x25134:	mov	rax, qword ptr [rsp + 8]
0x25139:	mov	r14, qword ptr [rax + 0x20]
0x2513d:	test	r14, r14
0x25140:	je	0x25230
		Instruction group(s): [7, 1] 

0x25146:	test	rbx, rbx
0x25149:	jne	0x251a9
		Instruction group(s): [7, 1] 

0x2514b:	jmp	0x25230
		Instruction group(s): [7, 1] 

0x25150:	mov	rcx, qword ptr [r14 + 8]
0x25154:	test	rcx, rcx
0x25157:	mov	rsi, rcx
0x2515a:	je	0x251c8
		Instruction group(s): [7, 1] 

0x2515c:	cmp	rdi, rsi
0x2515f:	je	0x25191
		Instruction group(s): [7, 1] 

0x25161:	movzx	edi, byte ptr [rdi]
0x25164:	cmp	dil, byte ptr [rsi]
0x25167:	jne	0x251e1
		Instruction group(s): [7, 1] 

0x25169:	test	dil, dil
0x2516c:	je	0x25191
		Instruction group(s): [7, 1] 

0x2516e:	test	rcx, rcx
0x25171:	lea	rsi, [rcx + 1]
0x25175:	je	0x25220
		Instruction group(s): [7, 1] 

0x2517b:	test	rax, rax
0x2517e:	lea	rdi, [rax + 1]
0x25182:	je	0x25210
		Instruction group(s): [7, 1] 

0x25188:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x2518d:	test	eax, eax
0x2518f:	jne	0x251e1
		Instruction group(s): [7, 1] 

0x25191:	mov	rbx, qword ptr [rbx]
0x25194:	mov	r14, qword ptr [r14]
0x25197:	test	rbx, rbx
0x2519a:	je	0x25230
		Instruction group(s): [7, 1] 

0x251a0:	test	r14, r14
0x251a3:	je	0x25230
		Instruction group(s): [7, 1] 

0x251a9:	mov	rax, qword ptr [rbx + 8]
0x251ad:	test	rax, rax
0x251b0:	mov	rdi, rax
0x251b3:	jne	0x25150
		Instruction group(s): [7, 1] 

0x251b5:	mov	rcx, qword ptr [rbx + 0x18]
0x251b9:	mov	rdi, qword ptr [rcx]
0x251bc:	mov	rcx, qword ptr [r14 + 8]
0x251c0:	test	rcx, rcx
0x251c3:	mov	rsi, rcx
0x251c6:	jne	0x2515c
		Instruction group(s): [7, 1] 

0x251c8:	mov	rsi, qword ptr [r14 + 0x18]
0x251cc:	mov	rsi, qword ptr [rsi]
0x251cf:	jmp	0x2515c
		Instruction group(s): [7, 1] 

0x251d1:	nop	dword ptr [rax]
0x251d8:	cmp	r14d, r15d
0x251db:	je	0x2512b
		Instruction group(s): [7, 1] 

0x251e1:	add	rbp, 8
0x251e5:	cmp	qword ptr [rsp + 0x18], rbp
0x251ea:	jne	0x250c8
		Instruction group(s): [7, 1] 

0x251f0:	mov	rdx, qword ptr [rsp + 8]
0x251f5:	mov	rax, qword ptr [rdx]
0x251f8:	mov	qword ptr [rsp + 0x20], rdx
0x251fd:	test	rax, rax
0x25200:	je	0x2525b
		Instruction group(s): [7, 1] 

0x25202:	mov	qword ptr [rsp + 8], rax
0x25207:	jmp	0x250aa
		Instruction group(s): [7, 1] 

0x2520c:	nop	dword ptr [rax]
0x25210:	mov	rax, qword ptr [rbx + 0x18]
0x25214:	mov	rdi, qword ptr [rax]
0x25217:	add	rdi, 1
0x2521b:	jmp	0x25188
		Instruction group(s): [7, 1] 

0x25220:	mov	rcx, qword ptr [r14 + 0x18]
0x25224:	mov	rsi, qword ptr [rcx]
0x25227:	add	rsi, 1
0x2522b:	jmp	0x2517b
		Instruction group(s): [7, 1] 

0x25230:	test	rbx, rbx
0x25233:	jne	0x251e1
		Instruction group(s): [7, 1] 

0x25235:	test	r14, r14
0x25238:	jne	0x251e1
		Instruction group(s): [7, 1] 

0x2523a:	mov	edx, dword ptr [rsp + 0x2c]
0x2523e:	test	edx, edx
0x25240:	je	0x2528a
		Instruction group(s): [7, 1] 

0x25242:	mov	rsi, qword ptr [rsp + 0x20]
0x25247:	mov	rdi, qword ptr [rsp + 8]
0x2524c:	call	0x24fd0
		Instruction group(s): [2, 7, 145] 

0x25251:	cmp	qword ptr [rip + 0x2143b7], 0
0x25259:	je	0x252a7
		Instruction group(s): [7, 1] 

0x2525b:	mov	rax, qword ptr [rip + 0x2143c6]
0x25262:	mov	rdx, qword ptr [rsp + 0x10]
0x25267:	mov	qword ptr [rax], rdx
0x2526a:	mov	rax, qword ptr [rsp + 0x10]
0x2526f:	mov	qword ptr [rip + 0x2143b2], rax
0x25276:	add	rsp, 0x38
0x2527a:	mov	eax, 1
0x2527f:	pop	rbx
		Instruction group(s): [145] 

0x25280:	pop	rbp
		Instruction group(s): [145] 

0x25281:	pop	r12
		Instruction group(s): [145] 

0x25283:	pop	r13
		Instruction group(s): [145] 

0x25285:	pop	r14
		Instruction group(s): [145] 

0x25287:	pop	r15
		Instruction group(s): [145] 

0x25289:	ret	
		Instruction group(s): [3, 145] 

0x2528a:	mov	rdi, qword ptr [rsp + 0x10]
0x2528f:	xor	esi, esi
0x25291:	call	0x24fd0
		Instruction group(s): [2, 7, 145] 

0x25296:	add	rsp, 0x38
0x2529a:	xor	eax, eax
0x2529c:	pop	rbx
		Instruction group(s): [145] 

0x2529d:	pop	rbp
		Instruction group(s): [145] 

0x2529e:	pop	r12
		Instruction group(s): [145] 

0x252a0:	pop	r13
		Instruction group(s): [145] 

0x252a2:	pop	r14
		Instruction group(s): [145] 

0x252a4:	pop	r15
		Instruction group(s): [145] 

0x252a6:	ret	
		Instruction group(s): [3, 145] 

0x252a7:	mov	rax, qword ptr [rsp + 0x10]
0x252ac:	mov	qword ptr [rip + 0x21435d], rax
0x252b3:	jmp	0x2526a
		Instruction group(s): [7, 1] 

0x252b5:	nop	
0x252b6:	nop	word ptr cs:[rax + rax]
0x252c0:	push	r15
		Instruction group(s): [145] 

0x252c2:	push	r14
		Instruction group(s): [145] 

0x252c4:	push	r13
		Instruction group(s): [145] 

0x252c6:	push	r12
		Instruction group(s): [145] 

0x252c8:	push	rbp
		Instruction group(s): [145] 

0x252c9:	push	rbx
		Instruction group(s): [145] 

0x252ca:	sub	rsp, 0x28
0x252ce:	mov	rax, qword ptr [rip + 0x21433b]
0x252d5:	mov	dword ptr [rip + 0x214341], 0
0x252df:	mov	dword ptr [rip + 0x214333], 0
0x252e9:	mov	dword ptr [rip + 0x214341], 0
0x252f3:	mov	dword ptr [rip + 0x21431b], 0
0x252fd:	test	rax, rax
0x25300:	je	0x2546f
		Instruction group(s): [7, 1] 

0x25306:	xor	ecx, ecx
0x25308:	xor	edx, edx
0x2530a:	mov	dword ptr [rsp + 0x14], 0
0x25312:	xor	r12d, r12d
0x25315:	nop	dword ptr [rax]
0x25318:	add	edx, 1
0x2531b:	mov	rsi, qword ptr [rax]
0x2531e:	mov	dword ptr [rip + 0x214310], edx
0x25324:	movzx	edx, word ptr [rax + 0x30]
0x25328:	mov	qword ptr [rsp + 0x18], rsi
0x2532d:	cmp	edx, ecx
0x2532f:	jbe	0x25337
		Instruction group(s): [7, 1] 

0x25331:	mov	dword ptr [rip + 0x2142e5], edx
0x25337:	mov	r14, qword ptr [rax + 0x20]
0x2533b:	test	r14, r14
0x2533e:	je	0x25436
		Instruction group(s): [7, 1] 

0x25344:	xor	ebp, ebp
0x25346:	jmp	0x253f2
		Instruction group(s): [7, 1] 

0x2534b:	nop	dword ptr [rax + rax]
0x25350:	mov	rdi, r13
0x25353:	add	ebp, 1
0x25356:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x2535b:	mov	esi, 0x2f
0x25360:	mov	rdi, r13
0x25363:	mov	rbx, rax
0x25366:	call	0x8890
		Instruction group(s): [2, 7, 145] 

0x2536b:	test	rax, rax
0x2536e:	mov	r15d, dword ptr [rip + 0x2142a3]
0x25375:	mov	qword ptr [rsp + 8], rax
0x2537a:	je	0x25410
		Instruction group(s): [7, 1] 

0x25380:	mov	esi, 0x25
0x25385:	mov	rdi, r13
0x25388:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x2538d:	cmp	ebx, r15d
0x25390:	mov	rdx, qword ptr [rsp + 8]
0x25395:	jbe	0x2539d
		Instruction group(s): [7, 1] 

0x25397:	mov	dword ptr [rip + 0x21427b], ebx
0x2539d:	cmp	rdx, rax
0x253a0:	jae	0x2541b
		Instruction group(s): [7, 1] 

0x253a2:	lea	rax, [r13 + 1]
0x253a6:	cmp	r13, rdx
0x253a9:	cmove	rdx, rax
		Instruction group(s): [137] 

0x253ad:	movsxd	rax, dword ptr [rsp + 0x14]
		Instruction group(s): [145] 

0x253b2:	mov	rbx, rdx
0x253b5:	sub	rbx, r13
0x253b8:	cmp	rbx, rax
0x253bb:	jg	0x25458
		Instruction group(s): [7, 1] 

0x253c1:	mov	rdx, rbx
0x253c4:	mov	rsi, r13
0x253c7:	mov	rdi, r12
0x253ca:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x253cf:	lea	rsi, [rip + 0x85f7]
0x253d6:	mov	byte ptr [r12 + rbx], 0
0x253db:	mov	rdi, r12
0x253de:	call	0xd6d0
		Instruction group(s): [2, 7, 145] 

0x253e3:	test	eax, eax
0x253e5:	sete	byte ptr [r14 + 0x20]
0x253ea:	mov	r14, qword ptr [r14]
0x253ed:	test	r14, r14
0x253f0:	je	0x25428
		Instruction group(s): [7, 1] 

0x253f2:	mov	r13, qword ptr [r14 + 8]
0x253f6:	test	r13, r13
0x253f9:	jne	0x25350
		Instruction group(s): [7, 1] 

0x253ff:	mov	rax, qword ptr [r14 + 0x18]
0x25403:	mov	r13, qword ptr [rax]
0x25406:	jmp	0x25350
		Instruction group(s): [7, 1] 

0x2540b:	nop	dword ptr [rax + rax]
0x25410:	cmp	ebx, r15d
0x25413:	jbe	0x2541b
		Instruction group(s): [7, 1] 

0x25415:	mov	dword ptr [rip + 0x2141fd], ebx
0x2541b:	mov	byte ptr [r14 + 0x20], 0
0x25420:	mov	r14, qword ptr [r14]
0x25423:	test	r14, r14
0x25426:	jne	0x253f2
		Instruction group(s): [7, 1] 

0x25428:	cmp	dword ptr [rip + 0x2141f2], ebp
0x2542e:	jae	0x25436
		Instruction group(s): [7, 1] 

0x25430:	mov	dword ptr [rip + 0x2141ea], ebp
0x25436:	mov	rax, qword ptr [rsp + 0x18]
0x2543b:	test	rax, rax
0x2543e:	je	0x25472
		Instruction group(s): [7, 1] 

0x25440:	mov	edx, dword ptr [rip + 0x2141ee]
0x25446:	mov	ecx, dword ptr [rip + 0x2141d0]
0x2544c:	jmp	0x25318
		Instruction group(s): [7, 1] 

0x25451:	nop	dword ptr [rax]
0x25458:	lea	esi, [rbx + 1]
		Instruction group(s): [145] 

0x2545b:	mov	rdi, r12
0x2545e:	mov	dword ptr [rsp + 0x14], ebx
0x25462:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x25467:	mov	r12, rax
0x2546a:	jmp	0x253c1
		Instruction group(s): [7, 1] 

0x2546f:	xor	r12d, r12d
0x25472:	add	rsp, 0x28
0x25476:	mov	rdi, r12
0x25479:	pop	rbx
		Instruction group(s): [145] 

0x2547a:	pop	rbp
		Instruction group(s): [145] 

0x2547b:	pop	r12
		Instruction group(s): [145] 

0x2547d:	pop	r13
		Instruction group(s): [145] 

0x2547f:	pop	r14
		Instruction group(s): [145] 

0x25481:	pop	r15
		Instruction group(s): [145] 

0x25483:	jmp	0x8d70
		Instruction group(s): [7, 1] 

0x25488:	nop	dword ptr [rax + rax]
0x25490:	push	r14
		Instruction group(s): [145] 

0x25492:	push	r13
		Instruction group(s): [145] 

0x25494:	mov	r13d, esi
0x25497:	push	r12
		Instruction group(s): [145] 

0x25499:	push	rbp
		Instruction group(s): [145] 

0x2549a:	mov	rbp, rdi
0x2549d:	push	rbx
		Instruction group(s): [145] 

0x2549e:	mov	edi, 0x38
0x254a3:	sub	rsp, 0x10
0x254a7:	mov	rax, qword ptr fs:[0x28]
0x254b0:	mov	qword ptr [rsp + 8], rax
0x254b5:	xor	eax, eax
0x254b7:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x254bc:	mov	edx, 1
0x254c1:	mov	rbx, rax
0x254c4:	mov	edi, 8
0x254c9:	mov	word ptr [rax + 0x30], dx
0x254cd:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x254d2:	mov	edi, 8
0x254d7:	mov	qword ptr [rbx + 8], rax
0x254db:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x254e0:	mov	edi, 4
0x254e5:	mov	qword ptr [rbx + 0x18], rax
0x254e9:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x254ee:	mov	r12, qword ptr [rbp]
0x254f2:	mov	qword ptr [rbx + 0x10], rax
0x254f6:	mov	r14, rax
0x254f9:	mov	rdi, r12
0x254fc:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x25501:	mov	rdi, qword ptr [rbx + 8]
0x25505:	mov	dword ptr [r14], eax
0x25508:	mov	qword ptr [rdi], r12
0x2550b:	mov	r12, qword ptr [rbx + 0x18]
0x2550f:	call	0x1e260
		Instruction group(s): [2, 7, 145] 

0x25514:	xor	r8d, r8d
0x25517:	xor	ecx, ecx
0x25519:	mov	rdi, rsp
0x2551c:	mov	qword ptr [r12], rax
0x25520:	mov	rax, qword ptr [rbx + 0x18]
0x25524:	mov	edx, 1
0x25529:	mov	esi, 0x28
0x2552e:	add	qword ptr [rax], 1
0x25532:	mov	rax, qword ptr [rbp + 8]
0x25536:	mov	qword ptr [rsp], rax
0x2553a:	call	0x1f330
		Instruction group(s): [2, 7, 145] 

0x2553f:	xor	esi, esi
0x25541:	mov	qword ptr [rbx + 0x20], rax
0x25545:	mov	rdi, rbx
0x25548:	call	0x25050
		Instruction group(s): [2, 7, 145] 

0x2554d:	test	eax, eax
0x2554f:	je	0x25593
		Instruction group(s): [7, 1] 

0x25551:	mov	edi, 0x30
0x25556:	mov	byte ptr [rbx + 0x32], r13b
0x2555a:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x2555f:	mov	rdi, qword ptr [rbp + 0x10]
0x25563:	mov	qword ptr [rbx + 0x28], rax
0x25567:	mov	r12, rax
0x2556a:	mov	qword ptr [rax], 0
0x25571:	mov	qword ptr [rax + 8], 0
0x25579:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0x2557e:	mov	qword ptr [r12 + 0x10], rax
0x25583:	mov	rax, qword ptr [rbx + 0x28]
0x25587:	mov	qword ptr [rax + 0x18], 0
0x2558f:	mov	byte ptr [rax + 0x2a], 9
0x25593:	mov	rax, qword ptr [rsp + 8]
0x25598:	xor	rax, qword ptr fs:[0x28]
0x255a1:	jne	0x255b0
		Instruction group(s): [7, 1] 

0x255a3:	add	rsp, 0x10
0x255a7:	pop	rbx
		Instruction group(s): [145] 

0x255a8:	pop	rbp
		Instruction group(s): [145] 

0x255a9:	pop	r12
		Instruction group(s): [145] 

0x255ab:	pop	r13
		Instruction group(s): [145] 

0x255ad:	pop	r14
		Instruction group(s): [145] 

0x255af:	ret	
		Instruction group(s): [3, 145] 

0x255b0:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x255b5:	nop	
0x255b6:	nop	word ptr cs:[rax + rax]
0x255c0:	push	r15
		Instruction group(s): [145] 

0x255c2:	push	r14
		Instruction group(s): [145] 

0x255c4:	mov	r14, rdi
0x255c7:	push	r13
		Instruction group(s): [145] 

0x255c9:	push	r12
		Instruction group(s): [145] 

0x255cb:	mov	edi, 0x38
0x255d0:	push	rbp
		Instruction group(s): [145] 

0x255d1:	push	rbx
		Instruction group(s): [145] 

0x255d2:	mov	ebx, edx
0x255d4:	mov	r12, rsi
0x255d7:	mov	r13, r8
0x255da:	mov	r15, r9
0x255dd:	sub	rsp, 0x18
0x255e1:	mov	dword ptr [rsp + 0xc], ecx
0x255e5:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x255ea:	lea	edi, [rbx*4]
		Instruction group(s): [145] 

0x255f1:	mov	word ptr [rax + 0x30], bx
0x255f5:	mov	qword ptr [rax + 0x28], r15
0x255f9:	mov	qword ptr [rax + 0x20], r13
0x255fd:	mov	qword ptr [rax + 8], r14
0x25601:	mov	rbp, rax
0x25604:	mov	qword ptr [rax + 0x18], r12
0x25608:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x2560d:	test	ebx, ebx
0x2560f:	mov	qword ptr [rbp + 0x10], rax
0x25613:	je	0x2564c
		Instruction group(s): [7, 1] 

0x25615:	lea	r12d, [rbx - 1]
		Instruction group(s): [145] 

0x25619:	mov	r15, qword ptr [rbp + 0x18]
0x2561d:	mov	r13, rax
0x25620:	xor	ebx, ebx
0x25622:	add	r12, 1
0x25626:	nop	word ptr cs:[rax + rax]
0x25630:	mov	rdi, qword ptr [r14 + rbx*8]
0x25634:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x25639:	mov	dword ptr [r13 + rbx*4], eax
0x2563e:	add	qword ptr [r15 + rbx*8], 1
0x25643:	add	rbx, 1
0x25647:	cmp	r12, rbx
0x2564a:	jne	0x25630
		Instruction group(s): [7, 1] 

0x2564c:	mov	esi, dword ptr [rsp + 0x50]
0x25650:	mov	rdi, rbp
0x25653:	call	0x25050
		Instruction group(s): [2, 7, 145] 

0x25658:	test	eax, eax
0x2565a:	je	0x25664
		Instruction group(s): [7, 1] 

0x2565c:	movzx	eax, byte ptr [rsp + 0xc]
0x25661:	mov	byte ptr [rbp + 0x32], al
0x25664:	add	rsp, 0x18
0x25668:	pop	rbx
		Instruction group(s): [145] 

0x25669:	pop	rbp
		Instruction group(s): [145] 

0x2566a:	pop	r12
		Instruction group(s): [145] 

0x2566c:	pop	r13
		Instruction group(s): [145] 

0x2566e:	pop	r14
		Instruction group(s): [145] 

0x25670:	pop	r15
		Instruction group(s): [145] 

0x25672:	ret	
		Instruction group(s): [3, 145] 

0x25673:	nop	dword ptr [rax]
0x25676:	nop	word ptr cs:[rax + rax]
0x25680:	push	rbp
		Instruction group(s): [145] 

0x25681:	mov	rbp, rsp
0x25684:	push	r15
		Instruction group(s): [145] 

0x25686:	push	r14
		Instruction group(s): [145] 

0x25688:	push	r13
		Instruction group(s): [145] 

0x2568a:	push	r12
		Instruction group(s): [145] 

0x2568c:	mov	r15, rdx
0x2568f:	push	rbx
		Instruction group(s): [145] 

0x25690:	mov	rbx, rdi
0x25693:	mov	edi, 8
0x25698:	mov	r12, rsi
0x2569b:	sub	rsp, 0x28
0x2569f:	mov	rax, qword ptr fs:[0x28]
0x256a8:	mov	qword ptr [rbp - 0x38], rax
0x256ac:	xor	eax, eax
0x256ae:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x256b3:	mov	edi, 8
0x256b8:	mov	r13, rax
0x256bb:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x256c0:	test	rbx, rbx
0x256c3:	mov	r14, rax
0x256c6:	je	0x257c0
		Instruction group(s): [7, 1] 

0x256cc:	mov	rdi, rbx
0x256cf:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x256d4:	lea	edx, [rax + 2]
		Instruction group(s): [145] 

0x256d7:	mov	rsi, rbx
0x256da:	add	rdx, 0x1e
0x256de:	shr	rdx, 4
0x256e2:	shl	rdx, 4
0x256e6:	sub	rsp, rdx
0x256e9:	lea	edx, [rax + 1]
		Instruction group(s): [145] 

0x256ec:	lea	rcx, [rsp + 0xf]
0x256f1:	mov	dword ptr [rbp - 0x48], edx
0x256f4:	and	rcx, 0xfffffffffffffff0
0x256f8:	lea	rdi, [rcx + 1]
0x256fc:	mov	byte ptr [rcx], 0x25
0x256ff:	mov	qword ptr [rbp - 0x50], rcx
0x25703:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x25708:	mov	r8d, dword ptr [rbp - 0x48]
0x2570c:	mov	rcx, qword ptr [rbp - 0x50]
0x25710:	mov	esi, r8d
0x25713:	mov	rdi, rcx
0x25716:	call	0x26050
		Instruction group(s): [2, 7, 145] 

0x2571b:	mov	qword ptr [r13], rax
0x2571f:	mov	qword ptr [r14], rax
0x25722:	xor	r8d, r8d
0x25725:	test	r12, r12
0x25728:	je	0x25785
		Instruction group(s): [7, 1] 

0x2572a:	mov	rdi, r12
0x2572d:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x25732:	lea	edx, [rax + 2]
		Instruction group(s): [145] 

0x25735:	mov	rsi, r12
0x25738:	add	rdx, 0x1e
0x2573c:	shr	rdx, 4
0x25740:	shl	rdx, 4
0x25744:	sub	rsp, rdx
0x25747:	lea	edx, [rax + 1]
		Instruction group(s): [145] 

0x2574a:	lea	rbx, [rsp + 0xf]
0x2574f:	mov	dword ptr [rbp - 0x50], edx
0x25752:	and	rbx, 0xfffffffffffffff0
0x25756:	lea	rdi, [rbx + 1]
0x2575a:	mov	byte ptr [rbx], 0x25
0x2575d:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x25762:	mov	edi, 0x28
0x25767:	call	0x1b8c0
		Instruction group(s): [2, 7, 145] 

0x2576c:	mov	ecx, dword ptr [rbp - 0x50]
0x2576f:	mov	rdi, rbx
0x25772:	mov	qword ptr [rbp - 0x48], rax
0x25776:	mov	esi, ecx
0x25778:	call	0x26050
		Instruction group(s): [2, 7, 145] 

0x2577d:	mov	r8, qword ptr [rbp - 0x48]
0x25781:	mov	qword ptr [r8 + 8], rax
0x25785:	sub	rsp, 8
0x25789:	xor	ecx, ecx
0x2578b:	mov	edx, 1
0x25790:	push	0
		Instruction group(s): [145] 

0x25792:	mov	r9, r15
0x25795:	mov	rsi, r14
0x25798:	mov	rdi, r13
0x2579b:	call	0x255c0
		Instruction group(s): [2, 7, 145] 

0x257a0:	pop	rax
		Instruction group(s): [145] 

0x257a1:	mov	rax, qword ptr [rbp - 0x38]
0x257a5:	xor	rax, qword ptr fs:[0x28]
0x257ae:	pop	rdx
		Instruction group(s): [145] 

0x257af:	jne	0x257e1
		Instruction group(s): [7, 1] 

0x257b1:	lea	rsp, [rbp - 0x28]
0x257b5:	pop	rbx
		Instruction group(s): [145] 

0x257b6:	pop	r12
		Instruction group(s): [145] 

0x257b8:	pop	r13
		Instruction group(s): [145] 

0x257ba:	pop	r14
		Instruction group(s): [145] 

0x257bc:	pop	r15
		Instruction group(s): [145] 

0x257be:	pop	rbp
		Instruction group(s): [145] 

0x257bf:	ret	
		Instruction group(s): [3, 145] 

0x257c0:	lea	rdi, [rip + 0x9211]
0x257c7:	mov	esi, 5
0x257cc:	call	0x26050
		Instruction group(s): [2, 7, 145] 

0x257d1:	mov	qword ptr [r13], rax
0x257d5:	add	rax, 1
0x257d9:	mov	qword ptr [r14], rax
0x257dc:	jmp	0x25722
		Instruction group(s): [7, 1] 

0x257e1:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x257e6:	nop	word ptr cs:[rax + rax]
0x257f0:	push	rbp
		Instruction group(s): [145] 

0x257f1:	mov	rbp, rsp
0x257f4:	push	r15
		Instruction group(s): [145] 

0x257f6:	push	r14
		Instruction group(s): [145] 

0x257f8:	push	r13
		Instruction group(s): [145] 

0x257fa:	push	r12
		Instruction group(s): [145] 

0x257fc:	push	rbx
		Instruction group(s): [145] 

0x257fd:	sub	rsp, 0x38
0x25801:	mov	dword ptr [rip + 0x213e25], 0
0x2580b:	mov	rax, qword ptr fs:[0x28]
0x25814:	mov	qword ptr [rbp - 0x38], rax
0x25818:	xor	eax, eax
0x2581a:	mov	rax, qword ptr [rip + 0x213de7]
0x25821:	mov	rbx, qword ptr [rax + 0x18]
0x25825:	test	rbx, rbx
0x25828:	je	0x25878
		Instruction group(s): [7, 1] 

0x2582a:	mov	r12, rbx
0x2582d:	xor	r13d, r13d
0x25830:	jmp	0x25854
		Instruction group(s): [7, 1] 

0x25832:	nop	word ptr [rax + rax]
0x25838:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x2583d:	cmp	r13d, eax
0x25840:	jae	0x2584b
		Instruction group(s): [7, 1] 

0x25842:	mov	dword ptr [rip + 0x213de8], eax
0x25848:	mov	r13d, eax
0x2584b:	mov	r12, qword ptr [r12]
0x2584f:	test	r12, r12
0x25852:	je	0x258a0
		Instruction group(s): [7, 1] 

0x25854:	mov	rdi, qword ptr [r12 + 8]
0x25859:	test	rdi, rdi
0x2585c:	jne	0x25838
		Instruction group(s): [7, 1] 

0x2585e:	mov	rax, qword ptr [r12 + 0x18]
0x25863:	mov	rdi, qword ptr [rax]
0x25866:	jmp	0x25838
		Instruction group(s): [7, 1] 

0x25868:	nop	dword ptr [rax + rax]
0x25870:	mov	rbx, qword ptr [rbx]
0x25873:	test	rbx, rbx
0x25876:	jne	0x258c8
		Instruction group(s): [7, 1] 

0x25878:	mov	rax, qword ptr [rbp - 0x38]
0x2587c:	xor	rax, qword ptr fs:[0x28]
0x25885:	jne	0x25b0c
		Instruction group(s): [7, 1] 

0x2588b:	lea	rsp, [rbp - 0x28]
0x2588f:	pop	rbx
		Instruction group(s): [145] 

0x25890:	pop	r12
		Instruction group(s): [145] 

0x25892:	pop	r13
		Instruction group(s): [145] 

0x25894:	pop	r14
		Instruction group(s): [145] 

0x25896:	pop	r15
		Instruction group(s): [145] 

0x25898:	pop	rbp
		Instruction group(s): [145] 

0x25899:	ret	
		Instruction group(s): [3, 145] 

0x2589a:	nop	word ptr [rax + rax]
0x258a0:	lea	eax, [r13 + r13 + 1]
		Instruction group(s): [145] 

0x258a5:	add	rax, 0x1e
0x258a9:	shr	rax, 4
0x258ad:	shl	rax, 4
0x258b1:	sub	rsp, rax
0x258b4:	lea	r13, [rsp + 0xf]
0x258b9:	and	r13, 0xfffffffffffffff0
0x258bd:	mov	qword ptr [rbp - 0x58], r13
0x258c1:	nop	dword ptr [rax]
0x258c8:	mov	rdi, qword ptr [rbx + 8]
0x258cc:	test	rdi, rdi
0x258cf:	je	0x25ac0
		Instruction group(s): [7, 1] 

0x258d5:	xor	edx, edx
0x258d7:	xor	esi, esi
0x258d9:	call	0x25680
		Instruction group(s): [2, 7, 145] 

0x258de:	mov	rax, qword ptr [rbx + 0x18]
0x258e2:	mov	rdx, qword ptr [rax + 0x20]
0x258e6:	test	rdx, rdx
0x258e9:	je	0x25904
		Instruction group(s): [7, 1] 

0x258eb:	mov	rsi, qword ptr [rbx + 8]
0x258ef:	test	rsi, rsi
0x258f2:	je	0x25ad0
		Instruction group(s): [7, 1] 

0x258f8:	lea	rdi, [rip + 0x80ce]
0x258ff:	call	0x25680
		Instruction group(s): [2, 7, 145] 

0x25904:	mov	r15, qword ptr [rbx + 8]
0x25908:	test	r15, r15
0x2590b:	je	0x25ab0
		Instruction group(s): [7, 1] 

0x25911:	mov	rdi, r15
0x25914:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x25919:	mov	r14, qword ptr [rbp - 0x58]
0x2591d:	mov	r12d, eax
0x25920:	mov	rsi, r15
0x25923:	mov	rdx, r12
0x25926:	mov	dword ptr [rbp - 0x44], eax
0x25929:	mov	rdi, r14
0x2592c:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x25931:	mov	rax, qword ptr [rip + 0x213cd0]
0x25938:	mov	r15, qword ptr [rax + 0x18]
0x2593c:	test	r15, r15
0x2593f:	je	0x25870
		Instruction group(s): [7, 1] 

0x25945:	add	r12, r14
0x25948:	mov	qword ptr [rbp - 0x50], r12
0x2594c:	jmp	0x259ad
		Instruction group(s): [7, 1] 

0x2594e:	nop	
0x25950:	mov	rdi, qword ptr [rbp - 0x50]
0x25954:	lea	edx, [r12 + 1]
		Instruction group(s): [145] 

0x25959:	mov	rsi, r14
0x2595c:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x25961:	mov	rdi, qword ptr [rbp - 0x58]
0x25965:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x2596a:	test	rax, rax
0x2596d:	je	0x259a1
		Instruction group(s): [7, 1] 

0x2596f:	mov	rdx, qword ptr [rax + 0x20]
0x25973:	test	rdx, rdx
0x25976:	je	0x259a1
		Instruction group(s): [7, 1] 

0x25978:	cmp	r12d, 2
0x2597c:	mov	rsi, qword ptr [rbx + 8]
0x25980:	je	0x25a30
		Instruction group(s): [7, 1] 

0x25986:	test	rsi, rsi
0x25989:	je	0x25a80
		Instruction group(s): [7, 1] 

0x2598f:	mov	rdi, qword ptr [r15 + 8]
0x25993:	test	rdi, rdi
0x25996:	je	0x25a94
		Instruction group(s): [7, 1] 

0x2599c:	call	0x25680
		Instruction group(s): [2, 7, 145] 

0x259a1:	mov	r15, qword ptr [r15]
0x259a4:	test	r15, r15
0x259a7:	je	0x25870
		Instruction group(s): [7, 1] 

0x259ad:	mov	r13, qword ptr [r15 + 8]
0x259b1:	test	r13, r13
0x259b4:	mov	r14, r13
0x259b7:	je	0x25a20
		Instruction group(s): [7, 1] 

0x259b9:	mov	rdi, r14
0x259bc:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x259c1:	cmp	eax, dword ptr [rbp - 0x44]
0x259c4:	mov	r12, rax
0x259c7:	jne	0x25950
		Instruction group(s): [7, 1] 

0x259c9:	mov	rax, qword ptr [rbx + 8]
0x259cd:	test	rax, rax
0x259d0:	mov	rsi, rax
0x259d3:	je	0x25aa0
		Instruction group(s): [7, 1] 

0x259d9:	cmp	r14, rsi
0x259dc:	je	0x259a1
		Instruction group(s): [7, 1] 

0x259de:	movzx	esi, byte ptr [rsi]
0x259e1:	cmp	sil, byte ptr [r14]
0x259e4:	jne	0x25950
		Instruction group(s): [7, 1] 

0x259ea:	test	sil, sil
0x259ed:	je	0x259a1
		Instruction group(s): [7, 1] 

0x259ef:	test	r13, r13
0x259f2:	lea	rsi, [r13 + 1]
0x259f6:	je	0x25af0
		Instruction group(s): [7, 1] 

0x259fc:	test	rax, rax
0x259ff:	lea	rdi, [rax + 1]
0x25a03:	je	0x25ae0
		Instruction group(s): [7, 1] 

0x25a09:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x25a0e:	test	eax, eax
0x25a10:	jne	0x25950
		Instruction group(s): [7, 1] 

0x25a16:	jmp	0x259a1
		Instruction group(s): [7, 1] 

0x25a18:	nop	dword ptr [rax + rax]
0x25a20:	mov	rax, qword ptr [r15 + 0x18]
0x25a24:	mov	r14, qword ptr [rax]
0x25a27:	jmp	0x259b9
		Instruction group(s): [7, 1] 

0x25a29:	nop	dword ptr [rax]
0x25a30:	mov	rcx, qword ptr [rbp - 0x50]
0x25a34:	cmp	byte ptr [rcx], 0x2e
0x25a37:	jne	0x25986
		Instruction group(s): [7, 1] 

0x25a3d:	mov	ecx, dword ptr [rbp - 0x44]
0x25a40:	lea	edi, [rcx + 1]
		Instruction group(s): [145] 

0x25a43:	mov	rcx, qword ptr [rbp - 0x58]
0x25a47:	cmp	byte ptr [rcx + rdi], 0x61
0x25a4b:	jne	0x25986
		Instruction group(s): [7, 1] 

0x25a51:	test	rsi, rsi
0x25a54:	je	0x25b00
		Instruction group(s): [7, 1] 

0x25a5a:	xor	edi, edi
0x25a5c:	mov	qword ptr [rbp - 0x60], rax
0x25a60:	call	0x25680
		Instruction group(s): [2, 7, 145] 

0x25a65:	mov	rsi, qword ptr [rbx + 8]
0x25a69:	mov	rax, qword ptr [rbp - 0x60]
0x25a6d:	test	rsi, rsi
0x25a70:	mov	rdx, qword ptr [rax + 0x20]
0x25a74:	jne	0x2598f
		Instruction group(s): [7, 1] 

0x25a7a:	nop	word ptr [rax + rax]
0x25a80:	mov	rdi, qword ptr [r15 + 8]
0x25a84:	mov	rax, qword ptr [rbx + 0x18]
0x25a88:	test	rdi, rdi
0x25a8b:	mov	rsi, qword ptr [rax]
0x25a8e:	jne	0x2599c
		Instruction group(s): [7, 1] 

0x25a94:	mov	rax, qword ptr [r15 + 0x18]
0x25a98:	mov	rdi, qword ptr [rax]
0x25a9b:	jmp	0x2599c
		Instruction group(s): [7, 1] 

0x25aa0:	mov	rsi, qword ptr [rbx + 0x18]
0x25aa4:	mov	rsi, qword ptr [rsi]
0x25aa7:	jmp	0x259d9
		Instruction group(s): [7, 1] 

0x25aac:	nop	dword ptr [rax]
0x25ab0:	mov	rax, qword ptr [rbx + 0x18]
0x25ab4:	mov	r15, qword ptr [rax]
0x25ab7:	jmp	0x25911
		Instruction group(s): [7, 1] 

0x25abc:	nop	dword ptr [rax]
0x25ac0:	mov	rax, qword ptr [rbx + 0x18]
0x25ac4:	mov	rdi, qword ptr [rax]
0x25ac7:	jmp	0x258d5
		Instruction group(s): [7, 1] 

0x25acc:	nop	dword ptr [rax]
0x25ad0:	mov	rsi, qword ptr [rax]
0x25ad3:	jmp	0x258f8
		Instruction group(s): [7, 1] 

0x25ad8:	nop	dword ptr [rax + rax]
0x25ae0:	mov	rax, qword ptr [rbx + 0x18]
0x25ae4:	mov	rdi, qword ptr [rax]
0x25ae7:	add	rdi, 1
0x25aeb:	jmp	0x25a09
		Instruction group(s): [7, 1] 

0x25af0:	mov	rdx, qword ptr [r15 + 0x18]
0x25af4:	mov	rsi, qword ptr [rdx]
0x25af7:	add	rsi, 1
0x25afb:	jmp	0x259fc
		Instruction group(s): [7, 1] 

0x25b00:	mov	rsi, qword ptr [rbx + 0x18]
0x25b04:	mov	rsi, qword ptr [rsi]
0x25b07:	jmp	0x25a5a
		Instruction group(s): [7, 1] 

0x25b0c:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x25b11:	nop	dword ptr [rax + rax]
0x25b16:	nop	word ptr cs:[rax + rax]
0x25b20:	push	r15
		Instruction group(s): [145] 

0x25b22:	push	r14
		Instruction group(s): [145] 

0x25b24:	lea	rsi, [rip + 0x8eb3]
0x25b2b:	push	r13
		Instruction group(s): [145] 

0x25b2d:	push	r12
		Instruction group(s): [145] 

0x25b2f:	xor	edi, edi
0x25b31:	push	rbp
		Instruction group(s): [145] 

0x25b32:	push	rbx
		Instruction group(s): [145] 

0x25b33:	mov	edx, 5
0x25b38:	sub	rsp, 8
0x25b3c:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x25b41:	mov	rdi, rax
0x25b44:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x25b49:	mov	rbx, qword ptr [rip + 0x213ac0]
0x25b50:	test	rbx, rbx
0x25b53:	je	0x25cd0
		Instruction group(s): [7, 1] 

0x25b59:	xor	r14d, r14d
0x25b5c:	xor	r13d, r13d
0x25b5f:	mov	r12d, 0x3a
0x25b65:	nop	dword ptr [rax]
0x25b68:	mov	rsi, qword ptr [rip + 0x2102b1]
0x25b6f:	mov	edi, 0xa
0x25b74:	add	r13d, 1
0x25b78:	call	0x8880
		Instruction group(s): [2, 7, 145] 

0x25b7d:	cmp	word ptr [rbx + 0x30], 0
0x25b82:	je	0x25bce
		Instruction group(s): [7, 1] 

0x25b84:	xor	r15d, r15d
0x25b87:	xor	ebp, ebp
0x25b89:	nop	dword ptr [rax]
0x25b90:	mov	rax, qword ptr [rbx + 8]
0x25b94:	mov	rsi, qword ptr [rip + 0x210285]
0x25b9b:	add	ebp, 1
0x25b9e:	mov	rdi, qword ptr [rax + r15]
0x25ba2:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0x25ba7:	movzx	eax, word ptr [rbx + 0x30]
0x25bab:	mov	rsi, qword ptr [rip + 0x21026e]
0x25bb2:	mov	edi, 0x20
0x25bb7:	cmp	ebp, eax
0x25bb9:	cmove	edi, r12d
		Instruction group(s): [137] 

0x25bbd:	add	r15, 8
0x25bc1:	call	0x8880
		Instruction group(s): [2, 7, 145] 

0x25bc6:	movzx	eax, word ptr [rbx + 0x30]
0x25bca:	cmp	ebp, eax
0x25bcc:	jb	0x25b90
		Instruction group(s): [7, 1] 

0x25bce:	cmp	byte ptr [rbx + 0x32], 0
0x25bd2:	jne	0x25cb0
		Instruction group(s): [7, 1] 

0x25bd8:	mov	rdi, qword ptr [rbx + 0x20]
0x25bdc:	call	0x105c0
		Instruction group(s): [2, 7, 145] 

0x25be1:	mov	rdi, qword ptr [rbx + 0x28]
0x25be5:	test	rdi, rdi
0x25be8:	je	0x25bef
		Instruction group(s): [7, 1] 

0x25bea:	call	0xcc00
		Instruction group(s): [2, 7, 145] 

0x25bef:	cmp	byte ptr [rbx + 0x32], 0
0x25bf3:	je	0x25bf9
		Instruction group(s): [7, 1] 

0x25bf5:	add	r14d, 1
0x25bf9:	mov	rbx, qword ptr [rbx]
0x25bfc:	test	rbx, rbx
0x25bff:	jne	0x25b68
		Instruction group(s): [7, 1] 

0x25c05:	test	r13d, r13d
0x25c08:	je	0x25cd0
		Instruction group(s): [7, 1] 

0x25c0e:	lea	rsi, [rip + 0x8df1]
0x25c15:	mov	edx, 5
0x25c1a:	xor	edi, edi
0x25c1c:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x25c21:	mov	ecx, r14d
0x25c24:	mov	edx, r13d
0x25c27:	mov	rsi, rax
0x25c2a:	mov	edi, 1
0x25c2f:	xor	eax, eax
0x25c31:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x25c36:	pxor	xmm0, xmm0
		Instruction group(s): [149] 

0x25c3a:	mov	eax, r13d
0x25c3d:	pxor	xmm1, xmm1
		Instruction group(s): [149] 

0x25c41:	lea	rsi, [rip + 0x8dd7]
0x25c48:	mov	edi, 1
0x25c4d:	cvtsi2sd	xmm0, r14
		Instruction group(s): [149] 

0x25c52:	cvtsi2sd	xmm1, rax
		Instruction group(s): [149] 

0x25c57:	mov	eax, 1
0x25c5c:	divsd	xmm0, xmm1
		Instruction group(s): [149] 

0x25c60:	mulsd	xmm0, qword ptr [rip + 0x8e00]
		Instruction group(s): [149] 

0x25c68:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x25c6d:	lea	rsi, [rip + 0x8db5]
0x25c74:	xor	edi, edi
0x25c76:	mov	edx, 5
0x25c7b:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x25c80:	mov	rdi, rax
0x25c83:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x25c88:	mov	ebx, dword ptr [rip + 0x2139a6]
0x25c8e:	test	ebx, ebx
0x25c90:	je	0x25c97
		Instruction group(s): [7, 1] 

0x25c92:	cmp	ebx, r13d
0x25c95:	jne	0x25cf0
		Instruction group(s): [7, 1] 

0x25c97:	add	rsp, 8
0x25c9b:	pop	rbx
		Instruction group(s): [145] 

0x25c9c:	pop	rbp
		Instruction group(s): [145] 

0x25c9d:	pop	r12
		Instruction group(s): [145] 

0x25c9f:	pop	r13
		Instruction group(s): [145] 

0x25ca1:	pop	r14
		Instruction group(s): [145] 

0x25ca3:	pop	r15
		Instruction group(s): [145] 

0x25ca5:	ret	
		Instruction group(s): [3, 145] 

0x25ca6:	nop	word ptr cs:[rax + rax]
0x25cb0:	mov	rsi, qword ptr [rip + 0x210169]
0x25cb7:	mov	edi, 0x3a
0x25cbc:	call	0x8880
		Instruction group(s): [2, 7, 145] 

0x25cc1:	jmp	0x25bd8
		Instruction group(s): [7, 1] 

0x25cc6:	nop	word ptr cs:[rax + rax]
0x25cd0:	lea	rsi, [rip + 0x8d19]
0x25cd7:	mov	edx, 5
0x25cdc:	xor	edi, edi
0x25cde:	xor	r13d, r13d
0x25ce1:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x25ce6:	mov	rdi, rax
0x25ce9:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x25cee:	jmp	0x25c88
		Instruction group(s): [7, 1] 

0x25cf0:	lea	rsi, [rip + 0x8d41]
0x25cf7:	mov	edx, 5
0x25cfc:	xor	edi, edi
0x25cfe:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x25d03:	mov	r8d, r13d
0x25d06:	mov	rdx, rax
0x25d09:	mov	ecx, ebx
0x25d0b:	mov	esi, 0x28
0x25d10:	xor	edi, edi
0x25d12:	xor	eax, eax
0x25d14:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x25d19:	nop	dword ptr [rax]
0x25d20:	movzx	esi, byte ptr [rdi]
0x25d23:	xor	eax, eax
0x25d25:	test	sil, sil
0x25d28:	je	0x25d50
		Instruction group(s): [7, 1] 

0x25d2a:	nop	word ptr [rax + rax]
0x25d30:	movzx	edx, sil
0x25d34:	movzx	esi, byte ptr [rdi + 1]
0x25d38:	add	rdi, 1
0x25d3c:	mov	ecx, esi
0x25d3e:	and	ecx, 0xf
0x25d41:	shl	edx, cl
0x25d43:	movsxd	rdx, edx
		Instruction group(s): [145] 

0x25d46:	add	rax, rdx
0x25d49:	test	sil, sil
0x25d4c:	jne	0x25d30
		Instruction group(s): [7, 1] 

0x25d4e:	ret	
		Instruction group(s): [3, 145] 

0x25d50:	ret	
		Instruction group(s): [3, 145] 

0x25d52:	nop	dword ptr [rax]
0x25d56:	nop	word ptr cs:[rax + rax]
0x25d60:	movzx	esi, byte ptr [rdi]
0x25d63:	xor	eax, eax
0x25d65:	test	sil, sil
0x25d68:	je	0x25d90
		Instruction group(s): [7, 1] 

0x25d6a:	nop	word ptr [rax + rax]
0x25d70:	movzx	edx, sil
0x25d74:	movzx	esi, byte ptr [rdi + 1]
0x25d78:	add	rdi, 1
0x25d7c:	mov	ecx, esi
0x25d7e:	and	ecx, 7
0x25d81:	shl	edx, cl
0x25d83:	movsxd	rdx, edx
		Instruction group(s): [145] 

0x25d86:	add	rax, rdx
0x25d89:	test	sil, sil
0x25d8c:	jne	0x25d70
		Instruction group(s): [7, 1] 

0x25d8e:	ret	
		Instruction group(s): [3, 145] 

0x25d90:	ret	
		Instruction group(s): [3, 145] 

0x25d92:	nop	dword ptr [rax]
0x25d96:	nop	word ptr cs:[rax + rax]
0x25da0:	push	r15
		Instruction group(s): [145] 

0x25da2:	push	r14
		Instruction group(s): [145] 

0x25da4:	mov	r15, rdi
0x25da7:	push	r13
		Instruction group(s): [145] 

0x25da9:	push	r12
		Instruction group(s): [145] 

0x25dab:	mov	r13d, esi
0x25dae:	push	rbp
		Instruction group(s): [145] 

0x25daf:	push	rbx
		Instruction group(s): [145] 

0x25db0:	mov	rsi, rdi
0x25db3:	lea	rdi, [rip + 0x212dc6]
0x25dba:	sub	rsp, 0x28
0x25dbe:	mov	rax, qword ptr fs:[0x28]
0x25dc7:	mov	qword ptr [rsp + 0x18], rax
0x25dcc:	xor	eax, eax
0x25dce:	call	0x29540
		Instruction group(s): [2, 7, 145] 

0x25dd3:	mov	r12, qword ptr [rax]
0x25dd6:	add	qword ptr [rip + 0x212d82], 1
0x25dde:	mov	r14, rax
0x25de1:	test	r12, r12
0x25de4:	je	0x25e18
		Instruction group(s): [7, 1] 

0x25de6:	cmp	qword ptr [rip + 0x21001b], r12
0x25ded:	je	0x25e18
		Instruction group(s): [7, 1] 

0x25def:	mov	rcx, qword ptr [rsp + 0x18]
0x25df4:	xor	rcx, qword ptr fs:[0x28]
0x25dfd:	mov	rax, r12
0x25e00:	jne	0x25f8c
		Instruction group(s): [7, 1] 

0x25e06:	add	rsp, 0x28
0x25e0a:	pop	rbx
		Instruction group(s): [145] 

0x25e0b:	pop	rbp
		Instruction group(s): [145] 

0x25e0c:	pop	r12
		Instruction group(s): [145] 

0x25e0e:	pop	r13
		Instruction group(s): [145] 

0x25e10:	pop	r14
		Instruction group(s): [145] 

0x25e12:	pop	r15
		Instruction group(s): [145] 

0x25e14:	ret	
		Instruction group(s): [3, 145] 

0x25e15:	nop	dword ptr [rax]
0x25e18:	movzx	edi, word ptr [rip + 0x20ffa1]
0x25e1f:	lea	ebp, [r13 + 1]
		Instruction group(s): [145] 

0x25e23:	mov	rbx, qword ptr [rip + 0x212dce]
0x25e2a:	cmp	ebp, edi
0x25e2c:	ja	0x25ec0
		Instruction group(s): [7, 1] 

0x25e32:	test	rbx, rbx
0x25e35:	je	0x25e73
		Instruction group(s): [7, 1] 

0x25e37:	movzx	eax, word ptr [rbx + 0xa]
0x25e3b:	cmp	ebp, eax
0x25e3d:	jae	0x25e68
		Instruction group(s): [7, 1] 

0x25e3f:	lea	rcx, [rip + 0x212db2]
0x25e46:	nop	word ptr cs:[rax + rax]
0x25e50:	mov	qword ptr [rsp + 0x10], rbx
0x25e55:	jmp	0x25ee7
		Instruction group(s): [7, 1] 

0x25e5a:	nop	word ptr [rax + rax]
0x25e60:	movzx	eax, word ptr [rbx + 0xa]
0x25e64:	cmp	ebp, eax
0x25e66:	jb	0x25e50
		Instruction group(s): [7, 1] 

0x25e68:	mov	rcx, rbx
0x25e6b:	mov	rbx, qword ptr [rbx]
0x25e6e:	test	rbx, rbx
0x25e71:	jne	0x25e60
		Instruction group(s): [7, 1] 

0x25e73:	add	edi, 0xe
0x25e76:	mov	r12d, 0xe
0x25e7c:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x25e81:	mov	rbx, rax
0x25e84:	xor	eax, eax
0x25e86:	xor	edx, edx
0x25e88:	mov	word ptr [rbx + 8], ax
0x25e8c:	movzx	eax, word ptr [rip + 0x20ff2d]
0x25e93:	lea	rcx, [rsp + 0x10]
0x25e98:	mov	word ptr [rbx + 0xc], dx
0x25e9c:	add	qword ptr [rip + 0x212d44], 1
0x25ea4:	mov	qword ptr [rsp + 0x10], rbx
0x25ea9:	mov	word ptr [rbx + 0xa], ax
0x25ead:	mov	rax, qword ptr [rip + 0x212d44]
0x25eb4:	mov	qword ptr [rbx], rax
0x25eb7:	mov	qword ptr [rip + 0x212d3a], rbx
0x25ebe:	jmp	0x25ef0
		Instruction group(s): [7, 1] 

0x25ec0:	lea	eax, [rbp + 1]
		Instruction group(s): [145] 

0x25ec3:	mov	qword ptr [rsp + 0x10], rbx
0x25ec8:	and	ax, 0xe000
0x25ecc:	add	ax, 0x1fe2
0x25ed0:	test	rbx, rbx
0x25ed3:	mov	word ptr [rip + 0x20fee6], ax
0x25eda:	je	0x25f91
		Instruction group(s): [7, 1] 

0x25ee0:	lea	rcx, [rip + 0x212d11]
0x25ee7:	movzx	r12d, word ptr [rbx + 8]
0x25eec:	add	r12, 0xe
0x25ef0:	add	r12, rbx
0x25ef3:	mov	rdx, r13
0x25ef6:	mov	rsi, r15
0x25ef9:	mov	rdi, r12
0x25efc:	mov	qword ptr [rsp + 8], rcx
0x25f01:	call	0x8be0
		Instruction group(s): [2, 7, 145] 

0x25f06:	mov	rax, qword ptr [rip + 0x212cd3]
0x25f0d:	mov	byte ptr [r12 + r13], 0
0x25f12:	movzx	edx, word ptr [rbx + 0xa]
0x25f16:	add	word ptr [rbx + 8], bp
0x25f1a:	add	word ptr [rbx + 0xc], 1
0x25f1f:	lea	rdi, [rax + 1]
0x25f23:	mov	eax, ebp
0x25f25:	add	rax, qword ptr [rip + 0x212cac]
0x25f2c:	sub	edx, ebp
0x25f2e:	movzx	esi, dx
0x25f31:	mov	word ptr [rbx + 0xa], dx
0x25f35:	xor	edx, edx
0x25f37:	mov	qword ptr [rip + 0x212c9a], rax
0x25f3e:	mov	qword ptr [rip + 0x212c9b], rdi
0x25f45:	div	rdi
0x25f48:	add	rax, 1
0x25f4c:	cmp	rsi, rax
0x25f4f:	jae	0x25f75
		Instruction group(s): [7, 1] 

0x25f51:	mov	rcx, qword ptr [rsp + 8]
0x25f56:	mov	rdx, qword ptr [rip + 0x212c93]
0x25f5d:	mov	rax, qword ptr [rcx]
0x25f60:	mov	rax, qword ptr [rax]
0x25f63:	mov	qword ptr [rcx], rax
0x25f66:	mov	rax, qword ptr [rsp + 0x10]
0x25f6b:	mov	qword ptr [rax], rdx
0x25f6e:	mov	qword ptr [rip + 0x212c7b], rax
0x25f75:	lea	rdi, [rip + 0x212c04]
0x25f7c:	mov	rdx, r14
0x25f7f:	mov	rsi, r12
0x25f82:	call	0x29630
		Instruction group(s): [2, 7, 145] 

0x25f87:	jmp	0x25def
		Instruction group(s): [7, 1] 

0x25f8c:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x25f91:	movzx	edi, ax
0x25f94:	jmp	0x25e73
		Instruction group(s): [7, 1] 

0x25f99:	nop	dword ptr [rax]
0x25fa0:	cmp	rdi, rsi
0x25fa3:	je	0x25fb0
		Instruction group(s): [7, 1] 

0x25fa5:	jmp	0x89e0
		Instruction group(s): [7, 1] 

0x25faa:	nop	word ptr [rax + rax]
0x25fb0:	xor	eax, eax
0x25fb2:	ret	
		Instruction group(s): [3, 145] 

0x25fb3:	nop	dword ptr [rax]
0x25fb6:	nop	word ptr cs:[rax + rax]
0x25fc0:	mov	rax, qword ptr [rip + 0x212c31]
0x25fc7:	test	rax, rax
0x25fca:	je	0x25fed
		Instruction group(s): [7, 1] 

0x25fcc:	nop	dword ptr [rax]
0x25fd0:	lea	rdx, [rax + 0xe]
0x25fd4:	cmp	rdx, rdi
0x25fd7:	ja	0x25fe5
		Instruction group(s): [7, 1] 

0x25fd9:	movzx	ecx, word ptr [rax + 8]
0x25fdd:	add	rdx, rcx
0x25fe0:	cmp	rdi, rdx
0x25fe3:	jb	0x26020
		Instruction group(s): [7, 1] 

0x25fe5:	mov	rax, qword ptr [rax]
0x25fe8:	test	rax, rax
0x25feb:	jne	0x25fd0
		Instruction group(s): [7, 1] 

0x25fed:	mov	rax, qword ptr [rip + 0x212bfc]
0x25ff4:	test	rax, rax
0x25ff7:	je	0x26026
		Instruction group(s): [7, 1] 

0x25ff9:	nop	dword ptr [rax]
0x26000:	lea	rdx, [rax + 0xe]
0x26004:	cmp	rdx, rdi
0x26007:	ja	0x26015
		Instruction group(s): [7, 1] 

0x26009:	movzx	ecx, word ptr [rax + 8]
0x2600d:	add	rdx, rcx
0x26010:	cmp	rdi, rdx
0x26013:	jb	0x26020
		Instruction group(s): [7, 1] 

0x26015:	mov	rax, qword ptr [rax]
0x26018:	test	rax, rax
0x2601b:	jne	0x26000
		Instruction group(s): [7, 1] 

0x2601d:	ret	
		Instruction group(s): [3, 145] 

0x2601f:	nop	
0x26020:	mov	eax, 1
0x26025:	ret	
		Instruction group(s): [3, 145] 

0x26026:	xor	eax, eax
0x26028:	ret	
		Instruction group(s): [3, 145] 

0x26029:	nop	dword ptr [rax]
0x26030:	push	rbx
		Instruction group(s): [145] 

0x26031:	mov	rbx, rdi
0x26034:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x26039:	mov	rdi, rbx
0x2603c:	mov	esi, eax
0x2603e:	pop	rbx
		Instruction group(s): [145] 

0x2603f:	jmp	0x25da0
		Instruction group(s): [7, 1] 

0x26044:	nop	
0x26046:	nop	word ptr cs:[rax + rax]
0x26050:	push	rbp
		Instruction group(s): [145] 

0x26051:	mov	rbp, rsp
0x26054:	push	r12
		Instruction group(s): [145] 

0x26056:	push	rbx
		Instruction group(s): [145] 

0x26057:	mov	r12d, esi
0x2605a:	sub	rsp, 0x10
0x2605e:	mov	rbx, r12
0x26061:	mov	rax, qword ptr fs:[0x28]
0x2606a:	mov	qword ptr [rbp - 0x18], rax
0x2606e:	xor	eax, eax
0x26070:	cmp	byte ptr [rdi + r12], 0
0x26075:	je	0x260aa
		Instruction group(s): [7, 1] 

0x26077:	lea	eax, [r12 + 1]
		Instruction group(s): [145] 

0x2607c:	mov	rsi, rdi
0x2607f:	mov	rdx, r12
0x26082:	add	rax, 0x1e
0x26086:	shr	rax, 4
0x2608a:	shl	rax, 4
0x2608e:	sub	rsp, rax
0x26091:	lea	rcx, [rsp + 0xf]
0x26096:	and	rcx, 0xfffffffffffffff0
0x2609a:	mov	rdi, rcx
0x2609d:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x260a2:	mov	byte ptr [rax + r12], 0
0x260a7:	mov	rdi, rax
0x260aa:	mov	esi, ebx
0x260ac:	call	0x25da0
		Instruction group(s): [2, 7, 145] 

0x260b1:	mov	rdx, qword ptr [rbp - 0x18]
0x260b5:	xor	rdx, qword ptr fs:[0x28]
0x260be:	jne	0x260c9
		Instruction group(s): [7, 1] 

0x260c0:	lea	rsp, [rbp - 0x10]
0x260c4:	pop	rbx
		Instruction group(s): [145] 

0x260c5:	pop	r12
		Instruction group(s): [145] 

0x260c7:	pop	rbp
		Instruction group(s): [145] 

0x260c8:	ret	
		Instruction group(s): [3, 145] 

0x260c9:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x260ce:	nop	
0x260d0:	movzx	eax, word ptr [rip + 0x20fce9]
0x260d7:	cmp	eax, edi
0x260d9:	jae	0x260e5
		Instruction group(s): [7, 1] 

0x260db:	mov	word ptr [rip + 0x20fcde], di
0x260e2:	movzx	eax, di
0x260e5:	ret	
		Instruction group(s): [3, 145] 

0x260e7:	nop	word ptr [rax + rax]
0x260f0:	lea	r8, [rip - 0x157]
0x260f7:	lea	rcx, [rip - 0x39e]
0x260fe:	lea	rdx, [rip - 0x3e5]
0x26105:	lea	rdi, [rip + 0x212a74]
0x2610c:	mov	esi, 0x1f40
0x26111:	jmp	0x29440
		Instruction group(s): [7, 1] 

0x26116:	nop	word ptr cs:[rax + rax]
0x26120:	push	r15
		Instruction group(s): [145] 

0x26122:	push	r14
		Instruction group(s): [145] 

0x26124:	push	r13
		Instruction group(s): [145] 

0x26126:	push	r12
		Instruction group(s): [145] 

0x26128:	mov	r12, rdi
0x2612b:	push	rbp
		Instruction group(s): [145] 

0x2612c:	push	rbx
		Instruction group(s): [145] 

0x2612d:	sub	rsp, 0x28
0x26131:	mov	rax, qword ptr [rip + 0x212ac0]
0x26138:	movzx	ebx, word ptr [rip + 0x20fc81]
0x2613f:	test	rax, rax
0x26142:	je	0x26480
		Instruction group(s): [7, 1] 

0x26148:	mov	rdx, qword ptr [rax]
0x2614b:	test	rdx, rdx
0x2614e:	je	0x264b8
		Instruction group(s): [7, 1] 

0x26154:	xor	ebp, ebp
0x26156:	xor	r13d, r13d
0x26159:	xor	ecx, ecx
0x2615b:	jmp	0x26163
		Instruction group(s): [7, 1] 

0x2615d:	nop	dword ptr [rax]
0x26160:	mov	rcx, rsi
0x26163:	movzx	eax, word ptr [rdx + 0xa]
0x26167:	mov	rdx, qword ptr [rdx]
0x2616a:	lea	rsi, [rcx + 1]
0x2616e:	add	r13, rax
0x26171:	cmp	rbp, rax
0x26174:	cmovb	rbp, rax
		Instruction group(s): [137] 

0x26178:	cmp	rbx, rax
0x2617b:	cmova	rbx, rax
		Instruction group(s): [137] 

0x2617f:	test	rdx, rdx
0x26182:	jne	0x26160
		Instruction group(s): [7, 1] 

0x26184:	mov	rdx, qword ptr [rip + 0x212a65]
0x2618b:	lea	r15, [rcx + 2]
0x2618f:	test	rdx, rdx
0x26192:	je	0x264d8
		Instruction group(s): [7, 1] 

0x26198:	mov	rcx, rsi
0x2619b:	jmp	0x261a3
		Instruction group(s): [7, 1] 

0x2619d:	nop	dword ptr [rax]
0x261a0:	mov	rcx, r14
0x261a3:	movzx	eax, word ptr [rdx + 0xa]
0x261a7:	lea	r14, [rcx + 1]
0x261ab:	mov	rdx, qword ptr [rdx]
0x261ae:	mov	r8, r14
0x261b1:	add	r13, rax
0x261b4:	cmp	rbp, rax
0x261b7:	cmovb	rbp, rax
		Instruction group(s): [137] 

0x261bb:	cmp	rbx, rax
0x261be:	cmova	rbx, rax
		Instruction group(s): [137] 

0x261c2:	sub	r8, rsi
0x261c5:	test	rdx, rdx
0x261c8:	jne	0x261a0
		Instruction group(s): [7, 1] 

0x261ca:	lea	r15, [rcx + 2]
0x261ce:	mov	rcx, qword ptr [rip + 0x212a03]
0x261d5:	mov	r9, qword ptr [rip + 0x212a04]
0x261dc:	lea	rsi, [rip + 0x88bd]
0x261e3:	xor	edi, edi
0x261e5:	mov	edx, 5
0x261ea:	mov	qword ptr [rsp + 0x18], r8
0x261ef:	mov	qword ptr [rsp + 0x10], rcx
0x261f4:	mov	qword ptr [rsp + 8], r9
0x261f9:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x261fe:	mov	rcx, qword ptr [rsp + 0x10]
0x26203:	mov	r9, qword ptr [rsp + 8]
0x26208:	mov	rsi, rax
0x2620b:	xor	edx, edx
0x2620d:	mov	edi, 1
0x26212:	mov	rax, rcx
0x26215:	div	r9
0x26218:	mov	rdx, r12
0x2621b:	push	rax
		Instruction group(s): [145] 

0x2621c:	push	rcx
		Instruction group(s): [145] 

0x2621d:	xor	eax, eax
0x2621f:	mov	r8, qword ptr [rsp + 0x28]
0x26224:	mov	rcx, r15
0x26227:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x2622c:	mov	rax, qword ptr [rip + 0x2129c5]
0x26233:	movzx	ecx, word ptr [rip + 0x20fb86]
0x2623a:	lea	rsi, [rip + 0x88b7]
0x26241:	xor	edi, edi
0x26243:	mov	edx, 5
0x26248:	movzx	r9d, word ptr [rax + 0xc]
0x2624d:	movzx	r15d, word ptr [rax + 8]
0x26252:	mov	dword ptr [rsp + 0x18], ecx
0x26256:	mov	dword ptr [rsp + 0x20], r9d
0x2625b:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x26260:	mov	r9d, dword ptr [rsp + 0x20]
0x26265:	mov	rsi, rax
0x26268:	xor	edx, edx
0x2626a:	mov	eax, r15d
0x2626d:	mov	ecx, dword ptr [rsp + 0x18]
0x26271:	movzx	r8d, r15w
0x26275:	mov	edi, 1
0x2627a:	div	r9w
0x2627e:	movzx	r9d, r9w
0x26282:	mov	rdx, r12
0x26285:	movzx	eax, ax
0x26288:	mov	dword ptr [rsp], eax
0x2628b:	xor	eax, eax
0x2628d:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x26292:	test	r14, r14
0x26295:	pop	rcx
		Instruction group(s): [145] 

0x26296:	pop	rsi
		Instruction group(s): [145] 

0x26297:	jne	0x263d0
		Instruction group(s): [7, 1] 

0x2629d:	mov	rbp, qword ptr [rip + 0x2128bc]
0x262a4:	mov	rax, rbp
0x262a7:	sub	rax, qword ptr [rip + 0x212932]
0x262ae:	js	0x263a8
		Instruction group(s): [7, 1] 

0x262b4:	pxor	xmm0, xmm0
		Instruction group(s): [149] 

0x262b8:	cvtsi2sd	xmm0, rax
		Instruction group(s): [149] 

0x262bd:	test	rbp, rbp
0x262c0:	mulsd	xmm0, qword ptr [rip + 0x87a0]
		Instruction group(s): [149] 

0x262c8:	js	0x26380
		Instruction group(s): [7, 1] 

0x262ce:	pxor	xmm1, xmm1
		Instruction group(s): [149] 

0x262d2:	cvtsi2sd	xmm1, rbp
		Instruction group(s): [149] 

0x262d7:	divsd	xmm0, xmm1
		Instruction group(s): [149] 

0x262db:	movsd	xmm1, qword ptr [rip + 0x86ed]
		Instruction group(s): [149] 

0x262e3:	ucomisd	xmm0, xmm1
		Instruction group(s): [149] 

0x262e7:	jae	0x26360
		Instruction group(s): [7, 1] 

0x262e9:	cvttsd2si	rbx, xmm0
		Instruction group(s): [149] 

0x262ee:	lea	rsi, [rip + 0x88db]
0x262f5:	mov	edx, 5
0x262fa:	xor	edi, edi
0x262fc:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x26301:	mov	r8, rbx
0x26304:	mov	rcx, rbp
0x26307:	mov	rdx, r12
0x2630a:	mov	rsi, rax
0x2630d:	mov	edi, 1
0x26312:	xor	eax, eax
0x26314:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x26319:	mov	rbx, qword ptr [rip + 0x20fb00]
0x26320:	lea	rsi, [rip + 0x8762]
0x26327:	mov	edx, 5
0x2632c:	xor	edi, edi
0x2632e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x26333:	mov	rsi, rbx
0x26336:	mov	rdi, rax
0x26339:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0x2633e:	mov	rsi, qword ptr [rip + 0x20fadb]
0x26345:	add	rsp, 0x28
0x26349:	lea	rdi, [rip + 0x212830]
0x26350:	pop	rbx
		Instruction group(s): [145] 

0x26351:	pop	rbp
		Instruction group(s): [145] 

0x26352:	pop	r12
		Instruction group(s): [145] 

0x26354:	pop	r13
		Instruction group(s): [145] 

0x26356:	pop	r14
		Instruction group(s): [145] 

0x26358:	pop	r15
		Instruction group(s): [145] 

0x2635a:	jmp	0x299e0
		Instruction group(s): [7, 1] 

0x2635f:	nop	
0x26360:	subsd	xmm0, xmm1
		Instruction group(s): [149] 

0x26364:	movabs	rax, 0x8000000000000000
0x2636e:	cvttsd2si	rbx, xmm0
		Instruction group(s): [149] 

0x26373:	xor	rbx, rax
0x26376:	jmp	0x262ee
		Instruction group(s): [7, 1] 

0x2637b:	nop	dword ptr [rax + rax]
0x26380:	mov	rax, rbp
0x26383:	mov	rdx, rbp
0x26386:	pxor	xmm1, xmm1
		Instruction group(s): [149] 

0x2638a:	shr	rax, 1
0x2638d:	and	edx, 1
0x26390:	or	rax, rdx
0x26393:	cvtsi2sd	xmm1, rax
		Instruction group(s): [149] 

0x26398:	addsd	xmm1, xmm1
		Instruction group(s): [149] 

0x2639c:	jmp	0x262d7
		Instruction group(s): [7, 1] 

0x263a1:	nop	dword ptr [rax]
0x263a8:	mov	rdx, rax
0x263ab:	pxor	xmm0, xmm0
		Instruction group(s): [149] 

0x263af:	shr	rdx, 1
0x263b2:	and	eax, 1
0x263b5:	or	rdx, rax
0x263b8:	cvtsi2sd	xmm0, rdx
		Instruction group(s): [149] 

0x263bd:	addsd	xmm0, xmm0
		Instruction group(s): [149] 

0x263c1:	jmp	0x262bd
		Instruction group(s): [7, 1] 

0x263c6:	nop	word ptr cs:[rax + rax]
0x263d0:	movzx	eax, word ptr [rip + 0x20f9e9]
0x263d7:	mov	r15, qword ptr [rip + 0x2127fa]
0x263de:	lea	rsi, [rip + 0x8763]
0x263e5:	mov	r8, qword ptr [rip + 0x2127f4]
0x263ec:	mov	edx, 5
0x263f1:	xor	edi, edi
0x263f3:	sub	r15, rax
0x263f6:	mov	rax, qword ptr [rip + 0x2127fb]
0x263fd:	movzx	eax, word ptr [rax + 0xc]
0x26401:	sub	r8, rax
0x26404:	mov	qword ptr [rsp + 8], r8
0x26409:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x2640e:	mov	r8, qword ptr [rsp + 8]
0x26413:	mov	rsi, rax
0x26416:	xor	edx, edx
0x26418:	mov	rax, r15
0x2641b:	mov	rcx, r15
0x2641e:	mov	edi, 1
0x26423:	div	r8
0x26426:	mov	rdx, r12
0x26429:	mov	r9, rax
0x2642c:	xor	eax, eax
0x2642e:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x26433:	lea	rsi, [rip + 0x874e]
0x2643a:	mov	edx, 5
0x2643f:	xor	edi, edi
0x26441:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x26446:	xor	edx, edx
0x26448:	mov	rsi, rax
0x2644b:	mov	rax, r13
0x2644e:	div	r14
0x26451:	sub	rsp, 8
0x26455:	mov	rdx, r12
0x26458:	mov	r9, rbx
0x2645b:	mov	r8, rbp
0x2645e:	mov	rcx, r13
0x26461:	mov	edi, 1
0x26466:	movzx	eax, ax
0x26469:	push	rax
		Instruction group(s): [145] 

0x2646a:	xor	eax, eax
0x2646c:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x26471:	pop	rax
		Instruction group(s): [145] 

0x26472:	pop	rdx
		Instruction group(s): [145] 

0x26473:	jmp	0x2629d
		Instruction group(s): [7, 1] 

0x26478:	nop	dword ptr [rax + rax]
0x26480:	lea	rsi, [rip + 0x85e9]
0x26487:	mov	edx, 5
0x2648c:	xor	edi, edi
0x2648e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x26493:	add	rsp, 0x28
0x26497:	mov	rdx, r12
0x2649a:	mov	rsi, rax
0x2649d:	pop	rbx
		Instruction group(s): [145] 

0x2649e:	pop	rbp
		Instruction group(s): [145] 

0x2649f:	pop	r12
		Instruction group(s): [145] 

0x264a1:	pop	r13
		Instruction group(s): [145] 

0x264a3:	pop	r14
		Instruction group(s): [145] 

0x264a5:	pop	r15
		Instruction group(s): [145] 

0x264a7:	mov	edi, 1
0x264ac:	xor	eax, eax
0x264ae:	jmp	0x8bc0
		Instruction group(s): [7, 1] 

0x264b3:	nop	dword ptr [rax + rax]
0x264b8:	mov	rdx, qword ptr [rip + 0x212731]
0x264bf:	xor	ebp, ebp
0x264c1:	xor	r13d, r13d
0x264c4:	xor	esi, esi
0x264c6:	mov	r15d, 1
0x264cc:	test	rdx, rdx
0x264cf:	jne	0x26198
		Instruction group(s): [7, 1] 

0x264d5:	nop	dword ptr [rax]
0x264d8:	mov	r14, rsi
0x264db:	xor	r8d, r8d
0x264de:	jmp	0x261ce
		Instruction group(s): [7, 1] 

0x264e3:	nop	word ptr cs:[rax + rax]
0x264ed:	nop	dword ptr [rax]
0x264f0:	mov	edx, dword ptr [rdi + 0x20]
0x264f3:	mov	r8, qword ptr [rdi]
0x264f6:	xor	eax, eax
0x264f8:	cmp	edx, 1
0x264fb:	movzx	esi, byte ptr [r8]
0x264ff:	jbe	0x26546
		Instruction group(s): [7, 1] 

0x26501:	test	sil, sil
0x26504:	movzx	ecx, byte ptr [r8 + 1]
0x26509:	je	0x26550
		Instruction group(s): [7, 1] 

0x2650b:	lea	edi, [rdx - 2]
		Instruction group(s): [145] 

0x2650e:	movzx	edx, sil
0x26512:	movzx	esi, cl
0x26515:	add	rdi, r8
0x26518:	jmp	0x26534
		Instruction group(s): [7, 1] 

0x2651a:	nop	word ptr [rax + rax]
0x26520:	add	r8, 1
0x26524:	movzx	ecx, byte ptr [r8 + 1]
0x26529:	movzx	edx, sil
0x2652d:	test	dl, dl
0x2652f:	movzx	esi, cl
0x26532:	je	0x26546
		Instruction group(s): [7, 1] 

0x26534:	mov	ecx, esi
0x26536:	and	ecx, 0xf
0x26539:	shl	edx, cl
0x2653b:	movsxd	rdx, edx
		Instruction group(s): [145] 

0x2653e:	add	rax, rdx
0x26541:	cmp	r8, rdi
0x26544:	jne	0x26520
		Instruction group(s): [7, 1] 

0x26546:	add	rax, rsi
0x26549:	ret	
		Instruction group(s): [3, 145] 

0x2654a:	nop	word ptr [rax + rax]
0x26550:	movzx	esi, cl
0x26553:	jmp	0x26546
		Instruction group(s): [7, 1] 

0x26555:	nop	
0x26556:	nop	word ptr cs:[rax + rax]
0x26560:	mov	edx, dword ptr [rdi + 0x20]
0x26563:	mov	r8, qword ptr [rdi]
0x26566:	xor	eax, eax
0x26568:	cmp	edx, 1
0x2656b:	movzx	esi, byte ptr [r8]
0x2656f:	jbe	0x265b6
		Instruction group(s): [7, 1] 

0x26571:	test	sil, sil
0x26574:	movzx	ecx, byte ptr [r8 + 1]
0x26579:	je	0x265c0
		Instruction group(s): [7, 1] 

0x2657b:	lea	edi, [rdx - 2]
		Instruction group(s): [145] 

0x2657e:	movzx	edx, sil
0x26582:	movzx	esi, cl
0x26585:	add	rdi, r8
0x26588:	jmp	0x265a4
		Instruction group(s): [7, 1] 

0x2658a:	nop	word ptr [rax + rax]
0x26590:	add	r8, 1
0x26594:	movzx	ecx, byte ptr [r8 + 1]
0x26599:	movzx	edx, sil
0x2659d:	test	dl, dl
0x2659f:	movzx	esi, cl
0x265a2:	je	0x265b6
		Instruction group(s): [7, 1] 

0x265a4:	mov	ecx, esi
0x265a6:	and	ecx, 7
0x265a9:	shl	edx, cl
0x265ab:	movsxd	rdx, edx
		Instruction group(s): [145] 

0x265ae:	add	rax, rdx
0x265b1:	cmp	r8, rdi
0x265b4:	jne	0x26590
		Instruction group(s): [7, 1] 

0x265b6:	add	rax, rsi
0x265b9:	ret	
		Instruction group(s): [3, 145] 

0x265ba:	nop	word ptr [rax + rax]
0x265c0:	movzx	esi, cl
0x265c3:	jmp	0x265b6
		Instruction group(s): [7, 1] 

0x265c5:	nop	
0x265c6:	nop	word ptr cs:[rax + rax]
0x265d0:	movsxd	rdx, dword ptr [rdi + 0x20]
		Instruction group(s): [145] 

0x265d4:	mov	eax, edx
0x265d6:	sub	eax, dword ptr [rsi + 0x20]
0x265d9:	jne	0x265f0
		Instruction group(s): [7, 1] 

0x265db:	mov	rdi, qword ptr [rdi]
0x265de:	mov	rsi, qword ptr [rsi]
0x265e1:	cmp	rdi, rsi
0x265e4:	je	0x265f0
		Instruction group(s): [7, 1] 

0x265e6:	jmp	0x86a0
		Instruction group(s): [7, 1] 

0x265eb:	nop	dword ptr [rax + rax]
0x265f0:	ret	
		Instruction group(s): [3, 145] 

0x265f2:	nop	dword ptr [rax]
0x265f6:	nop	word ptr cs:[rax + rax]
0x26600:	push	rbx
		Instruction group(s): [145] 

0x26601:	mov	rbx, rdi
0x26604:	mov	rdi, qword ptr [rdi]
0x26607:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x2660c:	mov	rdi, qword ptr [rbx + 8]
0x26610:	pop	rbx
		Instruction group(s): [145] 

0x26611:	jmp	0x8d70
		Instruction group(s): [7, 1] 

0x26616:	nop	word ptr cs:[rax + rax]
0x26620:	push	r15
		Instruction group(s): [145] 

0x26622:	push	r14
		Instruction group(s): [145] 

0x26624:	mov	r15, rsi
0x26627:	push	r13
		Instruction group(s): [145] 

0x26629:	push	r12
		Instruction group(s): [145] 

0x2662b:	push	rbp
		Instruction group(s): [145] 

0x2662c:	push	rbx
		Instruction group(s): [145] 

0x2662d:	mov	rbx, rdi
0x26630:	mov	rdi, rsi
0x26633:	sub	rsp, 0x18
0x26637:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x2663c:	test	rbx, rbx
0x2663f:	mov	r14d, eax
0x26642:	je	0x266f8
		Instruction group(s): [7, 1] 

0x26648:	nop	dword ptr [rax + rax]
0x26650:	mov	rbx, qword ptr [rbx]
0x26653:	test	rbx, rbx
0x26656:	je	0x266e0
		Instruction group(s): [7, 1] 

0x2665c:	mov	ecx, dword ptr [rbx + 0x18]
0x2665f:	cmp	ecx, r14d
0x26662:	ja	0x26650
		Instruction group(s): [7, 1] 

0x26664:	mov	rbp, qword ptr [rbx + 8]
0x26668:	mov	rdi, qword ptr [rbx + 0x10]
0x2666c:	mov	eax, r14d
0x2666f:	sub	eax, ecx
0x26671:	mov	ecx, eax
0x26673:	lea	r12d, [rax + 1]
		Instruction group(s): [145] 

0x26677:	mov	rdx, rbp
0x2667a:	sub	rdx, rdi
0x2667d:	sub	rdx, 1
0x26681:	lea	r13, [r15 + rdx]
0x26685:	cmp	r15, r13
0x26688:	jae	0x2669e
		Instruction group(s): [7, 1] 

0x2668a:	mov	rsi, r15
0x2668d:	mov	dword ptr [rsp + 0xc], eax
0x26691:	call	0x86a0
		Instruction group(s): [2, 7, 145] 

0x26696:	test	eax, eax
0x26698:	mov	ecx, dword ptr [rsp + 0xc]
0x2669c:	jne	0x26650
		Instruction group(s): [7, 1] 

0x2669e:	movzx	eax, byte ptr [rbp]
0x266a2:	cmp	al, byte ptr [r13 + r12]
0x266a7:	jne	0x26650
		Instruction group(s): [7, 1] 

0x266a9:	test	al, al
0x266ab:	je	0x266e0
		Instruction group(s): [7, 1] 

0x266ad:	lea	edx, [rcx + 2]
		Instruction group(s): [145] 

0x266b0:	lea	rcx, [rbp + 1]
0x266b4:	lea	rax, [r13 + rdx]
0x266b9:	cmp	rax, rcx
0x266bc:	je	0x266e0
		Instruction group(s): [7, 1] 

0x266be:	movzx	ecx, byte ptr [rbp + 1]
0x266c2:	cmp	cl, byte ptr [rax]
0x266c4:	jne	0x26650
		Instruction group(s): [7, 1] 

0x266c6:	test	cl, cl
0x266c8:	je	0x266e0
		Instruction group(s): [7, 1] 

0x266ca:	lea	rsi, [r13 + rdx + 1]
0x266cf:	lea	rdi, [rbp + 2]
0x266d3:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x266d8:	test	eax, eax
0x266da:	jne	0x26650
		Instruction group(s): [7, 1] 

0x266e0:	add	rsp, 0x18
0x266e4:	mov	rax, rbx
0x266e7:	pop	rbx
		Instruction group(s): [145] 

0x266e8:	pop	rbp
		Instruction group(s): [145] 

0x266e9:	pop	r12
		Instruction group(s): [145] 

0x266eb:	pop	r13
		Instruction group(s): [145] 

0x266ed:	pop	r14
		Instruction group(s): [145] 

0x266ef:	pop	r15
		Instruction group(s): [145] 

0x266f1:	ret	
		Instruction group(s): [3, 145] 

0x266f2:	nop	word ptr [rax + rax]
0x266f8:	mov	rbx, qword ptr [rip + 0x212d81]
0x266ff:	jmp	0x26653
		Instruction group(s): [7, 1] 

0x26704:	nop	
0x26706:	nop	word ptr cs:[rax + rax]
0x26710:	push	rbp
		Instruction group(s): [145] 

0x26711:	push	rbx
		Instruction group(s): [145] 

0x26712:	mov	rcx, rsi
0x26715:	lea	rax, [rip + 0x3a4]
0x2671c:	lea	rsi, [rip + 0x7d]
0x26723:	mov	rbx, rdi
0x26726:	sub	rsp, 8
0x2672a:	test	edx, edx
0x2672c:	mov	rdx, rcx
0x2672f:	cmovne	rsi, rax
		Instruction group(s): [137] 

0x26733:	call	0x29990
		Instruction group(s): [2, 7, 145] 

0x26738:	mov	rbp, qword ptr [rip + 0x20f6e1]
0x2673f:	lea	rsi, [rip + 0x84ca]
0x26746:	mov	edx, 5
0x2674b:	xor	edi, edi
0x2674d:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x26752:	mov	rsi, rbp
0x26755:	mov	rdi, rax
0x26758:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0x2675d:	mov	rcx, qword ptr [rip + 0x20f6bc]
0x26764:	lea	rdi, [rip + 0x8332]
0x2676b:	mov	edx, 2
0x26770:	mov	esi, 1
0x26775:	call	0x8c80
		Instruction group(s): [2, 7, 145] 

0x2677a:	mov	rsi, qword ptr [rip + 0x20f69f]
0x26781:	mov	rdi, rbx
0x26784:	call	0x299e0
		Instruction group(s): [2, 7, 145] 

0x26789:	mov	rsi, qword ptr [rip + 0x20f690]
0x26790:	add	rsp, 8
0x26794:	mov	edi, 0xa
0x26799:	pop	rbx
		Instruction group(s): [145] 

0x2679a:	pop	rbp
		Instruction group(s): [145] 

0x2679b:	jmp	0x8880
		Instruction group(s): [7, 1] 

0x267a0:	push	r13
		Instruction group(s): [145] 

0x267a2:	push	r12
		Instruction group(s): [145] 

0x267a4:	push	rbp
		Instruction group(s): [145] 

0x267a5:	push	rbx
		Instruction group(s): [145] 

0x267a6:	sub	rsp, 8
0x267aa:	movzx	eax, byte ptr [rdi + 0x27]
0x267ae:	shr	al, 2
0x267b1:	and	eax, 7
0x267b4:	cmp	al, 6
0x267b6:	ja	0x26ab4
		Instruction group(s): [7, 1] 

0x267bc:	lea	rdx, [rip + 0x86d9]
0x267c3:	movzx	eax, al
0x267c6:	mov	rbp, rdi
0x267c9:	mov	rbx, rsi
0x267cc:	movsxd	rax, dword ptr [rdx + rax*4]
		Instruction group(s): [145] 

0x267d0:	add	rax, rdx
0x267d3:	mov	edx, 5
0x267d8:	jmp	rax
		Instruction group(s): [145, 1] 

0x267da:	nop	word ptr [rax + rax]
0x267e0:	lea	rsi, [rip + 0x84dd]
0x267e7:	xor	edi, edi
0x267e9:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x267ee:	mov	r12, rax
0x267f1:	nop	dword ptr [rax]
0x267f8:	mov	rcx, qword ptr [rip + 0x20f621]
0x267ff:	lea	rdi, [rip + 0x8297]
0x26806:	mov	edx, 2
0x2680b:	mov	esi, 1
0x26810:	call	0x8c80
		Instruction group(s): [2, 7, 145] 

0x26815:	mov	rsi, qword ptr [rip + 0x20f604]
0x2681c:	mov	rdi, r12
0x2681f:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0x26824:	cmp	byte ptr [rbp + 0x24], 0
0x26828:	js	0x26a78
		Instruction group(s): [7, 1] 

0x2682e:	mov	r12, qword ptr [rbp + 0x10]
0x26832:	test	r12, r12
0x26835:	je	0x26863
		Instruction group(s): [7, 1] 

0x26837:	mov	r13, qword ptr [rbp + 0x18]
0x2683b:	lea	rsi, [rip + 0x84a0]
0x26842:	mov	edx, 5
0x26847:	xor	edi, edi
0x26849:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x2684e:	mov	rcx, r13
0x26851:	mov	rsi, rax
0x26854:	mov	rdx, r12
0x26857:	mov	edi, 1
0x2685c:	xor	eax, eax
0x2685e:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x26863:	mov	rsi, qword ptr [rip + 0x20f5b6]
0x2686a:	mov	edi, 0xa
0x2686f:	call	0x8880
		Instruction group(s): [2, 7, 145] 

0x26874:	mov	rsi, qword ptr [rip + 0x20f5a5]
0x2687b:	mov	rdi, rbx
0x2687e:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0x26883:	movzx	ebx, byte ptr [rbp + 0x24]
0x26887:	test	bl, 1
0x2688a:	jne	0x26a18
		Instruction group(s): [7, 1] 

0x26890:	mov	rdx, qword ptr [rbp]
0x26894:	lea	rcx, [rip + 0x3742]
0x2689b:	lea	rsi, [rip + 0x846b]
0x268a2:	mov	edi, 1
0x268a7:	xor	eax, eax
0x268a9:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x268ae:	mov	rdi, qword ptr [rbp + 8]
0x268b2:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x268b7:	mov	rbx, qword ptr [rbp + 8]
0x268bb:	cmp	rbx, rax
0x268be:	je	0x268c9
		Instruction group(s): [7, 1] 

0x268c0:	cmp	byte ptr [rax], 0
0x268c3:	je	0x269e0
		Instruction group(s): [7, 1] 

0x268c9:	test	byte ptr [rbp + 0x24], 1
0x268cd:	mov	rsi, qword ptr [rip + 0x20f54c]
0x268d4:	jne	0x26aa0
		Instruction group(s): [7, 1] 

0x268da:	movzx	eax, byte ptr [rbx]
0x268dd:	test	al, al
0x268df:	jne	0x2690e
		Instruction group(s): [7, 1] 

0x268e1:	jmp	0x269fd
		Instruction group(s): [7, 1] 

0x268e6:	nop	word ptr cs:[rax + rax]
0x268f0:	movsx	edi, byte ptr [rbx]
0x268f3:	add	rbx, 1
0x268f7:	call	0x8880
		Instruction group(s): [2, 7, 145] 

0x268fc:	movzx	eax, byte ptr [rbx]
0x268ff:	mov	rsi, qword ptr [rip + 0x20f51a]
0x26906:	test	al, al
0x26908:	je	0x269fd
		Instruction group(s): [7, 1] 

0x2690e:	cmp	al, 0x24
0x26910:	jne	0x268f0
		Instruction group(s): [7, 1] 

0x26912:	mov	edi, 0x24
0x26917:	call	0x8880
		Instruction group(s): [2, 7, 145] 

0x2691c:	mov	rsi, qword ptr [rip + 0x20f4fd]
0x26923:	jmp	0x268f0
		Instruction group(s): [7, 1] 

0x26925:	nop	dword ptr [rax]
0x26928:	lea	rsi, [rip + 0x4e63]
0x2692f:	xor	edi, edi
0x26931:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x26936:	mov	r12, rax
0x26939:	jmp	0x267f8
		Instruction group(s): [7, 1] 

0x2693e:	nop	
0x26940:	lea	rsi, [rip + 0x4e15]
0x26947:	xor	edi, edi
0x26949:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x2694e:	mov	r12, rax
0x26951:	jmp	0x267f8
		Instruction group(s): [7, 1] 

0x26956:	nop	word ptr cs:[rax + rax]
0x26960:	lea	rsi, [rip + 0x4dfd]
0x26967:	xor	edi, edi
0x26969:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x2696e:	mov	r12, rax
0x26971:	jmp	0x267f8
		Instruction group(s): [7, 1] 

0x26976:	nop	word ptr cs:[rax + rax]
0x26980:	lea	rsi, [rip + 0x7787]
0x26987:	xor	edi, edi
0x26989:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x2698e:	mov	r12, rax
0x26991:	jmp	0x267f8
		Instruction group(s): [7, 1] 

0x26996:	nop	word ptr cs:[rax + rax]
0x269a0:	lea	rsi, [rip + 0x8308]
0x269a7:	xor	edi, edi
0x269a9:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x269ae:	mov	r12, rax
0x269b1:	jmp	0x267f8
		Instruction group(s): [7, 1] 

0x269b6:	nop	word ptr cs:[rax + rax]
0x269c0:	lea	rsi, [rip + 0x4dbe]
0x269c7:	xor	edi, edi
0x269c9:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x269ce:	mov	r12, rax
0x269d1:	jmp	0x267f8
		Instruction group(s): [7, 1] 

0x269d6:	nop	word ptr cs:[rax + rax]
0x269e0:	lea	rsi, [rip + 0x832e]
0x269e7:	mov	rdx, rbx
0x269ea:	mov	edi, 1
0x269ef:	xor	eax, eax
0x269f1:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x269f6:	mov	rsi, qword ptr [rip + 0x20f423]
0x269fd:	add	rsp, 8
0x26a01:	mov	edi, 0xa
0x26a06:	pop	rbx
		Instruction group(s): [145] 

0x26a07:	pop	rbp
		Instruction group(s): [145] 

0x26a08:	pop	r12
		Instruction group(s): [145] 

0x26a0a:	pop	r13
		Instruction group(s): [145] 

0x26a0c:	jmp	0x8880
		Instruction group(s): [7, 1] 

0x26a11:	nop	dword ptr [rax]
0x26a18:	mov	r12, qword ptr [rbp + 8]
0x26a1c:	mov	esi, 0xa
0x26a21:	mov	rdi, r12
0x26a24:	call	0x8870
		Instruction group(s): [2, 7, 145] 

0x26a29:	test	rax, rax
0x26a2c:	mov	rdx, qword ptr [rbp]
0x26a30:	je	0x26a58
		Instruction group(s): [7, 1] 

0x26a32:	add	rsp, 8
0x26a36:	mov	rcx, r12
0x26a39:	lea	rsi, [rip + 0x82b9]
0x26a40:	pop	rbx
		Instruction group(s): [145] 

0x26a41:	pop	rbp
		Instruction group(s): [145] 

0x26a42:	pop	r12
		Instruction group(s): [145] 

0x26a44:	pop	r13
		Instruction group(s): [145] 

0x26a46:	mov	edi, 1
0x26a4b:	xor	eax, eax
0x26a4d:	jmp	0x8bc0
		Instruction group(s): [7, 1] 

0x26a52:	nop	word ptr [rax + rax]
0x26a58:	lea	rcx, [rip + 0x6f6e]
0x26a5f:	lea	rax, [rip + 0x35b4]
0x26a66:	and	ebx, 2
0x26a69:	cmovne	rcx, rax
		Instruction group(s): [137] 

0x26a6d:	jmp	0x2689b
		Instruction group(s): [7, 1] 

0x26a72:	nop	word ptr [rax + rax]
0x26a78:	mov	rcx, qword ptr [rip + 0x20f3a1]
0x26a7f:	lea	rdi, [rip + 0x8253]
0x26a86:	mov	edx, 8
0x26a8b:	mov	esi, 1
0x26a90:	call	0x8c80
		Instruction group(s): [2, 7, 145] 

0x26a95:	jmp	0x2682e
		Instruction group(s): [7, 1] 

0x26a9a:	nop	word ptr [rax + rax]
0x26aa0:	mov	rdi, rbx
0x26aa3:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0x26aa8:	mov	rsi, qword ptr [rip + 0x20f371]
0x26aaf:	jmp	0x269fd
		Instruction group(s): [7, 1] 

0x26ab4:	call	0x8650
		Instruction group(s): [2, 7, 145] 

0x26ab9:	nop	dword ptr [rax]
0x26ac0:	movzx	eax, byte ptr [rdi + 0x27]
0x26ac4:	and	eax, 0x1c
0x26ac7:	cmp	al, 0x18
0x26ac9:	je	0x26ad0
		Instruction group(s): [7, 1] 

0x26acb:	ret	
		Instruction group(s): [3, 145] 

0x26acd:	nop	dword ptr [rax]
0x26ad0:	jmp	0x267a0
		Instruction group(s): [7, 1] 

0x26ad5:	nop	
0x26ad6:	nop	word ptr cs:[rax + rax]
0x26ae0:	movzx	eax, byte ptr [rdi + 0x27]
0x26ae4:	and	eax, 0x1c
0x26ae7:	cmp	al, 0x18
0x26ae9:	je	0x26af0
		Instruction group(s): [7, 1] 

0x26aeb:	jmp	0x267a0
		Instruction group(s): [7, 1] 

0x26af0:	ret	
		Instruction group(s): [3, 145] 

0x26af2:	nop	dword ptr [rax]
0x26af6:	nop	word ptr cs:[rax + rax]
0x26b00:	mov	rsi, qword ptr [rdi]
0x26b03:	lea	rdx, [rip + 0x69c0]
0x26b0a:	mov	rax, rdi
0x26b0d:	cmp	rsi, rdx
0x26b10:	je	0x26b31
		Instruction group(s): [7, 1] 

0x26b12:	cmp	byte ptr [rsi], 0x2e
0x26b15:	je	0x26b20
		Instruction group(s): [7, 1] 

0x26b17:	ret	
		Instruction group(s): [3, 145] 

0x26b19:	nop	dword ptr [rax]
0x26b20:	lea	rdi, [rdx + 1]
0x26b24:	add	rsi, 1
0x26b28:	mov	ecx, 0xd
0x26b2d:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x26b2f:	jne	0x26b17
		Instruction group(s): [7, 1] 

0x26b31:	mov	rdx, qword ptr [rax + 8]
0x26b35:	mov	ecx, 9
0x26b3a:	movzx	edx, byte ptr [rdx]
0x26b3d:	test	dl, dl
0x26b3f:	cmove	edx, ecx
		Instruction group(s): [137] 

0x26b42:	mov	byte ptr [rip + 0x20f1c0], dl
0x26b48:	ret	
		Instruction group(s): [3, 145] 

0x26b49:	nop	dword ptr [rax]
0x26b50:	push	r13
		Instruction group(s): [145] 

0x26b52:	push	r12
		Instruction group(s): [145] 

0x26b54:	mov	r13, rdi
0x26b57:	push	rbp
		Instruction group(s): [145] 

0x26b58:	push	rbx
		Instruction group(s): [145] 

0x26b59:	mov	rbp, rsi
0x26b5c:	add	rbp, 1
0x26b60:	sub	rsp, 8
0x26b64:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x26b69:	mov	edi, 0x48
0x26b6e:	mov	rbx, rax
0x26b71:	mov	r12d, eax
0x26b74:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x26b79:	mov	rdx, qword ptr [rip + 0x212900]
0x26b80:	test	rdx, rdx
0x26b83:	je	0x26c18
		Instruction group(s): [7, 1] 

0x26b89:	cmp	ebx, 0xff
0x26b8f:	ja	0x26bd0
		Instruction group(s): [7, 1] 

0x26b91:	lea	rcx, [rip + 0x2120e8]
0x26b98:	mov	esi, ebx
0x26b9a:	mov	rdi, qword ptr [rcx + rsi*8]
0x26b9e:	test	rdi, rdi
0x26ba1:	je	0x26bd0
		Instruction group(s): [7, 1] 

0x26ba3:	mov	rdx, qword ptr [rdi]
0x26ba6:	mov	qword ptr [rax], rdx
0x26ba9:	mov	qword ptr [rdi], rax
0x26bac:	mov	qword ptr [rax + 0x10], r13
0x26bb0:	mov	dword ptr [rax + 0x18], ebx
0x26bb3:	mov	qword ptr [rax + 8], rbp
0x26bb7:	mov	qword ptr [rcx + rsi*8], rax
0x26bbb:	add	rsp, 8
0x26bbf:	pop	rbx
		Instruction group(s): [145] 

0x26bc0:	pop	rbp
		Instruction group(s): [145] 

0x26bc1:	pop	r12
		Instruction group(s): [145] 

0x26bc3:	pop	r13
		Instruction group(s): [145] 

0x26bc5:	ret	
		Instruction group(s): [3, 145] 

0x26bc6:	nop	word ptr cs:[rax + rax]
0x26bd0:	cmp	ebx, dword ptr [rdx + 0x18]
0x26bd3:	jae	0x26be6
		Instruction group(s): [7, 1] 

0x26bd5:	jmp	0x26c30
		Instruction group(s): [7, 1] 

0x26bd7:	nop	word ptr [rax + rax]
0x26be0:	cmp	dword ptr [rdx + 0x18], r12d
0x26be4:	ja	0x26bf1
		Instruction group(s): [7, 1] 

0x26be6:	mov	rcx, rdx
0x26be9:	mov	rdx, qword ptr [rdx]
0x26bec:	test	rdx, rdx
0x26bef:	jne	0x26be0
		Instruction group(s): [7, 1] 

0x26bf1:	mov	qword ptr [rax], rdx
0x26bf4:	mov	qword ptr [rcx], rax
0x26bf7:	cmp	ebx, 0xff
0x26bfd:	mov	qword ptr [rax + 0x10], r13
0x26c01:	mov	dword ptr [rax + 0x18], ebx
0x26c04:	mov	qword ptr [rax + 8], rbp
0x26c08:	ja	0x26bbb
		Instruction group(s): [7, 1] 

0x26c0a:	lea	rcx, [rip + 0x21206f]
0x26c11:	mov	esi, ebx
0x26c13:	jmp	0x26bb7
		Instruction group(s): [7, 1] 

0x26c15:	nop	dword ptr [rax]
0x26c18:	mov	qword ptr [rip + 0x212861], rax
0x26c1f:	mov	qword ptr [rax], 0
0x26c26:	jmp	0x26bf7
		Instruction group(s): [7, 1] 

0x26c28:	nop	dword ptr [rax + rax]
0x26c30:	lea	rcx, [rip + 0x212849]
0x26c37:	jmp	0x26bf1
		Instruction group(s): [7, 1] 

0x26c39:	nop	dword ptr [rax]
0x26c40:	lea	r8, [rip - 0x677]
0x26c47:	lea	rcx, [rip - 0x6ee]
0x26c4e:	lea	rdx, [rip - 0x765]
0x26c55:	lea	rdi, [rip + 0x211fc4]
0x26c5c:	mov	esi, 0x20b
0x26c61:	jmp	0x29440
		Instruction group(s): [7, 1] 

0x26c66:	nop	word ptr cs:[rax + rax]
0x26c70:	push	r15
		Instruction group(s): [145] 

0x26c72:	push	r14
		Instruction group(s): [145] 

0x26c74:	mov	r15d, ecx
0x26c77:	push	r13
		Instruction group(s): [145] 

0x26c79:	push	r12
		Instruction group(s): [145] 

0x26c7b:	mov	r12, r9
0x26c7e:	push	rbp
		Instruction group(s): [145] 

0x26c7f:	push	rbx
		Instruction group(s): [145] 

0x26c80:	mov	r13d, esi
0x26c83:	mov	rbp, rdi
0x26c86:	sub	rsp, 0x58
0x26c8a:	mov	rax, qword ptr fs:[0x28]
0x26c93:	mov	qword ptr [rsp + 0x48], rax
0x26c98:	xor	eax, eax
0x26c9a:	lea	rax, [rip + 0x211f7f]
0x26ca1:	test	r9, r9
0x26ca4:	mov	dword ptr [rsp + 0x40], esi
0x26ca8:	lea	rsi, [rsp + 0x20]
0x26cad:	mov	qword ptr [rsp + 0x20], rdi
0x26cb2:	mov	qword ptr [rsp + 8], rdx
0x26cb7:	cmove	r12, rax
		Instruction group(s): [137] 

0x26cbb:	mov	dword ptr [rsp + 0x14], r8d
0x26cc0:	mov	r14, qword ptr [rsp + 0x90]
0x26cc8:	mov	rdi, r12
0x26ccb:	call	0x29540
		Instruction group(s): [2, 7, 145] 

0x26cd0:	mov	rdx, rax
0x26cd3:	mov	eax, dword ptr [rip + 0x20f70f]
0x26cd9:	test	eax, eax
0x26cdb:	je	0x26cea
		Instruction group(s): [7, 1] 

0x26cdd:	cmp	r15d, 1
0x26ce1:	mov	esi, 3
0x26ce6:	cmove	r15d, esi
		Instruction group(s): [137] 

0x26cea:	mov	rbx, qword ptr [rdx]
0x26ced:	test	rbx, rbx
0x26cf0:	je	0x26d60
		Instruction group(s): [7, 1] 

0x26cf2:	cmp	qword ptr [rip + 0x20f10f], rbx
0x26cf9:	je	0x26d60
		Instruction group(s): [7, 1] 

0x26cfb:	test	eax, eax
0x26cfd:	movzx	eax, byte ptr [rbx + 0x27]
0x26d01:	jne	0x26d40
		Instruction group(s): [7, 1] 

0x26d03:	shr	al, 2
0x26d06:	and	eax, 7
0x26d09:	cmp	r15d, eax
0x26d0c:	jge	0x26e78
		Instruction group(s): [7, 1] 

0x26d12:	mov	rdi, qword ptr [rsp + 0x48]
0x26d17:	xor	rdi, qword ptr fs:[0x28]
0x26d20:	mov	rax, rbx
0x26d23:	jne	0x26ef5
		Instruction group(s): [7, 1] 

0x26d29:	add	rsp, 0x58
0x26d2d:	pop	rbx
		Instruction group(s): [145] 

0x26d2e:	pop	rbp
		Instruction group(s): [145] 

0x26d2f:	pop	r12
		Instruction group(s): [145] 

0x26d31:	pop	r13
		Instruction group(s): [145] 

0x26d33:	pop	r14
		Instruction group(s): [145] 

0x26d35:	pop	r15
		Instruction group(s): [145] 

0x26d37:	ret	
		Instruction group(s): [3, 145] 

0x26d38:	nop	dword ptr [rax + rax]
0x26d40:	mov	edx, eax
0x26d42:	and	edx, 0x1c
0x26d45:	cmp	dl, 4
0x26d48:	jne	0x26d03
		Instruction group(s): [7, 1] 

0x26d4a:	and	eax, 0xffffffe3
0x26d4d:	or	eax, 0xc
0x26d50:	mov	byte ptr [rbx + 0x27], al
0x26d53:	mov	eax, 3
0x26d58:	jmp	0x26d09
		Instruction group(s): [7, 1] 

0x26d5a:	nop	word ptr [rax + rax]
0x26d60:	mov	edi, 0x28
0x26d65:	mov	qword ptr [rsp + 0x18], rdx
0x26d6a:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x26d6f:	mov	esi, r13d
0x26d72:	mov	rdi, rbp
0x26d75:	mov	rbx, rax
0x26d78:	call	0x1bae0
		Instruction group(s): [2, 7, 145] 

0x26d7d:	mov	rdx, qword ptr [rsp + 0x18]
0x26d82:	mov	rsi, rbx
0x26d85:	mov	rdi, r12
0x26d88:	mov	qword ptr [rbx], rax
0x26d8b:	mov	dword ptr [rbx + 0x20], r13d
0x26d8f:	call	0x29630
		Instruction group(s): [2, 7, 145] 

0x26d94:	mov	rdi, qword ptr [rsp + 8]
0x26d99:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0x26d9e:	test	r14, r14
0x26da1:	mov	qword ptr [rbx + 8], rax
0x26da5:	je	0x26ee8
		Instruction group(s): [7, 1] 

0x26dab:	movdqu	xmm0, xmmword ptr [r14]
		Instruction group(s): [149] 

0x26db0:	movups	xmmword ptr [rbx + 0x10], xmm0
		Instruction group(s): [148] 

0x26db4:	movzx	eax, byte ptr [rbx + 0x27]
0x26db8:	mov	ecx, r15d
0x26dbb:	and	ecx, 7
0x26dbe:	shl	ecx, 2
0x26dc1:	and	eax, 0xffffffe3
0x26dc4:	or	ecx, eax
0x26dc6:	movzx	eax, byte ptr [rbx + 0x24]
0x26dca:	mov	byte ptr [rbx + 0x27], cl
0x26dcd:	movzx	r12d, byte ptr [rsp + 0x14]
0x26dd3:	and	eax, 0xffffffae
0x26dd6:	and	r12d, 1
0x26dda:	or	r12d, eax
0x26ddd:	mov	byte ptr [rbx + 0x24], r12b
0x26de1:	mov	eax, dword ptr [rbx + 0x24]
0x26de4:	and	eax, 0xff8000ff
0x26de9:	mov	dword ptr [rbx + 0x24], eax
0x26dec:	mov	edx, eax
0x26dee:	shr	eax, 0x18
0x26df1:	and	edx, 0x75
0x26df4:	or	eax, 0x60
0x26df7:	mov	byte ptr [rbx + 0x27], al
0x26dfa:	mov	eax, edx
0x26dfc:	or	eax, 0x20
0x26dff:	mov	byte ptr [rbx + 0x24], al
0x26e02:	movzx	ecx, byte ptr [rbp]
0x26e06:	mov	edx, ecx
0x26e08:	and	edx, 0xffffffdf
0x26e0b:	sub	edx, 0x41
0x26e0e:	cmp	dl, 0x19
0x26e11:	jbe	0x26e28
		Instruction group(s): [7, 1] 

0x26e13:	cmp	cl, 0x5f
0x26e16:	je	0x26e28
		Instruction group(s): [7, 1] 

0x26e18:	and	eax, 0xffffffdf
0x26e1b:	mov	byte ptr [rbx + 0x24], al
0x26e1e:	jmp	0x26d12
		Instruction group(s): [7, 1] 

0x26e23:	nop	dword ptr [rax + rax]
0x26e28:	movsx	eax, byte ptr [rbp + 1]
0x26e2c:	lea	rdx, [rbp + 1]
0x26e30:	test	al, al
0x26e32:	jne	0x26e4f
		Instruction group(s): [7, 1] 

0x26e34:	jmp	0x26d12
		Instruction group(s): [7, 1] 

0x26e39:	nop	dword ptr [rax]
0x26e40:	add	rdx, 1
0x26e44:	movsx	eax, byte ptr [rdx]
0x26e47:	test	al, al
0x26e49:	je	0x26d12
		Instruction group(s): [7, 1] 

0x26e4f:	cmp	al, 0x5f
0x26e51:	je	0x26e40
		Instruction group(s): [7, 1] 

0x26e53:	mov	ecx, eax
0x26e55:	and	ecx, 0xffffffdf
0x26e58:	sub	ecx, 0x41
0x26e5b:	cmp	cl, 0x19
0x26e5e:	jbe	0x26e40
		Instruction group(s): [7, 1] 

0x26e60:	sub	eax, 0x30
0x26e63:	cmp	eax, 9
0x26e66:	jbe	0x26e40
		Instruction group(s): [7, 1] 

0x26e68:	and	byte ptr [rbx + 0x24], 0xdf
0x26e6c:	jmp	0x26d12
		Instruction group(s): [7, 1] 

0x26e71:	nop	dword ptr [rax]
0x26e78:	mov	rdi, qword ptr [rbx + 8]
0x26e7c:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x26e81:	mov	rdi, qword ptr [rsp + 8]
0x26e86:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0x26e8b:	test	r14, r14
0x26e8e:	mov	qword ptr [rbx + 8], rax
0x26e92:	je	0x26ed8
		Instruction group(s): [7, 1] 

0x26e94:	movdqu	xmm0, xmmword ptr [r14]
		Instruction group(s): [149] 

0x26e99:	movups	xmmword ptr [rbx + 0x10], xmm0
		Instruction group(s): [148] 

0x26e9d:	mov	ecx, r15d
0x26ea0:	and	ecx, 7
0x26ea3:	lea	eax, [rcx*4]
		Instruction group(s): [145] 

0x26eaa:	movzx	ecx, byte ptr [rbx + 0x27]
0x26eae:	and	ecx, 0xffffffe3
0x26eb1:	or	ecx, eax
0x26eb3:	movzx	eax, byte ptr [rbx + 0x24]
0x26eb7:	mov	byte ptr [rbx + 0x27], cl
0x26eba:	movzx	r12d, byte ptr [rsp + 0x14]
0x26ec0:	and	eax, 0xfffffffe
0x26ec3:	and	r12d, 1
0x26ec7:	or	r12d, eax
0x26eca:	mov	byte ptr [rbx + 0x24], r12b
0x26ece:	jmp	0x26d12
		Instruction group(s): [7, 1] 

0x26ed3:	nop	dword ptr [rax + rax]
0x26ed8:	mov	qword ptr [rbx + 0x10], 0
0x26ee0:	jmp	0x26e9d
		Instruction group(s): [7, 1] 

0x26ee2:	nop	word ptr [rax + rax]
0x26ee8:	mov	qword ptr [rbx + 0x10], 0
0x26ef0:	jmp	0x26db4
		Instruction group(s): [7, 1] 

0x26ef5:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x26efa:	nop	word ptr [rax + rax]
0x26f00:	push	rbx
		Instruction group(s): [145] 

0x26f01:	mov	rbx, rdi
0x26f04:	mov	rdi, qword ptr [rdi + 8]
0x26f08:	lea	rsi, [rip - 0x90f]
0x26f0f:	call	0x29940
		Instruction group(s): [2, 7, 145] 

0x26f14:	mov	rdi, qword ptr [rbx + 8]
0x26f18:	mov	esi, 1
0x26f1d:	call	0x29900
		Instruction group(s): [2, 7, 145] 

0x26f22:	mov	rdi, qword ptr [rbx + 8]
0x26f26:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x26f2b:	mov	rdi, rbx
0x26f2e:	pop	rbx
		Instruction group(s): [145] 

0x26f2f:	jmp	0x8d70
		Instruction group(s): [7, 1] 

0x26f34:	nop	
0x26f36:	nop	word ptr cs:[rax + rax]
0x26f40:	push	r12
		Instruction group(s): [145] 

0x26f42:	push	rbp
		Instruction group(s): [145] 

0x26f43:	mov	ebp, edx
0x26f45:	push	rbx
		Instruction group(s): [145] 

0x26f46:	mov	rbx, rcx
0x26f49:	sub	rsp, 0x30
0x26f4d:	mov	rax, qword ptr fs:[0x28]
0x26f56:	mov	qword ptr [rsp + 0x28], rax
0x26f5b:	xor	eax, eax
0x26f5d:	lea	rax, [rip + 0x211cbc]
0x26f64:	test	rcx, rcx
0x26f67:	mov	qword ptr [rsp], rdi
0x26f6b:	mov	dword ptr [rsp + 0x20], esi
0x26f6f:	mov	rsi, rsp
0x26f72:	cmove	rbx, rax
		Instruction group(s): [137] 

0x26f76:	mov	rdi, rbx
0x26f79:	call	0x29540
		Instruction group(s): [2, 7, 145] 

0x26f7e:	mov	edx, dword ptr [rip + 0x20f464]
0x26f84:	test	edx, edx
0x26f86:	je	0x26f93
		Instruction group(s): [7, 1] 

0x26f88:	cmp	ebp, 1
0x26f8b:	mov	ecx, 3
0x26f90:	cmove	ebp, ecx
		Instruction group(s): [137] 

0x26f93:	mov	r12, qword ptr [rax]
0x26f96:	test	r12, r12
0x26f99:	je	0x26fb8
		Instruction group(s): [7, 1] 

0x26f9b:	cmp	qword ptr [rip + 0x20ee66], r12
0x26fa2:	je	0x26fb8
		Instruction group(s): [7, 1] 

0x26fa4:	test	edx, edx
0x26fa6:	movzx	edx, byte ptr [r12 + 0x27]
0x26fac:	jne	0x26fd8
		Instruction group(s): [7, 1] 

0x26fae:	shr	dl, 2
0x26fb1:	and	edx, 7
0x26fb4:	cmp	ebp, edx
0x26fb6:	jge	0x26ff8
		Instruction group(s): [7, 1] 

0x26fb8:	mov	rax, qword ptr [rsp + 0x28]
0x26fbd:	xor	rax, qword ptr fs:[0x28]
0x26fc6:	jne	0x27018
		Instruction group(s): [7, 1] 

0x26fc8:	add	rsp, 0x30
0x26fcc:	pop	rbx
		Instruction group(s): [145] 

0x26fcd:	pop	rbp
		Instruction group(s): [145] 

0x26fce:	pop	r12
		Instruction group(s): [145] 

0x26fd0:	ret	
		Instruction group(s): [3, 145] 

0x26fd1:	nop	dword ptr [rax]
0x26fd8:	mov	ecx, edx
0x26fda:	and	ecx, 0x1c
0x26fdd:	cmp	cl, 4
0x26fe0:	jne	0x26fae
		Instruction group(s): [7, 1] 

0x26fe2:	and	edx, 0xffffffe3
0x26fe5:	or	edx, 0xc
0x26fe8:	mov	byte ptr [r12 + 0x27], dl
0x26fed:	mov	edx, 3
0x26ff2:	jmp	0x26fb4
		Instruction group(s): [7, 1] 

0x26ff4:	nop	dword ptr [rax]
0x26ff8:	mov	rsi, rax
0x26ffb:	mov	rdi, rbx
0x26ffe:	call	0x29820
		Instruction group(s): [2, 7, 145] 

0x27003:	mov	rdi, qword ptr [r12]
0x27007:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x2700c:	mov	rdi, qword ptr [r12 + 8]
0x27011:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x27016:	jmp	0x26fb8
		Instruction group(s): [7, 1] 

0x27018:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x2701d:	nop	dword ptr [rax]
0x27020:	push	r15
		Instruction group(s): [145] 

0x27022:	push	r14
		Instruction group(s): [145] 

0x27024:	push	r13
		Instruction group(s): [145] 

0x27026:	push	r12
		Instruction group(s): [145] 

0x27028:	push	rbp
		Instruction group(s): [145] 

0x27029:	push	rbx
		Instruction group(s): [145] 

0x2702a:	sub	rsp, 0x48
0x2702e:	mov	rbx, qword ptr [rip + 0x20ed9b]
0x27035:	mov	rax, qword ptr fs:[0x28]
0x2703e:	mov	qword ptr [rsp + 0x38], rax
0x27043:	xor	eax, eax
0x27045:	mov	qword ptr [rsp + 0x10], rdi
0x2704a:	mov	dword ptr [rsp + 0x30], esi
0x2704e:	test	rbx, rbx
0x27051:	je	0x2708d
		Instruction group(s): [7, 1] 

0x27053:	lea	r13, [rsp + 0x10]
0x27058:	xor	r12d, r12d
0x2705b:	nop	dword ptr [rax + rax]
0x27060:	mov	rdi, qword ptr [rbx + 8]
0x27064:	mov	rsi, r13
0x27067:	call	0x29600
		Instruction group(s): [2, 7, 145] 

0x2706c:	test	rax, rax
0x2706f:	mov	rbp, rax
0x27072:	je	0x27081
		Instruction group(s): [7, 1] 

0x27074:	test	r12d, r12d
0x27077:	movzx	eax, byte ptr [rax + 0x24]
0x2707b:	je	0x270b8
		Instruction group(s): [7, 1] 

0x2707d:	test	al, al
0x2707f:	jns	0x270b8
		Instruction group(s): [7, 1] 

0x27081:	or	r12d, dword ptr [rbx + 0x10]
0x27085:	mov	rbx, qword ptr [rbx]
0x27088:	test	rbx, rbx
0x2708b:	jne	0x27060
		Instruction group(s): [7, 1] 

0x2708d:	xor	ebp, ebp
0x2708f:	mov	rcx, qword ptr [rsp + 0x38]
0x27094:	xor	rcx, qword ptr fs:[0x28]
0x2709d:	mov	rax, rbp
0x270a0:	jne	0x271f9
		Instruction group(s): [7, 1] 

0x270a6:	add	rsp, 0x48
0x270aa:	pop	rbx
		Instruction group(s): [145] 

0x270ab:	pop	rbp
		Instruction group(s): [145] 

0x270ac:	pop	r12
		Instruction group(s): [145] 

0x270ae:	pop	r13
		Instruction group(s): [145] 

0x270b0:	pop	r14
		Instruction group(s): [145] 

0x270b2:	pop	r15
		Instruction group(s): [145] 

0x270b4:	ret	
		Instruction group(s): [3, 145] 

0x270b5:	nop	dword ptr [rax]
0x270b8:	test	al, 0x10
0x270ba:	je	0x2708f
		Instruction group(s): [7, 1] 

0x270bc:	mov	rax, qword ptr [rbp]
0x270c0:	lea	rdx, [rip + 0x63f8]
0x270c7:	cmp	rax, rdx
0x270ca:	je	0x270e2
		Instruction group(s): [7, 1] 

0x270cc:	cmp	byte ptr [rax], 0x2e
0x270cf:	jne	0x2708f
		Instruction group(s): [7, 1] 

0x270d1:	lea	rsi, [rax + 1]
0x270d5:	lea	rdi, [rdx + 1]
0x270d9:	mov	ecx, 0xa
0x270de:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x270e0:	jne	0x2708f
		Instruction group(s): [7, 1] 

0x270e2:	mov	rax, qword ptr [rip + 0x211b17]
0x270e9:	cmp	qword ptr [rip + 0x211b60], rax
0x270f0:	je	0x2708f
		Instruction group(s): [7, 1] 

0x270f2:	mov	r12, qword ptr [rbp + 8]
0x270f6:	mov	rdi, r12
0x270f9:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x270fe:	movabs	rdx, 0x20c49ba5e353f7cf
0x27108:	shr	rax, 2
0x2710c:	mov	r14, qword ptr [rip + 0x211b0d]
0x27113:	mul	rdx
0x27116:	mov	rax, qword ptr [rip + 0x211b23]
0x2711d:	mov	rdi, r12
0x27120:	lea	r13, [r14 + rax*8]
0x27124:	shr	rdx, 4
0x27128:	lea	rbx, [rdx + 1]
0x2712c:	imul	rbx, rbx, 0x1f4
0x27133:	mov	esi, ebx
0x27135:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x2713a:	cmp	r14, r13
0x2713d:	mov	r10, rax
0x27140:	mov	qword ptr [rbp + 8], rax
0x27144:	jae	0x271e1
		Instruction group(s): [7, 1] 

0x2714a:	xor	r12d, r12d
0x2714d:	jmp	0x27172
		Instruction group(s): [7, 1] 

0x2714f:	nop	
0x27150:	mov	rsi, qword ptr [r9]
0x27153:	mov	rdi, r10
0x27156:	mov	rdx, r15
0x27159:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x2715e:	lea	rax, [rax + r15]
0x27162:	lea	r10, [rax + 1]
0x27166:	mov	byte ptr [rax], 0x20
0x27169:	add	r14, 8
0x2716d:	cmp	r13, r14
0x27170:	jbe	0x271e1
		Instruction group(s): [7, 1] 

0x27172:	mov	r9, qword ptr [r14]
0x27175:	test	r9, r9
0x27178:	je	0x27169
		Instruction group(s): [7, 1] 

0x2717a:	cmp	r9, qword ptr [rip + 0x20ec87]
0x27181:	je	0x27169
		Instruction group(s): [7, 1] 

0x27183:	movsxd	r15, dword ptr [r9 + 0x20]
		Instruction group(s): [145] 

0x27187:	lea	esi, [r15 + 1]
		Instruction group(s): [145] 

0x2718b:	movsxd	rax, esi
		Instruction group(s): [145] 

0x2718e:	add	r12, rax
0x27191:	cmp	r12, rbx
0x27194:	jbe	0x27150
		Instruction group(s): [7, 1] 

0x27196:	mov	eax, 0x10624dd3
0x2719b:	mov	rdi, qword ptr [rbp + 8]
0x2719f:	mov	qword ptr [rsp + 8], r9
0x271a4:	imul	esi
0x271a6:	sar	esi, 0x1f
0x271a9:	sub	r10, rdi
0x271ac:	mov	eax, edx
0x271ae:	mov	qword ptr [rsp], r10
0x271b2:	sar	eax, 5
0x271b5:	sub	eax, esi
0x271b7:	add	eax, 1
0x271ba:	imul	eax, eax, 0x1f4
0x271c0:	cdqe	
0x271c2:	add	rbx, rax
0x271c5:	mov	esi, ebx
0x271c7:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x271cc:	mov	r10, qword ptr [rsp]
0x271d0:	mov	qword ptr [rbp + 8], rax
0x271d4:	mov	r9, qword ptr [rsp + 8]
0x271d9:	add	r10, rax
0x271dc:	jmp	0x27150
		Instruction group(s): [7, 1] 

0x271e1:	mov	byte ptr [r10 - 1], 0
0x271e6:	mov	rax, qword ptr [rip + 0x211a63]
0x271ed:	mov	qword ptr [rip + 0x211a0c], rax
0x271f4:	jmp	0x2708f
		Instruction group(s): [7, 1] 

0x271f9:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x271fe:	nop	
0x27200:	sub	rsp, 0x38
0x27204:	mov	qword ptr [rsp], rdi
0x27208:	mov	dword ptr [rsp + 0x20], esi
0x2720c:	mov	rdi, rdx
0x2720f:	mov	rsi, rsp
0x27212:	mov	rax, qword ptr fs:[0x28]
0x2721b:	mov	qword ptr [rsp + 0x28], rax
0x27220:	xor	eax, eax
0x27222:	call	0x29600
		Instruction group(s): [2, 7, 145] 

0x27227:	mov	rcx, qword ptr [rsp + 0x28]
0x2722c:	xor	rcx, qword ptr fs:[0x28]
0x27235:	jne	0x2723c
		Instruction group(s): [7, 1] 

0x27237:	add	rsp, 0x38
0x2723b:	ret	
		Instruction group(s): [3, 145] 

0x2723c:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x27241:	nop	dword ptr [rax + rax]
0x27246:	nop	word ptr cs:[rax + rax]
0x27250:	push	rbx
		Instruction group(s): [145] 

0x27251:	mov	edi, 0x58
0x27256:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x2725b:	lea	rdx, [rip - 0xd72]
0x27262:	lea	r8, [rip - 0xc99]
0x27269:	lea	rcx, [rip - 0xd10]
0x27270:	mov	rdi, rax
0x27273:	mov	esi, 0xd
0x27278:	mov	rbx, rax
0x2727b:	call	0x29440
		Instruction group(s): [2, 7, 145] 

0x27280:	mov	edi, 0x18
0x27285:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x2728a:	mov	rdx, qword ptr [rip + 0x20eb3f]
0x27291:	mov	qword ptr [rax + 8], rbx
0x27295:	mov	dword ptr [rax + 0x10], 0
0x2729c:	mov	qword ptr [rax], rdx
0x2729f:	pop	rbx
		Instruction group(s): [145] 

0x272a0:	ret	
		Instruction group(s): [3, 145] 

0x272a1:	nop	dword ptr [rax + rax]
0x272a6:	nop	word ptr cs:[rax + rax]
0x272b0:	sub	rsp, 8
0x272b4:	call	0x27250
		Instruction group(s): [2, 7, 145] 

0x272b9:	lea	rdx, [rip + 0x20eb20]
0x272c0:	cmp	qword ptr [rax], rdx
0x272c3:	mov	qword ptr [rip + 0x20eb06], rax
0x272ca:	jne	0x272fd
		Instruction group(s): [7, 1] 

0x272cc:	mov	rcx, qword ptr [rax + 8]
0x272d0:	mov	rsi, qword ptr [rip + 0x20eb11]
0x272d7:	mov	qword ptr [rax + 8], rsi
0x272db:	mov	qword ptr [rip + 0x20eb06], rcx
0x272e2:	mov	rcx, qword ptr [rip + 0x20eaf7]
0x272e9:	mov	qword ptr [rax], rcx
0x272ec:	mov	qword ptr [rip + 0x20eaed], rax
0x272f3:	mov	rax, rdx
0x272f6:	mov	qword ptr [rip + 0x20ead3], rdx
0x272fd:	add	rsp, 8
0x27301:	ret	
		Instruction group(s): [3, 145] 

0x27302:	nop	dword ptr [rax]
0x27306:	nop	word ptr cs:[rax + rax]
0x27310:	mov	rdi, qword ptr [rip + 0x20eab9]
0x27317:	lea	rax, [rip + 0x20eac2]
0x2731e:	push	rbx
		Instruction group(s): [145] 

0x2731f:	cmp	rdi, rax
0x27322:	je	0x27360
		Instruction group(s): [7, 1] 

0x27324:	mov	rax, qword ptr [rdi]
0x27327:	mov	rbx, qword ptr [rdi + 8]
0x2732b:	mov	qword ptr [rip + 0x20ea9e], rax
0x27332:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x27337:	lea	rsi, [rip - 0xd3e]
0x2733e:	mov	rdi, rbx
0x27341:	call	0x29940
		Instruction group(s): [2, 7, 145] 

0x27346:	mov	rdi, rbx
0x27349:	mov	esi, 1
0x2734e:	call	0x29900
		Instruction group(s): [2, 7, 145] 

0x27353:	mov	rdi, rbx
0x27356:	pop	rbx
		Instruction group(s): [145] 

0x27357:	jmp	0x8d70
		Instruction group(s): [7, 1] 

0x2735c:	nop	dword ptr [rax]
0x27360:	mov	rdi, qword ptr [rdi]
0x27363:	mov	rbx, qword ptr [rip + 0x20ea7e]
0x2736a:	mov	rax, qword ptr [rdi + 8]
0x2736e:	mov	qword ptr [rip + 0x20ea73], rax
0x27375:	mov	rax, qword ptr [rdi]
0x27378:	mov	qword ptr [rip + 0x20ea61], rax
0x2737f:	mov	eax, dword ptr [rdi + 0x10]
0x27382:	mov	dword ptr [rip + 0x20ea68], eax
0x27388:	jmp	0x27332
		Instruction group(s): [7, 1] 

0x2738a:	nop	word ptr [rax + rax]
0x27390:	test	rsi, rsi
0x27393:	je	0x274a8
		Instruction group(s): [7, 1] 

0x27399:	push	r15
		Instruction group(s): [145] 

0x2739b:	push	r14
		Instruction group(s): [145] 

0x2739d:	lea	rax, [rip + 0x20ea3c]
0x273a4:	push	r13
		Instruction group(s): [145] 

0x273a6:	push	r12
		Instruction group(s): [145] 

0x273a8:	push	rbp
		Instruction group(s): [145] 

0x273a9:	push	rbx
		Instruction group(s): [145] 

0x273aa:	sub	rsp, 8
0x273ae:	mov	r13, qword ptr [rdi]
0x273b1:	test	r13, r13
0x273b4:	je	0x27460
		Instruction group(s): [7, 1] 

0x273ba:	cmp	rsi, rax
0x273bd:	je	0x27468
		Instruction group(s): [7, 1] 

0x273c3:	cmp	r13, rax
0x273c6:	je	0x27465
		Instruction group(s): [7, 1] 

0x273cc:	nop	dword ptr [rax]
0x273d0:	mov	rax, qword ptr [rsi + 8]
0x273d4:	mov	r14, qword ptr [rsi]
0x273d7:	mov	r12, qword ptr [r13 + 8]
0x273db:	mov	rbx, qword ptr [rax]
0x273de:	mov	rax, qword ptr [rax + 0x20]
0x273e2:	lea	rbp, [rbx + rax*8]
0x273e6:	cmp	rbx, rbp
0x273e9:	jae	0x27439
		Instruction group(s): [7, 1] 

0x273eb:	nop	dword ptr [rax + rax]
0x273f0:	mov	r15, qword ptr [rbx]
0x273f3:	test	r15, r15
0x273f6:	je	0x27430
		Instruction group(s): [7, 1] 

0x273f8:	cmp	r15, qword ptr [rip + 0x20ea09]
0x273ff:	je	0x27430
		Instruction group(s): [7, 1] 

0x27401:	mov	rsi, r15
0x27404:	mov	rdi, r12
0x27407:	call	0x29540
		Instruction group(s): [2, 7, 145] 

0x2740c:	mov	rsi, qword ptr [rax]
0x2740f:	test	rsi, rsi
0x27412:	je	0x27480
		Instruction group(s): [7, 1] 

0x27414:	cmp	rsi, qword ptr [rip + 0x20e9ed]
0x2741b:	je	0x27480
		Instruction group(s): [7, 1] 

0x2741d:	mov	rdi, qword ptr [r15 + 8]
0x27421:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x27426:	mov	rdi, r15
0x27429:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x2742e:	nop	
0x27430:	add	rbx, 8
0x27434:	cmp	rbp, rbx
0x27437:	ja	0x273f0
		Instruction group(s): [7, 1] 

0x27439:	lea	rcx, [rip + 0x20e9a0]
0x27440:	mov	rax, qword ptr [r13]
0x27444:	cmp	r14, rcx
0x27447:	je	0x27468
		Instruction group(s): [7, 1] 

0x27449:	cmp	rax, rcx
0x2744c:	mov	rsi, r14
0x2744f:	je	0x27490
		Instruction group(s): [7, 1] 

0x27451:	mov	r13, rax
0x27454:	jmp	0x273d0
		Instruction group(s): [7, 1] 

0x27459:	nop	dword ptr [rax]
0x27460:	cmp	rsi, rax
0x27463:	je	0x27468
		Instruction group(s): [7, 1] 

0x27465:	mov	qword ptr [rdi], rsi
0x27468:	add	rsp, 8
0x2746c:	pop	rbx
		Instruction group(s): [145] 

0x2746d:	pop	rbp
		Instruction group(s): [145] 

0x2746e:	pop	r12
		Instruction group(s): [145] 

0x27470:	pop	r13
		Instruction group(s): [145] 

0x27472:	pop	r14
		Instruction group(s): [145] 

0x27474:	pop	r15
		Instruction group(s): [145] 

0x27476:	ret	
		Instruction group(s): [3, 145] 

0x27477:	nop	word ptr [rax + rax]
0x27480:	mov	rdx, rax
0x27483:	mov	rsi, r15
0x27486:	mov	rdi, r12
0x27489:	call	0x29630
		Instruction group(s): [2, 7, 145] 

0x2748e:	jmp	0x27430
		Instruction group(s): [7, 1] 

0x27490:	mov	qword ptr [r13], r14
0x27494:	add	rsp, 8
0x27498:	pop	rbx
		Instruction group(s): [145] 

0x27499:	pop	rbp
		Instruction group(s): [145] 

0x2749a:	pop	r12
		Instruction group(s): [145] 

0x2749c:	pop	r13
		Instruction group(s): [145] 

0x2749e:	pop	r14
		Instruction group(s): [145] 

0x274a0:	pop	r15
		Instruction group(s): [145] 

0x274a2:	ret	
		Instruction group(s): [3, 145] 

0x274a3:	nop	dword ptr [rax + rax]
0x274a8:	ret	
		Instruction group(s): [3, 145] 

0x274aa:	nop	word ptr [rax + rax]
0x274b0:	push	rbx
		Instruction group(s): [145] 

0x274b1:	lea	rcx, [rip + 0x7564]
0x274b8:	mov	edx, 0xc8
0x274bd:	mov	esi, 1
0x274c2:	sub	rsp, 0xd0
0x274c9:	mov	r8d, dword ptr [rip + 0x212080]
0x274d0:	mov	rax, qword ptr fs:[0x28]
0x274d9:	mov	qword ptr [rsp + 0xc8], rax
0x274e1:	xor	eax, eax
0x274e3:	mov	rbx, rsp
0x274e6:	mov	rdi, rbx
0x274e9:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x274ee:	mov	rax, qword ptr [rip + 0x20e8db]
0x274f5:	sub	rsp, 8
0x274f9:	lea	rdi, [rip + 0x6016]
0x27500:	push	0
		Instruction group(s): [145] 

0x27502:	xor	r8d, r8d
0x27505:	mov	ecx, 1
0x2750a:	mov	rdx, rbx
0x2750d:	mov	esi, 9
0x27512:	mov	r9, qword ptr [rax + 8]
0x27516:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x2751b:	mov	rax, qword ptr [rip + 0x211f7e]
0x27522:	pop	rdi
		Instruction group(s): [145] 

0x27523:	pop	r8
		Instruction group(s): [145] 

0x27525:	test	rax, rax
0x27528:	je	0x27980
		Instruction group(s): [7, 1] 

0x2752e:	cmp	byte ptr [rax], 0
0x27531:	lea	r9, [rip + 0x6052]
0x27538:	je	0x27980
		Instruction group(s): [7, 1] 

0x2753e:	sub	rsp, 8
0x27542:	mov	r8, qword ptr [rip + 0x20e8b7]
0x27549:	lea	rcx, [rip + 0x4831]
0x27550:	push	rax
		Instruction group(s): [145] 

0x27551:	mov	rdi, rbx
0x27554:	mov	edx, 0xc8
0x27559:	mov	esi, 1
0x2755e:	xor	eax, eax
0x27560:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x27565:	mov	rax, qword ptr [rip + 0x20e864]
0x2756c:	lea	rdi, [rip + 0x77b0]
0x27573:	xor	r8d, r8d
0x27576:	xor	ecx, ecx
0x27578:	mov	rdx, rbx
0x2757b:	mov	esi, 0xc
0x27580:	mov	qword ptr [rsp], 0
0x27588:	mov	r9, qword ptr [rax + 8]
0x2758c:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x27591:	mov	rax, qword ptr [rip + 0x20e838]
0x27598:	mov	rdx, qword ptr [rip + 0x20e859]
0x2759f:	lea	rdi, [rip + 0x778a]
0x275a6:	xor	r8d, r8d
0x275a9:	xor	ecx, ecx
0x275ab:	mov	esi, 9
0x275b0:	mov	qword ptr [rsp], 0
0x275b8:	mov	r9, qword ptr [rax + 8]
0x275bc:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x275c1:	mov	rax, qword ptr [rip + 0x20e808]
0x275c8:	mov	rdx, qword ptr [rip + 0x20e731]
0x275cf:	lea	rdi, [rip + 0x69a7]
0x275d6:	xor	ecx, ecx
0x275d8:	xor	r8d, r8d
0x275db:	mov	esi, 5
0x275e0:	mov	qword ptr [rsp], 0
0x275e8:	mov	r9, qword ptr [rax + 8]
0x275ec:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x275f1:	mov	rdi, qword ptr [rax + 8]
0x275f5:	mov	rbx, rax
0x275f8:	pop	rcx
		Instruction group(s): [145] 

0x275f9:	pop	rsi
		Instruction group(s): [145] 

0x275fa:	cmp	byte ptr [rdi], 0
0x275fd:	je	0x2760a
		Instruction group(s): [7, 1] 

0x275ff:	movzx	eax, byte ptr [rax + 0x27]
0x27603:	and	eax, 0x14
0x27606:	cmp	al, 4
0x27608:	jne	0x2762c
		Instruction group(s): [7, 1] 

0x2760a:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x2760f:	movzx	eax, byte ptr [rbx + 0x27]
0x27613:	and	eax, 0xffffffe3
0x27616:	or	eax, 8
0x27619:	mov	byte ptr [rbx + 0x27], al
0x2761c:	mov	rdi, qword ptr [rip + 0x20e6dd]
0x27623:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0x27628:	mov	qword ptr [rbx + 8], rax
0x2762c:	mov	rax, qword ptr [rip + 0x20e79d]
0x27633:	sub	rsp, 8
0x27637:	lea	rdx, [rip + 0x638f]
0x2763e:	push	0
		Instruction group(s): [145] 

0x27640:	lea	rdi, [rip + 0x76f3]
0x27647:	xor	r8d, r8d
0x2764a:	xor	ecx, ecx
0x2764c:	mov	esi, 9
0x27651:	mov	r9, qword ptr [rax + 8]
0x27655:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x2765a:	movzx	edx, byte ptr [rax + 0x27]
0x2765e:	lea	rdi, [rip + 0x76fa]
0x27665:	mov	r8d, 1
0x2766b:	mov	ecx, 6
0x27670:	mov	esi, 2
0x27675:	and	edx, 0xffffff9f
0x27678:	or	edx, 0x40
0x2767b:	mov	byte ptr [rax + 0x27], dl
0x2767e:	mov	rax, qword ptr [rip + 0x20e74b]
0x27685:	lea	rdx, [rip + 0x76b8]
0x2768c:	mov	qword ptr [rsp], 0
0x27694:	mov	r9, qword ptr [rax + 8]
0x27698:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x2769d:	mov	rax, qword ptr [rip + 0x20e72c]
0x276a4:	lea	rdx, [rip + 0x76b7]
0x276ab:	lea	rdi, [rip + 0x76cb]
0x276b2:	mov	r8d, 1
0x276b8:	mov	ecx, 6
0x276bd:	mov	esi, 2
0x276c2:	mov	qword ptr [rsp], 0
0x276ca:	mov	r9, qword ptr [rax + 8]
0x276ce:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x276d3:	mov	rax, qword ptr [rip + 0x20e6f6]
0x276da:	lea	rdx, [rip + 0x769f]
0x276e1:	lea	rdi, [rip + 0x76b3]
0x276e8:	mov	r8d, 1
0x276ee:	mov	ecx, 6
0x276f3:	mov	esi, 2
0x276f8:	mov	qword ptr [rsp], 0
0x27700:	mov	r9, qword ptr [rax + 8]
0x27704:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x27709:	mov	rax, qword ptr [rip + 0x20e6c0]
0x27710:	lea	rdx, [rip + 0x7687]
0x27717:	lea	rdi, [rip + 0x769b]
0x2771e:	mov	r8d, 1
0x27724:	mov	ecx, 6
0x27729:	mov	esi, 2
0x2772e:	mov	qword ptr [rsp], 0
0x27736:	mov	r9, qword ptr [rax + 8]
0x2773a:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x2773f:	mov	rax, qword ptr [rip + 0x20e68a]
0x27746:	lea	rdx, [rip + 0x766f]
0x2774d:	lea	rdi, [rip + 0x7683]
0x27754:	mov	r8d, 1
0x2775a:	mov	ecx, 6
0x2775f:	mov	esi, 2
0x27764:	mov	qword ptr [rsp], 0
0x2776c:	mov	r9, qword ptr [rax + 8]
0x27770:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x27775:	mov	rax, qword ptr [rip + 0x20e654]
0x2777c:	lea	rdx, [rip + 0x7657]
0x27783:	lea	rdi, [rip + 0x766b]
0x2778a:	mov	r8d, 1
0x27790:	mov	ecx, 6
0x27795:	mov	esi, 2
0x2779a:	mov	qword ptr [rsp], 0
0x277a2:	mov	r9, qword ptr [rax + 8]
0x277a6:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x277ab:	mov	rax, qword ptr [rip + 0x20e61e]
0x277b2:	lea	rdx, [rip + 0x763f]
0x277b9:	lea	rdi, [rip + 0x7653]
0x277c0:	mov	r8d, 1
0x277c6:	mov	ecx, 6
0x277cb:	mov	esi, 2
0x277d0:	mov	qword ptr [rsp], 0
0x277d8:	mov	r9, qword ptr [rax + 8]
0x277dc:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x277e1:	mov	rax, qword ptr [rip + 0x20e5e8]
0x277e8:	lea	rdx, [rip + 0x7627]
0x277ef:	lea	rdi, [rip + 0x762d]
0x277f6:	mov	r8d, 1
0x277fc:	mov	ecx, 6
0x27801:	mov	esi, 2
0x27806:	mov	qword ptr [rsp], 0
0x2780e:	mov	r9, qword ptr [rax + 8]
0x27812:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x27817:	mov	rax, qword ptr [rip + 0x20e5b2]
0x2781e:	lea	rdx, [rip + 0x7601]
0x27825:	lea	rdi, [rip + 0x7607]
0x2782c:	mov	r8d, 1
0x27832:	mov	ecx, 6
0x27837:	mov	esi, 2
0x2783c:	mov	qword ptr [rsp], 0
0x27844:	mov	r9, qword ptr [rax + 8]
0x27848:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x2784d:	mov	rax, qword ptr [rip + 0x20e57c]
0x27854:	lea	rdx, [rip + 0x75db]
0x2785b:	lea	rdi, [rip + 0x75e1]
0x27862:	mov	r8d, 1
0x27868:	mov	ecx, 6
0x2786d:	mov	esi, 2
0x27872:	mov	qword ptr [rsp], 0
0x2787a:	mov	r9, qword ptr [rax + 8]
0x2787e:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x27883:	mov	rax, qword ptr [rip + 0x20e546]
0x2788a:	lea	rdx, [rip + 0x75b5]
0x27891:	lea	rdi, [rip + 0x75bb]
0x27898:	mov	r8d, 1
0x2789e:	mov	ecx, 6
0x278a3:	mov	esi, 2
0x278a8:	mov	qword ptr [rsp], 0
0x278b0:	mov	r9, qword ptr [rax + 8]
0x278b4:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x278b9:	mov	rax, qword ptr [rip + 0x20e510]
0x278c0:	lea	rdx, [rip + 0x758f]
0x278c7:	lea	rdi, [rip + 0x7595]
0x278ce:	mov	r8d, 1
0x278d4:	mov	ecx, 6
0x278d9:	mov	esi, 2
0x278de:	mov	qword ptr [rsp], 0
0x278e6:	mov	r9, qword ptr [rax + 8]
0x278ea:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x278ef:	mov	rax, qword ptr [rip + 0x20e4da]
0x278f6:	lea	rdx, [rip + 0x7569]
0x278fd:	lea	rdi, [rip + 0x756f]
0x27904:	mov	r8d, 1
0x2790a:	mov	ecx, 6
0x2790f:	mov	esi, 2
0x27914:	mov	qword ptr [rsp], 0
0x2791c:	mov	r9, qword ptr [rax + 8]
0x27920:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x27925:	mov	rax, qword ptr [rip + 0x20e4a4]
0x2792c:	lea	rdx, [rip + 0x7543]
0x27933:	lea	rdi, [rip + 0x7549]
0x2793a:	mov	r8d, 1
0x27940:	mov	ecx, 6
0x27945:	mov	esi, 2
0x2794a:	mov	qword ptr [rsp], 0
0x27952:	mov	r9, qword ptr [rax + 8]
0x27956:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x2795b:	pop	rax
		Instruction group(s): [145] 

0x2795c:	pop	rdx
		Instruction group(s): [145] 

0x2795d:	mov	rax, qword ptr [rsp + 0xc8]
0x27965:	xor	rax, qword ptr fs:[0x28]
0x2796e:	jne	0x2798f
		Instruction group(s): [7, 1] 

0x27970:	add	rsp, 0xd0
0x27977:	pop	rbx
		Instruction group(s): [145] 

0x27978:	ret	
		Instruction group(s): [3, 145] 

0x27979:	nop	dword ptr [rax]
0x27980:	lea	rax, [rip + 0x6046]
0x27987:	mov	r9, rax
0x2798a:	jmp	0x2753e
		Instruction group(s): [7, 1] 

0x2798f:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x27994:	nop	
0x27996:	nop	word ptr cs:[rax + rax]
0x279a0:	push	r15
		Instruction group(s): [145] 

0x279a2:	push	r14
		Instruction group(s): [145] 

0x279a4:	push	r13
		Instruction group(s): [145] 

0x279a6:	push	r12
		Instruction group(s): [145] 

0x279a8:	push	rbp
		Instruction group(s): [145] 

0x279a9:	push	rbx
		Instruction group(s): [145] 

0x279aa:	sub	rsp, 0xb8
0x279b1:	mov	rbp, qword ptr [rip + 0x20e418]
0x279b8:	mov	rcx, qword ptr fs:[0x28]
0x279c1:	mov	qword ptr [rsp + 0xa8], rcx
0x279c9:	xor	ecx, ecx
0x279cb:	test	rdi, rdi
0x279ce:	mov	qword ptr [rsp + 0x18], rdi
0x279d3:	je	0x279de
		Instruction group(s): [7, 1] 

0x279d5:	mov	rax, qword ptr [rsp + 0x18]
0x279da:	mov	rbp, qword ptr [rax + 0x50]
0x279de:	lea	r12, [rsp + 0x50]
0x279e3:	lea	r8, [rip - 0x141a]
0x279ea:	lea	rcx, [rip - 0x1491]
0x279f1:	lea	rdx, [rip - 0x1508]
0x279f8:	mov	esi, 0x20b
0x279fd:	mov	rdi, r12
0x27a00:	call	0x29440
		Instruction group(s): [2, 7, 145] 

0x27a05:	lea	rax, [rsp + 0x20]
0x27a0a:	test	rbp, rbp
0x27a0d:	mov	qword ptr [rsp + 0x10], rax
0x27a12:	je	0x27b02
		Instruction group(s): [7, 1] 

0x27a18:	nop	dword ptr [rax + rax]
0x27a20:	mov	rax, qword ptr [rbp + 8]
0x27a24:	mov	r15, qword ptr [rax]
0x27a27:	mov	rax, qword ptr [rax + 0x20]
0x27a2b:	lea	rbx, [r15 + rax*8]
0x27a2f:	cmp	r15, rbx
0x27a32:	jae	0x27af5
		Instruction group(s): [7, 1] 

0x27a38:	lea	r13, [rip + 0x2111e1]
0x27a3f:	nop	
0x27a40:	mov	r14, qword ptr [r15]
0x27a43:	test	r14, r14
0x27a46:	je	0x27ae8
		Instruction group(s): [7, 1] 

0x27a4c:	cmp	r14, qword ptr [rip + 0x20e3b5]
0x27a53:	je	0x27ae8
		Instruction group(s): [7, 1] 

0x27a59:	mov	eax, dword ptr [r14 + 0x24]
0x27a5d:	and	eax, 0x60000008
0x27a62:	cmp	eax, 0x60000008
0x27a67:	je	0x27cc0
		Instruction group(s): [7, 1] 

0x27a6d:	movzx	eax, byte ptr [r14 + 0x27]
0x27a72:	shr	al, 5
0x27a75:	and	eax, 3
0x27a78:	cmp	al, 2
0x27a7a:	je	0x27cb0
		Instruction group(s): [7, 1] 

0x27a80:	ja	0x27c58
		Instruction group(s): [7, 1] 

0x27a86:	cmp	al, 1
0x27a88:	jne	0x27ac0
		Instruction group(s): [7, 1] 

0x27a8a:	mov	rsi, qword ptr [r14]
0x27a8d:	lea	rax, [rip + 0x64e9]
0x27a94:	cmp	rsi, rax
0x27a97:	je	0x27aaf
		Instruction group(s): [7, 1] 

0x27a99:	cmp	byte ptr [rsi], 0x53
0x27a9c:	jne	0x27ae8
		Instruction group(s): [7, 1] 

0x27a9e:	lea	rdi, [rax + 1]
0x27aa2:	add	rsi, 1
0x27aa6:	mov	ecx, 5
0x27aab:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]
0x27aad:	jne	0x27ae8
		Instruction group(s): [7, 1] 

0x27aaf:	cmp	qword ptr [rip + 0x211a51], 0
0x27ab7:	lea	r14, [rip + 0x211a42]
0x27abe:	je	0x27ae8
		Instruction group(s): [7, 1] 

0x27ac0:	mov	rsi, r14
0x27ac3:	mov	rdi, r12
0x27ac6:	call	0x29540
		Instruction group(s): [2, 7, 145] 

0x27acb:	mov	rsi, qword ptr [rax]
0x27ace:	test	rsi, rsi
0x27ad1:	je	0x27c40
		Instruction group(s): [7, 1] 

0x27ad7:	cmp	rsi, qword ptr [rip + 0x20e32a]
0x27ade:	je	0x27c40
		Instruction group(s): [7, 1] 

0x27ae4:	nop	dword ptr [rax]
0x27ae8:	add	r15, 8
0x27aec:	cmp	rbx, r15
0x27aef:	ja	0x27a40
		Instruction group(s): [7, 1] 

0x27af5:	mov	rbp, qword ptr [rbp]
0x27af9:	test	rbp, rbp
0x27afc:	jne	0x27a20
		Instruction group(s): [7, 1] 

0x27b02:	lea	rdi, [rip + 0x5a0d]
0x27b09:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0x27b0e:	mov	rsi, qword ptr [rsp + 0x10]
0x27b13:	mov	rdi, r12
0x27b16:	mov	qword ptr [rsp + 0x20], rax
0x27b1b:	mov	dword ptr [rsp + 0x40], 9
0x27b23:	call	0x297e0
		Instruction group(s): [2, 7, 145] 

0x27b28:	mov	rax, qword ptr [rsp + 0x80]
0x27b30:	lea	edi, [rax*8 + 0x10]
		Instruction group(s): [145] 

0x27b37:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x27b3c:	mov	rbx, qword ptr [rsp + 0x50]
0x27b41:	mov	r14, rax
0x27b44:	mov	qword ptr [rsp + 8], rax
0x27b49:	mov	rax, qword ptr [rsp + 0x70]
0x27b4e:	lea	r13, [rbx + rax*8]
0x27b52:	cmp	rbx, r13
0x27b55:	jae	0x27d6b
		Instruction group(s): [7, 1] 

0x27b5b:	nop	dword ptr [rax + rax]
0x27b60:	mov	r15, qword ptr [rbx]
0x27b63:	test	r15, r15
0x27b66:	je	0x27bb4
		Instruction group(s): [7, 1] 

0x27b68:	cmp	r15, qword ptr [rip + 0x20e299]
0x27b6f:	je	0x27bb4
		Instruction group(s): [7, 1] 

0x27b71:	test	byte ptr [r15 + 0x24], 1
0x27b76:	lea	rbp, [r14 + 8]
0x27b7a:	je	0x27b8c
		Instruction group(s): [7, 1] 

0x27b7c:	movzx	eax, byte ptr [r15 + 0x27]
0x27b81:	and	eax, 0x14
0x27b84:	cmp	al, 4
0x27b86:	jne	0x27d20
		Instruction group(s): [7, 1] 

0x27b8c:	mov	rcx, qword ptr [r15 + 8]
0x27b90:	mov	rsi, qword ptr [r15]
0x27b93:	lea	rdx, [rip + 0x5b08]
0x27b9a:	mov	edi, 3
0x27b9f:	xor	eax, eax
0x27ba1:	call	0x1b950
		Instruction group(s): [2, 7, 145] 

0x27ba6:	mov	rdi, rax
0x27ba9:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0x27bae:	mov	qword ptr [r14], rax
0x27bb1:	mov	r14, rbp
0x27bb4:	add	rbx, 8
0x27bb8:	cmp	r13, rbx
0x27bbb:	ja	0x27b60
		Instruction group(s): [7, 1] 

0x27bbd:	mov	edi, 0x64
0x27bc2:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x27bc7:	mov	r9d, dword ptr [rip + 0x211982]
0x27bce:	lea	rcx, [rip + 0x5acf]
0x27bd5:	lea	r8, [rip + 0x593a]
0x27bdc:	mov	rdi, rax
0x27bdf:	mov	qword ptr [r14], rax
0x27be2:	mov	rdx, -1
0x27be9:	mov	esi, 1
0x27bee:	xor	eax, eax
0x27bf0:	add	r9d, 1
0x27bf4:	call	0x8d60
		Instruction group(s): [2, 7, 145] 

0x27bf9:	xor	esi, esi
0x27bfb:	mov	qword ptr [r14 + 8], 0
0x27c03:	mov	rdi, r12
0x27c06:	call	0x29900
		Instruction group(s): [2, 7, 145] 

0x27c0b:	mov	rcx, qword ptr [rsp + 0xa8]
0x27c13:	xor	rcx, qword ptr fs:[0x28]
0x27c1c:	mov	rax, qword ptr [rsp + 8]
0x27c21:	jne	0x27d75
		Instruction group(s): [7, 1] 

0x27c27:	add	rsp, 0xb8
0x27c2e:	pop	rbx
		Instruction group(s): [145] 

0x27c2f:	pop	rbp
		Instruction group(s): [145] 

0x27c30:	pop	r12
		Instruction group(s): [145] 

0x27c32:	pop	r13
		Instruction group(s): [145] 

0x27c34:	pop	r14
		Instruction group(s): [145] 

0x27c36:	pop	r15
		Instruction group(s): [145] 

0x27c38:	ret	
		Instruction group(s): [3, 145] 

0x27c39:	nop	dword ptr [rax]
0x27c40:	mov	rdx, rax
0x27c43:	mov	rsi, r14
0x27c46:	mov	rdi, r12
0x27c49:	call	0x29630
		Instruction group(s): [2, 7, 145] 

0x27c4e:	jmp	0x27ae8
		Instruction group(s): [7, 1] 

0x27c53:	nop	dword ptr [rax + rax]
0x27c58:	movzx	eax, byte ptr [r14 + 0x27]
0x27c5d:	mov	edx, eax
0x27c5f:	and	edx, 0x1c
0x27c62:	je	0x27ae8
		Instruction group(s): [7, 1] 

0x27c68:	cmp	dl, 0x18
0x27c6b:	je	0x27ae8
		Instruction group(s): [7, 1] 

0x27c71:	test	byte ptr [r14 + 0x24], 0x20
0x27c76:	je	0x27ae8
		Instruction group(s): [7, 1] 

0x27c7c:	and	eax, 0x14
0x27c7f:	cmp	al, 4
0x27c81:	setne	sil
0x27c85:	cmp	dl, 0x10
0x27c88:	setne	al
0x27c8b:	test	sil, al
0x27c8e:	je	0x27ac0
		Instruction group(s): [7, 1] 

0x27c94:	mov	eax, dword ptr [rip + 0x21199e]
0x27c9a:	test	eax, eax
0x27c9c:	jne	0x27ac0
		Instruction group(s): [7, 1] 

0x27ca2:	jmp	0x27ae8
		Instruction group(s): [7, 1] 

0x27ca7:	nop	word ptr [rax + rax]
0x27cb0:	test	byte ptr [r14 + 0x27], 0x1c
0x27cb5:	jne	0x27ac0
		Instruction group(s): [7, 1] 

0x27cbb:	jmp	0x27ae8
		Instruction group(s): [7, 1] 

0x27cc0:	mov	rdx, qword ptr [r14]
0x27cc3:	mov	rdi, rdx
0x27cc6:	mov	qword ptr [rsp + 8], rdx
0x27ccb:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x27cd0:	mov	rdx, qword ptr [rsp + 8]
0x27cd5:	mov	rsi, qword ptr [rsp + 0x10]
0x27cda:	mov	rdi, r13
0x27cdd:	mov	dword ptr [rsp + 0x40], eax
0x27ce1:	mov	qword ptr [rsp + 0x20], rdx
0x27ce6:	call	0x29600
		Instruction group(s): [2, 7, 145] 

0x27ceb:	test	rax, rax
0x27cee:	je	0x27a6d
		Instruction group(s): [7, 1] 

0x27cf4:	movzx	eax, byte ptr [rax + 0x27]
0x27cf8:	movzx	edx, byte ptr [r14 + 0x27]
0x27cfd:	shr	al, 5
0x27d00:	and	edx, 0xffffff9f
0x27d03:	and	eax, 3
0x27d06:	mov	esi, eax
0x27d08:	shl	esi, 5
0x27d0b:	or	edx, esi
0x27d0d:	mov	byte ptr [r14 + 0x27], dl
0x27d11:	jmp	0x27a78
		Instruction group(s): [7, 1] 

0x27d16:	nop	word ptr cs:[rax + rax]
0x27d20:	mov	rsi, qword ptr [rsp + 0x18]
0x27d25:	mov	rdi, r15
0x27d28:	call	0xea10
		Instruction group(s): [2, 7, 145] 

0x27d2d:	mov	rsi, qword ptr [r15]
0x27d30:	lea	rdx, [rip + 0x596b]
0x27d37:	mov	rcx, rax
0x27d3a:	mov	qword ptr [rsp + 0x10], rax
0x27d3f:	mov	edi, 3
0x27d44:	xor	eax, eax
0x27d46:	call	0x1b950
		Instruction group(s): [2, 7, 145] 

0x27d4b:	mov	rdi, rax
0x27d4e:	call	0x1bac0
		Instruction group(s): [2, 7, 145] 

0x27d53:	mov	r9, qword ptr [rsp + 0x10]
0x27d58:	mov	qword ptr [r14], rax
0x27d5b:	mov	r14, rbp
0x27d5e:	mov	rdi, r9
0x27d61:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x27d66:	jmp	0x27bb4
		Instruction group(s): [7, 1] 

0x27d6b:	mov	r14, qword ptr [rsp + 8]
0x27d70:	jmp	0x27bbd
		Instruction group(s): [7, 1] 

0x27d75:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x27d7a:	nop	word ptr [rax + rax]
0x27d80:	push	rbx
		Instruction group(s): [145] 

0x27d81:	mov	rbx, rdi
0x27d84:	sub	rsp, 0x30
0x27d88:	lea	rsi, [rsp + 4]
0x27d8d:	lea	rdi, [rsp + 8]
0x27d92:	mov	rax, qword ptr fs:[0x28]
0x27d9b:	mov	qword ptr [rsp + 0x28], rax
0x27da0:	xor	eax, eax
0x27da2:	call	0xecf0
		Instruction group(s): [2, 7, 145] 

0x27da7:	mov	rdi, qword ptr [rip + 0x2116fa]
0x27dae:	lea	rsi, [rsp + 0x10]
0x27db3:	xor	edx, edx
0x27db5:	mov	qword ptr [rsp + 0x10], rbx
0x27dba:	mov	qword ptr [rsp + 0x18], 0
0x27dc3:	call	0x13e20
		Instruction group(s): [2, 7, 145] 

0x27dc8:	lea	rsi, [rip + 0x70e9]
0x27dcf:	mov	edx, 1
0x27dd4:	mov	rdi, rax
0x27dd7:	call	0xdfa0
		Instruction group(s): [2, 7, 145] 

0x27ddc:	mov	rdi, qword ptr [rip + 0x2116c5]
0x27de3:	call	0x8cb0
		Instruction group(s): [2, 7, 145] 

0x27de8:	mov	esi, dword ptr [rsp + 4]
0x27dec:	mov	rdi, qword ptr [rsp + 8]
0x27df1:	mov	rbx, rax
0x27df4:	call	0xed20
		Instruction group(s): [2, 7, 145] 

0x27df9:	mov	rcx, qword ptr [rsp + 0x28]
0x27dfe:	xor	rcx, qword ptr fs:[0x28]
0x27e07:	jne	0x27e12
		Instruction group(s): [7, 1] 

0x27e09:	add	rsp, 0x30
0x27e0d:	mov	rax, rbx
0x27e10:	pop	rbx
		Instruction group(s): [145] 

0x27e11:	ret	
		Instruction group(s): [3, 145] 

0x27e12:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x27e17:	nop	word ptr [rax + rax]
0x27e20:	push	r15
		Instruction group(s): [145] 

0x27e22:	push	r14
		Instruction group(s): [145] 

0x27e24:	push	r13
		Instruction group(s): [145] 

0x27e26:	push	r12
		Instruction group(s): [145] 

0x27e28:	push	rbp
		Instruction group(s): [145] 

0x27e29:	push	rbx
		Instruction group(s): [145] 

0x27e2a:	sub	rsp, 0x68
0x27e2e:	mov	rax, qword ptr fs:[0x28]
0x27e37:	mov	qword ptr [rsp + 0x58], rax
0x27e3c:	xor	eax, eax
0x27e3e:	cmp	r8d, 5
0x27e42:	mov	dword ptr [rsp + 8], ecx
0x27e46:	ja	0x280ca
		Instruction group(s): [7, 1] 

0x27e4c:	mov	rbx, rdx
0x27e4f:	lea	rdx, [rip + 0x7066]
0x27e56:	mov	r8d, r8d
0x27e59:	mov	r15, rdi
0x27e5c:	mov	rbp, rsi
0x27e5f:	mov	r14d, r9d
0x27e62:	movsxd	rax, dword ptr [rdx + r8*4]
		Instruction group(s): [145] 

0x27e66:	add	rax, rdx
0x27e69:	jmp	rax
		Instruction group(s): [145, 1] 

0x27e6b:	nop	dword ptr [rax + rax]
0x27e70:	xor	esi, esi
0x27e72:	mov	rdi, rbx
0x27e75:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x27e7a:	mov	r12, rax
0x27e7d:	mov	rdi, rax
0x27e80:	call	0x27d80
		Instruction group(s): [2, 7, 145] 

0x27e85:	mov	rdi, r12
0x27e88:	mov	rbx, rax
0x27e8b:	xor	r12d, r12d
0x27e8e:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x27e93:	mov	r13, rbx
0x27e96:	mov	byte ptr [rsp + 0x2b], 0
0x27e9b:	mov	r8d, 1
0x27ea1:	xor	r9d, r9d
0x27ea4:	test	r14d, r14d
0x27ea7:	je	0x27eb4
		Instruction group(s): [7, 1] 

0x27ea9:	mov	rax, qword ptr [rip + 0x20df20]
0x27eb0:	mov	r9, qword ptr [rax + 8]
0x27eb4:	mov	rdi, rbp
0x27eb7:	mov	dword ptr [rsp + 0x18], r8d
0x27ebc:	mov	qword ptr [rsp + 0x10], r9
0x27ec1:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x27ec6:	sub	rsp, 8
0x27eca:	mov	rdx, rbx
0x27ecd:	mov	esi, eax
0x27ecf:	push	r15
		Instruction group(s): [145] 

0x27ed1:	mov	r9, qword ptr [rsp + 0x20]
0x27ed6:	mov	rdi, rbp
0x27ed9:	mov	r8d, dword ptr [rsp + 0x28]
0x27ede:	mov	ecx, dword ptr [rsp + 0x18]
0x27ee2:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x27ee7:	movzx	esi, byte ptr [rsp + 0x3b]
0x27eec:	movzx	edx, byte ptr [rax + 0x24]
0x27ef0:	lea	ecx, [r12*4]
		Instruction group(s): [145] 

0x27ef8:	mov	rdi, r13
0x27efb:	mov	qword ptr [rsp + 0x18], rax
0x27f00:	add	esi, esi
0x27f02:	and	edx, 0xfffffff9
0x27f05:	or	edx, esi
0x27f07:	mov	r12d, edx
0x27f0a:	or	r12d, ecx
0x27f0d:	mov	byte ptr [rax + 0x24], r12b
0x27f11:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x27f16:	pop	rax
		Instruction group(s): [145] 

0x27f17:	pop	rdx
		Instruction group(s): [145] 

0x27f18:	mov	rax, qword ptr [rsp + 8]
0x27f1d:	test	byte ptr [rax + 0x24], 0x10
0x27f21:	je	0x27f2b
		Instruction group(s): [7, 1] 

0x27f23:	mov	rdi, rax
0x27f26:	call	0x26b00
		Instruction group(s): [2, 7, 145] 

0x27f2b:	mov	rbx, qword ptr [rsp + 0x58]
0x27f30:	xor	rbx, qword ptr fs:[0x28]
0x27f39:	jne	0x28129
		Instruction group(s): [7, 1] 

0x27f3f:	add	rsp, 0x68
0x27f43:	pop	rbx
		Instruction group(s): [145] 

0x27f44:	pop	rbp
		Instruction group(s): [145] 

0x27f45:	pop	r12
		Instruction group(s): [145] 

0x27f47:	pop	r13
		Instruction group(s): [145] 

0x27f49:	pop	r14
		Instruction group(s): [145] 

0x27f4b:	pop	r15
		Instruction group(s): [145] 

0x27f4d:	ret	
		Instruction group(s): [3, 145] 

0x27f4e:	nop	
0x27f50:	mov	rdi, rsi
0x27f53:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x27f58:	mov	rdi, rbp
0x27f5b:	mov	esi, eax
0x27f5d:	call	0x27020
		Instruction group(s): [2, 7, 145] 

0x27f62:	test	rax, rax
0x27f65:	jne	0x27f1d
		Instruction group(s): [7, 1] 

0x27f67:	mov	r12d, 1
0x27f6d:	mov	byte ptr [rsp + 0x2b], 0
0x27f72:	mov	r8d, 1
0x27f78:	xor	r13d, r13d
0x27f7b:	jmp	0x27ea1
		Instruction group(s): [7, 1] 

0x27f80:	mov	rdi, rsi
0x27f83:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x27f88:	test	r14d, r14d
0x27f8b:	jne	0x28090
		Instruction group(s): [7, 1] 

0x27f91:	mov	esi, eax
0x27f93:	mov	rdi, rbp
0x27f96:	call	0x27020
		Instruction group(s): [2, 7, 145] 

0x27f9b:	test	rax, rax
0x27f9e:	mov	rdx, rax
0x27fa1:	je	0x28110
		Instruction group(s): [7, 1] 

0x27fa7:	movzx	eax, byte ptr [rax + 0x24]
0x27fab:	mov	byte ptr [rsp + 0x2b], 0
0x27fb0:	xor	r10d, r10d
0x27fb3:	test	al, 1
0x27fb5:	mov	r8d, 1
0x27fbb:	je	0x280d0
		Instruction group(s): [7, 1] 

0x27fc1:	mov	rdi, qword ptr [rdx + 8]
0x27fc5:	mov	dword ptr [rsp + 0x2c], r8d
0x27fca:	mov	qword ptr [rsp + 0x20], r10
0x27fcf:	mov	qword ptr [rsp + 0x10], rdx
0x27fd4:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x27fd9:	mov	rdi, rbx
0x27fdc:	mov	r12, rax
0x27fdf:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x27fe4:	lea	edi, [rax + r12 + 2]
		Instruction group(s): [145] 

0x27fe9:	mov	qword ptr [rsp + 0x18], rax
0x27fee:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x27ff3:	mov	rdx, qword ptr [rsp + 0x10]
0x27ff8:	mov	r9d, r12d
0x27ffb:	mov	rdi, rax
0x27ffe:	mov	r13, rax
0x28001:	mov	qword ptr [rsp + 0x10], r9
0x28006:	mov	rsi, qword ptr [rdx + 8]
0x2800a:	mov	rdx, r9
0x2800d:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x28012:	mov	rcx, qword ptr [rsp + 0x18]
0x28017:	mov	r9, qword ptr [rsp + 0x10]
0x2801c:	lea	edi, [r12 + 1]
		Instruction group(s): [145] 

0x28021:	mov	rsi, rbx
0x28024:	xor	r12d, r12d
0x28027:	mov	rbx, r13
0x2802a:	add	rdi, r13
0x2802d:	lea	edx, [rcx + 1]
		Instruction group(s): [145] 

0x28030:	mov	byte ptr [r13 + r9], 0x20
0x28036:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x2803b:	mov	r10, qword ptr [rsp + 0x20]
0x28040:	mov	rdi, r10
0x28043:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x28048:	mov	r8d, dword ptr [rsp + 0x2c]
0x2804d:	jmp	0x27ea1
		Instruction group(s): [7, 1] 

0x28052:	nop	word ptr [rax + rax]
0x28058:	xor	r12d, r12d
0x2805b:	mov	byte ptr [rsp + 0x2b], 0
0x28060:	mov	r8d, 1
0x28066:	xor	r13d, r13d
0x28069:	jmp	0x27ea1
		Instruction group(s): [7, 1] 

0x2806e:	nop	
0x28070:	mov	rdi, rbx
0x28073:	xor	esi, esi
0x28075:	xor	r12d, r12d
0x28078:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x2807d:	mov	byte ptr [rsp + 0x2b], 0
0x28082:	mov	rbx, rax
0x28085:	mov	r13, rax
0x28088:	xor	r8d, r8d
0x2808b:	jmp	0x27ea1
		Instruction group(s): [7, 1] 

0x28090:	mov	rdx, qword ptr [rip + 0x20dd39]
0x28097:	lea	rsi, [rsp + 0x30]
0x2809c:	mov	qword ptr [rsp + 0x30], rbp
0x280a1:	mov	rdi, qword ptr [rdx + 8]
0x280a5:	mov	dword ptr [rsp + 0x50], eax
0x280a9:	call	0x29600
		Instruction group(s): [2, 7, 145] 

0x280ae:	test	rax, rax
0x280b1:	mov	rdx, rax
0x280b4:	je	0x280f8
		Instruction group(s): [7, 1] 

0x280b6:	movzx	eax, byte ptr [rax + 0x24]
0x280ba:	mov	ecx, eax
0x280bc:	shr	cl, 1
0x280be:	and	ecx, 1
0x280c1:	mov	byte ptr [rsp + 0x2b], cl
0x280c5:	jmp	0x27fb0
		Instruction group(s): [7, 1] 

0x280ca:	call	0x8650
		Instruction group(s): [2, 7, 145] 

0x280cf:	nop	
0x280d0:	mov	rdi, rbx
0x280d3:	xor	esi, esi
0x280d5:	mov	qword ptr [rsp + 0x10], rdx
0x280da:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x280df:	xor	r8d, r8d
0x280e2:	mov	rbx, rax
0x280e5:	mov	r10, rax
0x280e8:	mov	rdx, qword ptr [rsp + 0x10]
0x280ed:	jmp	0x27fc1
		Instruction group(s): [7, 1] 

0x280f2:	nop	word ptr [rax + rax]
0x280f8:	xor	r12d, r12d
0x280fb:	mov	byte ptr [rsp + 0x2b], 1
0x28100:	mov	r8d, 1
0x28106:	xor	r13d, r13d
0x28109:	jmp	0x27ea9
		Instruction group(s): [7, 1] 

0x2810e:	nop	
0x28110:	xor	r12d, r12d
0x28113:	mov	byte ptr [rsp + 0x2b], 0
0x28118:	mov	r8d, 1
0x2811e:	xor	r13d, r13d
0x28121:	xor	r9d, r9d
0x28124:	jmp	0x27eb4
		Instruction group(s): [7, 1] 

0x28129:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x2812e:	nop	
0x28130:	push	r15
		Instruction group(s): [145] 

0x28132:	push	r14
		Instruction group(s): [145] 

0x28134:	push	r13
		Instruction group(s): [145] 

0x28136:	push	r12
		Instruction group(s): [145] 

0x28138:	mov	r12d, esi
0x2813b:	push	rbp
		Instruction group(s): [145] 

0x2813c:	push	rbx
		Instruction group(s): [145] 

0x2813d:	mov	rbx, rdi
0x28140:	sub	rsp, 0x18
0x28144:	mov	rbp, qword ptr [rdi + 0x50]
0x28148:	test	rbp, rbp
0x2814b:	je	0x28340
		Instruction group(s): [7, 1] 

0x28151:	mov	rdi, qword ptr [rbx + 0x68]
0x28155:	cmp	rdi, rbx
0x28158:	je	0x28163
		Instruction group(s): [7, 1] 

0x2815a:	test	rdi, rdi
0x2815d:	jne	0x28310
		Instruction group(s): [7, 1] 

0x28163:	mov	rdi, qword ptr [rbx + 0x60]
0x28167:	test	rdi, rdi
0x2816a:	jne	0x282f0
		Instruction group(s): [7, 1] 

0x28170:	lea	rax, [rip + 0x20dc69]
0x28177:	mov	qword ptr [rbp], rax
0x2817b:	test	r12d, r12d
0x2817e:	mov	dword ptr [rbp + 0x10], 1
0x28185:	je	0x281c0
		Instruction group(s): [7, 1] 

0x28187:	mov	rax, qword ptr [rbx + 0x58]
0x2818b:	test	rax, rax
0x2818e:	je	0x281a8
		Instruction group(s): [7, 1] 

0x28190:	mov	rdx, qword ptr [rbp]
0x28194:	mov	qword ptr [rax], rdx
0x28197:	mov	edx, dword ptr [rbp + 0x10]
0x2819a:	mov	dword ptr [rax + 0x10], edx
0x2819d:	mov	qword ptr [rbp], rax
0x281a1:	mov	dword ptr [rbp + 0x10], 0
0x281a8:	add	rsp, 0x18
0x281ac:	pop	rbx
		Instruction group(s): [145] 

0x281ad:	pop	rbp
		Instruction group(s): [145] 

0x281ae:	pop	r12
		Instruction group(s): [145] 

0x281b0:	pop	r13
		Instruction group(s): [145] 

0x281b2:	pop	r14
		Instruction group(s): [145] 

0x281b4:	pop	r15
		Instruction group(s): [145] 

0x281b6:	ret	
		Instruction group(s): [3, 145] 

0x281b7:	nop	word ptr [rax + rax]
0x281c0:	test	byte ptr [rbx + 0x86], 4
0x281c7:	jne	0x28187
		Instruction group(s): [7, 1] 

0x281c9:	mov	rsi, qword ptr [rbx]
0x281cc:	xor	edi, edi
0x281ce:	call	0x26620
		Instruction group(s): [2, 7, 145] 

0x281d3:	test	rax, rax
0x281d6:	mov	r12, rax
0x281d9:	je	0x28397
		Instruction group(s): [7, 1] 

0x281df:	mov	r13, qword ptr [rip + 0x20dbea]
0x281e6:	call	0x27250
		Instruction group(s): [2, 7, 145] 

0x281eb:	mov	qword ptr [rbx + 0x58], rax
0x281ef:	mov	qword ptr [rip + 0x20dbda], rax
0x281f6:	jmp	0x2826c
		Instruction group(s): [7, 1] 

0x281f8:	nop	dword ptr [rax + rax]
0x28200:	shr	r8w, 7
0x28205:	mov	r9d, 1
0x2820b:	mov	rsi, r14
0x2820e:	and	r8d, 7
0x28212:	mov	rdi, r15
0x28215:	call	0x27e20
		Instruction group(s): [2, 7, 145] 

0x2821a:	movzx	ecx, byte ptr [r12 + 0x44]
0x28220:	movzx	edx, byte ptr [rax + 0x24]
0x28224:	mov	rdi, r12
0x28227:	and	ecx, 8
0x2822a:	and	edx, 0xfffffff7
0x2822d:	or	edx, ecx
0x2822f:	movzx	ecx, byte ptr [rax + 0x27]
0x28233:	mov	byte ptr [rax + 0x24], dl
0x28236:	movzx	esi, byte ptr [r12 + 0x47]
0x2823c:	and	edx, 0x7f
0x2823f:	and	ecx, 0xffffff9f
0x28242:	and	esi, 0x60
0x28245:	or	ecx, esi
0x28247:	mov	byte ptr [rax + 0x27], cl
0x2824a:	movzx	ecx, byte ptr [r12 + 0x44]
0x28250:	and	ecx, 0xffffff80
0x28253:	or	edx, ecx
0x28255:	mov	byte ptr [rax + 0x24], dl
0x28258:	mov	rsi, qword ptr [rbx]
0x2825b:	call	0x26620
		Instruction group(s): [2, 7, 145] 

0x28260:	test	rax, rax
0x28263:	mov	r12, rax
0x28266:	je	0x28390
		Instruction group(s): [7, 1] 

0x2826c:	movzx	r8d, word ptr [r12 + 0x46]
0x28272:	movzx	ecx, byte ptr [r12 + 0x47]
0x28278:	lea	r15, [r12 + 0x30]
0x2827d:	mov	rdx, qword ptr [r12 + 0x28]
0x28282:	mov	r14, qword ptr [r12 + 0x20]
0x28287:	mov	eax, r8d
0x2828a:	shr	cl, 2
0x2828d:	and	ax, 0x380
0x28291:	and	ecx, 7
0x28294:	add	ax, -0x80
0x28298:	jne	0x28200
		Instruction group(s): [7, 1] 

0x2829e:	mov	rdi, r14
0x282a1:	mov	qword ptr [rsp + 8], rdx
0x282a6:	mov	dword ptr [rsp + 4], ecx
0x282aa:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x282af:	mov	rsi, qword ptr [rip + 0x20db1a]
0x282b6:	sub	rsp, 8
0x282ba:	xor	r8d, r8d
0x282bd:	push	r15
		Instruction group(s): [145] 

0x282bf:	mov	rdx, qword ptr [rsp + 0x18]
0x282c4:	mov	rdi, r14
0x282c7:	mov	ecx, dword ptr [rsp + 0x14]
0x282cb:	mov	r9, qword ptr [rsi + 8]
0x282cf:	mov	esi, eax
0x282d1:	call	0x26c70
		Instruction group(s): [2, 7, 145] 

0x282d6:	movzx	edx, word ptr [rax + 0x26]
0x282da:	and	dx, 0xfc7f
0x282df:	or	dl, 0x80
0x282e2:	mov	word ptr [rax + 0x26], dx
0x282e6:	pop	rdx
		Instruction group(s): [145] 

0x282e7:	pop	rcx
		Instruction group(s): [145] 

0x282e8:	jmp	0x2821a
		Instruction group(s): [7, 1] 

0x282ed:	nop	dword ptr [rax]
0x282f0:	mov	esi, r12d
0x282f3:	call	0x28130
		Instruction group(s): [2, 7, 145] 

0x282f8:	mov	rax, qword ptr [rbx + 0x60]
0x282fc:	mov	rax, qword ptr [rax + 0x50]
0x28300:	mov	qword ptr [rbp], rax
0x28304:	jmp	0x2817b
		Instruction group(s): [7, 1] 

0x28309:	nop	dword ptr [rax]
0x28310:	mov	esi, r12d
0x28313:	call	0x28130
		Instruction group(s): [2, 7, 145] 

0x28318:	mov	rax, qword ptr [rbx + 0x68]
0x2831c:	mov	rax, qword ptr [rax + 0x50]
0x28320:	mov	dword ptr [rbp + 0x10], 0
0x28327:	mov	qword ptr [rbp], rax
0x2832b:	add	rsp, 0x18
0x2832f:	pop	rbx
		Instruction group(s): [145] 

0x28330:	pop	rbp
		Instruction group(s): [145] 

0x28331:	pop	r12
		Instruction group(s): [145] 

0x28333:	pop	r13
		Instruction group(s): [145] 

0x28335:	pop	r14
		Instruction group(s): [145] 

0x28337:	pop	r15
		Instruction group(s): [145] 

0x28339:	ret	
		Instruction group(s): [3, 145] 

0x2833a:	nop	word ptr [rax + rax]
0x28340:	mov	edi, 0x18
0x28345:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x2834a:	mov	edi, 0x58
0x2834f:	mov	rbp, rax
0x28352:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x28357:	lea	r8, [rip - 0x1d8e]
0x2835e:	lea	rcx, [rip - 0x1e05]
0x28365:	lea	rdx, [rip - 0x1e7c]
0x2836c:	mov	qword ptr [rbp + 8], rax
0x28370:	mov	esi, 0x17
0x28375:	mov	rdi, rax
0x28378:	call	0x29440
		Instruction group(s): [2, 7, 145] 

0x2837d:	mov	qword ptr [rbx + 0x50], rbp
0x28381:	jmp	0x28151
		Instruction group(s): [7, 1] 

0x28386:	nop	word ptr cs:[rax + rax]
0x28390:	mov	qword ptr [rip + 0x20da39], r13
0x28397:	or	byte ptr [rbx + 0x86], 4
0x2839e:	jmp	0x28187
		Instruction group(s): [7, 1] 

0x283a3:	nop	dword ptr [rax]
0x283a6:	nop	word ptr cs:[rax + rax]
0x283b0:	push	r15
		Instruction group(s): [145] 

0x283b2:	push	r14
		Instruction group(s): [145] 

0x283b4:	lea	r14, [rip + 0x20dde5]
0x283bb:	push	r13
		Instruction group(s): [145] 

0x283bd:	push	r12
		Instruction group(s): [145] 

0x283bf:	mov	r12, rsi
0x283c2:	push	rbp
		Instruction group(s): [145] 

0x283c3:	push	rbx
		Instruction group(s): [145] 

0x283c4:	sub	rsp, 0x18
0x283c8:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x283cd:	mov	dword ptr [r12 + 0x20], 0
0x283d6:	mov	qword ptr [r12], rax
0x283da:	mov	r13, rax
0x283dd:	movzx	ebx, byte ptr [rax]
0x283e0:	mov	qword ptr [rsp + 8], 0
0x283e9:	movzx	eax, bl
0x283ec:	movsx	r15d, bl
0x283f0:	test	byte ptr [r14 + rax*2], 9
0x283f5:	jne	0x2844a
		Instruction group(s): [7, 1] 

0x283f7:	cmp	r15d, 0x24
0x283fb:	je	0x28458
		Instruction group(s): [7, 1] 

0x283fd:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0x28402:	mov	rax, qword ptr [rax]
0x28405:	movzx	ebx, bl
0x28408:	xor	ecx, ecx
0x2840a:	lea	rbp, [r13 + 1]
0x2840e:	test	byte ptr [rax + rbx*2], 1
0x28412:	jne	0x28520
		Instruction group(s): [7, 1] 

0x28418:	cmp	r15d, 0x3d
0x2841c:	je	0x285f0
		Instruction group(s): [7, 1] 

0x28422:	movzx	ebx, byte ptr [rbp]
0x28426:	cmp	bl, 0x3d
0x28429:	je	0x28480
		Instruction group(s): [7, 1] 

0x2842b:	cmp	r15d, 0x3a
0x2842f:	je	0x2861d
		Instruction group(s): [7, 1] 

0x28435:	test	ecx, ecx
0x28437:	jne	0x2844a
		Instruction group(s): [7, 1] 

0x28439:	movzx	eax, bl
0x2843c:	mov	r13, rbp
0x2843f:	movsx	r15d, bl
0x28443:	test	byte ptr [r14 + rax*2], 9
0x28448:	je	0x283f7
		Instruction group(s): [7, 1] 

0x2844a:	xor	ebp, ebp
0x2844c:	jmp	0x2850a
		Instruction group(s): [7, 1] 

0x28451:	nop	dword ptr [rax]
0x28458:	movsx	ecx, byte ptr [r13 + 1]
0x2845d:	lea	rbp, [r13 + 2]
0x28461:	cmp	ecx, 0x28
0x28464:	mov	eax, ecx
0x28466:	je	0x285e0
		Instruction group(s): [7, 1] 

0x2846c:	cmp	ecx, 0x7b
0x2846f:	je	0x28550
		Instruction group(s): [7, 1] 

0x28475:	movzx	ebx, byte ptr [r13 + 2]
0x2847a:	jmp	0x28439
		Instruction group(s): [7, 1] 

0x2847c:	nop	dword ptr [rax]
0x28480:	cmp	r15d, 0x2b
0x28484:	je	0x285c0
		Instruction group(s): [7, 1] 

0x2848a:	jle	0x284b8
		Instruction group(s): [7, 1] 

0x2848c:	cmp	r15d, 0x3a
0x28490:	je	0x285a8
		Instruction group(s): [7, 1] 

0x28496:	cmp	r15d, 0x3f
0x2849a:	jne	0x28435
		Instruction group(s): [7, 1] 

0x2849c:	movzx	eax, word ptr [r12 + 0x26]
0x284a2:	and	ax, 0xfc7f
0x284a6:	or	ah, 2
0x284a9:	mov	word ptr [r12 + 0x26], ax
0x284af:	jmp	0x284d6
		Instruction group(s): [7, 1] 

0x284b1:	nop	dword ptr [rax]
0x284b8:	cmp	r15d, 0x21
0x284bc:	jne	0x28435
		Instruction group(s): [7, 1] 

0x284c2:	movzx	eax, word ptr [r12 + 0x26]
0x284c8:	and	ax, 0xfc7f
0x284cc:	or	ax, 0x280
0x284d0:	mov	word ptr [r12 + 0x26], ax
0x284d6:	mov	rsi, qword ptr [rsp + 8]
0x284db:	lea	rax, [rbp - 1]
0x284df:	test	rsi, rsi
0x284e2:	cmovne	rax, rsi
		Instruction group(s): [137] 

0x284e6:	add	rbp, 1
0x284ea:	mov	qword ptr [rsp + 8], rax
0x284ef:	mov	r13, qword ptr [rsp + 8]
0x284f4:	sub	r13, qword ptr [r12]
0x284f8:	mov	rdi, rbp
0x284fb:	mov	dword ptr [r12 + 0x20], r13d
0x28500:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x28505:	mov	qword ptr [r12 + 8], rax
0x2850a:	add	rsp, 0x18
0x2850e:	mov	rax, rbp
0x28511:	pop	rbx
		Instruction group(s): [145] 

0x28512:	pop	rbp
		Instruction group(s): [145] 

0x28513:	pop	r12
		Instruction group(s): [145] 

0x28515:	pop	r13
		Instruction group(s): [145] 

0x28517:	pop	r14
		Instruction group(s): [145] 

0x28519:	pop	r15
		Instruction group(s): [145] 

0x2851b:	ret	
		Instruction group(s): [3, 145] 

0x2851c:	nop	dword ptr [rax]
0x28520:	mov	rdi, rbp
0x28523:	call	0x1bb90
		Instruction group(s): [2, 7, 145] 

0x28528:	movsx	r15d, byte ptr [rax]
0x2852c:	test	r15d, r15d
0x2852f:	je	0x2844a
		Instruction group(s): [7, 1] 

0x28535:	lea	rbp, [rax + 1]
0x28539:	mov	qword ptr [rsp + 8], r13
0x2853e:	mov	ecx, 1
0x28543:	jmp	0x28418
		Instruction group(s): [7, 1] 

0x28548:	nop	dword ptr [rax + rax]
0x28550:	mov	ecx, 0x7d
0x28555:	movzx	ebx, byte ptr [r13 + 2]
0x2855a:	test	bl, bl
0x2855c:	je	0x28439
		Instruction group(s): [7, 1] 

0x28562:	xor	edx, edx
0x28564:	jmp	0x28584
		Instruction group(s): [7, 1] 

0x28566:	nop	word ptr cs:[rax + rax]
0x28570:	cmp	cl, bl
0x28572:	je	0x28590
		Instruction group(s): [7, 1] 

0x28574:	add	rbp, 1
0x28578:	movzx	ebx, byte ptr [rbp]
0x2857c:	test	bl, bl
0x2857e:	je	0x28439
		Instruction group(s): [7, 1] 

0x28584:	cmp	al, bl
0x28586:	jne	0x28570
		Instruction group(s): [7, 1] 

0x28588:	add	edx, 1
0x2858b:	jmp	0x28574
		Instruction group(s): [7, 1] 

0x2858d:	nop	dword ptr [rax]
0x28590:	sub	edx, 1
0x28593:	cmp	edx, -1
0x28596:	jne	0x28574
		Instruction group(s): [7, 1] 

0x28598:	movzx	ebx, byte ptr [rbp + 1]
0x2859c:	add	rbp, 1
0x285a0:	jmp	0x28439
		Instruction group(s): [7, 1] 

0x285a5:	nop	dword ptr [rax]
0x285a8:	movzx	eax, word ptr [r12 + 0x26]
0x285ae:	and	ax, 0xfc7f
0x285b2:	or	al, 0x80
0x285b4:	mov	word ptr [r12 + 0x26], ax
0x285ba:	jmp	0x284d6
		Instruction group(s): [7, 1] 

0x285bf:	nop	
0x285c0:	movzx	eax, word ptr [r12 + 0x26]
0x285c6:	and	ax, 0xfc7f
0x285ca:	or	ax, 0x180
0x285ce:	mov	word ptr [r12 + 0x26], ax
0x285d4:	jmp	0x284d6
		Instruction group(s): [7, 1] 

0x285d9:	nop	dword ptr [rax]
0x285e0:	mov	ecx, 0x29
0x285e5:	jmp	0x28555
		Instruction group(s): [7, 1] 

0x285ea:	nop	word ptr [rax + rax]
0x285f0:	movzx	eax, word ptr [r12 + 0x26]
0x285f6:	mov	rdx, qword ptr [rsp + 8]
0x285fb:	and	ax, 0xfc7f
0x285ff:	or	ah, 1
0x28602:	test	rdx, rdx
0x28605:	mov	word ptr [r12 + 0x26], ax
0x2860b:	lea	rax, [rbp - 1]
0x2860f:	cmovne	rax, rdx
		Instruction group(s): [137] 

0x28613:	mov	qword ptr [rsp + 8], rax
0x28618:	jmp	0x284ef
		Instruction group(s): [7, 1] 

0x2861d:	cmp	bl, 0x3a
0x28620:	jne	0x2844a
		Instruction group(s): [7, 1] 

0x28626:	cmp	byte ptr [rbp + 1], 0x3d
0x2862a:	jne	0x2844a
		Instruction group(s): [7, 1] 

0x28630:	movzx	eax, word ptr [r12 + 0x26]
0x28636:	mov	rdx, qword ptr [rsp + 8]
0x2863b:	and	ax, 0xfc7f
0x2863f:	or	al, 0x80
0x28641:	test	rdx, rdx
0x28644:	mov	word ptr [r12 + 0x26], ax
0x2864a:	lea	rax, [rbp - 1]
0x2864e:	cmovne	rax, rdx
		Instruction group(s): [137] 

0x28652:	add	rbp, 2
0x28656:	mov	qword ptr [rsp + 8], rax
0x2865b:	jmp	0x284ef
		Instruction group(s): [7, 1] 

0x28660:	push	rbp
		Instruction group(s): [145] 

0x28661:	mov	rbp, rsp
0x28664:	push	r12
		Instruction group(s): [145] 

0x28666:	push	rbx
		Instruction group(s): [145] 

0x28667:	mov	rbx, rdi
0x2866a:	mov	rdi, rsi
0x2866d:	sub	rsp, 0x10
0x28671:	mov	rsi, rbx
0x28674:	mov	rax, qword ptr fs:[0x28]
0x2867d:	mov	qword ptr [rbp - 0x18], rax
0x28681:	xor	eax, eax
0x28683:	call	0x283b0
		Instruction group(s): [2, 7, 145] 

0x28688:	test	rax, rax
0x2868b:	je	0x286f0
		Instruction group(s): [7, 1] 

0x2868d:	movsxd	r12, dword ptr [rbx + 0x20]
		Instruction group(s): [145] 

0x28691:	mov	rsi, qword ptr [rbx]
0x28694:	lea	eax, [r12 + 1]
		Instruction group(s): [145] 

0x28699:	mov	rdx, r12
0x2869c:	cdqe	
0x2869e:	add	rax, 0x1e
0x286a2:	and	rax, 0xfffffffffffffff0
0x286a6:	sub	rsp, rax
0x286a9:	lea	rcx, [rsp + 0xf]
0x286ae:	and	rcx, 0xfffffffffffffff0
0x286b2:	mov	rdi, rcx
0x286b5:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x286ba:	xor	esi, esi
0x286bc:	mov	byte ptr [rax + r12], 0
0x286c1:	mov	rdi, rax
0x286c4:	call	0xecb0
		Instruction group(s): [2, 7, 145] 

0x286c9:	mov	qword ptr [rbx], rax
0x286cc:	cmp	byte ptr [rax], 0
0x286cf:	je	0x286f4
		Instruction group(s): [7, 1] 

0x286d1:	mov	rdx, qword ptr [rbp - 0x18]
0x286d5:	xor	rdx, qword ptr fs:[0x28]
0x286de:	mov	rax, rbx
0x286e1:	jne	0x28717
		Instruction group(s): [7, 1] 

0x286e3:	lea	rsp, [rbp - 0x10]
0x286e7:	pop	rbx
		Instruction group(s): [145] 

0x286e8:	pop	r12
		Instruction group(s): [145] 

0x286ea:	pop	rbp
		Instruction group(s): [145] 

0x286eb:	ret	
		Instruction group(s): [3, 145] 

0x286ec:	nop	dword ptr [rax]
0x286f0:	xor	ebx, ebx
0x286f2:	jmp	0x286d1
		Instruction group(s): [7, 1] 

0x286f4:	lea	rsi, [rip + 0x58a7]
0x286fb:	mov	edx, 5
0x28700:	xor	edi, edi
0x28702:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x28707:	lea	rdi, [rbx + 0x10]
0x2870b:	mov	rdx, rax
0x2870e:	xor	esi, esi
0x28710:	xor	eax, eax
0x28712:	call	0x1cee0
		Instruction group(s): [2, 7, 145] 

0x28717:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x2871c:	nop	dword ptr [rax]
0x28720:	push	r12
		Instruction group(s): [145] 

0x28722:	push	rbp
		Instruction group(s): [145] 

0x28723:	mov	r12d, ecx
0x28726:	push	rbx
		Instruction group(s): [145] 

0x28727:	mov	ebp, edx
0x28729:	mov	rbx, rdi
0x2872c:	sub	rsp, 0x40
0x28730:	mov	rax, qword ptr fs:[0x28]
0x28739:	mov	qword ptr [rsp + 0x38], rax
0x2873e:	xor	eax, eax
0x28740:	test	rdi, rdi
0x28743:	je	0x287b0
		Instruction group(s): [7, 1] 

0x28745:	movdqu	xmm0, xmmword ptr [rdi]
		Instruction group(s): [149] 

0x28749:	movaps	xmmword ptr [rsp + 0x20], xmm0
		Instruction group(s): [148] 

0x2874e:	lea	rdi, [rsp + 0x10]
0x28753:	call	0x28660
		Instruction group(s): [2, 7, 145] 

0x28758:	test	rax, rax
0x2875b:	je	0x28797
		Instruction group(s): [7, 1] 

0x2875d:	movzx	r8d, word ptr [rsp + 0x36]
0x28763:	mov	rdx, qword ptr [rsp + 0x18]
0x28768:	mov	r9d, r12d
0x2876b:	mov	rsi, qword ptr [rsp + 0x10]
0x28770:	mov	ecx, ebp
0x28772:	mov	rdi, rbx
0x28775:	shr	r8w, 7
0x2877a:	and	r8d, 7
0x2877e:	call	0x27e20
		Instruction group(s): [2, 7, 145] 

0x28783:	mov	rdi, qword ptr [rsp + 0x10]
0x28788:	mov	qword ptr [rsp + 8], rax
0x2878d:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x28792:	mov	rax, qword ptr [rsp + 8]
0x28797:	mov	rdx, qword ptr [rsp + 0x38]
0x2879c:	xor	rdx, qword ptr fs:[0x28]
0x287a5:	jne	0x287bb
		Instruction group(s): [7, 1] 

0x287a7:	add	rsp, 0x40
0x287ab:	pop	rbx
		Instruction group(s): [145] 

0x287ac:	pop	rbp
		Instruction group(s): [145] 

0x287ad:	pop	r12
		Instruction group(s): [145] 

0x287af:	ret	
		Instruction group(s): [3, 145] 

0x287b0:	mov	qword ptr [rsp + 0x20], 0
0x287b9:	jmp	0x2874e
		Instruction group(s): [7, 1] 

0x287bb:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x287c0:	push	r12
		Instruction group(s): [145] 

0x287c2:	lea	rsi, [rip + 0x66bd]
0x287c9:	push	rbp
		Instruction group(s): [145] 

0x287ca:	push	rbx
		Instruction group(s): [145] 

0x287cb:	mov	edx, 5
0x287d0:	xor	edi, edi
0x287d2:	xor	ebp, ebp
0x287d4:	lea	r12, [rip + 0x66b9]
0x287db:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x287e0:	mov	rdi, rax
0x287e3:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x287e8:	lea	rsi, [rip + 0x51de]
0x287ef:	lea	rdi, [rip + 0x21042a]
0x287f6:	xor	edx, edx
0x287f8:	call	0x26710
		Instruction group(s): [2, 7, 145] 

0x287fd:	lea	rsi, [rip + 0x6434]
0x28804:	xor	edi, edi
0x28806:	mov	edx, 5
0x2880b:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x28810:	mov	rdi, rax
0x28813:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x28818:	mov	rbx, qword ptr [rip + 0x210c61]
0x2881f:	test	rbx, rbx
0x28822:	je	0x28880
		Instruction group(s): [7, 1] 

0x28824:	nop	dword ptr [rax]
0x28828:	mov	rdx, qword ptr [rbx + 0x10]
0x2882c:	mov	rsi, r12
0x2882f:	mov	edi, 1
0x28834:	xor	eax, eax
0x28836:	add	ebp, 1
0x28839:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x2883e:	lea	rdi, [rbx + 0x20]
0x28842:	lea	rsi, [rip + 0x6254]
0x28849:	call	0x267a0
		Instruction group(s): [2, 7, 145] 

0x2884e:	mov	rbx, qword ptr [rbx]
0x28851:	test	rbx, rbx
0x28854:	jne	0x28828
		Instruction group(s): [7, 1] 

0x28856:	lea	rsi, [rip + 0x642b]
0x2885d:	mov	edx, 5
0x28862:	xor	edi, edi
0x28864:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x28869:	pop	rbx
		Instruction group(s): [145] 

0x2886a:	mov	edx, ebp
0x2886c:	mov	rsi, rax
0x2886f:	mov	edi, 1
0x28874:	pop	rbp
		Instruction group(s): [145] 

0x28875:	pop	r12
		Instruction group(s): [145] 

0x28877:	xor	eax, eax
0x28879:	jmp	0x8bc0
		Instruction group(s): [7, 1] 

0x2887e:	nop	
0x28880:	lea	rsi, [rip + 0x63d9]
0x28887:	xor	edi, edi
0x28889:	mov	edx, 5
0x2888e:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x28893:	pop	rbx
		Instruction group(s): [145] 

0x28894:	pop	rbp
		Instruction group(s): [145] 

0x28895:	pop	r12
		Instruction group(s): [145] 

0x28897:	mov	rdi, rax
0x2889a:	jmp	0x86d0
		Instruction group(s): [7, 1] 

0x2889f:	nop	
0x288a0:	mov	rax, qword ptr [rdi + 0x50]
0x288a4:	test	rax, rax
0x288a7:	je	0x288c0
		Instruction group(s): [7, 1] 

0x288a9:	mov	rdi, qword ptr [rax + 8]
0x288ad:	lea	rsi, [rip + 0x61e9]
0x288b4:	mov	edx, 1
0x288b9:	jmp	0x26710
		Instruction group(s): [7, 1] 

0x288be:	nop	
0x288c0:	ret	
		Instruction group(s): [3, 145] 

0x288c2:	nop	dword ptr [rax]
0x288c6:	nop	word ptr cs:[rax + rax]
0x288d0:	push	rbp
		Instruction group(s): [145] 

0x288d1:	mov	rbp, rsp
0x288d4:	push	r13
		Instruction group(s): [145] 

0x288d6:	push	r12
		Instruction group(s): [145] 

0x288d8:	push	rbx
		Instruction group(s): [145] 

0x288d9:	sub	rsp, 0x18
0x288dd:	mov	r12, qword ptr [rdi + 0x50]
0x288e1:	mov	rax, qword ptr fs:[0x28]
0x288ea:	mov	qword ptr [rbp - 0x28], rax
0x288ee:	xor	eax, eax
0x288f0:	test	r12, r12
0x288f3:	je	0x28950
		Instruction group(s): [7, 1] 

0x288f5:	mov	r13, qword ptr [rdi]
0x288f8:	mov	rdi, r13
0x288fb:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x28900:	mov	rbx, rax
0x28903:	lea	eax, [rax + 3]
		Instruction group(s): [145] 

0x28906:	mov	rsi, r13
0x28909:	lea	rdx, [rbx + 1]
0x2890d:	movsxd	rbx, ebx
		Instruction group(s): [145] 

0x28910:	cdqe	
0x28912:	add	rax, 0x1e
0x28916:	and	rax, 0xfffffffffffffff0
0x2891a:	sub	rsp, rax
0x2891d:	lea	rcx, [rsp + 0xf]
0x28922:	and	rcx, 0xfffffffffffffff0
0x28926:	mov	rdi, rcx
0x28929:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x2892e:	mov	byte ptr [rax + rbx], 0x3a
0x28932:	mov	byte ptr [rax + rbx + 1], 0x20
0x28937:	lea	rsi, [rip - 0x1e5e]
0x2893e:	mov	byte ptr [rax + rbx + 2], 0
0x28943:	mov	rdi, qword ptr [r12 + 8]
0x28948:	mov	rdx, rax
0x2894b:	call	0x29990
		Instruction group(s): [2, 7, 145] 

0x28950:	mov	rax, qword ptr [rbp - 0x28]
0x28954:	xor	rax, qword ptr fs:[0x28]
0x2895d:	jne	0x2896a
		Instruction group(s): [7, 1] 

0x2895f:	lea	rsp, [rbp - 0x18]
0x28963:	pop	rbx
		Instruction group(s): [145] 

0x28964:	pop	r12
		Instruction group(s): [145] 

0x28966:	pop	r13
		Instruction group(s): [145] 

0x28968:	pop	rbp
		Instruction group(s): [145] 

0x28969:	ret	
		Instruction group(s): [3, 145] 

0x2896a:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x2896f:	nop	
0x28970:	push	rbp
		Instruction group(s): [145] 

0x28971:	mov	rbp, rsp
0x28974:	push	r15
		Instruction group(s): [145] 

0x28976:	push	r14
		Instruction group(s): [145] 

0x28978:	push	r13
		Instruction group(s): [145] 

0x2897a:	push	r12
		Instruction group(s): [145] 

0x2897c:	push	rbx
		Instruction group(s): [145] 

0x2897d:	mov	ebx, esi
0x2897f:	sub	rsp, 0xe8
0x28986:	mov	qword ptr [rbp - 0xf0], rdi
0x2898d:	mov	rdi, rdx
0x28990:	mov	rax, qword ptr fs:[0x28]
0x28999:	mov	qword ptr [rbp - 0x38], rax
0x2899d:	xor	eax, eax
0x2899f:	mov	qword ptr [rbp - 0x108], rdx
0x289a6:	mov	qword ptr [rbp - 0xe8], rcx
0x289ad:	mov	qword ptr [rbp - 0x110], r8
0x289b4:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x289b9:	test	rax, rax
0x289bc:	mov	dword ptr [rbp - 0xfc], 1
0x289c6:	je	0x289de
		Instruction group(s): [7, 1] 

0x289c8:	movzx	eax, byte ptr [rax + 0x85]
0x289cf:	shr	al, 3
0x289d2:	xor	eax, 1
0x289d5:	and	eax, 1
0x289d8:	mov	dword ptr [rbp - 0xfc], eax
0x289de:	mov	r15, qword ptr [rbp - 0x108]
0x289e5:	mov	rdi, r15
0x289e8:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x289ed:	mov	esi, 0x2f
0x289f2:	mov	rdi, r15
0x289f5:	mov	r12, rax
0x289f8:	mov	dword ptr [rbp - 0x100], eax
0x289fe:	call	0x8890
		Instruction group(s): [2, 7, 145] 

0x28a03:	test	rax, rax
0x28a06:	je	0x28ca0
		Instruction group(s): [7, 1] 

0x28a0c:	mov	rdx, rax
0x28a0f:	mov	rcx, r15
0x28a12:	sub	rdx, r15
0x28a15:	mov	qword ptr [rbp - 0xd8], rcx
0x28a1c:	test	edx, edx
0x28a1e:	mov	r15d, edx
0x28a21:	jne	0x28b50
		Instruction group(s): [7, 1] 

0x28a27:	mov	ecx, dword ptr [rbp - 0x100]
0x28a2d:	lea	eax, [rcx + rbx + 3]
		Instruction group(s): [145] 

0x28a31:	add	eax, r15d
0x28a34:	add	rax, 0x1e
0x28a38:	shr	rax, 4
0x28a3c:	shl	rax, 4
0x28a40:	sub	rsp, rax
0x28a43:	mov	rax, qword ptr [rbp - 0xf0]
0x28a4a:	lea	r12, [rsp + 0xf]
0x28a4f:	mov	rsi, qword ptr [rax]
0x28a52:	and	r12, 0xfffffffffffffff0
0x28a56:	test	rsi, rsi
0x28a59:	je	0x28ba5
		Instruction group(s): [7, 1] 

0x28a5f:	lea	eax, [rcx + 1]
		Instruction group(s): [145] 

0x28a62:	lea	r14, [rbp - 0xd0]
0x28a69:	xor	r13d, r13d
0x28a6c:	mov	qword ptr [rbp - 0xf8], rax
0x28a73:	mov	rdi, rsi
0x28a76:	mov	qword ptr [rbp - 0xe0], rsi
0x28a7d:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x28a82:	mov	rsi, qword ptr [rbp - 0xe0]
0x28a89:	mov	ebx, eax
0x28a8b:	mov	rdi, r12
0x28a8e:	mov	rdx, rbx
0x28a91:	add	rbx, r12
0x28a94:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x28a99:	test	r15d, r15d
0x28a9c:	jne	0x28c00
		Instruction group(s): [7, 1] 

0x28aa2:	cmp	r12, rbx
0x28aa5:	je	0x28bb0
		Instruction group(s): [7, 1] 

0x28aab:	cmp	byte ptr [rbx - 1], 0x2f
0x28aaf:	je	0x28bb0
		Instruction group(s): [7, 1] 

0x28ab5:	mov	rdx, qword ptr [rbp - 0xf8]
0x28abc:	mov	rsi, qword ptr [rbp - 0xd8]
0x28ac3:	lea	rdi, [rbx + 1]
0x28ac7:	mov	byte ptr [rbx], 0x2f
0x28aca:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x28acf:	mov	rdi, r12
0x28ad2:	call	0xf110
		Instruction group(s): [2, 7, 145] 

0x28ad7:	test	rax, rax
0x28ada:	je	0x28b70
		Instruction group(s): [7, 1] 

0x28ae0:	mov	edx, dword ptr [rbp - 0xfc]
0x28ae6:	test	edx, edx
0x28ae8:	jne	0x28af3
		Instruction group(s): [7, 1] 

0x28aea:	test	byte ptr [rax + 0x85], 8
0x28af1:	je	0x28b70
		Instruction group(s): [7, 1] 

0x28af3:	cmp	qword ptr [rbp - 0xe8], 0
0x28afb:	jne	0x28bcb
		Instruction group(s): [7, 1] 

0x28b01:	mov	byte ptr [rbx], 0x2f
0x28b04:	mov	rax, qword ptr [rbp - 0x110]
0x28b0b:	test	rax, rax
0x28b0e:	je	0x28b13
		Instruction group(s): [7, 1] 

0x28b10:	mov	dword ptr [rax], r13d
0x28b13:	lea	rsi, [rbx + 1]
0x28b17:	mov	rdi, r12
0x28b1a:	sub	rsi, r12
0x28b1d:	mov	rbx, rsi
0x28b20:	mov	esi, dword ptr [rbp - 0x100]
0x28b26:	add	esi, ebx
0x28b28:	call	0x26050
		Instruction group(s): [2, 7, 145] 

0x28b2d:	mov	rdx, qword ptr [rbp - 0x38]
0x28b31:	xor	rdx, qword ptr fs:[0x28]
0x28b3a:	jne	0x28cb6
		Instruction group(s): [7, 1] 

0x28b40:	lea	rsp, [rbp - 0x28]
0x28b44:	pop	rbx
		Instruction group(s): [145] 

0x28b45:	pop	r12
		Instruction group(s): [145] 

0x28b47:	pop	r13
		Instruction group(s): [145] 

0x28b49:	pop	r14
		Instruction group(s): [145] 

0x28b4b:	pop	r15
		Instruction group(s): [145] 

0x28b4d:	pop	rbp
		Instruction group(s): [145] 

0x28b4e:	ret	
		Instruction group(s): [3, 145] 

0x28b4f:	nop	
0x28b50:	lea	esi, [r12 - 1]
		Instruction group(s): [145] 

0x28b55:	add	rax, 1
0x28b59:	mov	qword ptr [rbp - 0xd8], rax
0x28b60:	sub	esi, edx
0x28b62:	mov	dword ptr [rbp - 0x100], esi
0x28b68:	jmp	0x28a27
		Instruction group(s): [7, 1] 

0x28b6d:	nop	dword ptr [rax]
0x28b70:	mov	rsi, qword ptr [rbp - 0xd8]
0x28b77:	mov	byte ptr [rbx], 0
0x28b7a:	mov	rdi, r12
0x28b7d:	call	0xd6d0
		Instruction group(s): [2, 7, 145] 

0x28b82:	test	eax, eax
0x28b84:	jne	0x28c28
		Instruction group(s): [7, 1] 

0x28b8a:	mov	rcx, qword ptr [rbp - 0xf0]
0x28b91:	lea	eax, [r13 + 1]
		Instruction group(s): [145] 

0x28b95:	mov	r13, rax
0x28b98:	mov	rsi, qword ptr [rcx + rax*8]
0x28b9c:	test	rsi, rsi
0x28b9f:	jne	0x28a73
		Instruction group(s): [7, 1] 

0x28ba5:	xor	eax, eax
0x28ba7:	jmp	0x28b2d
		Instruction group(s): [7, 1] 

0x28ba9:	nop	dword ptr [rax]
0x28bb0:	mov	rdx, qword ptr [rbp - 0xf8]
0x28bb7:	mov	rsi, qword ptr [rbp - 0xd8]
0x28bbe:	mov	rdi, rbx
0x28bc1:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x28bc6:	jmp	0x28acf
		Instruction group(s): [7, 1] 

0x28bcb:	mov	rax, qword ptr [rax + 0x70]
0x28bcf:	cmp	rax, 2
0x28bd3:	je	0x28c88
		Instruction group(s): [7, 1] 

0x28bd9:	cmp	rax, -1
0x28bdd:	je	0x28c88
		Instruction group(s): [7, 1] 

0x28be3:	mov	rax, qword ptr [rbp - 0xe8]
0x28bea:	mov	byte ptr [rbx], 0x2f
0x28bed:	mov	qword ptr [rax], 0
0x28bf4:	jmp	0x28b04
		Instruction group(s): [7, 1] 

0x28bf9:	nop	dword ptr [rax]
0x28c00:	lea	rcx, [rbx + 1]
0x28c04:	mov	rsi, qword ptr [rbp - 0x108]
0x28c0b:	mov	byte ptr [rbx], 0x2f
0x28c0e:	mov	ebx, r15d
0x28c11:	mov	rdx, rbx
0x28c14:	mov	rdi, rcx
0x28c17:	call	0x8a40
		Instruction group(s): [2, 7, 145] 

0x28c1c:	add	rbx, rax
0x28c1f:	jmp	0x28aa2
		Instruction group(s): [7, 1] 

0x28c24:	nop	dword ptr [rax]
0x28c28:	mov	byte ptr [rbx], 0x2f
0x28c2b:	jmp	0x28c3e
		Instruction group(s): [7, 1] 

0x28c2d:	nop	dword ptr [rax]
0x28c30:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x28c35:	cmp	dword ptr [rax], 4
0x28c38:	jne	0x28b8a
		Instruction group(s): [7, 1] 

0x28c3e:	mov	rdx, r14
0x28c41:	mov	rsi, r12
0x28c44:	mov	edi, 1
0x28c49:	call	0x8a90
		Instruction group(s): [2, 7, 145] 

0x28c4e:	cmp	eax, -1
0x28c51:	je	0x28c30
		Instruction group(s): [7, 1] 

0x28c53:	test	eax, eax
0x28c55:	jne	0x28b8a
		Instruction group(s): [7, 1] 

0x28c5b:	mov	r14, qword ptr [rbp - 0xe8]
0x28c62:	test	r14, r14
0x28c65:	je	0x28b04
		Instruction group(s): [7, 1] 

0x28c6b:	mov	rdx, qword ptr [rbp - 0x70]
0x28c6f:	mov	rsi, qword ptr [rbp - 0x78]
0x28c73:	mov	rdi, r12
0x28c76:	call	0x103f0
		Instruction group(s): [2, 7, 145] 

0x28c7b:	mov	qword ptr [r14], rax
0x28c7e:	jmp	0x28b04
		Instruction group(s): [7, 1] 

0x28c83:	nop	dword ptr [rax + rax]
0x28c88:	mov	rcx, qword ptr [rbp - 0xe8]
0x28c8f:	mov	byte ptr [rbx], 0x2f
0x28c92:	mov	qword ptr [rcx], rax
0x28c95:	jmp	0x28b04
		Instruction group(s): [7, 1] 

0x28c9a:	nop	word ptr [rax + rax]
0x28ca0:	mov	rax, qword ptr [rbp - 0x108]
0x28ca7:	xor	r15d, r15d
0x28caa:	mov	qword ptr [rbp - 0xd8], rax
0x28cb1:	jmp	0x28a27
		Instruction group(s): [7, 1] 

0x28cb6:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x28cbb:	nop	dword ptr [rax + rax]
0x28cc0:	push	r15
		Instruction group(s): [145] 

0x28cc2:	push	r14
		Instruction group(s): [145] 

0x28cc4:	push	r13
		Instruction group(s): [145] 

0x28cc6:	push	r12
		Instruction group(s): [145] 

0x28cc8:	mov	r12, rdi
0x28ccb:	push	rbp
		Instruction group(s): [145] 

0x28ccc:	push	rbx
		Instruction group(s): [145] 

0x28ccd:	mov	rbx, rsi
0x28cd0:	sub	rsp, 0x28
0x28cd4:	test	rdi, rdi
0x28cd7:	mov	qword ptr [rsp + 0x18], 0
0x28ce0:	je	0x28cec
		Instruction group(s): [7, 1] 

0x28ce2:	call	0x1e250
		Instruction group(s): [2, 7, 145] 

0x28ce7:	mov	qword ptr [rsp + 0x18], rax
0x28cec:	test	rbx, rbx
0x28cef:	je	0x28f20
		Instruction group(s): [7, 1] 

0x28cf5:	call	0x8d50
		Instruction group(s): [2, 7, 145] 

0x28cfa:	mov	rbp, rax
0x28cfd:	mov	rcx, qword ptr [rax]
0x28d00:	jmp	0x28d0c
		Instruction group(s): [7, 1] 

0x28d02:	nop	word ptr [rax + rax]
0x28d08:	add	rbx, 1
0x28d0c:	movzx	eax, byte ptr [rbx]
0x28d0f:	cmp	al, 0x3a
0x28d11:	je	0x28d08
		Instruction group(s): [7, 1] 

0x28d13:	movzx	edx, al
0x28d16:	test	byte ptr [rcx + rdx*2], 1
0x28d1a:	jne	0x28d08
		Instruction group(s): [7, 1] 

0x28d1c:	mov	rdx, rbx
0x28d1f:	mov	dword ptr [rsp + 0x14], 2
0x28d27:	jmp	0x28d49
		Instruction group(s): [7, 1] 

0x28d29:	nop	dword ptr [rax]
0x28d30:	add	rdx, 1
0x28d34:	cmp	al, 0x3a
0x28d36:	je	0x28d41
		Instruction group(s): [7, 1] 

0x28d38:	movzx	eax, byte ptr [rdx]
0x28d3b:	test	byte ptr [rcx + rax*2], 1
0x28d3f:	je	0x28d46
		Instruction group(s): [7, 1] 

0x28d41:	add	dword ptr [rsp + 0x14], 1
0x28d46:	movzx	eax, byte ptr [rdx]
0x28d49:	test	al, al
0x28d4b:	jne	0x28d30
		Instruction group(s): [7, 1] 

0x28d4d:	mov	eax, dword ptr [rsp + 0x14]
0x28d51:	xor	r14d, r14d
0x28d54:	xor	r15d, r15d
0x28d57:	lea	edi, [rax*8]
		Instruction group(s): [145] 

0x28d5e:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x28d63:	movzx	esi, byte ptr [rbx]
0x28d66:	mov	qword ptr [rsp + 8], rax
0x28d6b:	test	sil, sil
0x28d6e:	je	0x28e40
		Instruction group(s): [7, 1] 

0x28d74:	nop	dword ptr [rax]
0x28d78:	cmp	sil, 0x3a
0x28d7c:	je	0x28fc0
		Instruction group(s): [7, 1] 

0x28d82:	mov	rdi, qword ptr [rbp]
0x28d86:	movzx	eax, sil
0x28d8a:	xor	r13d, r13d
0x28d8d:	mov	rdx, rbx
0x28d90:	test	byte ptr [rdi + rax*2], 1
0x28d94:	jne	0x28ef6
		Instruction group(s): [7, 1] 

0x28d9a:	nop	word ptr [rax + rax]
0x28da0:	add	rdx, 1
0x28da4:	movzx	eax, byte ptr [rdx]
0x28da7:	test	al, al
0x28da9:	je	0x28db5
		Instruction group(s): [7, 1] 

0x28dab:	cmp	al, 0x3a
0x28dad:	je	0x28db5
		Instruction group(s): [7, 1] 

0x28daf:	test	byte ptr [rdi + rax*2], 1
0x28db3:	je	0x28da0
		Instruction group(s): [7, 1] 

0x28db5:	mov	r13d, edx
0x28db8:	sub	r13d, ebx
0x28dbb:	cmp	r13d, 1
0x28dbf:	jbe	0x28ef6
		Instruction group(s): [7, 1] 

0x28dc5:	cmp	byte ptr [rdx - 1], 0x2f
0x28dc9:	je	0x28ee8
		Instruction group(s): [7, 1] 

0x28dcf:	mov	rdi, rbx
0x28dd2:	mov	esi, r13d
0x28dd5:	mov	qword ptr [rsp], rdx
0x28dd9:	call	0x26050
		Instruction group(s): [2, 7, 145] 

0x28dde:	lea	ecx, [r15 + 1]
		Instruction group(s): [145] 

0x28de2:	mov	rdi, qword ptr [rsp + 8]
0x28de7:	mov	dword ptr [rsp + 0x10], ecx
0x28deb:	mov	ecx, r15d
0x28dee:	lea	rbx, [rdi + rcx*8]
0x28df2:	mov	rdi, rax
0x28df5:	call	0xda30
		Instruction group(s): [2, 7, 145] 

0x28dfa:	mov	rdx, qword ptr [rsp]
0x28dfe:	cmp	r14d, r13d
0x28e01:	mov	qword ptr [rbx], rax
0x28e04:	cmovb	r14d, r13d
		Instruction group(s): [137] 

0x28e08:	mov	r15d, dword ptr [rsp + 0x10]
0x28e0d:	mov	rdi, qword ptr [rbp]
0x28e11:	mov	rbx, rdx
0x28e14:	jmp	0x28e24
		Instruction group(s): [7, 1] 

0x28e16:	nop	word ptr cs:[rax + rax]
0x28e20:	add	rbx, 1
0x28e24:	movzx	esi, byte ptr [rbx]
0x28e27:	cmp	sil, 0x3a
0x28e2b:	je	0x28e20
		Instruction group(s): [7, 1] 

0x28e2d:	movzx	eax, sil
0x28e31:	test	byte ptr [rdi + rax*2], 1
0x28e35:	jne	0x28e20
		Instruction group(s): [7, 1] 

0x28e37:	test	sil, sil
0x28e3a:	jne	0x28d78
		Instruction group(s): [7, 1] 

0x28e40:	test	r15d, r15d
0x28e43:	je	0x28f08
		Instruction group(s): [7, 1] 

0x28e49:	mov	ebp, dword ptr [rsp + 0x14]
0x28e4d:	sub	ebp, 1
0x28e50:	cmp	ebp, r15d
0x28e53:	jbe	0x28e6c
		Instruction group(s): [7, 1] 

0x28e55:	mov	rdi, qword ptr [rsp + 8]
0x28e5a:	lea	esi, [r15*8 + 8]
		Instruction group(s): [145] 

0x28e62:	call	0x1b910
		Instruction group(s): [2, 7, 145] 

0x28e67:	mov	qword ptr [rsp + 8], rax
0x28e6c:	mov	ecx, r15d
0x28e6f:	mov	r15, qword ptr [rsp + 8]
0x28e74:	mov	edi, 0x30
0x28e79:	mov	qword ptr [r15 + rcx*8], 0
0x28e81:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x28e86:	mov	rbx, rax
0x28e89:	mov	qword ptr [rax + 0x20], r15
0x28e8d:	mov	dword ptr [rax + 0x28], r14d
0x28e91:	mov	rax, qword ptr [rip + 0x210600]
0x28e98:	mov	rdi, r12
0x28e9b:	mov	qword ptr [rip + 0x2105f6], rbx
0x28ea2:	mov	qword ptr [rbx], rax
0x28ea5:	call	0x26030
		Instruction group(s): [2, 7, 145] 

0x28eaa:	mov	rdi, r12
0x28ead:	mov	qword ptr [rbx + 8], rax
0x28eb1:	mov	rbp, rax
0x28eb4:	call	0x8810
		Instruction group(s): [2, 7, 145] 

0x28eb9:	mov	rcx, qword ptr [rsp + 0x18]
0x28ebe:	mov	dword ptr [rbx + 0x18], eax
0x28ec1:	mov	rax, rcx
0x28ec4:	sub	rax, r12
0x28ec7:	add	rbp, rax
0x28eca:	test	rcx, rcx
0x28ecd:	cmove	rbp, rcx
		Instruction group(s): [137] 

0x28ed1:	mov	qword ptr [rbx + 0x10], rbp
0x28ed5:	add	rsp, 0x28
0x28ed9:	pop	rbx
		Instruction group(s): [145] 

0x28eda:	pop	rbp
		Instruction group(s): [145] 

0x28edb:	pop	r12
		Instruction group(s): [145] 

0x28edd:	pop	r13
		Instruction group(s): [145] 

0x28edf:	pop	r14
		Instruction group(s): [145] 

0x28ee1:	pop	r15
		Instruction group(s): [145] 

0x28ee3:	ret	
		Instruction group(s): [3, 145] 

0x28ee4:	nop	dword ptr [rax]
0x28ee8:	sub	r13d, 1
0x28eec:	cmp	r13d, 1
0x28ef0:	jne	0x28dcf
		Instruction group(s): [7, 1] 

0x28ef6:	cmp	sil, 0x2e
0x28efa:	jne	0x28dcf
		Instruction group(s): [7, 1] 

0x28f00:	mov	rbx, rdx
0x28f03:	jmp	0x28e24
		Instruction group(s): [7, 1] 

0x28f08:	mov	rdi, qword ptr [rsp + 8]
0x28f0d:	add	rsp, 0x28
0x28f11:	pop	rbx
		Instruction group(s): [145] 

0x28f12:	pop	rbp
		Instruction group(s): [145] 

0x28f13:	pop	r12
		Instruction group(s): [145] 

0x28f15:	pop	r13
		Instruction group(s): [145] 

0x28f17:	pop	r14
		Instruction group(s): [145] 

0x28f19:	pop	r15
		Instruction group(s): [145] 

0x28f1b:	jmp	0x8d70
		Instruction group(s): [7, 1] 

0x28f20:	mov	rbx, qword ptr [rip + 0x210571]
0x28f27:	xor	r15d, r15d
0x28f2a:	lea	rbp, [r12 + 1]
0x28f2f:	test	rbx, rbx
0x28f32:	jne	0x28f6f
		Instruction group(s): [7, 1] 

0x28f34:	jmp	0x28ed5
		Instruction group(s): [7, 1] 

0x28f36:	nop	word ptr cs:[rax + rax]
0x28f40:	cmp	qword ptr [rsp + 0x18], 0
0x28f46:	mov	rax, qword ptr [rbx + 0x10]
0x28f4a:	mov	rdx, qword ptr [rbx + 8]
0x28f4e:	je	0x28f92
		Instruction group(s): [7, 1] 

0x28f50:	mov	rcx, qword ptr [rsp + 0x18]
0x28f55:	sub	rax, rdx
0x28f58:	sub	rcx, r12
0x28f5b:	cmp	rcx, rax
0x28f5e:	je	0x28f97
		Instruction group(s): [7, 1] 

0x28f60:	mov	r15, rbx
0x28f63:	test	r14, r14
0x28f66:	mov	rbx, r14
0x28f69:	je	0x28ed5
		Instruction group(s): [7, 1] 

0x28f6f:	test	r12, r12
0x28f72:	mov	r14, qword ptr [rbx]
0x28f75:	jne	0x28f40
		Instruction group(s): [7, 1] 

0x28f77:	test	r15, r15
0x28f7a:	je	0x28fcb
		Instruction group(s): [7, 1] 

0x28f7c:	mov	qword ptr [r15], r14
0x28f7f:	mov	rdi, qword ptr [rbx + 0x20]
0x28f83:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x28f88:	mov	rdi, rbx
0x28f8b:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x28f90:	jmp	0x28f63
		Instruction group(s): [7, 1] 

0x28f92:	test	rax, rax
0x28f95:	jne	0x28f50
		Instruction group(s): [7, 1] 

0x28f97:	cmp	r12, rdx
0x28f9a:	je	0x28f77
		Instruction group(s): [7, 1] 

0x28f9c:	movzx	eax, byte ptr [r12]
0x28fa1:	cmp	al, byte ptr [rdx]
0x28fa3:	jne	0x28f60
		Instruction group(s): [7, 1] 

0x28fa5:	test	al, al
0x28fa7:	je	0x28f77
		Instruction group(s): [7, 1] 

0x28fa9:	lea	rsi, [rdx + 1]
0x28fad:	mov	rdi, rbp
0x28fb0:	call	0x89e0
		Instruction group(s): [2, 7, 145] 

0x28fb5:	test	eax, eax
0x28fb7:	jne	0x28f60
		Instruction group(s): [7, 1] 

0x28fb9:	jmp	0x28f77
		Instruction group(s): [7, 1] 

0x28fbb:	nop	dword ptr [rax + rax]
0x28fc0:	mov	rdx, rbx
0x28fc3:	xor	r13d, r13d
0x28fc6:	jmp	0x28dcf
		Instruction group(s): [7, 1] 

0x28fcb:	mov	qword ptr [rip + 0x2104c6], r14
0x28fd2:	jmp	0x28f7f
		Instruction group(s): [7, 1] 

0x28fd4:	nop	
0x28fd6:	nop	word ptr cs:[rax + rax]
0x28fe0:	push	rbx
		Instruction group(s): [145] 

0x28fe1:	sub	rsp, 0x10
0x28fe5:	mov	rax, qword ptr fs:[0x28]
0x28fee:	mov	qword ptr [rsp + 8], rax
0x28ff3:	xor	eax, eax
0x28ff5:	mov	rax, qword ptr [rip + 0x21049c]
0x28ffc:	test	rax, rax
0x28fff:	je	0x29019
		Instruction group(s): [7, 1] 

0x29001:	xor	ecx, ecx
0x29003:	jmp	0x2900b
		Instruction group(s): [7, 1] 

0x29005:	nop	dword ptr [rax]
0x29008:	mov	rax, rdx
0x2900b:	mov	rdx, qword ptr [rax]
0x2900e:	mov	qword ptr [rax], rcx
0x29011:	mov	rcx, rax
0x29014:	test	rdx, rdx
0x29017:	jne	0x29008
		Instruction group(s): [7, 1] 

0x29019:	mov	ebx, dword ptr [rip + 0x210551]
0x2901f:	lea	rdi, [rip + 0x5ec6]
0x29026:	mov	qword ptr [rip + 0x21046b], rax
0x2902d:	mov	dword ptr [rip + 0x210539], 0
0x29037:	call	0xe9f0
		Instruction group(s): [2, 7, 145] 

0x2903c:	mov	dword ptr [rip + 0x21052e], ebx
0x29042:	cmp	byte ptr [rax], 0
0x29045:	jne	0x290c0
		Instruction group(s): [7, 1] 

0x29047:	lea	rdi, [rip + 0x5eb0]
0x2904e:	mov	dword ptr [rip + 0x210518], 0
0x29058:	call	0xe9f0
		Instruction group(s): [2, 7, 145] 

0x2905d:	mov	dword ptr [rip + 0x21050d], ebx
0x29063:	cmp	byte ptr [rax], 0
0x29066:	je	0x290a6
		Instruction group(s): [7, 1] 

0x29068:	lea	rdi, [rsp + 6]
0x2906d:	mov	edx, 0x25
0x29072:	mov	rsi, rax
0x29075:	mov	rbx, qword ptr [rip + 0x21041c]
0x2907c:	mov	word ptr [rsp + 6], dx
0x29081:	mov	qword ptr [rip + 0x21040c], 0
0x2908c:	call	0x28cc0
		Instruction group(s): [2, 7, 145] 

0x29091:	mov	rax, qword ptr [rip + 0x210400]
0x29098:	mov	qword ptr [rip + 0x2103f9], rbx
0x2909f:	mov	qword ptr [rip + 0x2103e2], rax
0x290a6:	mov	rax, qword ptr [rsp + 8]
0x290ab:	xor	rax, qword ptr fs:[0x28]
0x290b4:	jne	0x29109
		Instruction group(s): [7, 1] 

0x290b6:	add	rsp, 0x10
0x290ba:	pop	rbx
		Instruction group(s): [145] 

0x290bb:	ret	
		Instruction group(s): [3, 145] 

0x290bc:	nop	dword ptr [rax]
0x290c0:	lea	rdi, [rsp + 6]
0x290c5:	mov	ecx, 0x25
0x290ca:	mov	rsi, rax
0x290cd:	mov	rbx, qword ptr [rip + 0x2103c4]
0x290d4:	mov	word ptr [rsp + 6], cx
0x290d9:	mov	qword ptr [rip + 0x2103b4], 0
0x290e4:	call	0x28cc0
		Instruction group(s): [2, 7, 145] 

0x290e9:	mov	rax, qword ptr [rip + 0x2103a8]
0x290f0:	mov	qword ptr [rip + 0x2103a1], rbx
0x290f7:	mov	ebx, dword ptr [rip + 0x210473]
0x290fd:	mov	qword ptr [rip + 0x21038c], rax
0x29104:	jmp	0x29047
		Instruction group(s): [7, 1] 

0x29109:	call	0x8840
		Instruction group(s): [2, 7, 145] 

0x2910e:	nop	
0x29110:	mov	rdx, qword ptr [rip + 0x210371]
0x29117:	xor	eax, eax
0x29119:	test	rdx, rdx
0x2911c:	je	0x29178
		Instruction group(s): [7, 1] 

0x2911e:	cmp	dword ptr [rdx + 0x28], esi
0x29121:	jb	0x29178
		Instruction group(s): [7, 1] 

0x29123:	push	r13
		Instruction group(s): [145] 

0x29125:	push	r12
		Instruction group(s): [145] 

0x29127:	push	rbp
		Instruction group(s): [145] 

0x29128:	push	rbx
		Instruction group(s): [145] 

0x29129:	sub	rsp, 8
0x2912d:	mov	rbp, qword ptr [rdx + 0x20]
0x29131:	mov	rbx, qword ptr [rbp]
0x29135:	test	rbx, rbx
0x29138:	je	0x29168
		Instruction group(s): [7, 1] 

0x2913a:	mov	r13, rdi
0x2913d:	mov	r12d, esi
0x29140:	mov	rdx, r12
0x29143:	mov	rsi, r13
0x29146:	mov	rdi, rbx
0x29149:	call	0x86a0
		Instruction group(s): [2, 7, 145] 

0x2914e:	test	eax, eax
0x29150:	jne	0x29159
		Instruction group(s): [7, 1] 

0x29152:	cmp	byte ptr [rbx + r12], 0
0x29157:	je	0x29180
		Instruction group(s): [7, 1] 

0x29159:	add	rbp, 8
0x2915d:	mov	rbx, qword ptr [rbp]
0x29161:	test	rbx, rbx
0x29164:	jne	0x29140
		Instruction group(s): [7, 1] 

0x29166:	xor	eax, eax
0x29168:	add	rsp, 8
0x2916c:	pop	rbx
		Instruction group(s): [145] 

0x2916d:	pop	rbp
		Instruction group(s): [145] 

0x2916e:	pop	r12
		Instruction group(s): [145] 

0x29170:	pop	r13
		Instruction group(s): [145] 

0x29172:	ret	
		Instruction group(s): [3, 145] 

0x29173:	nop	dword ptr [rax + rax]
0x29178:	ret	
		Instruction group(s): [3, 145] 

0x2917a:	nop	word ptr [rax + rax]
0x29180:	add	rsp, 8
0x29184:	mov	eax, 1
0x29189:	pop	rbx
		Instruction group(s): [145] 

0x2918a:	pop	rbp
		Instruction group(s): [145] 

0x2918b:	pop	r12
		Instruction group(s): [145] 

0x2918d:	pop	r13
		Instruction group(s): [145] 

0x2918f:	ret	
		Instruction group(s): [3, 145] 

0x29190:	cmp	byte ptr [rdi], 0x2f
0x29193:	je	0x2926f
		Instruction group(s): [7, 1] 

0x29199:	push	r14
		Instruction group(s): [145] 

0x2919b:	push	r13
		Instruction group(s): [145] 

0x2919d:	mov	r14, rsi
0x291a0:	push	r12
		Instruction group(s): [145] 

0x291a2:	push	rbp
		Instruction group(s): [145] 

0x291a3:	mov	r13, rcx
0x291a6:	push	rbx
		Instruction group(s): [145] 

0x291a7:	mov	rbx, qword ptr [rip + 0x2102ea]
0x291ae:	mov	rbp, rdx
0x291b1:	mov	r12, rdi
0x291b4:	test	rbx, rbx
0x291b7:	je	0x29250
		Instruction group(s): [7, 1] 

0x291bd:	test	rdx, rdx
0x291c0:	je	0x291fb
		Instruction group(s): [7, 1] 

0x291c2:	mov	dword ptr [rdx], 0
0x291c8:	mov	dword ptr [rcx], 0
0x291ce:	jmp	0x291fb
		Instruction group(s): [7, 1] 

0x291d0:	mov	esi, dword ptr [rbx + 0x28]
0x291d3:	mov	rdi, qword ptr [rbx + 0x20]
0x291d7:	mov	r8, r13
0x291da:	mov	rcx, r14
0x291dd:	mov	rdx, r12
0x291e0:	call	0x28970
		Instruction group(s): [2, 7, 145] 

0x291e5:	test	rax, rax
0x291e8:	jne	0x29243
		Instruction group(s): [7, 1] 

0x291ea:	test	rbp, rbp
0x291ed:	je	0x291f3
		Instruction group(s): [7, 1] 

0x291ef:	add	dword ptr [rbp], 1
0x291f3:	mov	rbx, qword ptr [rbx]
0x291f6:	test	rbx, rbx
0x291f9:	je	0x29218
		Instruction group(s): [7, 1] 

0x291fb:	mov	rsi, qword ptr [rbx + 0x10]
0x291ff:	mov	rdi, qword ptr [rbx + 8]
0x29203:	mov	rdx, r12
0x29206:	call	0x13230
		Instruction group(s): [2, 7, 145] 

0x2920b:	test	eax, eax
0x2920d:	je	0x291ea
		Instruction group(s): [7, 1] 

0x2920f:	jmp	0x291d0
		Instruction group(s): [7, 1] 

0x29211:	nop	dword ptr [rax]
0x29218:	mov	rax, qword ptr [rip + 0x210271]
0x2921f:	test	rax, rax
0x29222:	je	0x29241
		Instruction group(s): [7, 1] 

0x29224:	pop	rbx
		Instruction group(s): [145] 

0x29225:	mov	r8, r13
0x29228:	mov	rcx, r14
0x2922b:	mov	rdx, r12
0x2922e:	pop	rbp
		Instruction group(s): [145] 

0x2922f:	pop	r12
		Instruction group(s): [145] 

0x29231:	pop	r13
		Instruction group(s): [145] 

0x29233:	pop	r14
		Instruction group(s): [145] 

0x29235:	mov	esi, dword ptr [rax + 0x28]
0x29238:	mov	rdi, qword ptr [rax + 0x20]
0x2923c:	jmp	0x28970
		Instruction group(s): [7, 1] 

0x29241:	xor	eax, eax
0x29243:	pop	rbx
		Instruction group(s): [145] 

0x29244:	pop	rbp
		Instruction group(s): [145] 

0x29245:	pop	r12
		Instruction group(s): [145] 

0x29247:	pop	r13
		Instruction group(s): [145] 

0x29249:	pop	r14
		Instruction group(s): [145] 

0x2924b:	ret	
		Instruction group(s): [3, 145] 

0x2924c:	nop	dword ptr [rax]
0x29250:	mov	rax, qword ptr [rip + 0x210239]
0x29257:	test	rax, rax
0x2925a:	je	0x29241
		Instruction group(s): [7, 1] 

0x2925c:	test	rdx, rdx
0x2925f:	je	0x29224
		Instruction group(s): [7, 1] 

0x29261:	mov	dword ptr [rdx], 0
0x29267:	mov	dword ptr [rcx], 0
0x2926d:	jmp	0x2921f
		Instruction group(s): [7, 1] 

0x2926f:	xor	eax, eax
0x29271:	ret	
		Instruction group(s): [3, 145] 

0x29272:	nop	dword ptr [rax]
0x29276:	nop	word ptr cs:[rax + rax]
0x29280:	push	r14
		Instruction group(s): [145] 

0x29282:	lea	rsi, [rip + 0x5c87]
0x29289:	push	r13
		Instruction group(s): [145] 

0x2928b:	push	r12
		Instruction group(s): [145] 

0x2928d:	push	rbp
		Instruction group(s): [145] 

0x2928e:	xor	edi, edi
0x29290:	push	rbx
		Instruction group(s): [145] 

0x29291:	mov	edx, 5
0x29296:	xor	r12d, r12d
0x29299:	lea	rbp, [rip + 0x5cac]
0x292a0:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x292a5:	mov	rdi, rax
0x292a8:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x292ad:	mov	rbx, qword ptr [rip + 0x2101e4]
0x292b4:	test	rbx, rbx
0x292b7:	je	0x293e6
		Instruction group(s): [7, 1] 

0x292bd:	nop	dword ptr [rax]
0x292c0:	mov	rdx, qword ptr [rbx + 8]
0x292c4:	lea	rsi, [rip + 0x5c77]
0x292cb:	xor	eax, eax
0x292cd:	mov	edi, 1
0x292d2:	add	r12d, 1
0x292d6:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x292db:	mov	rax, qword ptr [rbx + 0x20]
0x292df:	mov	rdx, qword ptr [rax]
0x292e2:	test	rdx, rdx
0x292e5:	je	0x29320
		Instruction group(s): [7, 1] 

0x292e7:	xor	r13d, r13d
0x292ea:	nop	word ptr [rax + rax]
0x292f0:	lea	r14d, [r13 + 1]
		Instruction group(s): [145] 

0x292f4:	mov	rsi, rbp
0x292f7:	mov	edi, 1
0x292fc:	cmp	qword ptr [rax + r14*8], 1
0x29301:	mov	r13, r14
0x29304:	sbb	ecx, ecx
0x29306:	xor	eax, eax
0x29308:	and	ecx, 0xffffffd0
0x2930b:	add	ecx, 0x3a
0x2930e:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x29313:	mov	rax, qword ptr [rbx + 0x20]
0x29317:	mov	rdx, qword ptr [rax + r14*8]
0x2931b:	test	rdx, rdx
0x2931e:	jne	0x292f0
		Instruction group(s): [7, 1] 

0x29320:	mov	rbx, qword ptr [rbx]
0x29323:	test	rbx, rbx
0x29326:	jne	0x292c0
		Instruction group(s): [7, 1] 

0x29328:	cmp	qword ptr [rip + 0x210168], 0
0x29330:	je	0x293e6
		Instruction group(s): [7, 1] 

0x29336:	lea	rsi, [rip + 0x5c14]
0x2933d:	xor	edi, edi
0x2933f:	mov	edx, 5
0x29344:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x29349:	mov	edx, r12d
0x2934c:	mov	rsi, rax
0x2934f:	mov	edi, 1
0x29354:	xor	eax, eax
0x29356:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x2935b:	mov	rax, qword ptr [rip + 0x21012e]
0x29362:	test	rax, rax
0x29365:	je	0x29411
		Instruction group(s): [7, 1] 

0x2936b:	mov	rbx, qword ptr [rip + 0x20caae]
0x29372:	mov	rbp, qword ptr [rax + 0x20]
0x29376:	lea	rsi, [rip + 0x5c23]
0x2937d:	mov	edx, 5
0x29382:	xor	edi, edi
0x29384:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x29389:	mov	rsi, rbx
0x2938c:	mov	rdi, rax
0x2938f:	call	0x88e0
		Instruction group(s): [2, 7, 145] 

0x29394:	mov	rdx, qword ptr [rbp]
0x29398:	test	rdx, rdx
0x2939b:	je	0x293dd
		Instruction group(s): [7, 1] 

0x2939d:	xor	ebx, ebx
0x2939f:	mov	r12d, 0xa
0x293a5:	nop	dword ptr [rax]
0x293a8:	lea	eax, [rbx + 1]
		Instruction group(s): [145] 

0x293ab:	mov	ecx, 0x3a
0x293b0:	lea	rsi, [rip + 0x5b95]
0x293b7:	mov	edi, 1
0x293bc:	lea	r13, [rbp + rax*8]
0x293c1:	mov	rbx, rax
0x293c4:	cmp	qword ptr [r13], 0
0x293c9:	cmove	ecx, r12d
		Instruction group(s): [137] 

0x293cd:	xor	eax, eax
0x293cf:	call	0x8bc0
		Instruction group(s): [2, 7, 145] 

0x293d4:	mov	rdx, qword ptr [r13]
0x293d8:	test	rdx, rdx
0x293db:	jne	0x293a8
		Instruction group(s): [7, 1] 

0x293dd:	pop	rbx
		Instruction group(s): [145] 

0x293de:	pop	rbp
		Instruction group(s): [145] 

0x293df:	pop	r12
		Instruction group(s): [145] 

0x293e1:	pop	r13
		Instruction group(s): [145] 

0x293e3:	pop	r14
		Instruction group(s): [145] 

0x293e5:	ret	
		Instruction group(s): [3, 145] 

0x293e6:	lea	rsi, [rip + 0x5b3a]
0x293ed:	xor	edi, edi
0x293ef:	mov	edx, 5
0x293f4:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x293f9:	mov	rdi, rax
0x293fc:	call	0x86d0
		Instruction group(s): [2, 7, 145] 

0x29401:	mov	rax, qword ptr [rip + 0x210088]
0x29408:	test	rax, rax
0x2940b:	jne	0x2936b
		Instruction group(s): [7, 1] 

0x29411:	lea	rsi, [rip + 0x5b58]
0x29418:	xor	edi, edi
0x2941a:	mov	edx, 5
0x2941f:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x29424:	pop	rbx
		Instruction group(s): [145] 

0x29425:	pop	rbp
		Instruction group(s): [145] 

0x29426:	pop	r12
		Instruction group(s): [145] 

0x29428:	pop	r13
		Instruction group(s): [145] 

0x2942a:	pop	r14
		Instruction group(s): [145] 

0x2942c:	mov	rdi, rax
0x2942f:	jmp	0x86d0
		Instruction group(s): [7, 1] 

0x29434:	nop	word ptr cs:[rax + rax]
0x2943e:	nop	
0x29440:	push	r13
		Instruction group(s): [145] 

0x29442:	mov	r13, rdi
0x29445:	mov	rdi, rsi
0x29448:	shr	rdi, 1
0x2944b:	push	r12
		Instruction group(s): [145] 

0x2944d:	push	rbp
		Instruction group(s): [145] 

0x2944e:	or	rdi, rsi
0x29451:	push	rbx
		Instruction group(s): [145] 

0x29452:	mov	r12, rdx
0x29455:	mov	rsi, rdi
0x29458:	mov	rbp, rcx
0x2945b:	mov	rbx, r8
0x2945e:	shr	rsi, 2
0x29462:	sub	rsp, 8
0x29466:	or	rdi, rsi
0x29469:	mov	rsi, rdi
0x2946c:	shr	rsi, 4
0x29470:	or	rdi, rsi
0x29473:	mov	rsi, rdi
0x29476:	shr	rsi, 8
0x2947a:	or	rdi, rsi
0x2947d:	mov	rsi, rdi
0x29480:	shr	rsi, 0x10
0x29484:	or	rdi, rsi
0x29487:	mov	rax, rdi
0x2948a:	shr	rax, 0x20
0x2948e:	or	rdi, rax
0x29491:	add	rdi, 1
0x29495:	mov	qword ptr [r13 + 0x20], rdi
0x29499:	mov	qword ptr [r13 + 0x38], rdi
0x2949d:	shl	edi, 3
0x294a0:	call	0x1b8c0
		Instruction group(s): [2, 7, 145] 

0x294a5:	test	rax, rax
0x294a8:	mov	qword ptr [r13], rax
0x294ac:	je	0x294f7
		Instruction group(s): [7, 1] 

0x294ae:	mov	rax, qword ptr [r13 + 0x20]
0x294b2:	mov	qword ptr [r13 + 8], r12
0x294b6:	mov	qword ptr [r13 + 0x10], rbp
0x294ba:	mov	qword ptr [r13 + 0x18], rbx
0x294be:	mov	qword ptr [r13 + 0x30], 0
0x294c6:	mov	qword ptr [r13 + 0x40], 0
0x294ce:	mov	rdx, rax
0x294d1:	mov	qword ptr [r13 + 0x48], 0
0x294d9:	mov	dword ptr [r13 + 0x50], 0
0x294e1:	shr	rdx, 4
0x294e5:	sub	rax, rdx
0x294e8:	mov	qword ptr [r13 + 0x28], rax
0x294ec:	add	rsp, 8
0x294f0:	pop	rbx
		Instruction group(s): [145] 

0x294f1:	pop	rbp
		Instruction group(s): [145] 

0x294f2:	pop	r12
		Instruction group(s): [145] 

0x294f4:	pop	r13
		Instruction group(s): [145] 

0x294f6:	ret	
		Instruction group(s): [3, 145] 

0x294f7:	mov	rbx, qword ptr [r13 + 0x20]
0x294fb:	lea	rsi, [rip + 0x5ace]
0x29502:	mov	edx, 5
0x29507:	xor	edi, edi
0x29509:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x2950e:	mov	rdi, qword ptr [rip + 0x20c96b]
0x29515:	shl	rbx, 3
0x29519:	mov	rdx, rax
0x2951c:	mov	rcx, rbx
0x2951f:	mov	esi, 1
0x29524:	xor	eax, eax
0x29526:	call	0x8c90
		Instruction group(s): [2, 7, 145] 

0x2952b:	mov	edi, 1
0x29530:	call	0x8c70
		Instruction group(s): [2, 7, 145] 

0x29535:	nop	
0x29536:	nop	word ptr cs:[rax + rax]
0x29540:	push	r15
		Instruction group(s): [145] 

0x29542:	push	r14
		Instruction group(s): [145] 

0x29544:	push	r13
		Instruction group(s): [145] 

0x29546:	push	r12
		Instruction group(s): [145] 

0x29548:	mov	r13, rsi
0x2954b:	push	rbp
		Instruction group(s): [145] 

0x2954c:	push	rbx
		Instruction group(s): [145] 

0x2954d:	mov	rbp, rdi
0x29550:	mov	rdi, rsi
0x29553:	sub	rsp, 8
0x29557:	call	qword ptr [rbp + 8]
		Instruction group(s): [2, 145] 

0x2955a:	mov	ecx, dword ptr [rbp + 0x20]
0x2955d:	add	qword ptr [rbp + 0x48], 1
0x29562:	lea	ebx, [rcx - 1]
		Instruction group(s): [145] 

0x29565:	and	ebx, eax
0x29567:	mov	rax, qword ptr [rbp]
0x2956b:	mov	edx, ebx
0x2956d:	lea	r15, [rax + rdx*8]
0x29571:	mov	rsi, qword ptr [r15]
0x29574:	test	rsi, rsi
0x29577:	je	0x295e7
		Instruction group(s): [7, 1] 

0x29579:	xor	r12d, r12d
0x2957c:	xor	r14d, r14d
0x2957f:	jmp	0x295cb
		Instruction group(s): [7, 1] 

0x29581:	nop	dword ptr [rax]
0x29588:	cmp	r13, rsi
0x2958b:	je	0x295e7
		Instruction group(s): [7, 1] 

0x2958d:	mov	rdi, r13
0x29590:	call	qword ptr [rbp + 0x18]
		Instruction group(s): [2, 145] 

0x29593:	test	eax, eax
0x29595:	je	0x295e7
		Instruction group(s): [7, 1] 

0x29597:	add	qword ptr [rbp + 0x40], 1
0x2959c:	test	r12d, r12d
0x2959f:	jne	0x295ae
		Instruction group(s): [7, 1] 

0x295a1:	mov	rdi, r13
0x295a4:	call	qword ptr [rbp + 0x10]
		Instruction group(s): [2, 145] 

0x295a7:	mov	r12d, eax
0x295aa:	or	r12d, 1
0x295ae:	mov	eax, dword ptr [rbp + 0x20]
0x295b1:	add	ebx, r12d
0x295b4:	sub	eax, 1
0x295b7:	and	ebx, eax
0x295b9:	mov	rax, qword ptr [rbp]
0x295bd:	mov	edx, ebx
0x295bf:	lea	r15, [rax + rdx*8]
0x295c3:	mov	rsi, qword ptr [r15]
0x295c6:	test	rsi, rsi
0x295c9:	je	0x295e0
		Instruction group(s): [7, 1] 

0x295cb:	cmp	qword ptr [rip + 0x20c836], rsi
0x295d2:	jne	0x29588
		Instruction group(s): [7, 1] 

0x295d4:	test	r14, r14
0x295d7:	cmove	r14, r15
		Instruction group(s): [137] 

0x295db:	jmp	0x2959c
		Instruction group(s): [7, 1] 

0x295dd:	nop	dword ptr [rax]
0x295e0:	test	r14, r14
0x295e3:	cmovne	r15, r14
		Instruction group(s): [137] 

0x295e7:	add	rsp, 8
0x295eb:	mov	rax, r15
0x295ee:	pop	rbx
		Instruction group(s): [145] 

0x295ef:	pop	rbp
		Instruction group(s): [145] 

0x295f0:	pop	r12
		Instruction group(s): [145] 

0x295f2:	pop	r13
		Instruction group(s): [145] 

0x295f4:	pop	r14
		Instruction group(s): [145] 

0x295f6:	pop	r15
		Instruction group(s): [145] 

0x295f8:	ret	
		Instruction group(s): [3, 145] 

0x295f9:	nop	dword ptr [rax]
0x29600:	sub	rsp, 8
0x29604:	call	0x29540
		Instruction group(s): [2, 7, 145] 

0x29609:	mov	rax, qword ptr [rax]
0x2960c:	test	rax, rax
0x2960f:	je	0x29621
		Instruction group(s): [7, 1] 

0x29611:	cmp	rax, qword ptr [rip + 0x20c7f0]
0x29618:	mov	edx, 0
0x2961d:	cmove	rax, rdx
		Instruction group(s): [137] 

0x29621:	add	rsp, 8
0x29625:	ret	
		Instruction group(s): [3, 145] 

0x29626:	nop	word ptr cs:[rax + rax]
0x29630:	push	r14
		Instruction group(s): [145] 

0x29632:	push	r13
		Instruction group(s): [145] 

0x29634:	push	r12
		Instruction group(s): [145] 

0x29636:	push	rbp
		Instruction group(s): [145] 

0x29637:	push	rbx
		Instruction group(s): [145] 

0x29638:	mov	rcx, qword ptr [rdx]
0x2963b:	mov	rax, qword ptr [rdi + 0x38]
0x2963f:	test	rcx, rcx
0x29642:	je	0x29710
		Instruction group(s): [7, 1] 

0x29648:	cmp	qword ptr [rip + 0x20c7b9], rcx
0x2964f:	je	0x29678
		Instruction group(s): [7, 1] 

0x29651:	mov	rbp, qword ptr [rdi + 0x20]
0x29655:	mov	rcx, qword ptr [rdi + 0x28]
0x29659:	mov	qword ptr [rdx], rsi
0x2965c:	mov	r8, rbp
0x2965f:	sub	r8, rcx
0x29662:	cmp	r8, rax
0x29665:	ja	0x29680
		Instruction group(s): [7, 1] 

0x29667:	pop	rbx
		Instruction group(s): [145] 

0x29668:	mov	rax, rdx
0x2966b:	pop	rbp
		Instruction group(s): [145] 

0x2966c:	pop	r12
		Instruction group(s): [145] 

0x2966e:	pop	r13
		Instruction group(s): [145] 

0x29670:	pop	r14
		Instruction group(s): [145] 

0x29672:	ret	
		Instruction group(s): [3, 145] 

0x29673:	nop	dword ptr [rax + rax]
0x29678:	add	qword ptr [rdi + 0x30], 1
0x2967d:	jmp	0x29651
		Instruction group(s): [7, 1] 

0x2967f:	nop	
0x29680:	cmp	rcx, qword ptr [rdi + 0x30]
0x29684:	mov	r12, qword ptr [rdi]
0x29687:	mov	rax, rbp
0x2968a:	jbe	0x29728
		Instruction group(s): [7, 1] 

0x29690:	add	dword ptr [rdi + 0x50], 1
0x29694:	mov	rbx, rdi
0x29697:	lea	r14, [r12 + rbp*8]
0x2969b:	lea	edi, [rax*8]
		Instruction group(s): [145] 

0x296a2:	mov	r13, rsi
0x296a5:	call	0x1b8c0
		Instruction group(s): [2, 7, 145] 

0x296aa:	cmp	r12, r14
0x296ad:	mov	qword ptr [rbx], rax
0x296b0:	jae	0x296e2
		Instruction group(s): [7, 1] 

0x296b2:	mov	rbp, r12
0x296b5:	nop	dword ptr [rax]
0x296b8:	mov	rsi, qword ptr [rbp]
0x296bc:	test	rsi, rsi
0x296bf:	je	0x296d9
		Instruction group(s): [7, 1] 

0x296c1:	cmp	rsi, qword ptr [rip + 0x20c740]
0x296c8:	je	0x296d9
		Instruction group(s): [7, 1] 

0x296ca:	mov	rdi, rbx
0x296cd:	call	0x29540
		Instruction group(s): [2, 7, 145] 

0x296d2:	mov	rdx, qword ptr [rbp]
0x296d6:	mov	qword ptr [rax], rdx
0x296d9:	add	rbp, 8
0x296dd:	cmp	rbp, r14
0x296e0:	jb	0x296b8
		Instruction group(s): [7, 1] 

0x296e2:	mov	rax, qword ptr [rbx + 0x20]
0x296e6:	sub	rax, qword ptr [rbx + 0x30]
0x296ea:	mov	rdi, r12
0x296ed:	mov	qword ptr [rbx + 0x38], rax
0x296f1:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x296f6:	mov	rsi, r13
0x296f9:	mov	rdi, rbx
0x296fc:	pop	rbx
		Instruction group(s): [145] 

0x296fd:	pop	rbp
		Instruction group(s): [145] 

0x296fe:	pop	r12
		Instruction group(s): [145] 

0x29700:	pop	r13
		Instruction group(s): [145] 

0x29702:	pop	r14
		Instruction group(s): [145] 

0x29704:	jmp	0x29540
		Instruction group(s): [7, 1] 

0x29709:	nop	dword ptr [rax]
0x29710:	sub	rax, 1
0x29714:	add	qword ptr [rdi + 0x30], 1
0x29719:	mov	qword ptr [rdi + 0x38], rax
0x2971d:	jmp	0x29651
		Instruction group(s): [7, 1] 

0x29722:	nop	word ptr [rax + rax]
0x29728:	lea	rax, [rbp + rbp]
0x2972d:	mov	rdx, rax
0x29730:	mov	rbx, rax
0x29733:	mov	qword ptr [rdi + 0x20], rax
0x29737:	shr	rdx, 4
0x2973b:	sub	rbx, rdx
0x2973e:	mov	qword ptr [rdi + 0x28], rbx
0x29742:	jmp	0x29690
		Instruction group(s): [7, 1] 

0x29747:	nop	word ptr [rax + rax]
0x29750:	push	r12
		Instruction group(s): [145] 

0x29752:	push	rbp
		Instruction group(s): [145] 

0x29753:	mov	r12, rsi
0x29756:	push	rbx
		Instruction group(s): [145] 

0x29757:	mov	rbp, rdi
0x2975a:	call	0x29540
		Instruction group(s): [2, 7, 145] 

0x2975f:	mov	rbx, qword ptr [rax]
0x29762:	mov	rdx, rax
0x29765:	mov	rsi, r12
0x29768:	mov	rdi, rbp
0x2976b:	call	0x29630
		Instruction group(s): [2, 7, 145] 

0x29770:	test	rbx, rbx
0x29773:	je	0x29785
		Instruction group(s): [7, 1] 

0x29775:	cmp	qword ptr [rip + 0x20c68c], rbx
0x2977c:	mov	eax, 0
0x29781:	cmove	rbx, rax
		Instruction group(s): [137] 

0x29785:	mov	rax, rbx
0x29788:	pop	rbx
		Instruction group(s): [145] 

0x29789:	pop	rbp
		Instruction group(s): [145] 

0x2978a:	pop	r12
		Instruction group(s): [145] 

0x2978c:	ret	
		Instruction group(s): [3, 145] 

0x2978d:	nop	dword ptr [rax]
0x29790:	test	rdx, rdx
0x29793:	je	0x297d8
		Instruction group(s): [7, 1] 

0x29795:	push	r13
		Instruction group(s): [145] 

0x29797:	push	r12
		Instruction group(s): [145] 

0x29799:	mov	r13, rdi
0x2979c:	push	rbp
		Instruction group(s): [145] 

0x2979d:	push	rbx
		Instruction group(s): [145] 

0x2979e:	lea	rbx, [rdx - 1]
0x297a2:	mov	rbp, rsi
0x297a5:	mov	r12, rcx
0x297a8:	sub	rsp, 8
0x297ac:	nop	dword ptr [rax]
0x297b0:	mov	rsi, rbp
0x297b3:	mov	rdi, r13
0x297b6:	sub	rbx, 1
0x297ba:	call	0x29750
		Instruction group(s): [2, 7, 145] 

0x297bf:	add	rbp, r12
0x297c2:	cmp	rbx, -1
0x297c6:	jne	0x297b0
		Instruction group(s): [7, 1] 

0x297c8:	add	rsp, 8
0x297cc:	pop	rbx
		Instruction group(s): [145] 

0x297cd:	pop	rbp
		Instruction group(s): [145] 

0x297ce:	pop	r12
		Instruction group(s): [145] 

0x297d0:	pop	r13
		Instruction group(s): [145] 

0x297d2:	ret	
		Instruction group(s): [3, 145] 

0x297d3:	nop	dword ptr [rax + rax]
0x297d8:	ret	
		Instruction group(s): [3, 145] 

0x297da:	nop	word ptr [rax + rax]
0x297e0:	push	rbx
		Instruction group(s): [145] 

0x297e1:	mov	rbx, rdi
0x297e4:	call	0x29540
		Instruction group(s): [2, 7, 145] 

0x297e9:	mov	rdx, qword ptr [rax]
0x297ec:	test	rdx, rdx
0x297ef:	je	0x29805
		Instruction group(s): [7, 1] 

0x297f1:	mov	rcx, qword ptr [rip + 0x20c610]
0x297f8:	cmp	rdx, rcx
0x297fb:	je	0x29810
		Instruction group(s): [7, 1] 

0x297fd:	mov	qword ptr [rax], rcx
0x29800:	sub	qword ptr [rbx + 0x30], 1
0x29805:	mov	rax, rdx
0x29808:	pop	rbx
		Instruction group(s): [145] 

0x29809:	ret	
		Instruction group(s): [3, 145] 

0x2980a:	nop	word ptr [rax + rax]
0x29810:	xor	edx, edx
0x29812:	jmp	0x29805
		Instruction group(s): [7, 1] 

0x29814:	nop	
0x29816:	nop	word ptr cs:[rax + rax]
0x29820:	mov	rax, qword ptr [rsi]
0x29823:	test	rax, rax
0x29826:	je	0x29842
		Instruction group(s): [7, 1] 

0x29828:	mov	rdx, qword ptr [rip + 0x20c5d9]
0x2982f:	cmp	rdx, rax
0x29832:	je	0x29840
		Instruction group(s): [7, 1] 

0x29834:	mov	qword ptr [rsi], rdx
0x29837:	sub	qword ptr [rdi + 0x30], 1
0x2983c:	ret	
		Instruction group(s): [3, 145] 

0x2983d:	nop	dword ptr [rax]
0x29840:	xor	eax, eax
0x29842:	ret	
		Instruction group(s): [3, 145] 

0x29844:	nop	
0x29846:	nop	word ptr cs:[rax + rax]
0x29850:	push	r12
		Instruction group(s): [145] 

0x29852:	push	rbp
		Instruction group(s): [145] 

0x29853:	mov	r12, rdi
0x29856:	push	rbx
		Instruction group(s): [145] 

0x29857:	mov	rbx, qword ptr [rdi]
0x2985a:	mov	rax, qword ptr [rdi + 0x20]
0x2985e:	lea	rbp, [rbx + rax*8]
0x29862:	cmp	rbx, rbp
0x29865:	jae	0x2989b
		Instruction group(s): [7, 1] 

0x29867:	nop	word ptr [rax + rax]
0x29870:	mov	rdi, qword ptr [rbx]
0x29873:	test	rdi, rdi
0x29876:	je	0x29886
		Instruction group(s): [7, 1] 

0x29878:	cmp	qword ptr [rip + 0x20c589], rdi
0x2987f:	je	0x29886
		Instruction group(s): [7, 1] 

0x29881:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x29886:	mov	qword ptr [rbx], 0
0x2988d:	add	rbx, 8
0x29891:	cmp	rbp, rbx
0x29894:	ja	0x29870
		Instruction group(s): [7, 1] 

0x29896:	mov	rax, qword ptr [r12 + 0x20]
0x2989b:	pop	rbx
		Instruction group(s): [145] 

0x2989c:	mov	qword ptr [r12 + 0x30], 0
0x298a5:	mov	qword ptr [r12 + 0x38], rax
0x298aa:	pop	rbp
		Instruction group(s): [145] 

0x298ab:	pop	r12
		Instruction group(s): [145] 

0x298ad:	ret	
		Instruction group(s): [3, 145] 

0x298ae:	nop	
0x298b0:	mov	rax, qword ptr [rdi]
0x298b3:	mov	rcx, qword ptr [rdi + 0x20]
0x298b7:	lea	rdx, [rax + rcx*8]
0x298bb:	cmp	rax, rdx
0x298be:	jae	0x298d0
		Instruction group(s): [7, 1] 

0x298c0:	mov	qword ptr [rax], 0
0x298c7:	add	rax, 8
0x298cb:	cmp	rdx, rax
0x298ce:	ja	0x298c0
		Instruction group(s): [7, 1] 

0x298d0:	mov	qword ptr [rdi + 0x30], 0
0x298d8:	mov	qword ptr [rdi + 0x40], 0
0x298e0:	mov	qword ptr [rdi + 0x48], 0
0x298e8:	mov	dword ptr [rdi + 0x50], 0
0x298ef:	mov	qword ptr [rdi + 0x38], rcx
0x298f3:	ret	
		Instruction group(s): [3, 145] 

0x298f4:	nop	
0x298f6:	nop	word ptr cs:[rax + rax]
0x29900:	test	esi, esi
0x29902:	push	rbx
		Instruction group(s): [145] 

0x29903:	mov	rbx, rdi
0x29906:	jne	0x29938
		Instruction group(s): [7, 1] 

0x29908:	mov	rax, qword ptr [rdi + 0x20]
0x2990c:	mov	qword ptr [rdi + 0x30], 0
0x29914:	mov	qword ptr [rdi + 0x38], rax
0x29918:	mov	rdi, qword ptr [rbx]
0x2991b:	call	0x8d70
		Instruction group(s): [2, 7, 145] 

0x29920:	mov	qword ptr [rbx], 0
0x29927:	mov	qword ptr [rbx + 0x28], 0
0x2992f:	pop	rbx
		Instruction group(s): [145] 

0x29930:	ret	
		Instruction group(s): [3, 145] 

0x29931:	nop	dword ptr [rax]
0x29938:	call	0x29850
		Instruction group(s): [2, 7, 145] 

0x2993d:	jmp	0x29918
		Instruction group(s): [7, 1] 

0x2993f:	nop	
0x29940:	push	r12
		Instruction group(s): [145] 

0x29942:	push	rbp
		Instruction group(s): [145] 

0x29943:	push	rbx
		Instruction group(s): [145] 

0x29944:	mov	rbx, qword ptr [rdi]
0x29947:	mov	rax, qword ptr [rdi + 0x20]
0x2994b:	lea	rbp, [rbx + rax*8]
0x2994f:	cmp	rbx, rbp
0x29952:	jae	0x2997d
		Instruction group(s): [7, 1] 

0x29954:	mov	r12, rsi
0x29957:	nop	word ptr [rax + rax]
0x29960:	mov	rdi, qword ptr [rbx]
0x29963:	test	rdi, rdi
0x29966:	je	0x29974
		Instruction group(s): [7, 1] 

0x29968:	cmp	rdi, qword ptr [rip + 0x20c499]
0x2996f:	je	0x29974
		Instruction group(s): [7, 1] 

0x29971:	call	r12
		Instruction group(s): [2, 145] 

0x29974:	add	rbx, 8
0x29978:	cmp	rbp, rbx
0x2997b:	ja	0x29960
		Instruction group(s): [7, 1] 

0x2997d:	pop	rbx
		Instruction group(s): [145] 

0x2997e:	pop	rbp
		Instruction group(s): [145] 

0x2997f:	pop	r12
		Instruction group(s): [145] 

0x29981:	ret	
		Instruction group(s): [3, 145] 

0x29982:	nop	dword ptr [rax]
0x29986:	nop	word ptr cs:[rax + rax]
0x29990:	push	r13
		Instruction group(s): [145] 

0x29992:	push	r12
		Instruction group(s): [145] 

0x29994:	push	rbp
		Instruction group(s): [145] 

0x29995:	push	rbx
		Instruction group(s): [145] 

0x29996:	sub	rsp, 8
0x2999a:	mov	rbx, qword ptr [rdi]
0x2999d:	mov	rax, qword ptr [rdi + 0x20]
0x299a1:	lea	rbp, [rbx + rax*8]
0x299a5:	cmp	rbx, rbp
0x299a8:	jae	0x299d0
		Instruction group(s): [7, 1] 

0x299aa:	mov	r13, rsi
0x299ad:	mov	r12, rdx
0x299b0:	mov	rdi, qword ptr [rbx]
0x299b3:	test	rdi, rdi
0x299b6:	je	0x299c7
		Instruction group(s): [7, 1] 

0x299b8:	cmp	rdi, qword ptr [rip + 0x20c449]
0x299bf:	je	0x299c7
		Instruction group(s): [7, 1] 

0x299c1:	mov	rsi, r12
0x299c4:	call	r13
		Instruction group(s): [2, 145] 

0x299c7:	add	rbx, 8
0x299cb:	cmp	rbp, rbx
0x299ce:	ja	0x299b0
		Instruction group(s): [7, 1] 

0x299d0:	add	rsp, 8
0x299d4:	pop	rbx
		Instruction group(s): [145] 

0x299d5:	pop	rbp
		Instruction group(s): [145] 

0x299d6:	pop	r12
		Instruction group(s): [145] 

0x299d8:	pop	r13
		Instruction group(s): [145] 

0x299da:	ret	
		Instruction group(s): [3, 145] 

0x299db:	nop	dword ptr [rax + rax]
0x299e0:	push	r13
		Instruction group(s): [145] 

0x299e2:	push	r12
		Instruction group(s): [145] 

0x299e4:	mov	r12, rsi
0x299e7:	push	rbp
		Instruction group(s): [145] 

0x299e8:	push	rbx
		Instruction group(s): [145] 

0x299e9:	lea	rsi, [rip + 0x5620]
0x299f0:	mov	rbx, rdi
0x299f3:	mov	edx, 5
0x299f8:	sub	rsp, 0x18
0x299fc:	mov	rbp, qword ptr [rdi + 0x30]
0x29a00:	mov	r13, qword ptr [rdi + 0x20]
0x29a04:	xor	edi, edi
0x29a06:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x29a0b:	test	rbp, rbp
0x29a0e:	js	0x29b30
		Instruction group(s): [7, 1] 

0x29a14:	pxor	xmm0, xmm0
		Instruction group(s): [149] 

0x29a18:	cvtsi2sd	xmm0, rbp
		Instruction group(s): [149] 

0x29a1d:	test	r13, r13
0x29a20:	mulsd	xmm0, qword ptr [rip + 0x5040]
		Instruction group(s): [149] 

0x29a28:	js	0x29b08
		Instruction group(s): [7, 1] 

0x29a2e:	pxor	xmm1, xmm1
		Instruction group(s): [149] 

0x29a32:	cvtsi2sd	xmm1, r13
		Instruction group(s): [149] 

0x29a37:	divsd	xmm0, xmm1
		Instruction group(s): [149] 

0x29a3b:	mov	rcx, rbp
0x29a3e:	mov	r8, r13
0x29a41:	mov	rdx, rax
0x29a44:	mov	esi, 1
0x29a49:	mov	rdi, r12
0x29a4c:	mov	eax, 1
0x29a51:	call	0x8c90
		Instruction group(s): [2, 7, 145] 

0x29a56:	mov	ebp, dword ptr [rbx + 0x50]
0x29a59:	lea	rsi, [rip + 0x55c6]
0x29a60:	xor	edi, edi
0x29a62:	mov	edx, 5
0x29a67:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x29a6c:	mov	ecx, ebp
0x29a6e:	mov	rdx, rax
0x29a71:	mov	esi, 1
0x29a76:	xor	eax, eax
0x29a78:	mov	rdi, r12
0x29a7b:	call	0x8c90
		Instruction group(s): [2, 7, 145] 

0x29a80:	mov	rbp, qword ptr [rbx + 0x48]
0x29a84:	pxor	xmm0, xmm0
		Instruction group(s): [149] 

0x29a88:	mov	rbx, qword ptr [rbx + 0x40]
0x29a8c:	test	rbp, rbp
0x29a8f:	je	0x29ac1
		Instruction group(s): [7, 1] 

0x29a91:	test	rbx, rbx
0x29a94:	js	0x29b58
		Instruction group(s): [7, 1] 

0x29a9a:	pxor	xmm0, xmm0
		Instruction group(s): [149] 

0x29a9e:	test	rbp, rbp
0x29aa1:	cvtsi2sd	xmm0, rbx
		Instruction group(s): [149] 

0x29aa6:	mulsd	xmm0, qword ptr [rip + 0x4fba]
		Instruction group(s): [149] 

0x29aae:	js	0x29b85
		Instruction group(s): [7, 1] 

0x29ab4:	pxor	xmm1, xmm1
		Instruction group(s): [149] 

0x29ab8:	cvtsi2sd	xmm1, rbp
		Instruction group(s): [149] 

0x29abd:	divsd	xmm0, xmm1
		Instruction group(s): [149] 

0x29ac1:	lea	rsi, [rip + 0x556a]
0x29ac8:	mov	edx, 5
0x29acd:	xor	edi, edi
0x29acf:	movsd	qword ptr [rsp + 8], xmm0
		Instruction group(s): [149] 

0x29ad5:	call	0x8800
		Instruction group(s): [2, 7, 145] 

0x29ada:	mov	r8, rbp
0x29add:	mov	rcx, rbx
0x29ae0:	mov	rdi, r12
0x29ae3:	mov	rdx, rax
0x29ae6:	mov	esi, 1
0x29aeb:	mov	eax, 1
0x29af0:	movsd	xmm0, qword ptr [rsp + 8]
		Instruction group(s): [149] 

0x29af6:	add	rsp, 0x18
0x29afa:	pop	rbx
		Instruction group(s): [145] 

0x29afb:	pop	rbp
		Instruction group(s): [145] 

0x29afc:	pop	r12
		Instruction group(s): [145] 

0x29afe:	pop	r13
		Instruction group(s): [145] 

0x29b00:	jmp	0x8c90
		Instruction group(s): [7, 1] 

0x29b05:	nop	dword ptr [rax]
0x29b08:	mov	rsi, r13
0x29b0b:	mov	rdx, r13
0x29b0e:	pxor	xmm1, xmm1
		Instruction group(s): [149] 

0x29b12:	shr	rsi, 1
0x29b15:	and	edx, 1
0x29b18:	or	rsi, rdx
0x29b1b:	cvtsi2sd	xmm1, rsi
		Instruction group(s): [149] 

0x29b20:	addsd	xmm1, xmm1
		Instruction group(s): [149] 

0x29b24:	jmp	0x29a37
		Instruction group(s): [7, 1] 

0x29b29:	nop	dword ptr [rax]
0x29b30:	mov	rsi, rbp
0x29b33:	mov	rdx, rbp
0x29b36:	pxor	xmm0, xmm0
		Instruction group(s): [149] 

0x29b3a:	shr	rsi, 1
0x29b3d:	and	edx, 1
0x29b40:	or	rsi, rdx
0x29b43:	cvtsi2sd	xmm0, rsi
		Instruction group(s): [149] 

0x29b48:	addsd	xmm0, xmm0
		Instruction group(s): [149] 

0x29b4c:	jmp	0x29a1d
		Instruction group(s): [7, 1] 

0x29b51:	nop	dword ptr [rax]
0x29b58:	mov	rax, rbx
0x29b5b:	mov	rdx, rbx
0x29b5e:	pxor	xmm0, xmm0
		Instruction group(s): [149] 

0x29b62:	shr	rax, 1
0x29b65:	and	edx, 1
0x29b68:	or	rax, rdx
0x29b6b:	test	rbp, rbp
0x29b6e:	cvtsi2sd	xmm0, rax
		Instruction group(s): [149] 

0x29b73:	addsd	xmm0, xmm0
		Instruction group(s): [149] 

0x29b77:	mulsd	xmm0, qword ptr [rip + 0x4ee9]
		Instruction group(s): [149] 

0x29b7f:	jns	0x29ab4
		Instruction group(s): [7, 1] 

0x29b85:	mov	rax, rbp
0x29b88:	mov	rdx, rbp
0x29b8b:	pxor	xmm1, xmm1
		Instruction group(s): [149] 

0x29b8f:	shr	rax, 1
0x29b92:	and	edx, 1
0x29b95:	or	rax, rdx
0x29b98:	cvtsi2sd	xmm1, rax
		Instruction group(s): [149] 

0x29b9d:	addsd	xmm1, xmm1
		Instruction group(s): [149] 

0x29ba1:	jmp	0x29abd
		Instruction group(s): [7, 1] 

0x29ba6:	nop	word ptr cs:[rax + rax]
0x29bb0:	push	r12
		Instruction group(s): [145] 

0x29bb2:	push	rbp
		Instruction group(s): [145] 

0x29bb3:	mov	rbp, rsi
0x29bb6:	push	rbx
		Instruction group(s): [145] 

0x29bb7:	mov	r12, rdi
0x29bba:	sub	rsp, 0x10
0x29bbe:	mov	rsi, qword ptr [rdi]
0x29bc1:	mov	rax, qword ptr [rdi + 0x20]
0x29bc5:	test	rbp, rbp
0x29bc8:	lea	rbx, [rsi + rax*8]
0x29bcc:	je	0x29c30
		Instruction group(s): [7, 1] 

0x29bce:	cmp	rsi, rbx
0x29bd1:	mov	r8, rbp
0x29bd4:	jae	0x29c01
		Instruction group(s): [7, 1] 

0x29bd6:	nop	word ptr cs:[rax + rax]
0x29be0:	mov	rdi, qword ptr [rsi]
0x29be3:	test	rdi, rdi
0x29be6:	je	0x29bf8
		Instruction group(s): [7, 1] 

0x29be8:	cmp	rdi, qword ptr [rip + 0x20c219]
0x29bef:	je	0x29bf8
		Instruction group(s): [7, 1] 

0x29bf1:	mov	qword ptr [r8], rdi
0x29bf4:	add	r8, 8
0x29bf8:	add	rsi, 8
0x29bfc:	cmp	rbx, rsi
0x29bff:	ja	0x29be0
		Instruction group(s): [7, 1] 

0x29c01:	test	rdx, rdx
0x29c04:	mov	qword ptr [r8], 0
0x29c0b:	je	0x29c22
		Instruction group(s): [7, 1] 

0x29c0d:	mov	rsi, qword ptr [r12 + 0x30]
0x29c12:	mov	rcx, rdx
0x29c15:	mov	rdi, rbp
0x29c18:	mov	edx, 8
0x29c1d:	call	0x86f0
		Instruction group(s): [2, 7, 145] 

0x29c22:	add	rsp, 0x10
0x29c26:	mov	rax, rbp
0x29c29:	pop	rbx
		Instruction group(s): [145] 

0x29c2a:	pop	rbp
		Instruction group(s): [145] 

0x29c2b:	pop	r12
		Instruction group(s): [145] 

0x29c2d:	ret	
		Instruction group(s): [3, 145] 

0x29c2e:	nop	
0x29c30:	mov	rax, qword ptr [rdi + 0x30]
0x29c34:	mov	qword ptr [rsp + 8], rdx
0x29c39:	lea	edi, [rax*8 + 8]
		Instruction group(s): [145] 

0x29c40:	call	0x1b890
		Instruction group(s): [2, 7, 145] 

0x29c45:	mov	rsi, qword ptr [r12]
0x29c49:	mov	rbp, rax
0x29c4c:	mov	rdx, qword ptr [rsp + 8]
0x29c51:	jmp	0x29bce
		Instruction group(s): [7, 1] 

0x29c56:	nop	word ptr cs:[rax + rax]
0x29c60:	ret	
		Instruction group(s): [3, 145] 

0x29c62:	nop	dword ptr [rax]
0x29c66:	nop	word ptr cs:[rax + rax]
0x29c70:	ret	
		Instruction group(s): [3, 145] 

0x29c72:	nop	dword ptr [rax]
0x29c76:	nop	word ptr cs:[rax + rax]
0x29c80:	xor	eax, eax
0x29c82:	ret	
		Instruction group(s): [3, 145] 

0x29c83:	nop	dword ptr [rax]
0x29c86:	nop	word ptr cs:[rax + rax]
0x29c90:	mov	eax, 0xffffffff
0x29c95:	ret	
		Instruction group(s): [3, 145] 

0x29c96:	nop	word ptr cs:[rax + rax]
0x29ca0:	sub	rsp, 8
0x29ca4:	call	0x8660
		Instruction group(s): [2, 7, 145] 

0x29ca9:	mov	dword ptr [rax], 0xa
0x29caf:	mov	eax, 0xffffffff
0x29cb4:	add	rsp, 8
0x29cb8:	ret	
		Instruction group(s): [3, 145] 

0x29cb9:	nop	dword ptr [rax]
0x29cc0:	ret	
		Instruction group(s): [3, 145] 

0x29cc2:	nop	dword ptr [rax]
0x29cc6:	nop	word ptr cs:[rax + rax]
0x29cd0:	ret	
		Instruction group(s): [3, 145] 

0x29cd2:	nop	dword ptr [rax]
0x29cd6:	nop	word ptr cs:[rax + rax]
0x29ce0:	mov	eax, 0xffffffff
0x29ce5:	ret	
		Instruction group(s): [3, 145] 

0x29ce6:	nop	word ptr cs:[rax + rax]
0x29cf0:	push	r15
		Instruction group(s): [145] 

0x29cf2:	push	r14
		Instruction group(s): [145] 

0x29cf4:	mov	r15, rdx
0x29cf7:	push	r13
		Instruction group(s): [145] 

0x29cf9:	push	r12
		Instruction group(s): [145] 

0x29cfb:	lea	r12, [rip + 0x20a34e]
0x29d02:	push	rbp
		Instruction group(s): [145] 

0x29d03:	lea	rbp, [rip + 0x20a34e]
0x29d0a:	push	rbx
		Instruction group(s): [145] 

0x29d0b:	mov	r13d, edi
0x29d0e:	mov	r14, rsi
0x29d11:	sub	rbp, r12
0x29d14:	sub	rsp, 8
0x29d18:	sar	rbp, 3
0x29d1c:	call	0x85e8
		Instruction group(s): [2, 7, 145] 

0x29d21:	test	rbp, rbp
0x29d24:	je	0x29d46
		Instruction group(s): [7, 1] 

0x29d26:	xor	ebx, ebx
0x29d28:	nop	dword ptr [rax + rax]
0x29d30:	mov	rdx, r15
0x29d33:	mov	rsi, r14
0x29d36:	mov	edi, r13d
0x29d39:	call	qword ptr [r12 + rbx*8]
		Instruction group(s): [2, 145] 

0x29d3d:	add	rbx, 1
0x29d41:	cmp	rbp, rbx
0x29d44:	jne	0x29d30
		Instruction group(s): [7, 1] 

0x29d46:	add	rsp, 8
0x29d4a:	pop	rbx
		Instruction group(s): [145] 

0x29d4b:	pop	rbp
		Instruction group(s): [145] 

0x29d4c:	pop	r12
		Instruction group(s): [145] 

0x29d4e:	pop	r13
		Instruction group(s): [145] 

0x29d50:	pop	r14
		Instruction group(s): [145] 

0x29d52:	pop	r15
		Instruction group(s): [145] 

0x29d54:	ret	
		Instruction group(s): [3, 145] 

0x29d55:	nop	
0x29d56:	nop	word ptr cs:[rax + rax]
0x29d60:	ret	
		Instruction group(s): [3, 145] 

0x29d62:	nop	word ptr cs:[rax + rax]
0x29d6c:	nop	dword ptr [rax]
0x29d70:	mov	rdx, qword ptr [rip + 0x20b291]
0x29d77:	xor	esi, esi
0x29d79:	jmp	0x8c40
		Instruction group(s): [7, 1] 

0x29d7e:	nop	
0x29d80:	mov	rdx, rsi
0x29d83:	mov	rsi, rdi
0x29d86:	mov	edi, 1
0x29d8b:	jmp	0x8a90
		Instruction group(s): [7, 1] 

0x29d90:	mov	rdx, rsi
0x29d93:	mov	rsi, rdi
0x29d96:	mov	edi, 1
0x29d9b:	jmp	0x8820
		Instruction group(s): [7, 1] 

